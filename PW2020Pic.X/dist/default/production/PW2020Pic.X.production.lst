

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jul 17 09:28:46 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.10
    39                           ; Generated 31/07/2019 GMT
    40                           ; 
    41                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192                           
   193                           	psect	idataCOMMON
   194  0760                     __pidataCOMMON:	
   195                           
   196                           ;initializer for _countDown
   197  0760  3405               	retlw	5
   198                           
   199                           	psect	idataBANK1
   200  0750                     __pidataBANK1:	
   201                           
   202                           ;initializer for _statoSemafori
   203  0750  3400               	retlw	0
   204  0751  3401               	retlw	1
   205  0752  3402               	retlw	2
   206                           
   207                           ;initializer for _f
   208  0753  3403               	retlw	3
   209  0754  3400               	retlw	0
   210                           
   211                           ;initializer for _PicId
   212  0755  34A7               	retlw	167
   213  0756  3400               	retlw	0
   214                           
   215                           ;initializer for _numStrade
   216  0757  3404               	retlw	4
   217                           
   218                           	psect	idataBANK3
   219  05D8                     __pidataBANK3:	
   220                           
   221                           ;initializer for print_Countdown@F931
   222  05D8  3453               	retlw	83
   223  05D9  3465               	retlw	101
   224  05DA  346D               	retlw	109
   225  05DB  3420               	retlw	32
   226  05DC  3430               	retlw	48
   227  05DD  343A               	retlw	58
   228  05DE  3420               	retlw	32
   229  05DF  3420               	retlw	32
   230  05E0  3420               	retlw	32
   231  05E1  3420               	retlw	32
   232  05E2  3420               	retlw	32
   233  05E3  3452               	retlw	82
   234  05E4  346F               	retlw	111
   235  05E5  3473               	retlw	115
   236  05E6  3473               	retlw	115
   237  05E7  346F               	retlw	111
   238  05E8  3400               	retlw	0
   239                           
   240                           ;initializer for print_Countdown@F929
   241  05E9  3453               	retlw	83
   242  05EA  3465               	retlw	101
   243  05EB  346D               	retlw	109
   244  05EC  3420               	retlw	32
   245  05ED  3430               	retlw	48
   246  05EE  343A               	retlw	58
   247  05EF  3420               	retlw	32
   248  05F0  3420               	retlw	32
   249  05F1  3420               	retlw	32
   250  05F2  3420               	retlw	32
   251  05F3  3447               	retlw	71
   252  05F4  3469               	retlw	105
   253  05F5  3461               	retlw	97
   254  05F6  346C               	retlw	108
   255  05F7  346C               	retlw	108
   256  05F8  346F               	retlw	111
   257  05F9  3400               	retlw	0
   258                           
   259                           ;initializer for print_Countdown@F927
   260  05FA  3453               	retlw	83
   261  05FB  3465               	retlw	101
   262  05FC  346D               	retlw	109
   263  05FD  3420               	retlw	32
   264  05FE  3430               	retlw	48
   265  05FF  343A               	retlw	58
   266  0600  3420               	retlw	32
   267  0601  3420               	retlw	32
   268  0602  3420               	retlw	32
   269  0603  3420               	retlw	32
   270  0604  3420               	retlw	32
   271  0605  3456               	retlw	86
   272  0606  3465               	retlw	101
   273  0607  3472               	retlw	114
   274  0608  3464               	retlw	100
   275  0609  3465               	retlw	101
   276  060A  3400               	retlw	0
   277                           
   278                           ;initializer for print_Countdown@F923
   279  060B  3454               	retlw	84
   280  060C  3465               	retlw	101
   281  060D  346D               	retlw	109
   282  060E  3470               	retlw	112
   283  060F  346F               	retlw	111
   284  0610  343A               	retlw	58
   285  0611  3420               	retlw	32
   286  0612  3420               	retlw	32
   287  0613  3420               	retlw	32
   288  0614  3420               	retlw	32
   289  0615  3420               	retlw	32
   290  0616  3420               	retlw	32
   291  0617  3420               	retlw	32
   292  0618  3420               	retlw	32
   293  0619  3420               	retlw	32
   294  061A  3420               	retlw	32
   295  061B  3400               	retlw	0
   296  0019                     _TXREG	set	25
   297  000B                     _INTCONbits	set	11
   298  0018                     _RCSTAbits	set	24
   299  0008                     _PORTD	set	8
   300  0009                     _PORTEbits	set	9
   301  001E                     _ADRESH	set	30
   302  001F                     _ADCON0bits	set	31
   303  001F                     _ADCON0	set	31
   304  0001                     _TMR0	set	1
   305  000B                     _INTCON	set	11
   306  001A                     _RCREG	set	26
   307  0006                     _PORTBbits	set	6
   308  0064                     _TXIF	set	100
   309  00FA                     _GO_nDONE	set	250
   310  0065                     _RCIF	set	101
   311  008C                     _PIE1bits	set	140
   312  0099                     _SPBRG	set	153
   313  0098                     _TXSTAbits	set	152
   314  0087                     _TRISCbits	set	135
   315  009E                     _ADRESL	set	158
   316  009F                     _ADCON1	set	159
   317  0085                     _TRISA	set	133
   318  0081                     _OPTION_REG	set	129
   319  0089                     _TRISE	set	137
   320  0086                     _TRISB	set	134
   321  0088                     _TRISD	set	136
   322                           
   323                           ; #config settings
   324  0000                     
   325                           	psect	cinit
   326  0019                     start_initialization:	
   327  0019                     __initialization:	
   328                           
   329                           ; Initialize objects allocated to BANK3
   330  0019  1783               	bsf	3,7	;select IRP bank2
   331  001A  30D4               	movlw	low (__pdataBANK3+68)
   332  001B  00FD               	movwf	btemp+-1
   333  001C  3005               	movlw	high __pidataBANK3
   334  001D  00FE               	movwf	btemp
   335  001E  30D8               	movlw	low __pidataBANK3
   336  001F  00FF               	movwf	btemp+1
   337  0020  3090               	movlw	low __pdataBANK3
   338  0021  0084               	movwf	4
   339  0022  120A  118A  2722  120A  118A  	fcall	init_ram0
   340                           
   341                           ; Initialize objects allocated to BANK1
   342  0027  1383               	bcf	3,7	;select IRP bank0
   343  0028  30E3               	movlw	low (__pdataBANK1+8)
   344  0029  00FD               	movwf	btemp+-1
   345  002A  3007               	movlw	high __pidataBANK1
   346  002B  00FE               	movwf	btemp
   347  002C  3050               	movlw	low __pidataBANK1
   348  002D  00FF               	movwf	btemp+1
   349  002E  30DB               	movlw	low __pdataBANK1
   350  002F  0084               	movwf	4
   351  0030  120A  118A  2722  120A  118A  	fcall	init_ram0
   352                           
   353                           ; Initialize objects allocated to COMMON
   354  0035  120A  118A  2760  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   355  003A  00FD               	movwf	__pdataCOMMON& (0+127)
   356                           
   357                           ; Clear objects allocated to BANK1
   358  003B  30C1               	movlw	low __pbssBANK1
   359  003C  0084               	movwf	4
   360  003D  30DB               	movlw	low (__pbssBANK1+26)
   361  003E  120A  118A  2758  120A  118A  	fcall	clear_ram0
   362                           
   363                           ; Clear objects allocated to BANK0
   364  0043  01EF               	clrf	__pbssBANK0& (0+127)
   365                           
   366                           ; Clear objects allocated to COMMON
   367  0044  01FC               	clrf	__pbssCOMMON& (0+127)
   368  0045                     end_of_initialization:	
   369                           ;End of C runtime variable initialization code
   370                           
   371  0045                     __end_of__initialization:	
   372  0045  0183               	clrf	3
   373  0046  120A  118A  2849   	ljmp	_main	;jump to C main() function
   374                           
   375                           	psect	bssCOMMON
   376  007C                     __pbssCOMMON:	
   377  007C                     _temporizzazione:	
   378  007C                     	ds	1
   379                           
   380                           	psect	dataCOMMON
   381  007D                     __pdataCOMMON:	
   382  007D                     _countDown:	
   383  007D                     	ds	1
   384                           
   385                           	psect	bssBANK0
   386  006F                     __pbssBANK0:	
   387  006F                     _oldBtn1:	
   388  006F                     	ds	1
   389                           
   390                           	psect	bssBANK1
   391  00C1                     __pbssBANK1:	
   392  00C1                     _semafori:	
   393  00C1                     	ds	4
   394  00C5                     _count:	
   395  00C5                     	ds	2
   396  00C7                     _flagGiallo:	
   397  00C7                     	ds	1
   398  00C8                     _scattoSemafori:	
   399  00C8                     	ds	1
   400  00C9                     _stat3:	
   401  00C9                     	ds	1
   402  00CA                     _oldBtn3:	
   403  00CA                     	ds	1
   404  00CB                     _stat2:	
   405  00CB                     	ds	1
   406  00CC                     _oldBtn2:	
   407  00CC                     	ds	1
   408  00CD                     _stat1:	
   409  00CD                     	ds	1
   410  00CE                     _contCamion:	
   411  00CE                     	ds	1
   412  00CF                     _contMoto:	
   413  00CF                     	ds	1
   414  00D0                     _contAuto:	
   415  00D0                     	ds	1
   416  00D1                     _datoSeriale:	
   417  00D1                     	ds	1
   418  00D2                     _received:	
   419  00D2                     	ds	1
   420  00D3                     _strToSend:	
   421  00D3                     	ds	8
   422                           
   423                           	psect	dataBANK1
   424  00DB                     __pdataBANK1:	
   425  00DB                     _statoSemafori:	
   426  00DB                     	ds	3
   427  00DE                     _f:	
   428  00DE                     	ds	2
   429  00E0                     _PicId:	
   430  00E0                     	ds	2
   431  00E2                     _numStrade:	
   432  00E2                     	ds	1
   433                           
   434                           	psect	dataBANK3
   435  0190                     __pdataBANK3:	
   436  0190                     print_Countdown@F931:	
   437  0190                     	ds	17
   438  01A1                     print_Countdown@F929:	
   439  01A1                     	ds	17
   440  01B2                     print_Countdown@F927:	
   441  01B2                     	ds	17
   442  01C3                     print_Countdown@F923:	
   443  01C3                     	ds	17
   444                           
   445                           	psect	inittext
   446  071E                     init_fetch0:	
   447                           ;	Called with low address in FSR and high address in W
   448                           
   449  071E  087E               	movf	btemp,w
   450  071F  008A               	movwf	10
   451  0720  087F               	movf	btemp+1,w
   452  0721  0082               	movwf	2
   453  0722                     init_ram0:	
   454                           ;Called with:
   455                           ;	high address of idata address in btemp 
   456                           ;	low address of idata address in btemp+1 
   457                           ;	low address of data in FSR
   458                           ;	high address + 1 of data in btemp-1
   459                           
   460  0722  120A  118A  271E  120A  118A  	fcall	init_fetch0
   461  0727  0080               	movwf	0
   462  0728  0A84               	incf	4,f
   463  0729  0804               	movf	4,w
   464  072A  067D               	xorwf	btemp+-1,w
   465  072B  1903               	btfsc	3,2
   466  072C  3400               	retlw	0
   467  072D  0AFF               	incf	btemp+1,f
   468  072E  1903               	btfsc	3,2
   469  072F  0AFE               	incf	btemp,f
   470  0730  2F22               	goto	init_ram0
   471                           
   472                           	psect	clrtext
   473  0758                     clear_ram0:	
   474                           ;	Called with FSR containing the base address, and
   475                           ;	W with the last address+1
   476                           
   477  0758  0064               	clrwdt	;clear the watchdog before getting into this loop
   478  0759                     clrloop0:	
   479  0759  0180               	clrf	0	;clear RAM location pointed to by FSR
   480  075A  0A84               	incf	4,f	;increment pointer
   481  075B  0604               	xorwf	4,w	;XOR with final address
   482  075C  1903               	btfsc	3,2	;have we reached the end yet?
   483  075D  3400               	retlw	0	;all done for this memory range, return
   484  075E  0604               	xorwf	4,w	;XOR again to restore value
   485  075F  2F59               	goto	clrloop0	;do the next byte
   486                           
   487                           	psect	cstackBANK1
   488  00A0                     __pcstackBANK1:	
   489  00A0                     ??_ISR:	
   490                           
   491                           ; 1 bytes @ 0x0
   492  00A0                     	ds	7
   493  00A7                     ??_initPic:	
   494  00A7                     ??_send_cmd:	
   495                           ; 1 bytes @ 0x7
   496                           
   497  00A7                     ??_UART_TxChar:	
   498                           ; 1 bytes @ 0x7
   499                           
   500  00A7                     ?___aldiv:	
   501                           ; 1 bytes @ 0x7
   502                           
   503  00A7                     UART_TxChar@dato:	
   504                           ; 4 bytes @ 0x7
   505                           
   506  00A7                     ___aldiv@divisor:	
   507                           ; 1 bytes @ 0x7
   508                           
   509                           
   510                           ; 4 bytes @ 0x7
   511  00A7                     	ds	1
   512  00A8                     ??_Uart_send_string:	
   513                           
   514                           ; 1 bytes @ 0x8
   515  00A8                     	ds	1
   516  00A9                     Uart_send_string@str:	
   517  00A9                     send_cmd@command:	
   518                           ; 1 bytes @ 0x9
   519                           
   520                           
   521                           ; 1 bytes @ 0x9
   522  00A9                     	ds	1
   523  00AA                     ??_init_lcd:	
   524  00AA                     Uart_send_string@i:	
   525                           ; 1 bytes @ 0xA
   526                           
   527                           
   528                           ; 1 bytes @ 0xA
   529  00AA                     	ds	1
   530  00AB                     ?_messageTransmission:	
   531  00AB                     messageTransmission@idStrada:	
   532                           ; 1 bytes @ 0xB
   533                           
   534  00AB                     ___aldiv@dividend:	
   535                           ; 1 bytes @ 0xB
   536                           
   537                           
   538                           ; 4 bytes @ 0xB
   539  00AB                     	ds	1
   540  00AC                     messageTransmission@codice:	
   541                           
   542                           ; 1 bytes @ 0xC
   543  00AC                     	ds	1
   544  00AD                     messageTransmission@valore:	
   545                           
   546                           ; 1 bytes @ 0xD
   547  00AD                     	ds	1
   548  00AE                     ??_messageTransmission:	
   549                           
   550                           ; 1 bytes @ 0xE
   551  00AE                     	ds	1
   552  00AF                     ??___aldiv:	
   553  00AF                     messageTransmission@tipoMessaggio:	
   554                           ; 1 bytes @ 0xF
   555                           
   556                           
   557                           ; 1 bytes @ 0xF
   558  00AF                     	ds	1
   559  00B0                     ___aldiv@counter:	
   560                           
   561                           ; 1 bytes @ 0x10
   562  00B0                     	ds	1
   563  00B1                     ___aldiv@sign:	
   564                           
   565                           ; 1 bytes @ 0x11
   566  00B1                     	ds	1
   567  00B2                     ___aldiv@quotient:	
   568                           
   569                           ; 4 bytes @ 0x12
   570  00B2                     	ds	4
   571  00B6                     ?_UART_init:	
   572  00B6                     UART_init@baudrate:	
   573                           ; 1 bytes @ 0x16
   574                           
   575                           
   576                           ; 2 bytes @ 0x16
   577  00B6                     	ds	2
   578  00B8                     ??_UART_init:	
   579                           
   580                           ; 1 bytes @ 0x18
   581  00B8                     	ds	4
   582  00BC                     ??_main:	
   583                           
   584                           ; 1 bytes @ 0x1C
   585  00BC                     	ds	3
   586  00BF                     main@semaforoVerde:	
   587                           
   588                           ; 1 bytes @ 0x1F
   589  00BF                     	ds	1
   590  00C0                     main@i:	
   591                           
   592                           ; 1 bytes @ 0x20
   593  00C0                     	ds	1
   594                           
   595                           	psect	cstackCOMMON
   596  0070                     __pcstackCOMMON:	
   597  0070                     ?_initPic:	
   598  0070                     ?_init_lcd:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_send_cmd:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_Uart_send_string:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_UART_TxChar:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_send_string:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_send_data:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ??_send_data:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_main:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_ISR:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?i1_send_cmd:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ??i1_send_cmd:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?___awdiv:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?___awmod:	
   635                           ; 2 bytes @ 0x0
   636                           
   637  0070                     ___awdiv@divisor:	
   638                           ; 2 bytes @ 0x0
   639                           
   640  0070                     ___awmod@divisor:	
   641                           ; 2 bytes @ 0x0
   642                           
   643                           
   644                           ; 2 bytes @ 0x0
   645  0070                     	ds	2
   646  0072                     send_data@data:	
   647  0072                     i1send_cmd@command:	
   648                           ; 1 bytes @ 0x2
   649                           
   650  0072                     ___awdiv@dividend:	
   651                           ; 1 bytes @ 0x2
   652                           
   653  0072                     ___awmod@dividend:	
   654                           ; 2 bytes @ 0x2
   655                           
   656                           
   657                           ; 2 bytes @ 0x2
   658  0072                     	ds	1
   659  0073                     ??_send_string:	
   660                           
   661                           ; 1 bytes @ 0x3
   662  0073                     	ds	1
   663  0074                     ??___awdiv:	
   664  0074                     ??___awmod:	
   665                           ; 1 bytes @ 0x4
   666                           
   667  0074                     send_string@i:	
   668                           ; 1 bytes @ 0x4
   669                           
   670                           
   671                           ; 2 bytes @ 0x4
   672  0074                     	ds	1
   673  0075                     ___awdiv@counter:	
   674  0075                     ___awmod@counter:	
   675                           ; 1 bytes @ 0x5
   676                           
   677                           
   678                           ; 1 bytes @ 0x5
   679  0075                     	ds	1
   680  0076                     send_string@str:	
   681  0076                     ___awdiv@sign:	
   682                           ; 1 bytes @ 0x6
   683                           
   684  0076                     ___awmod@sign:	
   685                           ; 1 bytes @ 0x6
   686                           
   687                           
   688                           ; 1 bytes @ 0x6
   689  0076                     	ds	1
   690  0077                     ___awdiv@quotient:	
   691                           
   692                           ; 2 bytes @ 0x7
   693  0077                     	ds	2
   694  0079                     ?_print_Countdown:	
   695  0079                     print_Countdown@num:	
   696                           ; 1 bytes @ 0x9
   697                           
   698                           
   699                           ; 2 bytes @ 0x9
   700  0079                     	ds	2
   701  007B                     print_Countdown@statoSem:	
   702                           
   703                           ; 1 bytes @ 0xB
   704  007B                     	ds	1
   705                           
   706                           	psect	cstackBANK0
   707  0020                     __pcstackBANK0:	
   708  0020                     ??_print_Countdown:	
   709                           
   710                           ; 1 bytes @ 0x0
   711  0020                     	ds	4
   712  0024                     print_Countdown@secondStr:	
   713                           
   714                           ; 17 bytes @ 0x4
   715  0024                     	ds	17
   716  0035                     print_Countdown@secondStr_401:	
   717                           
   718                           ; 17 bytes @ 0x15
   719  0035                     	ds	17
   720  0046                     print_Countdown@secondStr_403:	
   721                           
   722                           ; 17 bytes @ 0x26
   723  0046                     	ds	17
   724  0057                     print_Countdown@firstStr:	
   725                           
   726                           ; 17 bytes @ 0x37
   727  0057                     	ds	17
   728  0068                     print_Countdown@resultNum:	
   729                           
   730                           ; 3 bytes @ 0x48
   731  0068                     	ds	3
   732  006B                     print_Countdown@length:	
   733                           
   734                           ; 2 bytes @ 0x4B
   735  006B                     	ds	2
   736  006D                     print_Countdown@i:	
   737                           
   738                           ; 2 bytes @ 0x4D
   739  006D                     	ds	2
   740                           
   741                           	psect	maintext
   742  0049                     __pmaintext:	
   743 ;;
   744 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   745 ;;
   746 ;; *************** function _main *****************
   747 ;; Defined at:
   748 ;;		line 113 in file "main.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  semaforoVerd    1   31[BANK1 ] unsigned char 
   753 ;;  i               1   32[BANK1 ] unsigned char 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : B00/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       0       0       0       0
   764 ;;      Locals:         0       0       2       0       0
   765 ;;      Temps:          0       0       3       0       0
   766 ;;      Totals:         0       0       5       0       0
   767 ;;Total ram usage:        5 bytes
   768 ;; Hardware stack levels required when called:    7
   769 ;; This function calls:
   770 ;;		_UART_init
   771 ;;		_initPic
   772 ;;		_init_lcd
   773 ;;		_messageTransmission
   774 ;;		_send_cmd
   775 ;; This function is called by:
   776 ;;		Startup code after reset
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function _main
   782  0049                     _main:	
   783  0049                     l1578:	
   784                           ;incstack = 0
   785                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   786                           
   787                           
   788                           ;main.c: 115:     initPic();
   789  0049  120A  118A  2741  120A  118A  	fcall	_initPic
   790                           
   791                           ;main.c: 116:     UART_init(9600);
   792  004E  3080               	movlw	128
   793  004F  1683               	bsf	3,5	;RP0=1, select bank1
   794  0050  1303               	bcf	3,6	;RP1=0, select bank1
   795  0051  00B6               	movwf	UART_init@baudrate^(0+128)
   796  0052  3025               	movlw	37
   797  0053  00B7               	movwf	(UART_init@baudrate^(0+128)+1)
   798  0054  120A  118A  261C  120A  118A  	fcall	_UART_init
   799                           
   800                           ;main.c: 117:     init_lcd();
   801  0059  120A  118A  2581  120A  118A  	fcall	_init_lcd
   802                           
   803                           ;main.c: 118:     send_cmd(0x01);
   804  005E  3001               	movlw	1
   805  005F  120A  118A  2656  120A  118A  	fcall	_send_cmd
   806  0064                     l1580:	
   807                           
   808                           ;main.c: 190:     char i;;main.c: 193:     semafori[0]=statoSemafori[0];
   809  0064  1683               	bsf	3,5	;RP0=1, select bank1
   810  0065  1303               	bcf	3,6	;RP1=0, select bank1
   811  0066  085B               	movf	_statoSemafori^(0+128),w
   812  0067  00BC               	movwf	??_main^(0+128)
   813  0068  083C               	movf	??_main^(0+128),w
   814  0069  00C1               	movwf	_semafori^(0+128)
   815  006A                     l1582:	
   816                           
   817                           ;main.c: 194:     semafori[1]=statoSemafori[2];
   818  006A  085D               	movf	(_statoSemafori^(0+128)+2),w
   819  006B  00BC               	movwf	??_main^(0+128)
   820  006C  083C               	movf	??_main^(0+128),w
   821  006D  00C2               	movwf	(_semafori^(0+128)+1)
   822  006E                     l1584:	
   823                           
   824                           ;main.c: 195:     semafori[2]=statoSemafori[2];
   825  006E  085D               	movf	(_statoSemafori^(0+128)+2),w
   826  006F  00BC               	movwf	??_main^(0+128)
   827  0070  083C               	movf	??_main^(0+128),w
   828  0071  00C3               	movwf	(_semafori^(0+128)+2)
   829  0072                     l1586:	
   830                           
   831                           ;main.c: 196:     semafori[3]=statoSemafori[2];
   832  0072  085D               	movf	(_statoSemafori^(0+128)+2),w
   833  0073  00BC               	movwf	??_main^(0+128)
   834  0074  083C               	movf	??_main^(0+128),w
   835  0075  00C4               	movwf	(_semafori^(0+128)+3)
   836  0076                     l1588:	
   837                           
   838                           ;main.c: 201:     {;main.c: 205:         if(stat1)
   839  0076  084D               	movf	_stat1^(0+128),w
   840  0077  1903               	btfsc	3,2
   841  0078  287A               	goto	u1331
   842  0079  287B               	goto	u1330
   843  007A                     u1331:	
   844  007A  2880               	goto	l1594
   845  007B                     u1330:	
   846  007B                     l1590:	
   847                           
   848                           ;main.c: 206:         {;main.c: 207:             contAuto++;
   849  007B  3001               	movlw	1
   850  007C  00BC               	movwf	??_main^(0+128)
   851  007D  083C               	movf	??_main^(0+128),w
   852  007E  07D0               	addwf	_contAuto^(0+128),f
   853  007F                     l1592:	
   854                           
   855                           ;main.c: 208:             stat1=0;
   856  007F  01CD               	clrf	_stat1^(0+128)
   857  0080                     l1594:	
   858                           
   859                           ;main.c: 211:         if(stat2)
   860  0080  084B               	movf	_stat2^(0+128),w
   861  0081  1903               	btfsc	3,2
   862  0082  2884               	goto	u1341
   863  0083  2885               	goto	u1340
   864  0084                     u1341:	
   865  0084  288A               	goto	l1600
   866  0085                     u1340:	
   867  0085                     l1596:	
   868                           
   869                           ;main.c: 212:         {;main.c: 213:             contMoto++;
   870  0085  3001               	movlw	1
   871  0086  00BC               	movwf	??_main^(0+128)
   872  0087  083C               	movf	??_main^(0+128),w
   873  0088  07CF               	addwf	_contMoto^(0+128),f
   874  0089                     l1598:	
   875                           
   876                           ;main.c: 214:             stat2=0;
   877  0089  01CB               	clrf	_stat2^(0+128)
   878  008A                     l1600:	
   879                           
   880                           ;main.c: 216:         if(stat3)
   881  008A  0849               	movf	_stat3^(0+128),w
   882  008B  1903               	btfsc	3,2
   883  008C  288E               	goto	u1351
   884  008D  288F               	goto	u1350
   885  008E                     u1351:	
   886  008E  2894               	goto	l1606
   887  008F                     u1350:	
   888  008F                     l1602:	
   889                           
   890                           ;main.c: 217:         {;main.c: 218:             contCamion++;
   891  008F  3001               	movlw	1
   892  0090  00BC               	movwf	??_main^(0+128)
   893  0091  083C               	movf	??_main^(0+128),w
   894  0092  07CE               	addwf	_contCamion^(0+128),f
   895  0093                     l1604:	
   896                           
   897                           ;main.c: 219:             stat3=0;
   898  0093  01C9               	clrf	_stat3^(0+128)
   899  0094                     l1606:	
   900                           
   901                           ;main.c: 223:         if(scattoSemafori==1)
   902  0094  0348               	decf	_scattoSemafori^(0+128),w
   903  0095  1D03               	btfss	3,2
   904  0096  2898               	goto	u1361
   905  0097  2899               	goto	u1360
   906  0098                     u1361:	
   907  0098  290C               	goto	l1652
   908  0099                     u1360:	
   909  0099                     l1608:	
   910                           
   911                           ;main.c: 224:         {;main.c: 227:             char semaforoVerde=0;
   912  0099  01BF               	clrf	main@semaforoVerde^(0+128)
   913                           
   914                           ;main.c: 228:             for(i=0;i<4;i++)
   915  009A  01C0               	clrf	main@i^(0+128)
   916  009B  28FD               	goto	l1646
   917  009C                     l1614:	
   918                           
   919                           ;main.c: 232:                 {;main.c: 233:                     if(semafori[i]==statoSe
      +                          mafori[0])
   920  009C  0840               	movf	main@i^(0+128),w
   921  009D  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   922  009E  0084               	movwf	4
   923  009F  1383               	bcf	3,7	;select IRP bank1
   924  00A0  0800               	movf	0,w
   925  00A1  065B               	xorwf	_statoSemafori^(0+128),w
   926  00A2  1D03               	skipz
   927  00A3  28A5               	goto	u1371
   928  00A4  28A6               	goto	u1370
   929  00A5                     u1371:	
   930  00A5  28FD               	goto	l1646
   931  00A6                     u1370:	
   932  00A6                     l1616:	
   933                           
   934                           ;main.c: 234:                     {;main.c: 236:                         if(semafori[i]=
      +                          =statoSemafori[0])
   935  00A6  0840               	movf	main@i^(0+128),w
   936  00A7  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   937  00A8  0084               	movwf	4
   938  00A9  0800               	movf	0,w
   939  00AA  065B               	xorwf	_statoSemafori^(0+128),w
   940  00AB  1D03               	skipz
   941  00AC  28AE               	goto	u1381
   942  00AD  28AF               	goto	u1380
   943  00AE                     u1381:	
   944  00AE  28C5               	goto	l1626
   945  00AF                     u1380:	
   946  00AF                     l1618:	
   947                           
   948                           ;main.c: 237:                         {;main.c: 238:                             flagGia
      +                          llo=1;
   949  00AF  01C7               	clrf	_flagGiallo^(0+128)
   950  00B0  0AC7               	incf	_flagGiallo^(0+128),f
   951                           
   952                           ;main.c: 239:                             while(flagGiallo==1)
   953  00B1  28B9               	goto	l1622
   954  00B2                     l1620:	
   955                           
   956                           ;main.c: 240:                             {;main.c: 241:                                
      +                           semafori[i]=statoSemafori[1];
   957  00B2  085C               	movf	(_statoSemafori^(0+128)+1),w
   958  00B3  00BC               	movwf	??_main^(0+128)
   959  00B4  0840               	movf	main@i^(0+128),w
   960  00B5  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   961  00B6  0084               	movwf	4
   962  00B7  083C               	movf	??_main^(0+128),w
   963  00B8  0080               	movwf	0
   964  00B9                     l1622:	
   965                           
   966                           ;main.c: 239:                             while(flagGiallo==1)
   967  00B9  0347               	decf	_flagGiallo^(0+128),w
   968  00BA  1903               	btfsc	3,2
   969  00BB  28BD               	goto	u1391
   970  00BC  28BE               	goto	u1390
   971  00BD                     u1391:	
   972  00BD  28B2               	goto	l1620
   973  00BE                     u1390:	
   974  00BE                     l1624:	
   975                           
   976                           ;main.c: 244:                             semafori[i]=statoSemafori[2];
   977  00BE  085D               	movf	(_statoSemafori^(0+128)+2),w
   978  00BF  00BC               	movwf	??_main^(0+128)
   979  00C0  0840               	movf	main@i^(0+128),w
   980  00C1  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   981  00C2  0084               	movwf	4
   982  00C3  083C               	movf	??_main^(0+128),w
   983  00C4  0080               	movwf	0
   984  00C5                     l1626:	
   985                           
   986                           ;main.c: 249:                         if(i<3)
   987  00C5  3003               	movlw	3
   988  00C6  0240               	subwf	main@i^(0+128),w
   989  00C7  1803               	skipnc
   990  00C8  28CA               	goto	u1401
   991  00C9  28CB               	goto	u1400
   992  00CA                     u1401:	
   993  00CA  28E3               	goto	l1636
   994  00CB                     u1400:	
   995  00CB                     l1628:	
   996                           
   997                           ;main.c: 250:                         {;main.c: 253:                             if(sema
      +                          fori[i+1]==statoSemafori[2])
   998  00CB  0840               	movf	main@i^(0+128),w
   999  00CC  3EC2               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1000  00CD  0084               	movwf	4
  1001  00CE  0800               	movf	0,w
  1002  00CF  065D               	xorwf	(_statoSemafori^(0+128)+2),w
  1003  00D0  1D03               	skipz
  1004  00D1  28D3               	goto	u1411
  1005  00D2  28D4               	goto	u1410
  1006  00D3                     u1411:	
  1007  00D3  28E3               	goto	l1636
  1008  00D4                     u1410:	
  1009  00D4                     l1630:	
  1010                           
  1011                           ;main.c: 254:                             {;main.c: 255:                                
      +                           flagGiallo=1;
  1012  00D4  01C7               	clrf	_flagGiallo^(0+128)
  1013  00D5  0AC7               	incf	_flagGiallo^(0+128),f
  1014                           
  1015                           ;main.c: 256:                                 while(flagGiallo==1)
  1016  00D6  28DE               	goto	l1634
  1017  00D7                     l1632:	
  1018                           
  1019                           ;main.c: 257:                                 {;main.c: 258:                            
      +                                   semafori[i+1]=statoSemafori[1];
  1020  00D7  085C               	movf	(_statoSemafori^(0+128)+1),w
  1021  00D8  00BC               	movwf	??_main^(0+128)
  1022  00D9  0840               	movf	main@i^(0+128),w
  1023  00DA  3EC2               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1024  00DB  0084               	movwf	4
  1025  00DC  083C               	movf	??_main^(0+128),w
  1026  00DD  0080               	movwf	0
  1027  00DE                     l1634:	
  1028                           
  1029                           ;main.c: 256:                                 while(flagGiallo==1)
  1030  00DE  0347               	decf	_flagGiallo^(0+128),w
  1031  00DF  1903               	btfsc	3,2
  1032  00E0  28E2               	goto	u1421
  1033  00E1  28E3               	goto	u1420
  1034  00E2                     u1421:	
  1035  00E2  28D7               	goto	l1632
  1036  00E3                     u1420:	
  1037  00E3                     l1636:	
  1038                           
  1039                           ;main.c: 266:                         if(i>=3)
  1040  00E3  3003               	movlw	3
  1041  00E4  0240               	subwf	main@i^(0+128),w
  1042  00E5  1C03               	skipc
  1043  00E6  28E8               	goto	u1431
  1044  00E7  28E9               	goto	u1430
  1045  00E8                     u1431:	
  1046  00E8  28FB               	goto	l142
  1047  00E9                     u1430:	
  1048  00E9                     l1638:	
  1049                           
  1050                           ;main.c: 267:                         {;main.c: 268:                             if(sema
      +                          fori[0]==statoSemafori[2])
  1051  00E9  085D               	movf	(_statoSemafori^(0+128)+2),w
  1052  00EA  0641               	xorwf	_semafori^(0+128),w
  1053  00EB  1D03               	skipz
  1054  00EC  28EE               	goto	u1441
  1055  00ED  28EF               	goto	u1440
  1056  00EE                     u1441:	
  1057  00EE  28FB               	goto	l142
  1058  00EF                     u1440:	
  1059  00EF                     l1640:	
  1060                           
  1061                           ;main.c: 269:                             {;main.c: 270:                                
      +                           flagGiallo=1;
  1062  00EF  01C7               	clrf	_flagGiallo^(0+128)
  1063  00F0  0AC7               	incf	_flagGiallo^(0+128),f
  1064                           
  1065                           ;main.c: 271:                                 while(flagGiallo==1)
  1066  00F1  28F6               	goto	l1644
  1067  00F2                     l1642:	
  1068                           
  1069                           ;main.c: 272:                                 {;main.c: 273:                            
      +                                   semafori[0]=statoSemafori[1];
  1070  00F2  085C               	movf	(_statoSemafori^(0+128)+1),w
  1071  00F3  00BC               	movwf	??_main^(0+128)
  1072  00F4  083C               	movf	??_main^(0+128),w
  1073  00F5  00C1               	movwf	_semafori^(0+128)
  1074  00F6                     l1644:	
  1075                           
  1076                           ;main.c: 271:                                 while(flagGiallo==1)
  1077  00F6  0347               	decf	_flagGiallo^(0+128),w
  1078  00F7  1903               	btfsc	3,2
  1079  00F8  28FA               	goto	u1451
  1080  00F9  28FB               	goto	u1450
  1081  00FA                     u1451:	
  1082  00FA  28F2               	goto	l1642
  1083  00FB                     u1450:	
  1084  00FB                     l142:	
  1085                           ;main.c: 278:                         }
  1086                           
  1087                           
  1088                           ;main.c: 280:                         semaforoVerde=1;
  1089  00FB  01BF               	clrf	main@semaforoVerde^(0+128)
  1090  00FC  0ABF               	incf	main@semaforoVerde^(0+128),f
  1091  00FD                     l1646:	
  1092                           
  1093                           ;main.c: 231:                 while(semaforoVerde==0)
  1094  00FD  083F               	movf	main@semaforoVerde^(0+128),w
  1095  00FE  1903               	btfsc	3,2
  1096  00FF  2901               	goto	u1461
  1097  0100  2902               	goto	u1460
  1098  0101                     u1461:	
  1099  0101  289C               	goto	l1614
  1100  0102                     u1460:	
  1101  0102                     l1648:	
  1102                           
  1103                           ;main.c: 284:             }
  1104  0102  3001               	movlw	1
  1105  0103  00BC               	movwf	??_main^(0+128)
  1106  0104  083C               	movf	??_main^(0+128),w
  1107  0105  07C0               	addwf	main@i^(0+128),f
  1108  0106                     l1650:	
  1109  0106  3004               	movlw	4
  1110  0107  0240               	subwf	main@i^(0+128),w
  1111  0108  1C03               	skipc
  1112  0109  290B               	goto	u1471
  1113  010A  290C               	goto	u1470
  1114  010B                     u1471:	
  1115  010B  28FD               	goto	l1646
  1116  010C                     u1470:	
  1117  010C                     l1652:	
  1118                           
  1119                           ;main.c: 291:         if(scattoSemafori==1)
  1120  010C  0348               	decf	_scattoSemafori^(0+128),w
  1121  010D  1D03               	btfss	3,2
  1122  010E  2910               	goto	u1481
  1123  010F  2911               	goto	u1480
  1124  0110                     u1481:	
  1125  0110  29C9               	goto	l1666
  1126  0111                     u1480:	
  1127  0111                     l1654:	
  1128                           
  1129                           ;main.c: 292:         {;main.c: 294:             messageTransmission(1, 1, 0, 25);
  1130  0111  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1131  0112  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1132  0113  01AC               	clrf	messageTransmission@codice^(0+128)
  1133  0114  3019               	movlw	25
  1134  0115  00BC               	movwf	??_main^(0+128)
  1135  0116  083C               	movf	??_main^(0+128),w
  1136  0117  00AD               	movwf	messageTransmission@valore^(0+128)
  1137  0118  3001               	movlw	1
  1138  0119  120A  118A  267E  120A  118A  	fcall	_messageTransmission
  1139                           
  1140                           ;main.c: 295:             messageTransmission(1, 2, 1, 60);
  1141  011E  3002               	movlw	2
  1142  011F  1683               	bsf	3,5	;RP0=1, select bank1
  1143  0120  1303               	bcf	3,6	;RP1=0, select bank1
  1144  0121  00BC               	movwf	??_main^(0+128)
  1145  0122  083C               	movf	??_main^(0+128),w
  1146  0123  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1147  0124  01AC               	clrf	messageTransmission@codice^(0+128)
  1148  0125  0AAC               	incf	messageTransmission@codice^(0+128),f
  1149  0126  303C               	movlw	60
  1150  0127  00BD               	movwf	(??_main+1)^(0+128)
  1151  0128  083D               	movf	(??_main+1)^(0+128),w
  1152  0129  00AD               	movwf	messageTransmission@valore^(0+128)
  1153  012A  3001               	movlw	1
  1154  012B  120A  118A  267E  120A  118A  	fcall	_messageTransmission
  1155                           
  1156                           ;main.c: 296:             messageTransmission(1, 4, 2, 1);
  1157  0130  3004               	movlw	4
  1158  0131  1683               	bsf	3,5	;RP0=1, select bank1
  1159  0132  1303               	bcf	3,6	;RP1=0, select bank1
  1160  0133  00BC               	movwf	??_main^(0+128)
  1161  0134  083C               	movf	??_main^(0+128),w
  1162  0135  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1163  0136  3002               	movlw	2
  1164  0137  00BD               	movwf	(??_main+1)^(0+128)
  1165  0138  083D               	movf	(??_main+1)^(0+128),w
  1166  0139  00AC               	movwf	messageTransmission@codice^(0+128)
  1167  013A  01AD               	clrf	messageTransmission@valore^(0+128)
  1168  013B  0AAD               	incf	messageTransmission@valore^(0+128),f
  1169  013C  3001               	movlw	1
  1170  013D  120A  118A  267E  120A  118A  	fcall	_messageTransmission
  1171                           
  1172                           ;main.c: 298:             messageTransmission(2, 0, 3, semafori[0]);
  1173  0142  1683               	bsf	3,5	;RP0=1, select bank1
  1174  0143  1303               	bcf	3,6	;RP1=0, select bank1
  1175  0144  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1176  0145  3003               	movlw	3
  1177  0146  00BC               	movwf	??_main^(0+128)
  1178  0147  083C               	movf	??_main^(0+128),w
  1179  0148  00AC               	movwf	messageTransmission@codice^(0+128)
  1180  0149  0841               	movf	_semafori^(0+128),w
  1181  014A  00BD               	movwf	(??_main+1)^(0+128)
  1182  014B  083D               	movf	(??_main+1)^(0+128),w
  1183  014C  00AD               	movwf	messageTransmission@valore^(0+128)
  1184  014D  3002               	movlw	2
  1185  014E  120A  118A  267E  120A  118A  	fcall	_messageTransmission
  1186                           
  1187                           ;main.c: 299:             messageTransmission(2, 1, 3, semafori[1]);
  1188  0153  1683               	bsf	3,5	;RP0=1, select bank1
  1189  0154  1303               	bcf	3,6	;RP1=0, select bank1
  1190  0155  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1191  0156  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1192  0157  3003               	movlw	3
  1193  0158  00BC               	movwf	??_main^(0+128)
  1194  0159  083C               	movf	??_main^(0+128),w
  1195  015A  00AC               	movwf	messageTransmission@codice^(0+128)
  1196  015B  0842               	movf	(_semafori^(0+128)+1),w
  1197  015C  00BD               	movwf	(??_main+1)^(0+128)
  1198  015D  083D               	movf	(??_main+1)^(0+128),w
  1199  015E  00AD               	movwf	messageTransmission@valore^(0+128)
  1200  015F  3002               	movlw	2
  1201  0160  120A  118A  267E  120A  118A  	fcall	_messageTransmission
  1202                           
  1203                           ;main.c: 300:             messageTransmission(2, 2, 3, semafori[2]);
  1204  0165  3002               	movlw	2
  1205  0166  1683               	bsf	3,5	;RP0=1, select bank1
  1206  0167  1303               	bcf	3,6	;RP1=0, select bank1
  1207  0168  00BC               	movwf	??_main^(0+128)
  1208  0169  083C               	movf	??_main^(0+128),w
  1209  016A  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1210  016B  3003               	movlw	3
  1211  016C  00BD               	movwf	(??_main+1)^(0+128)
  1212  016D  083D               	movf	(??_main+1)^(0+128),w
  1213  016E  00AC               	movwf	messageTransmission@codice^(0+128)
  1214  016F  0843               	movf	(_semafori^(0+128)+2),w
  1215  0170  00BE               	movwf	(??_main+2)^(0+128)
  1216  0171  083E               	movf	(??_main+2)^(0+128),w
  1217  0172  00AD               	movwf	messageTransmission@valore^(0+128)
  1218  0173  3002               	movlw	2
  1219  0174  120A  118A  267E  120A  118A  	fcall	_messageTransmission
  1220                           
  1221                           ;main.c: 301:             messageTransmission(2, 3, 3, semafori[3]);
  1222  0179  3003               	movlw	3
  1223  017A  1683               	bsf	3,5	;RP0=1, select bank1
  1224  017B  1303               	bcf	3,6	;RP1=0, select bank1
  1225  017C  00BC               	movwf	??_main^(0+128)
  1226  017D  083C               	movf	??_main^(0+128),w
  1227  017E  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1228  017F  3003               	movlw	3
  1229  0180  00BD               	movwf	(??_main+1)^(0+128)
  1230  0181  083D               	movf	(??_main+1)^(0+128),w
  1231  0182  00AC               	movwf	messageTransmission@codice^(0+128)
  1232  0183  0844               	movf	(_semafori^(0+128)+3),w
  1233  0184  00BE               	movwf	(??_main+2)^(0+128)
  1234  0185  083E               	movf	(??_main+2)^(0+128),w
  1235  0186  00AD               	movwf	messageTransmission@valore^(0+128)
  1236  0187  3002               	movlw	2
  1237  0188  120A  118A  267E  120A  118A  	fcall	_messageTransmission
  1238                           
  1239                           ;main.c: 304:             messageTransmission(2, 1, 4, 4);
  1240  018D  1683               	bsf	3,5	;RP0=1, select bank1
  1241  018E  1303               	bcf	3,6	;RP1=0, select bank1
  1242  018F  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1243  0190  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1244  0191  3004               	movlw	4
  1245  0192  00BC               	movwf	??_main^(0+128)
  1246  0193  083C               	movf	??_main^(0+128),w
  1247  0194  00AC               	movwf	messageTransmission@codice^(0+128)
  1248  0195  3004               	movlw	4
  1249  0196  00BD               	movwf	(??_main+1)^(0+128)
  1250  0197  083D               	movf	(??_main+1)^(0+128),w
  1251  0198  00AD               	movwf	messageTransmission@valore^(0+128)
  1252  0199  3002               	movlw	2
  1253  019A  120A  118A  267E  120A  118A  	fcall	_messageTransmission
  1254  019F                     l1656:	
  1255                           
  1256                           ;main.c: 305:             contMoto=0;
  1257  019F  1683               	bsf	3,5	;RP0=1, select bank1
  1258  01A0  1303               	bcf	3,6	;RP1=0, select bank1
  1259  01A1  01CF               	clrf	_contMoto^(0+128)
  1260  01A2                     l1658:	
  1261                           
  1262                           ;main.c: 307:             messageTransmission(2, 1, 5, 7);
  1263  01A2  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1264  01A3  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1265  01A4  3005               	movlw	5
  1266  01A5  00BC               	movwf	??_main^(0+128)
  1267  01A6  083C               	movf	??_main^(0+128),w
  1268  01A7  00AC               	movwf	messageTransmission@codice^(0+128)
  1269  01A8  3007               	movlw	7
  1270  01A9  00BD               	movwf	(??_main+1)^(0+128)
  1271  01AA  083D               	movf	(??_main+1)^(0+128),w
  1272  01AB  00AD               	movwf	messageTransmission@valore^(0+128)
  1273  01AC  3002               	movlw	2
  1274  01AD  120A  118A  267E  120A  118A  	fcall	_messageTransmission
  1275                           
  1276                           ;main.c: 308:             contAuto=0;
  1277  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  1278  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  1279  01B4  01D0               	clrf	_contAuto^(0+128)
  1280  01B5                     l1660:	
  1281                           
  1282                           ;main.c: 309:             messageTransmission(2, 1, 6, 3);
  1283  01B5  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1284  01B6  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1285  01B7  3006               	movlw	6
  1286  01B8  00BC               	movwf	??_main^(0+128)
  1287  01B9  083C               	movf	??_main^(0+128),w
  1288  01BA  00AC               	movwf	messageTransmission@codice^(0+128)
  1289  01BB  3003               	movlw	3
  1290  01BC  00BD               	movwf	(??_main+1)^(0+128)
  1291  01BD  083D               	movf	(??_main+1)^(0+128),w
  1292  01BE  00AD               	movwf	messageTransmission@valore^(0+128)
  1293  01BF  3002               	movlw	2
  1294  01C0  120A  118A  267E  120A  118A  	fcall	_messageTransmission
  1295  01C5                     l1662:	
  1296                           
  1297                           ;main.c: 310:             contCamion=0;
  1298  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  1299  01C6  1303               	bcf	3,6	;RP1=0, select bank1
  1300  01C7  01CE               	clrf	_contCamion^(0+128)
  1301  01C8                     l1664:	
  1302                           
  1303                           ;main.c: 311:             scattoSemafori=0;
  1304  01C8  01C8               	clrf	_scattoSemafori^(0+128)
  1305  01C9                     l1666:	
  1306                           
  1307                           ;main.c: 316:         if(received)
  1308  01C9  0852               	movf	_received^(0+128),w
  1309  01CA  1903               	btfsc	3,2
  1310  01CB  29CD               	goto	u1491
  1311  01CC  29CE               	goto	u1490
  1312  01CD                     u1491:	
  1313  01CD  2876               	goto	l1588
  1314  01CE                     u1490:	
  1315  01CE                     l1668:	
  1316                           
  1317                           ;main.c: 317:         {;main.c: 319:             temporizzazione=datoSeriale;
  1318  01CE  0851               	movf	_datoSeriale^(0+128),w
  1319  01CF  00BC               	movwf	??_main^(0+128)
  1320  01D0  083C               	movf	??_main^(0+128),w
  1321  01D1  00FC               	movwf	_temporizzazione
  1322  01D2                     l1670:	
  1323                           
  1324                           ;main.c: 323:             received=0;
  1325  01D2  01D2               	clrf	_received^(0+128)
  1326  01D3  2876               	goto	l1588
  1327  01D4  120A  118A  2816   	ljmp	start
  1328  01D7                     __end_of_main:	
  1329                           
  1330                           	psect	text1
  1331  067E                     __ptext1:	
  1332 ;; *************** function _messageTransmission *****************
  1333 ;; Defined at:
  1334 ;;		line 433 in file "main.c"
  1335 ;; Parameters:    Size  Location     Type
  1336 ;;  tipoMessaggi    1    wreg     unsigned char 
  1337 ;;  idStrada        1   11[BANK1 ] unsigned char 
  1338 ;;  codice          1   12[BANK1 ] unsigned char 
  1339 ;;  valore          1   13[BANK1 ] unsigned char 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;  tipoMessaggi    1   15[BANK1 ] unsigned char 
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  1    wreg      void 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1351 ;;      Params:         0       0       3       0       0
  1352 ;;      Locals:         0       0       1       0       0
  1353 ;;      Temps:          0       0       1       0       0
  1354 ;;      Totals:         0       0       5       0       0
  1355 ;;Total ram usage:        5 bytes
  1356 ;; Hardware stack levels used:    1
  1357 ;; Hardware stack levels required when called:    6
  1358 ;; This function calls:
  1359 ;;		_Uart_send_string
  1360 ;; This function is called by:
  1361 ;;		_main
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           
  1366                           ;psect for function _messageTransmission
  1367  067E                     _messageTransmission:	
  1368                           
  1369                           ;incstack = 0
  1370                           ; Regs used in _messageTransmission: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1371                           ;messageTransmission@tipoMessaggio stored from wreg
  1372  067E  1683               	bsf	3,5	;RP0=1, select bank1
  1373  067F  1303               	bcf	3,6	;RP1=0, select bank1
  1374  0680  00AF               	movwf	messageTransmission@tipoMessaggio^(0+128)
  1375  0681                     l1514:	
  1376                           
  1377                           ;main.c: 433: void messageTransmission(char tipoMessaggio, char idStrada, char codice, c
      +                          har valore);main.c: 434: {;main.c: 435:     strToSend[0]=tipoMessaggio;
  1378  0681  082F               	movf	messageTransmission@tipoMessaggio^(0+128),w
  1379  0682  00AE               	movwf	??_messageTransmission^(0+128)
  1380  0683  082E               	movf	??_messageTransmission^(0+128),w
  1381  0684  00D3               	movwf	_strToSend^(0+128)
  1382                           
  1383                           ;main.c: 436:     strToSend[1]=200;
  1384  0685  30C8               	movlw	200
  1385  0686  00AE               	movwf	??_messageTransmission^(0+128)
  1386  0687  082E               	movf	??_messageTransmission^(0+128),w
  1387  0688  00D4               	movwf	(_strToSend^(0+128)+1)
  1388                           
  1389                           ;main.c: 437:     strToSend[2]=4;
  1390  0689  3004               	movlw	4
  1391  068A  00AE               	movwf	??_messageTransmission^(0+128)
  1392  068B  082E               	movf	??_messageTransmission^(0+128),w
  1393  068C  00D5               	movwf	(_strToSend^(0+128)+2)
  1394                           
  1395                           ;main.c: 438:     strToSend[3]=idStrada;
  1396  068D  082B               	movf	messageTransmission@idStrada^(0+128),w
  1397  068E  00AE               	movwf	??_messageTransmission^(0+128)
  1398  068F  082E               	movf	??_messageTransmission^(0+128),w
  1399  0690  00D6               	movwf	(_strToSend^(0+128)+3)
  1400                           
  1401                           ;main.c: 439:     strToSend[4]=codice;
  1402  0691  082C               	movf	messageTransmission@codice^(0+128),w
  1403  0692  00AE               	movwf	??_messageTransmission^(0+128)
  1404  0693  082E               	movf	??_messageTransmission^(0+128),w
  1405  0694  00D7               	movwf	(_strToSend^(0+128)+4)
  1406                           
  1407                           ;main.c: 440:     strToSend[5]=valore;
  1408  0695  082D               	movf	messageTransmission@valore^(0+128),w
  1409  0696  00AE               	movwf	??_messageTransmission^(0+128)
  1410  0697  082E               	movf	??_messageTransmission^(0+128),w
  1411  0698  00D8               	movwf	(_strToSend^(0+128)+5)
  1412  0699                     l1516:	
  1413                           
  1414                           ;main.c: 441:     Uart_send_string(strToSend);
  1415  0699  30D3               	movlw	(low (_strToSend| 0))& (0+255)
  1416  069A  120A  118A  2701  120A  118A  	fcall	_Uart_send_string
  1417  069F                     l178:	
  1418  069F  0008               	return
  1419  06A0                     __end_of_messageTransmission:	
  1420                           
  1421                           	psect	text2
  1422  0701                     __ptext2:	
  1423 ;; *************** function _Uart_send_string *****************
  1424 ;; Defined at:
  1425 ;;		line 445 in file "main.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;  str             1    wreg     PTR unsigned char 
  1428 ;;		 -> strToSend(8), 
  1429 ;; Auto vars:     Size  Location     Type
  1430 ;;  str             1    9[BANK1 ] PTR unsigned char 
  1431 ;;		 -> strToSend(8), 
  1432 ;;  i               1   10[BANK1 ] unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1442 ;;      Params:         0       0       0       0       0
  1443 ;;      Locals:         0       0       2       0       0
  1444 ;;      Temps:          0       0       1       0       0
  1445 ;;      Totals:         0       0       3       0       0
  1446 ;;Total ram usage:        3 bytes
  1447 ;; Hardware stack levels used:    1
  1448 ;; Hardware stack levels required when called:    5
  1449 ;; This function calls:
  1450 ;;		_UART_TxChar
  1451 ;; This function is called by:
  1452 ;;		_messageTransmission
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           
  1457                           ;psect for function _Uart_send_string
  1458  0701                     _Uart_send_string:	
  1459                           
  1460                           ;incstack = 0
  1461                           ; Regs used in _Uart_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1462                           ;Uart_send_string@str stored from wreg
  1463  0701  1683               	bsf	3,5	;RP0=1, select bank1
  1464  0702  1303               	bcf	3,6	;RP1=0, select bank1
  1465  0703  00A9               	movwf	Uart_send_string@str^(0+128)
  1466  0704                     l1322:	
  1467                           
  1468                           ;main.c: 445: void Uart_send_string(char *str);main.c: 446: {;main.c: 447:     char i;;m
      +                          ain.c: 448:     for(i=0;i<6;i++)
  1469  0704  01AA               	clrf	Uart_send_string@i^(0+128)
  1470  0705                     l1328:	
  1471                           
  1472                           ;main.c: 449:     {;main.c: 450:         UART_TxChar(*(str+i));
  1473  0705  082A               	movf	Uart_send_string@i^(0+128),w
  1474  0706  0729               	addwf	Uart_send_string@str^(0+128),w
  1475  0707  00A8               	movwf	??_Uart_send_string^(0+128)
  1476  0708  0828               	movf	??_Uart_send_string^(0+128),w
  1477  0709  0084               	movwf	4
  1478  070A  1383               	bcf	3,7	;select IRP bank0
  1479  070B  0800               	movf	0,w
  1480  070C  120A  118A  2731  120A  118A  	fcall	_UART_TxChar
  1481  0711                     l1330:	
  1482                           
  1483                           ;main.c: 451:     }
  1484  0711  3001               	movlw	1
  1485  0712  1683               	bsf	3,5	;RP0=1, select bank1
  1486  0713  1303               	bcf	3,6	;RP1=0, select bank1
  1487  0714  00A8               	movwf	??_Uart_send_string^(0+128)
  1488  0715  0828               	movf	??_Uart_send_string^(0+128),w
  1489  0716  07AA               	addwf	Uart_send_string@i^(0+128),f
  1490  0717                     l1332:	
  1491  0717  3006               	movlw	6
  1492  0718  022A               	subwf	Uart_send_string@i^(0+128),w
  1493  0719  1C03               	skipc
  1494  071A  2F1C               	goto	u891
  1495  071B  2F1D               	goto	u890
  1496  071C                     u891:	
  1497  071C  2F05               	goto	l1328
  1498  071D                     u890:	
  1499  071D                     l183:	
  1500  071D  0008               	return
  1501  071E                     __end_of_Uart_send_string:	
  1502                           
  1503                           	psect	text3
  1504  0731                     __ptext3:	
  1505 ;; *************** function _UART_TxChar *****************
  1506 ;; Defined at:
  1507 ;;		line 614 in file "main.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  dato            1    wreg     unsigned char 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  dato            1    7[BANK1 ] unsigned char 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1521 ;;      Params:         0       0       0       0       0
  1522 ;;      Locals:         0       0       1       0       0
  1523 ;;      Temps:          0       0       0       0       0
  1524 ;;      Totals:         0       0       1       0       0
  1525 ;;Total ram usage:        1 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; Hardware stack levels required when called:    4
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_Uart_send_string
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           
  1536                           ;psect for function _UART_TxChar
  1537  0731                     _UART_TxChar:	
  1538                           
  1539                           ;incstack = 0
  1540                           ; Regs used in _UART_TxChar: [wreg]
  1541                           ;UART_TxChar@dato stored from wreg
  1542  0731  1683               	bsf	3,5	;RP0=1, select bank1
  1543  0732  1303               	bcf	3,6	;RP1=0, select bank1
  1544  0733  00A7               	movwf	UART_TxChar@dato^(0+128)
  1545  0734                     l1298:	
  1546  0734                     l241:	
  1547                           ;main.c: 614: void UART_TxChar(char dato);main.c: 615: {;main.c: 616:     while (!TXIF);
  1548                           
  1549  0734  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0735  1E0C               	btfss	12,4	;volatile
  1551  0736  2F38               	goto	u881
  1552  0737  2F39               	goto	u880
  1553  0738                     u881:	
  1554  0738  2F34               	goto	l241
  1555  0739                     u880:	
  1556  0739                     l243:	
  1557                           
  1558                           ;main.c: 617:     TXIF = 0;
  1559  0739  120C               	bcf	12,4	;volatile
  1560  073A                     l1300:	
  1561                           
  1562                           ;main.c: 618:     TXREG = dato;
  1563  073A  1683               	bsf	3,5	;RP0=1, select bank1
  1564  073B  1303               	bcf	3,6	;RP1=0, select bank1
  1565  073C  0827               	movf	UART_TxChar@dato^(0+128),w
  1566  073D  1283               	bcf	3,5	;RP0=0, select bank0
  1567  073E  1303               	bcf	3,6	;RP1=0, select bank0
  1568  073F  0099               	movwf	25	;volatile
  1569  0740                     l244:	
  1570  0740  0008               	return
  1571  0741                     __end_of_UART_TxChar:	
  1572                           
  1573                           	psect	text4
  1574  0581                     __ptext4:	
  1575 ;; *************** function _init_lcd *****************
  1576 ;; Defined at:
  1577 ;;		line 581 in file "main.c"
  1578 ;; Parameters:    Size  Location     Type
  1579 ;;		None
  1580 ;; Auto vars:     Size  Location     Type
  1581 ;;		None
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  1    wreg      void 
  1584 ;; Registers used:
  1585 ;;		wreg, status,2, status,0, pclath, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1591 ;;      Params:         0       0       0       0       0
  1592 ;;      Locals:         0       0       0       0       0
  1593 ;;      Temps:          0       0       2       0       0
  1594 ;;      Totals:         0       0       2       0       0
  1595 ;;Total ram usage:        2 bytes
  1596 ;; Hardware stack levels used:    1
  1597 ;; Hardware stack levels required when called:    5
  1598 ;; This function calls:
  1599 ;;		_send_cmd
  1600 ;; This function is called by:
  1601 ;;		_main
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           
  1606                           ;psect for function _init_lcd
  1607  0581                     _init_lcd:	
  1608  0581                     l1490:	
  1609                           ;incstack = 0
  1610                           ; Regs used in _init_lcd: [wreg+status,2+status,0+pclath+cstack]
  1611                           
  1612                           
  1613                           ;main.c: 583:     PORTEbits.RE2 = 0;
  1614  0581  1283               	bcf	3,5	;RP0=0, select bank0
  1615  0582  1303               	bcf	3,6	;RP1=0, select bank0
  1616  0583  1109               	bcf	9,2	;volatile
  1617                           
  1618                           ;main.c: 584:     PORTEbits.RE1 = 0;
  1619  0584  1089               	bcf	9,1	;volatile
  1620  0585                     l1492:	
  1621                           
  1622                           ;main.c: 585:     _delay((unsigned long)((20)*(32000000L/4000.0)));
  1623  0585  30D0               	movlw	208
  1624  0586  1683               	bsf	3,5	;RP0=1, select bank1
  1625  0587  1303               	bcf	3,6	;RP1=0, select bank1
  1626  0588  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1627  0589  30C9               	movlw	201
  1628  058A  00AA               	movwf	??_init_lcd^(0+128)
  1629  058B                     u1737:	
  1630  058B  0BAA               	decfsz	??_init_lcd^(0+128),f
  1631  058C  2D8B               	goto	u1737
  1632  058D  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1633  058E  2D8B               	goto	u1737
  1634  058F                     l1494:	
  1635                           
  1636                           ;main.c: 586:     PORTEbits.RE1 = 1;
  1637  058F  1283               	bcf	3,5	;RP0=0, select bank0
  1638  0590  1303               	bcf	3,6	;RP1=0, select bank0
  1639  0591  1489               	bsf	9,1	;volatile
  1640  0592                     l1496:	
  1641                           
  1642                           ;main.c: 587:     send_cmd(0x38);
  1643  0592  3038               	movlw	56
  1644  0593  120A  118A  2656  120A  118A  	fcall	_send_cmd
  1645  0598                     l1498:	
  1646                           
  1647                           ;main.c: 588:     _delay((unsigned long)((5)*(32000000L/4000.0)));
  1648  0598  3034               	movlw	52
  1649  0599  1683               	bsf	3,5	;RP0=1, select bank1
  1650  059A  1303               	bcf	3,6	;RP1=0, select bank1
  1651  059B  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1652  059C  30F1               	movlw	241
  1653  059D  00AA               	movwf	??_init_lcd^(0+128)
  1654  059E                     u1747:	
  1655  059E  0BAA               	decfsz	??_init_lcd^(0+128),f
  1656  059F  2D9E               	goto	u1747
  1657  05A0  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1658  05A1  2D9E               	goto	u1747
  1659                           
  1660                           ;main.c: 589:     send_cmd(0x38);
  1661  05A2  3038               	movlw	56
  1662  05A3  120A  118A  2656  120A  118A  	fcall	_send_cmd
  1663  05A8                     l1500:	
  1664                           
  1665                           ;main.c: 590:     _delay((unsigned long)((1)*(32000000L/4000.0)));
  1666  05A8  300B               	movlw	11
  1667  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  1668  05AA  1303               	bcf	3,6	;RP1=0, select bank1
  1669  05AB  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1670  05AC  3061               	movlw	97
  1671  05AD  00AA               	movwf	??_init_lcd^(0+128)
  1672  05AE                     u1757:	
  1673  05AE  0BAA               	decfsz	??_init_lcd^(0+128),f
  1674  05AF  2DAE               	goto	u1757
  1675  05B0  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1676  05B1  2DAE               	goto	u1757
  1677  05B2  2DB3               	nop2
  1678  05B3                     l1502:	
  1679                           
  1680                           ;main.c: 591:     send_cmd(0x38);
  1681  05B3  3038               	movlw	56
  1682  05B4  120A  118A  2656  120A  118A  	fcall	_send_cmd
  1683  05B9                     l1504:	
  1684                           
  1685                           ;main.c: 592:     send_cmd(0x08);
  1686  05B9  3008               	movlw	8
  1687  05BA  120A  118A  2656  120A  118A  	fcall	_send_cmd
  1688  05BF                     l1506:	
  1689                           
  1690                           ;main.c: 593:     send_cmd(0x0F);
  1691  05BF  300F               	movlw	15
  1692  05C0  120A  118A  2656  120A  118A  	fcall	_send_cmd
  1693  05C5                     l1508:	
  1694                           
  1695                           ;main.c: 594:     send_cmd(0x01);
  1696  05C5  3001               	movlw	1
  1697  05C6  120A  118A  2656  120A  118A  	fcall	_send_cmd
  1698  05CB                     l1510:	
  1699                           
  1700                           ;main.c: 595:     send_cmd(0x0C);
  1701  05CB  300C               	movlw	12
  1702  05CC  120A  118A  2656  120A  118A  	fcall	_send_cmd
  1703  05D1                     l1512:	
  1704                           
  1705                           ;main.c: 596:     send_cmd(0x80);
  1706  05D1  3080               	movlw	128
  1707  05D2  120A  118A  2656  120A  118A  	fcall	_send_cmd
  1708  05D7                     l235:	
  1709  05D7  0008               	return
  1710  05D8                     __end_of_init_lcd:	
  1711                           
  1712                           	psect	text5
  1713  0656                     __ptext5:	
  1714 ;; *************** function _send_cmd *****************
  1715 ;; Defined at:
  1716 ;;		line 569 in file "main.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  command         1    wreg     unsigned char 
  1719 ;; Auto vars:     Size  Location     Type
  1720 ;;  command         1    9[BANK1 ] unsigned char 
  1721 ;; Return value:  Size  Location     Type
  1722 ;;                  1    wreg      void 
  1723 ;; Registers used:
  1724 ;;		wreg
  1725 ;; Tracked objects:
  1726 ;;		On entry : 0/0
  1727 ;;		On exit  : 0/0
  1728 ;;		Unchanged: 0/0
  1729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1730 ;;      Params:         0       0       0       0       0
  1731 ;;      Locals:         0       0       1       0       0
  1732 ;;      Temps:          0       0       2       0       0
  1733 ;;      Totals:         0       0       3       0       0
  1734 ;;Total ram usage:        3 bytes
  1735 ;; Hardware stack levels used:    1
  1736 ;; Hardware stack levels required when called:    4
  1737 ;; This function calls:
  1738 ;;		Nothing
  1739 ;; This function is called by:
  1740 ;;		_main
  1741 ;;		_init_lcd
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           
  1746                           ;psect for function _send_cmd
  1747  0656                     _send_cmd:	
  1748                           
  1749                           ;incstack = 0
  1750                           ; Regs used in _send_cmd: [wreg]
  1751                           ;send_cmd@command stored from wreg
  1752  0656  1683               	bsf	3,5	;RP0=1, select bank1
  1753  0657  1303               	bcf	3,6	;RP1=0, select bank1
  1754  0658  00A9               	movwf	send_cmd@command^(0+128)
  1755  0659                     l1312:	
  1756                           
  1757                           ;main.c: 569: void send_cmd(char command);main.c: 570: {;main.c: 571:     PORTEbits.RE1 
      +                          = 1;
  1758  0659  1283               	bcf	3,5	;RP0=0, select bank0
  1759  065A  1303               	bcf	3,6	;RP1=0, select bank0
  1760  065B  1489               	bsf	9,1	;volatile
  1761  065C                     l1314:	
  1762                           
  1763                           ;main.c: 572:     PORTD = command;
  1764  065C  1683               	bsf	3,5	;RP0=1, select bank1
  1765  065D  1303               	bcf	3,6	;RP1=0, select bank1
  1766  065E  0829               	movf	send_cmd@command^(0+128),w
  1767  065F  1283               	bcf	3,5	;RP0=0, select bank0
  1768  0660  1303               	bcf	3,6	;RP1=0, select bank0
  1769  0661  0088               	movwf	8	;volatile
  1770  0662                     l1316:	
  1771                           
  1772                           ;main.c: 573:     PORTEbits.RE2 = 0;
  1773  0662  1109               	bcf	9,2	;volatile
  1774                           
  1775                           ;main.c: 574:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  1776  0663  3020               	movlw	32
  1777  0664  1683               	bsf	3,5	;RP0=1, select bank1
  1778  0665  1303               	bcf	3,6	;RP1=0, select bank1
  1779  0666  00A8               	movwf	(??_send_cmd^(0+128)+1)
  1780  0667  3029               	movlw	41
  1781  0668  00A7               	movwf	??_send_cmd^(0+128)
  1782  0669                     u1767:	
  1783  0669  0BA7               	decfsz	??_send_cmd^(0+128),f
  1784  066A  2E69               	goto	u1767
  1785  066B  0BA8               	decfsz	(??_send_cmd^(0+128)+1),f
  1786  066C  2E69               	goto	u1767
  1787  066D                     l1318:	
  1788                           
  1789                           ;main.c: 575:     PORTEbits.RE1 = 0;
  1790  066D  1283               	bcf	3,5	;RP0=0, select bank0
  1791  066E  1303               	bcf	3,6	;RP1=0, select bank0
  1792  066F  1089               	bcf	9,1	;volatile
  1793                           
  1794                           ;main.c: 576:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  1795  0670  3020               	movlw	32
  1796  0671  1683               	bsf	3,5	;RP0=1, select bank1
  1797  0672  1303               	bcf	3,6	;RP1=0, select bank1
  1798  0673  00A8               	movwf	(??_send_cmd^(0+128)+1)
  1799  0674  3029               	movlw	41
  1800  0675  00A7               	movwf	??_send_cmd^(0+128)
  1801  0676                     u1777:	
  1802  0676  0BA7               	decfsz	??_send_cmd^(0+128),f
  1803  0677  2E76               	goto	u1777
  1804  0678  0BA8               	decfsz	(??_send_cmd^(0+128)+1),f
  1805  0679  2E76               	goto	u1777
  1806  067A                     l1320:	
  1807                           
  1808                           ;main.c: 577:     PORTEbits.RE1 = 1;
  1809  067A  1283               	bcf	3,5	;RP0=0, select bank0
  1810  067B  1303               	bcf	3,6	;RP1=0, select bank0
  1811  067C  1489               	bsf	9,1	;volatile
  1812  067D                     l232:	
  1813  067D  0008               	return
  1814  067E                     __end_of_send_cmd:	
  1815                           
  1816                           	psect	text6
  1817  0741                     __ptext6:	
  1818 ;; *************** function _initPic *****************
  1819 ;; Defined at:
  1820 ;;		line 455 in file "main.c"
  1821 ;; Parameters:    Size  Location     Type
  1822 ;;		None
  1823 ;; Auto vars:     Size  Location     Type
  1824 ;;		None
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  1    wreg      void 
  1827 ;; Registers used:
  1828 ;;		wreg, status,2
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1834 ;;      Params:         0       0       0       0       0
  1835 ;;      Locals:         0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0
  1837 ;;      Totals:         0       0       0       0       0
  1838 ;;Total ram usage:        0 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:    4
  1841 ;; This function calls:
  1842 ;;		Nothing
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           
  1849                           ;psect for function _initPic
  1850  0741                     _initPic:	
  1851  0741                     l1474:	
  1852                           ;incstack = 0
  1853                           ; Regs used in _initPic: [wreg+status,2]
  1854                           
  1855                           
  1856                           ;main.c: 457:     TRISD = 0x00;
  1857  0741  1683               	bsf	3,5	;RP0=1, select bank1
  1858  0742  1303               	bcf	3,6	;RP1=0, select bank1
  1859  0743  0188               	clrf	8	;volatile
  1860  0744                     l1476:	
  1861                           
  1862                           ;main.c: 458:     TRISB = 0xFF;
  1863  0744  30FF               	movlw	255
  1864  0745  0086               	movwf	6	;volatile
  1865  0746                     l1478:	
  1866                           
  1867                           ;main.c: 459:     TRISE = 0x00;
  1868  0746  0189               	clrf	9	;volatile
  1869                           
  1870                           ;main.c: 461:     INTCON = 0xA0;
  1871  0747  30A0               	movlw	160
  1872  0748  008B               	movwf	11	;volatile
  1873                           
  1874                           ;main.c: 462:     OPTION_REG = 0x07;
  1875  0749  3007               	movlw	7
  1876  074A  0081               	movwf	1	;volatile
  1877                           
  1878                           ;main.c: 463:     TMR0 = 6;
  1879  074B  3006               	movlw	6
  1880  074C  1283               	bcf	3,5	;RP0=0, select bank0
  1881  074D  1303               	bcf	3,6	;RP1=0, select bank0
  1882  074E  0081               	movwf	1	;volatile
  1883  074F                     l186:	
  1884  074F  0008               	return
  1885  0750                     __end_of_initPic:	
  1886                           
  1887                           	psect	text7
  1888  061C                     __ptext7:	
  1889 ;; *************** function _UART_init *****************
  1890 ;; Defined at:
  1891 ;;		line 601 in file "main.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  baudrate        2   22[BANK1 ] int 
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, status,2, status,0, pclath, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1905 ;;      Params:         0       0       2       0       0
  1906 ;;      Locals:         0       0       0       0       0
  1907 ;;      Temps:          0       0       4       0       0
  1908 ;;      Totals:         0       0       6       0       0
  1909 ;;Total ram usage:        6 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:    5
  1912 ;; This function calls:
  1913 ;;		___aldiv
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919                           
  1920                           ;psect for function _UART_init
  1921  061C                     _UART_init:	
  1922  061C                     l1480:	
  1923                           ;incstack = 0
  1924                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  1925                           
  1926                           
  1927                           ;main.c: 601: void UART_init(int baudrate);main.c: 602: {;main.c: 603:     TRISCbits.TRI
      +                          SC6 = 0;
  1928  061C  1683               	bsf	3,5	;RP0=1, select bank1
  1929  061D  1303               	bcf	3,6	;RP1=0, select bank1
  1930  061E  1307               	bcf	7,6	;volatile
  1931                           
  1932                           ;main.c: 604:     TXSTAbits.TXEN = 1;
  1933  061F  1698               	bsf	24,5	;volatile
  1934                           
  1935                           ;main.c: 605:     RCSTAbits.SPEN = 1;
  1936  0620  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0621  1303               	bcf	3,6	;RP1=0, select bank0
  1938  0622  1798               	bsf	24,7	;volatile
  1939                           
  1940                           ;main.c: 606:     RCSTAbits.CREN = 1;
  1941  0623  1618               	bsf	24,4	;volatile
  1942  0624                     l1482:	
  1943                           
  1944                           ;main.c: 607:     SPBRG = (32000000L/(long)(64UL*baudrate))-1;
  1945  0624  1683               	bsf	3,5	;RP0=1, select bank1
  1946  0625  1303               	bcf	3,6	;RP1=0, select bank1
  1947  0626  0836               	movf	UART_init@baudrate^(0+128),w
  1948  0627  00B8               	movwf	??_UART_init^(0+128)
  1949  0628  0837               	movf	(UART_init@baudrate+1)^(0+128),w
  1950  0629  00B9               	movwf	(??_UART_init^(0+128)+1)
  1951  062A  3000               	movlw	0
  1952  062B  1BB9               	btfsc	(??_UART_init^(0+128)+1),7
  1953  062C  30FF               	movlw	255
  1954  062D  00BA               	movwf	(??_UART_init^(0+128)+2)
  1955  062E  00BB               	movwf	(??_UART_init^(0+128)+3)
  1956  062F  3006               	movlw	6
  1957  0630                     u1205:	
  1958  0630  1003               	clrc
  1959  0631  0DB8               	rlf	??_UART_init^(0+128),f
  1960  0632  0DB9               	rlf	(??_UART_init^(0+128)+1),f
  1961  0633  0DBA               	rlf	(??_UART_init^(0+128)+2),f
  1962  0634  0DBB               	rlf	(??_UART_init^(0+128)+3),f
  1963  0635                     u1200:	
  1964  0635  3EFF               	addlw	-1
  1965  0636  1D03               	skipz
  1966  0637  2E30               	goto	u1205
  1967  0638  083B               	movf	(??_UART_init+3)^(0+128),w
  1968  0639  00AA               	movwf	(___aldiv@divisor+3)^(0+128)
  1969  063A  083A               	movf	(??_UART_init+2)^(0+128),w
  1970  063B  00A9               	movwf	(___aldiv@divisor+2)^(0+128)
  1971  063C  0839               	movf	(??_UART_init+1)^(0+128),w
  1972  063D  00A8               	movwf	(___aldiv@divisor+1)^(0+128)
  1973  063E  0838               	movf	??_UART_init^(0+128),w
  1974  063F  00A7               	movwf	___aldiv@divisor^(0+128)
  1975  0640  3001               	movlw	1
  1976  0641  00AE               	movwf	(___aldiv@dividend+3)^(0+128)
  1977  0642  30E8               	movlw	232
  1978  0643  00AD               	movwf	(___aldiv@dividend+2)^(0+128)
  1979  0644  3048               	movlw	72
  1980  0645  00AC               	movwf	(___aldiv@dividend+1)^(0+128)
  1981  0646  3000               	movlw	0
  1982  0647  00AB               	movwf	___aldiv@dividend^(0+128)
  1983  0648  120A  118A  2424  120A  118A  	fcall	___aldiv
  1984  064D  1683               	bsf	3,5	;RP0=1, select bank1
  1985  064E  1303               	bcf	3,6	;RP1=0, select bank1
  1986  064F  0827               	movf	?___aldiv^(0+128),w
  1987  0650  3EFF               	addlw	255
  1988  0651  0099               	movwf	25	;volatile
  1989  0652                     l1484:	
  1990                           
  1991                           ;main.c: 608:     INTCONbits.GIE = 1;
  1992  0652  178B               	bsf	11,7	;volatile
  1993  0653                     l1486:	
  1994                           
  1995                           ;main.c: 609:     INTCONbits.PEIE = 1;
  1996  0653  170B               	bsf	11,6	;volatile
  1997  0654                     l1488:	
  1998                           
  1999                           ;main.c: 610:     PIE1bits.RCIE = 1;
  2000  0654  168C               	bsf	12,5	;volatile
  2001  0655                     l238:	
  2002  0655  0008               	return
  2003  0656                     __end_of_UART_init:	
  2004                           
  2005                           	psect	text8
  2006  0424                     __ptext8:	
  2007 ;; *************** function ___aldiv *****************
  2008 ;; Defined at:
  2009 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  divisor         4    7[BANK1 ] long 
  2012 ;;  dividend        4   11[BANK1 ] long 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  quotient        4   18[BANK1 ] long 
  2015 ;;  sign            1   17[BANK1 ] unsigned char 
  2016 ;;  counter         1   16[BANK1 ] unsigned char 
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  4    7[BANK1 ] long 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2, status,0
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/0
  2023 ;;		On exit  : 0/0
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2026 ;;      Params:         0       0       8       0       0
  2027 ;;      Locals:         0       0       6       0       0
  2028 ;;      Temps:          0       0       1       0       0
  2029 ;;      Totals:         0       0      15       0       0
  2030 ;;Total ram usage:       15 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; Hardware stack levels required when called:    4
  2033 ;; This function calls:
  2034 ;;		Nothing
  2035 ;; This function is called by:
  2036 ;;		_UART_init
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           
  2041                           ;psect for function ___aldiv
  2042  0424                     ___aldiv:	
  2043  0424                     l1342:	
  2044                           ;incstack = 0
  2045                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2046                           
  2047  0424  1683               	bsf	3,5	;RP0=1, select bank1
  2048  0425  1303               	bcf	3,6	;RP1=0, select bank1
  2049  0426  01B1               	clrf	___aldiv@sign^(0+128)
  2050  0427                     l1344:	
  2051  0427  1FAA               	btfss	(___aldiv@divisor+3)^(0+128),7
  2052  0428  2C2A               	goto	u911
  2053  0429  2C2B               	goto	u910
  2054  042A                     u911:	
  2055  042A  2C38               	goto	l395
  2056  042B                     u910:	
  2057  042B                     l1346:	
  2058  042B  09A7               	comf	___aldiv@divisor^(0+128),f
  2059  042C  09A8               	comf	(___aldiv@divisor+1)^(0+128),f
  2060  042D  09A9               	comf	(___aldiv@divisor+2)^(0+128),f
  2061  042E  09AA               	comf	(___aldiv@divisor+3)^(0+128),f
  2062  042F  0AA7               	incf	___aldiv@divisor^(0+128),f
  2063  0430  1903               	skipnz
  2064  0431  0AA8               	incf	(___aldiv@divisor+1)^(0+128),f
  2065  0432  1903               	skipnz
  2066  0433  0AA9               	incf	(___aldiv@divisor+2)^(0+128),f
  2067  0434  1903               	skipnz
  2068  0435  0AAA               	incf	(___aldiv@divisor+3)^(0+128),f
  2069  0436  01B1               	clrf	___aldiv@sign^(0+128)
  2070  0437  0AB1               	incf	___aldiv@sign^(0+128),f
  2071  0438                     l395:	
  2072  0438  1FAE               	btfss	(___aldiv@dividend+3)^(0+128),7
  2073  0439  2C3B               	goto	u921
  2074  043A  2C3C               	goto	u920
  2075  043B                     u921:	
  2076  043B  2C4B               	goto	l1352
  2077  043C                     u920:	
  2078  043C                     l1348:	
  2079  043C  09AB               	comf	___aldiv@dividend^(0+128),f
  2080  043D  09AC               	comf	(___aldiv@dividend+1)^(0+128),f
  2081  043E  09AD               	comf	(___aldiv@dividend+2)^(0+128),f
  2082  043F  09AE               	comf	(___aldiv@dividend+3)^(0+128),f
  2083  0440  0AAB               	incf	___aldiv@dividend^(0+128),f
  2084  0441  1903               	skipnz
  2085  0442  0AAC               	incf	(___aldiv@dividend+1)^(0+128),f
  2086  0443  1903               	skipnz
  2087  0444  0AAD               	incf	(___aldiv@dividend+2)^(0+128),f
  2088  0445  1903               	skipnz
  2089  0446  0AAE               	incf	(___aldiv@dividend+3)^(0+128),f
  2090  0447                     l1350:	
  2091  0447  3001               	movlw	1
  2092  0448  00AF               	movwf	??___aldiv^(0+128)
  2093  0449  082F               	movf	??___aldiv^(0+128),w
  2094  044A  06B1               	xorwf	___aldiv@sign^(0+128),f
  2095  044B                     l1352:	
  2096  044B  3000               	movlw	0
  2097  044C  00B5               	movwf	(___aldiv@quotient+3)^(0+128)
  2098  044D  3000               	movlw	0
  2099  044E  00B4               	movwf	(___aldiv@quotient+2)^(0+128)
  2100  044F  3000               	movlw	0
  2101  0450  00B3               	movwf	(___aldiv@quotient+1)^(0+128)
  2102  0451  3000               	movlw	0
  2103  0452  00B2               	movwf	___aldiv@quotient^(0+128)
  2104  0453                     l1354:	
  2105  0453  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2106  0454  0429               	iorwf	(___aldiv@divisor+2)^(0+128),w
  2107  0455  0428               	iorwf	(___aldiv@divisor+1)^(0+128),w
  2108  0456  0427               	iorwf	___aldiv@divisor^(0+128),w
  2109  0457  1903               	skipnz
  2110  0458  2C5A               	goto	u931
  2111  0459  2C5B               	goto	u930
  2112  045A                     u931:	
  2113  045A  2CA8               	goto	l1374
  2114  045B                     u930:	
  2115  045B                     l1356:	
  2116  045B  01B0               	clrf	___aldiv@counter^(0+128)
  2117  045C  0AB0               	incf	___aldiv@counter^(0+128),f
  2118  045D  2C6B               	goto	l1360
  2119  045E                     l1358:	
  2120  045E  3001               	movlw	1
  2121  045F  00AF               	movwf	??___aldiv^(0+128)
  2122  0460                     u945:	
  2123  0460  1003               	clrc
  2124  0461  0DA7               	rlf	___aldiv@divisor^(0+128),f
  2125  0462  0DA8               	rlf	(___aldiv@divisor+1)^(0+128),f
  2126  0463  0DA9               	rlf	(___aldiv@divisor+2)^(0+128),f
  2127  0464  0DAA               	rlf	(___aldiv@divisor+3)^(0+128),f
  2128  0465  0BAF               	decfsz	??___aldiv^(0+128),f
  2129  0466  2C60               	goto	u945
  2130  0467  3001               	movlw	1
  2131  0468  00AF               	movwf	??___aldiv^(0+128)
  2132  0469  082F               	movf	??___aldiv^(0+128),w
  2133  046A  07B0               	addwf	___aldiv@counter^(0+128),f
  2134  046B                     l1360:	
  2135  046B  1FAA               	btfss	(___aldiv@divisor+3)^(0+128),7
  2136  046C  2C6E               	goto	u951
  2137  046D  2C6F               	goto	u950
  2138  046E                     u951:	
  2139  046E  2C5E               	goto	l1358
  2140  046F                     u950:	
  2141  046F                     l1362:	
  2142  046F  3001               	movlw	1
  2143  0470  00AF               	movwf	??___aldiv^(0+128)
  2144  0471                     u965:	
  2145  0471  1003               	clrc
  2146  0472  0DB2               	rlf	___aldiv@quotient^(0+128),f
  2147  0473  0DB3               	rlf	(___aldiv@quotient+1)^(0+128),f
  2148  0474  0DB4               	rlf	(___aldiv@quotient+2)^(0+128),f
  2149  0475  0DB5               	rlf	(___aldiv@quotient+3)^(0+128),f
  2150  0476  0BAF               	decfsz	??___aldiv^(0+128),f
  2151  0477  2C71               	goto	u965
  2152  0478                     l1364:	
  2153  0478  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2154  0479  022E               	subwf	(___aldiv@dividend+3)^(0+128),w
  2155  047A  1D03               	skipz
  2156  047B  2C86               	goto	u975
  2157  047C  0829               	movf	(___aldiv@divisor+2)^(0+128),w
  2158  047D  022D               	subwf	(___aldiv@dividend+2)^(0+128),w
  2159  047E  1D03               	skipz
  2160  047F  2C86               	goto	u975
  2161  0480  0828               	movf	(___aldiv@divisor+1)^(0+128),w
  2162  0481  022C               	subwf	(___aldiv@dividend+1)^(0+128),w
  2163  0482  1D03               	skipz
  2164  0483  2C86               	goto	u975
  2165  0484  0827               	movf	___aldiv@divisor^(0+128),w
  2166  0485  022B               	subwf	___aldiv@dividend^(0+128),w
  2167  0486                     u975:	
  2168  0486  1C03               	skipc
  2169  0487  2C89               	goto	u971
  2170  0488  2C8A               	goto	u970
  2171  0489                     u971:	
  2172  0489  2C99               	goto	l1370
  2173  048A                     u970:	
  2174  048A                     l1366:	
  2175  048A  0827               	movf	___aldiv@divisor^(0+128),w
  2176  048B  02AB               	subwf	___aldiv@dividend^(0+128),f
  2177  048C  0828               	movf	(___aldiv@divisor+1)^(0+128),w
  2178  048D  1C03               	skipc
  2179  048E  0F28               	incfsz	(___aldiv@divisor+1)^(0+128),w
  2180  048F  02AC               	subwf	(___aldiv@dividend+1)^(0+128),f
  2181  0490  0829               	movf	(___aldiv@divisor+2)^(0+128),w
  2182  0491  1C03               	skipc
  2183  0492  0F29               	incfsz	(___aldiv@divisor+2)^(0+128),w
  2184  0493  02AD               	subwf	(___aldiv@dividend+2)^(0+128),f
  2185  0494  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2186  0495  1C03               	skipc
  2187  0496  0F2A               	incfsz	(___aldiv@divisor+3)^(0+128),w
  2188  0497  02AE               	subwf	(___aldiv@dividend+3)^(0+128),f
  2189  0498                     l1368:	
  2190  0498  1432               	bsf	___aldiv@quotient^(0+128),0
  2191  0499                     l1370:	
  2192  0499  3001               	movlw	1
  2193  049A                     u985:	
  2194  049A  1003               	clrc
  2195  049B  0CAA               	rrf	(___aldiv@divisor+3)^(0+128),f
  2196  049C  0CA9               	rrf	(___aldiv@divisor+2)^(0+128),f
  2197  049D  0CA8               	rrf	(___aldiv@divisor+1)^(0+128),f
  2198  049E  0CA7               	rrf	___aldiv@divisor^(0+128),f
  2199  049F  3EFF               	addlw	-1
  2200  04A0  1D03               	skipz
  2201  04A1  2C9A               	goto	u985
  2202  04A2                     l1372:	
  2203  04A2  3001               	movlw	1
  2204  04A3  02B0               	subwf	___aldiv@counter^(0+128),f
  2205  04A4  1D03               	btfss	3,2
  2206  04A5  2CA7               	goto	u991
  2207  04A6  2CA8               	goto	u990
  2208  04A7                     u991:	
  2209  04A7  2C6F               	goto	l1362
  2210  04A8                     u990:	
  2211  04A8                     l1374:	
  2212  04A8  0831               	movf	___aldiv@sign^(0+128),w
  2213  04A9  1903               	btfsc	3,2
  2214  04AA  2CAC               	goto	u1001
  2215  04AB  2CAD               	goto	u1000
  2216  04AC                     u1001:	
  2217  04AC  2CB8               	goto	l1378
  2218  04AD                     u1000:	
  2219  04AD                     l1376:	
  2220  04AD  09B2               	comf	___aldiv@quotient^(0+128),f
  2221  04AE  09B3               	comf	(___aldiv@quotient+1)^(0+128),f
  2222  04AF  09B4               	comf	(___aldiv@quotient+2)^(0+128),f
  2223  04B0  09B5               	comf	(___aldiv@quotient+3)^(0+128),f
  2224  04B1  0AB2               	incf	___aldiv@quotient^(0+128),f
  2225  04B2  1903               	skipnz
  2226  04B3  0AB3               	incf	(___aldiv@quotient+1)^(0+128),f
  2227  04B4  1903               	skipnz
  2228  04B5  0AB4               	incf	(___aldiv@quotient+2)^(0+128),f
  2229  04B6  1903               	skipnz
  2230  04B7  0AB5               	incf	(___aldiv@quotient+3)^(0+128),f
  2231  04B8                     l1378:	
  2232  04B8  0835               	movf	(___aldiv@quotient+3)^(0+128),w
  2233  04B9  00AA               	movwf	(?___aldiv+3)^(0+128)
  2234  04BA  0834               	movf	(___aldiv@quotient+2)^(0+128),w
  2235  04BB  00A9               	movwf	(?___aldiv+2)^(0+128)
  2236  04BC  0833               	movf	(___aldiv@quotient+1)^(0+128),w
  2237  04BD  00A8               	movwf	(?___aldiv+1)^(0+128)
  2238  04BE  0832               	movf	___aldiv@quotient^(0+128),w
  2239  04BF  00A7               	movwf	?___aldiv^(0+128)
  2240  04C0                     l405:	
  2241  04C0  0008               	return
  2242  04C1                     __end_of___aldiv:	
  2243                           
  2244                           	psect	text9
  2245  0314                     __ptext9:	
  2246 ;; *************** function _ISR *****************
  2247 ;; Defined at:
  2248 ;;		line 333 in file "main.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;		None
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;		None
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      void 
  2255 ;; Registers used:
  2256 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2262 ;;      Params:         0       0       0       0       0
  2263 ;;      Locals:         0       0       0       0       0
  2264 ;;      Temps:          0       0       7       0       0
  2265 ;;      Totals:         0       0       7       0       0
  2266 ;;Total ram usage:        7 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    3
  2269 ;; This function calls:
  2270 ;;		_print_Countdown
  2271 ;; This function is called by:
  2272 ;;		Interrupt level 1
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           
  2277                           ;psect for function _ISR
  2278  0314                     _ISR:	
  2279  0314                     i1l1672:	
  2280                           
  2281                           ;main.c: 337:     if (!(PORTBbits.RB3)&& (!oldBtn1))
  2282  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2283  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2284  0316  1986               	btfsc	6,3	;volatile
  2285  0317  2B19               	goto	u150_21
  2286  0318  2B1A               	goto	u150_20
  2287  0319                     u150_21:	
  2288  0319  2B2B               	goto	i1l157
  2289  031A                     u150_20:	
  2290  031A                     i1l1674:	
  2291  031A  086F               	movf	_oldBtn1,w
  2292  031B  1D03               	btfss	3,2
  2293  031C  2B1E               	goto	u151_21
  2294  031D  2B1F               	goto	u151_20
  2295  031E                     u151_21:	
  2296  031E  2B2B               	goto	i1l157
  2297  031F                     u151_20:	
  2298  031F                     i1l1676:	
  2299                           
  2300                           ;main.c: 338:     {;main.c: 339:         stat1=!stat1;
  2301  031F  1683               	bsf	3,5	;RP0=1, select bank1
  2302  0320  1303               	bcf	3,6	;RP1=0, select bank1
  2303  0321  084D               	movf	_stat1^(0+128),w
  2304  0322  1903               	btfsc	3,2
  2305  0323  2B25               	goto	u152_21
  2306  0324  2B27               	goto	u152_20
  2307  0325                     u152_21:	
  2308  0325  3001               	movlw	1
  2309  0326  2B28               	goto	u153_20
  2310  0327                     u152_20:	
  2311  0327  3000               	movlw	0
  2312  0328                     u153_20:	
  2313  0328  00A0               	movwf	??_ISR^(0+128)
  2314  0329  0820               	movf	??_ISR^(0+128),w
  2315  032A  00CD               	movwf	_stat1^(0+128)
  2316  032B                     i1l157:	
  2317                           ;main.c: 341:     }
  2318                           
  2319                           
  2320                           ;main.c: 342:     oldBtn1 = !PORTBbits.RB3;
  2321  032B  1003               	clrc
  2322  032C  1283               	bcf	3,5	;RP0=0, select bank0
  2323  032D  1D86               	btfss	6,3	;volatile
  2324  032E  1403               	setc
  2325  032F  3000               	movlw	0
  2326  0330  1803               	btfsc	3,0
  2327  0331  3001               	movlw	1
  2328  0332  00EF               	movwf	_oldBtn1
  2329  0333                     i1l1678:	
  2330                           
  2331                           ;main.c: 344:     if (!(PORTBbits.RB4)&& (!oldBtn2))
  2332  0333  1A06               	btfsc	6,4	;volatile
  2333  0334  2B36               	goto	u154_21
  2334  0335  2B37               	goto	u154_20
  2335  0336                     u154_21:	
  2336  0336  2B48               	goto	i1l158
  2337  0337                     u154_20:	
  2338  0337                     i1l1680:	
  2339  0337  1683               	bsf	3,5	;RP0=1, select bank1
  2340  0338  1303               	bcf	3,6	;RP1=0, select bank1
  2341  0339  084C               	movf	_oldBtn2^(0+128),w
  2342  033A  1D03               	btfss	3,2
  2343  033B  2B3D               	goto	u155_21
  2344  033C  2B3E               	goto	u155_20
  2345  033D                     u155_21:	
  2346  033D  2B48               	goto	i1l158
  2347  033E                     u155_20:	
  2348  033E                     i1l1682:	
  2349                           
  2350                           ;main.c: 345:     {;main.c: 346:         stat2=!stat2;
  2351  033E  084B               	movf	_stat2^(0+128),w
  2352  033F  1903               	btfsc	3,2
  2353  0340  2B42               	goto	u156_21
  2354  0341  2B44               	goto	u156_20
  2355  0342                     u156_21:	
  2356  0342  3001               	movlw	1
  2357  0343  2B45               	goto	u157_20
  2358  0344                     u156_20:	
  2359  0344  3000               	movlw	0
  2360  0345                     u157_20:	
  2361  0345  00A0               	movwf	??_ISR^(0+128)
  2362  0346  0820               	movf	??_ISR^(0+128),w
  2363  0347  00CB               	movwf	_stat2^(0+128)
  2364  0348                     i1l158:	
  2365                           ;main.c: 348:     }
  2366                           
  2367                           
  2368                           ;main.c: 349:     oldBtn2 = !PORTBbits.RB4;
  2369  0348  1003               	clrc
  2370  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2371  034A  1E06               	btfss	6,4	;volatile
  2372  034B  1403               	setc
  2373  034C  3000               	movlw	0
  2374  034D  1803               	btfsc	3,0
  2375  034E  3001               	movlw	1
  2376  034F  1683               	bsf	3,5	;RP0=1, select bank1
  2377  0350  1303               	bcf	3,6	;RP1=0, select bank1
  2378  0351  00CC               	movwf	_oldBtn2^(0+128)
  2379  0352                     i1l1684:	
  2380                           
  2381                           ;main.c: 351:     if (!(PORTBbits.RB5)&& (!oldBtn3))
  2382  0352  1283               	bcf	3,5	;RP0=0, select bank0
  2383  0353  1303               	bcf	3,6	;RP1=0, select bank0
  2384  0354  1A86               	btfsc	6,5	;volatile
  2385  0355  2B57               	goto	u158_21
  2386  0356  2B58               	goto	u158_20
  2387  0357                     u158_21:	
  2388  0357  2B69               	goto	i1l159
  2389  0358                     u158_20:	
  2390  0358                     i1l1686:	
  2391  0358  1683               	bsf	3,5	;RP0=1, select bank1
  2392  0359  1303               	bcf	3,6	;RP1=0, select bank1
  2393  035A  084A               	movf	_oldBtn3^(0+128),w
  2394  035B  1D03               	btfss	3,2
  2395  035C  2B5E               	goto	u159_21
  2396  035D  2B5F               	goto	u159_20
  2397  035E                     u159_21:	
  2398  035E  2B69               	goto	i1l159
  2399  035F                     u159_20:	
  2400  035F                     i1l1688:	
  2401                           
  2402                           ;main.c: 352:     {;main.c: 353:         stat3=!stat3;
  2403  035F  0849               	movf	_stat3^(0+128),w
  2404  0360  1903               	btfsc	3,2
  2405  0361  2B63               	goto	u160_21
  2406  0362  2B65               	goto	u160_20
  2407  0363                     u160_21:	
  2408  0363  3001               	movlw	1
  2409  0364  2B66               	goto	u161_20
  2410  0365                     u160_20:	
  2411  0365  3000               	movlw	0
  2412  0366                     u161_20:	
  2413  0366  00A0               	movwf	??_ISR^(0+128)
  2414  0367  0820               	movf	??_ISR^(0+128),w
  2415  0368  00C9               	movwf	_stat3^(0+128)
  2416  0369                     i1l159:	
  2417                           ;main.c: 355:     }
  2418                           
  2419                           
  2420                           ;main.c: 356:     oldBtn3 = !PORTBbits.RB5;
  2421  0369  1003               	clrc
  2422  036A  1283               	bcf	3,5	;RP0=0, select bank0
  2423  036B  1E86               	btfss	6,5	;volatile
  2424  036C  1403               	setc
  2425  036D  3000               	movlw	0
  2426  036E  1803               	btfsc	3,0
  2427  036F  3001               	movlw	1
  2428  0370  1683               	bsf	3,5	;RP0=1, select bank1
  2429  0371  1303               	bcf	3,6	;RP1=0, select bank1
  2430  0372  00CA               	movwf	_oldBtn3^(0+128)
  2431                           
  2432                           ;main.c: 359:     if(f==0)
  2433  0373  085E               	movf	_f^(0+128),w
  2434  0374  045F               	iorwf	(_f+1)^(0+128),w
  2435  0375  1D03               	btfss	3,2
  2436  0376  2B78               	goto	u162_21
  2437  0377  2B79               	goto	u162_20
  2438  0378                     u162_21:	
  2439  0378  2B7E               	goto	i1l1694
  2440  0379                     u162_20:	
  2441  0379                     i1l1690:	
  2442                           
  2443                           ;main.c: 360:     {;main.c: 361:         flagGiallo=0;
  2444  0379  01C7               	clrf	_flagGiallo^(0+128)
  2445  037A                     i1l1692:	
  2446                           
  2447                           ;main.c: 362:         f=3;
  2448  037A  3003               	movlw	3
  2449  037B  00DE               	movwf	_f^(0+128)
  2450  037C  3000               	movlw	0
  2451  037D  00DF               	movwf	(_f^(0+128)+1)
  2452  037E                     i1l1694:	
  2453                           
  2454                           ;main.c: 365:     if(countDown==0)
  2455  037E  087D               	movf	_countDown,w
  2456  037F  1D03               	btfss	3,2
  2457  0380  2B82               	goto	u163_21
  2458  0381  2B83               	goto	u163_20
  2459  0382                     u163_21:	
  2460  0382  2B93               	goto	i1l1704
  2461  0383                     u163_20:	
  2462  0383                     i1l1696:	
  2463                           
  2464                           ;main.c: 366:     {;main.c: 367:         scattoSemafori=1;
  2465  0383  01C8               	clrf	_scattoSemafori^(0+128)
  2466  0384  0AC8               	incf	_scattoSemafori^(0+128),f
  2467  0385                     i1l1698:	
  2468                           
  2469                           ;main.c: 368:         if(temporizzazione!=0)
  2470  0385  087C               	movf	_temporizzazione,w
  2471  0386  1903               	btfsc	3,2
  2472  0387  2B89               	goto	u164_21
  2473  0388  2B8A               	goto	u164_20
  2474  0389                     u164_21:	
  2475  0389  2B8F               	goto	i1l1702
  2476  038A                     u164_20:	
  2477  038A                     i1l1700:	
  2478                           
  2479                           ;main.c: 369:             countDown=temporizzazione;
  2480  038A  087C               	movf	_temporizzazione,w
  2481  038B  00A0               	movwf	??_ISR^(0+128)
  2482  038C  0820               	movf	??_ISR^(0+128),w
  2483  038D  00FD               	movwf	_countDown
  2484  038E  2B93               	goto	i1l1704
  2485  038F                     i1l1702:	
  2486                           
  2487                           ;main.c: 371:             countDown=5;
  2488  038F  3005               	movlw	5
  2489  0390  00A0               	movwf	??_ISR^(0+128)
  2490  0391  0820               	movf	??_ISR^(0+128),w
  2491  0392  00FD               	movwf	_countDown
  2492  0393                     i1l1704:	
  2493                           
  2494                           ;main.c: 375:    if(RCIF)
  2495  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2496  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0395  1E8C               	btfss	12,5	;volatile
  2498  0396  2B98               	goto	u165_21
  2499  0397  2B99               	goto	u165_20
  2500  0398                     u165_21:	
  2501  0398  2BA6               	goto	i1l1712
  2502  0399                     u165_20:	
  2503  0399                     i1l165:	
  2504  0399  1E8C               	btfss	12,5	;volatile
  2505  039A  2B9C               	goto	u166_21
  2506  039B  2B9D               	goto	u166_20
  2507  039C                     u166_21:	
  2508  039C  2B99               	goto	i1l165
  2509  039D                     u166_20:	
  2510  039D                     i1l167:	
  2511                           
  2512                           ;main.c: 378:         RCIF = 0;
  2513  039D  128C               	bcf	12,5	;volatile
  2514  039E                     i1l1708:	
  2515                           
  2516                           ;main.c: 379:         datoSeriale = RCREG;
  2517  039E  081A               	movf	26,w	;volatile
  2518  039F  1683               	bsf	3,5	;RP0=1, select bank1
  2519  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2520  03A1  00A0               	movwf	??_ISR^(0+128)
  2521  03A2  0820               	movf	??_ISR^(0+128),w
  2522  03A3  00D1               	movwf	_datoSeriale^(0+128)
  2523  03A4                     i1l1710:	
  2524                           
  2525                           ;main.c: 380:         received = 1;
  2526  03A4  01D2               	clrf	_received^(0+128)
  2527  03A5  0AD2               	incf	_received^(0+128),f
  2528  03A6                     i1l1712:	
  2529                           
  2530                           ;main.c: 383:    if (INTCON&0x04)
  2531  03A6  1D0B               	btfss	11,2	;volatile
  2532  03A7  2BA9               	goto	u167_21
  2533  03A8  2BAA               	goto	u167_20
  2534  03A9                     u167_21:	
  2535  03A9  2C13               	goto	i1l175
  2536  03AA                     u167_20:	
  2537  03AA                     i1l1714:	
  2538                           
  2539                           ;main.c: 384:     {;main.c: 385:         INTCON &= ~0x04;
  2540  03AA  30FB               	movlw	251
  2541  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  2542  03AC  1303               	bcf	3,6	;RP1=0, select bank1
  2543  03AD  00A0               	movwf	??_ISR^(0+128)
  2544  03AE  0820               	movf	??_ISR^(0+128),w
  2545  03AF  058B               	andwf	11,f	;volatile
  2546  03B0                     i1l1716:	
  2547                           
  2548                           ;main.c: 386:         TMR0 = 6;
  2549  03B0  3006               	movlw	6
  2550  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2551  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2552  03B3  0081               	movwf	1	;volatile
  2553  03B4                     i1l1718:	
  2554                           
  2555                           ;main.c: 387:         count++;
  2556  03B4  3001               	movlw	1
  2557  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2558  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2559  03B7  07C5               	addwf	_count^(0+128),f
  2560  03B8  1803               	skipnc
  2561  03B9  0AC6               	incf	(_count+1)^(0+128),f
  2562  03BA  3000               	movlw	0
  2563  03BB  07C6               	addwf	(_count+1)^(0+128),f
  2564                           
  2565                           ;main.c: 388:         if (count == 125)
  2566  03BC  307D               	movlw	125
  2567  03BD  0645               	xorwf	_count^(0+128),w
  2568  03BE  0446               	iorwf	(_count+1)^(0+128),w
  2569  03BF  1D03               	btfss	3,2
  2570  03C0  2BC2               	goto	u168_21
  2571  03C1  2BC3               	goto	u168_20
  2572  03C2                     u168_21:	
  2573  03C2  2C13               	goto	i1l175
  2574  03C3                     u168_20:	
  2575  03C3                     i1l1720:	
  2576                           
  2577                           ;main.c: 389:         {;main.c: 391:             if(semafori[0]==statoSemafori[0])
  2578  03C3  0841               	movf	_semafori^(0+128),w
  2579  03C4  065B               	xorwf	_statoSemafori^(0+128),w
  2580  03C5  1D03               	skipz
  2581  03C6  2BC8               	goto	u169_21
  2582  03C7  2BC9               	goto	u169_20
  2583  03C8                     u169_21:	
  2584  03C8  2BD6               	goto	i1l1724
  2585  03C9                     u169_20:	
  2586  03C9                     i1l1722:	
  2587                           
  2588                           ;main.c: 392:                 print_Countdown(countDown, 0);
  2589  03C9  087D               	movf	_countDown,w
  2590  03CA  00A0               	movwf	??_ISR^(0+128)
  2591  03CB  01A1               	clrf	(??_ISR^(0+128)+1)
  2592  03CC  0820               	movf	??_ISR^(0+128),w
  2593  03CD  00F9               	movwf	print_Countdown@num
  2594  03CE  0821               	movf	(??_ISR+1)^(0+128),w
  2595  03CF  00FA               	movwf	print_Countdown@num+1
  2596  03D0  01FB               	clrf	print_Countdown@statoSem
  2597  03D1  120A  118A  21D7  120A  118A  	fcall	_print_Countdown
  2598  03D6                     i1l1724:	
  2599                           
  2600                           ;main.c: 393:             if(semafori[0]==statoSemafori[2])
  2601  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  2602  03D7  1303               	bcf	3,6	;RP1=0, select bank1
  2603  03D8  085D               	movf	(_statoSemafori^(0+128)+2),w
  2604  03D9  0641               	xorwf	_semafori^(0+128),w
  2605  03DA  1D03               	skipz
  2606  03DB  2BDD               	goto	u170_21
  2607  03DC  2BDE               	goto	u170_20
  2608  03DD                     u170_21:	
  2609  03DD  2BEE               	goto	i1l1728
  2610  03DE                     u170_20:	
  2611  03DE                     i1l1726:	
  2612                           
  2613                           ;main.c: 394:                 print_Countdown(countDown, 2);
  2614  03DE  087D               	movf	_countDown,w
  2615  03DF  00A0               	movwf	??_ISR^(0+128)
  2616  03E0  01A1               	clrf	(??_ISR^(0+128)+1)
  2617  03E1  0820               	movf	??_ISR^(0+128),w
  2618  03E2  00F9               	movwf	print_Countdown@num
  2619  03E3  0821               	movf	(??_ISR+1)^(0+128),w
  2620  03E4  00FA               	movwf	print_Countdown@num+1
  2621  03E5  3002               	movlw	2
  2622  03E6  00A2               	movwf	(??_ISR+2)^(0+128)
  2623  03E7  0822               	movf	(??_ISR+2)^(0+128),w
  2624  03E8  00FB               	movwf	print_Countdown@statoSem
  2625  03E9  120A  118A  21D7  120A  118A  	fcall	_print_Countdown
  2626  03EE                     i1l1728:	
  2627                           
  2628                           ;main.c: 397:             if(flagGiallo==1)
  2629  03EE  1683               	bsf	3,5	;RP0=1, select bank1
  2630  03EF  1303               	bcf	3,6	;RP1=0, select bank1
  2631  03F0  0347               	decf	_flagGiallo^(0+128),w
  2632  03F1  1D03               	btfss	3,2
  2633  03F2  2BF4               	goto	u171_21
  2634  03F3  2BF5               	goto	u171_20
  2635  03F4                     u171_21:	
  2636  03F4  2C0F               	goto	i1l1736
  2637  03F5                     u171_20:	
  2638  03F5                     i1l1730:	
  2639                           
  2640                           ;main.c: 398:             {;main.c: 399:                 if(semafori[0]==statoSemafori[1
      +                          ])
  2641  03F5  085C               	movf	(_statoSemafori^(0+128)+1),w
  2642  03F6  0641               	xorwf	_semafori^(0+128),w
  2643  03F7  1D03               	skipz
  2644  03F8  2BFA               	goto	u172_21
  2645  03F9  2BFB               	goto	u172_20
  2646  03FA                     u172_21:	
  2647  03FA  2C06               	goto	i1l1734
  2648  03FB                     u172_20:	
  2649  03FB                     i1l1732:	
  2650                           
  2651                           ;main.c: 400:                    print_Countdown(f, 1);
  2652  03FB  085F               	movf	(_f+1)^(0+128),w
  2653  03FC  00FA               	movwf	print_Countdown@num+1
  2654  03FD  085E               	movf	_f^(0+128),w
  2655  03FE  00F9               	movwf	print_Countdown@num
  2656  03FF  01FB               	clrf	print_Countdown@statoSem
  2657  0400  0AFB               	incf	print_Countdown@statoSem,f
  2658  0401  120A  118A  21D7  120A  118A  	fcall	_print_Countdown
  2659  0406                     i1l1734:	
  2660                           
  2661                           ;main.c: 402:                 f--;
  2662  0406  30FF               	movlw	255
  2663  0407  1683               	bsf	3,5	;RP0=1, select bank1
  2664  0408  1303               	bcf	3,6	;RP1=0, select bank1
  2665  0409  07DE               	addwf	_f^(0+128),f
  2666  040A  1803               	skipnc
  2667  040B  0ADF               	incf	(_f+1)^(0+128),f
  2668  040C  30FF               	movlw	255
  2669  040D  07DF               	addwf	(_f+1)^(0+128),f
  2670                           
  2671                           ;main.c: 404:             }
  2672  040E  2C11               	goto	i1l1738
  2673  040F                     i1l1736:	
  2674                           
  2675                           ;main.c: 406:             {;main.c: 407:                 countDown--;
  2676  040F  3001               	movlw	1
  2677  0410  02FD               	subwf	_countDown,f
  2678  0411                     i1l1738:	
  2679                           
  2680                           ;main.c: 410:             count = 0;
  2681  0411  01C5               	clrf	_count^(0+128)
  2682  0412  01C6               	clrf	(_count+1)^(0+128)
  2683  0413                     i1l175:	
  2684  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2685  0414  1303               	bcf	3,6	;RP1=0, select bank1
  2686  0415  0826               	movf	(??_ISR+6)^(0+128),w
  2687  0416  1283               	bcf	3,5	;RP0=0, select bank0
  2688  0417  1303               	bcf	3,6	;RP1=0, select bank0
  2689  0418  00FF               	movwf	btemp+1
  2690  0419  1683               	bsf	3,5	;RP0=1, select bank1
  2691  041A  1303               	bcf	3,6	;RP1=0, select bank1
  2692  041B  0825               	movf	(??_ISR+5)^(0+128),w
  2693  041C  008A               	movwf	10
  2694  041D  0824               	movf	(??_ISR+4)^(0+128),w
  2695  041E  0084               	movwf	4
  2696  041F  0E23               	swapf	(??_ISR+3)^(0+128),w
  2697  0420  0083               	movwf	3
  2698  0421  0EFE               	swapf	btemp,f
  2699  0422  0E7E               	swapf	btemp,w
  2700  0423  0009               	retfie
  2701  0424                     __end_of_ISR:	
  2702                           
  2703                           	psect	intentry
  2704  0004                     __pintentry:	
  2705                           ;incstack = 0
  2706                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2707                           
  2708  0004                     interrupt_function:	
  2709  007E                     saved_w	set	btemp
  2710  0004  00FE               	movwf	btemp
  2711  0005  0E03               	swapf	3,w
  2712  0006  1683               	bsf	3,5	;RP0=1, select bank1
  2713  0007  1303               	bcf	3,6	;RP1=0, select bank1
  2714  0008  00A3               	movwf	(??_ISR+3)^(0+128)
  2715  0009  0804               	movf	4,w
  2716  000A  00A4               	movwf	(??_ISR+4)^(0+128)
  2717  000B  080A               	movf	10,w
  2718  000C  00A5               	movwf	(??_ISR+5)^(0+128)
  2719  000D  1283               	bcf	3,5	;RP0=0, select bank0
  2720  000E  1303               	bcf	3,6	;RP1=0, select bank0
  2721  000F  087F               	movf	btemp+1,w
  2722  0010  1683               	bsf	3,5	;RP0=1, select bank1
  2723  0011  1303               	bcf	3,6	;RP1=0, select bank1
  2724  0012  00A6               	movwf	(??_ISR+6)^(0+128)
  2725  0013  120A  118A  2B14   	ljmp	_ISR
  2726                           
  2727                           	psect	text10
  2728  01D7                     __ptext10:	
  2729 ;; *************** function _print_Countdown *****************
  2730 ;; Defined at:
  2731 ;;		line 488 in file "main.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  num             2    9[COMMON] int 
  2734 ;;  statoSem        1   11[COMMON] unsigned char 
  2735 ;; Auto vars:     Size  Location     Type
  2736 ;;  secondStr      17   38[BANK0 ] unsigned char [17]
  2737 ;;  secondStr      17   21[BANK0 ] unsigned char [17]
  2738 ;;  secondStr      17    4[BANK0 ] unsigned char [17]
  2739 ;;  firstStr       17   55[BANK0 ] unsigned char [17]
  2740 ;;  resultNum       3   72[BANK0 ] unsigned char [3]
  2741 ;;  i               2   77[BANK0 ] int 
  2742 ;;  length          2   75[BANK0 ] int 
  2743 ;; Return value:  Size  Location     Type
  2744 ;;                  1    wreg      void 
  2745 ;; Registers used:
  2746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2747 ;; Tracked objects:
  2748 ;;		On entry : 0/0
  2749 ;;		On exit  : 0/0
  2750 ;;		Unchanged: 0/0
  2751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2752 ;;      Params:         3       0       0       0       0
  2753 ;;      Locals:         0      75       0       0       0
  2754 ;;      Temps:          0       4       0       0       0
  2755 ;;      Totals:         3      79       0       0       0
  2756 ;;Total ram usage:       82 bytes
  2757 ;; Hardware stack levels used:    1
  2758 ;; Hardware stack levels required when called:    2
  2759 ;; This function calls:
  2760 ;;		___awdiv
  2761 ;;		___awmod
  2762 ;;		_send_string
  2763 ;;		i1_send_cmd
  2764 ;; This function is called by:
  2765 ;;		_ISR
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           
  2770                           ;psect for function _print_Countdown
  2771  01D7                     _print_Countdown:	
  2772  01D7                     i1l1518:	
  2773                           ;incstack = 0
  2774                           ; Regs used in _print_Countdown: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2775                           
  2776                           
  2777                           ;main.c: 488: void print_Countdown(int num, char statoSem);main.c: 489: {;main.c: 490:  
      +                             char resultNum[3], firstStr[17] = "Tempo:          ";
  2778  01D7  3057               	movlw	print_Countdown@firstStr& (0+255)
  2779  01D8  0084               	movwf	4
  2780  01D9  30C3               	movlw	low print_Countdown@F923
  2781  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  2782  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  2783  01DC  00A0               	movwf	??_print_Countdown
  2784  01DD  0804               	movf	4,w
  2785  01DE  00A1               	movwf	??_print_Countdown+1
  2786  01DF  3011               	movlw	17
  2787  01E0  00A2               	movwf	??_print_Countdown+2
  2788  01E1                     u121_20:	
  2789  01E1  0820               	movf	??_print_Countdown,w
  2790  01E2  0084               	movwf	4
  2791  01E3  1783               	bsf	3,7	;select IRP bank3
  2792  01E4  0800               	movf	0,w
  2793  01E5  00A3               	movwf	??_print_Countdown+3
  2794  01E6  0AA0               	incf	??_print_Countdown,f
  2795  01E7  0821               	movf	??_print_Countdown+1,w
  2796  01E8  0084               	movwf	4
  2797  01E9  1383               	bcf	3,7	;select IRP bank0
  2798  01EA  0823               	movf	??_print_Countdown+3,w
  2799  01EB  0080               	movwf	0
  2800  01EC  0AA1               	incf	??_print_Countdown+1,f
  2801  01ED  0BA2               	decfsz	??_print_Countdown+2,f
  2802  01EE  29E1               	goto	u121_20
  2803  01EF                     i1l1520:	
  2804                           
  2805                           ;main.c: 491:     int length = 2, i = 0;
  2806  01EF  3002               	movlw	2
  2807  01F0  00EB               	movwf	print_Countdown@length
  2808  01F1  3000               	movlw	0
  2809  01F2  00EC               	movwf	print_Countdown@length+1
  2810  01F3                     i1l1522:	
  2811  01F3  01ED               	clrf	print_Countdown@i
  2812  01F4  01EE               	clrf	print_Countdown@i+1
  2813  01F5                     i1l1524:	
  2814                           
  2815                           ;main.c: 493:     if(num < 10)
  2816  01F5  087A               	movf	print_Countdown@num+1,w
  2817  01F6  3A80               	xorlw	128
  2818  01F7  00FF               	movwf	btemp+1
  2819  01F8  3080               	movlw	128
  2820  01F9  027F               	subwf	btemp+1,w
  2821  01FA  1D03               	skipz
  2822  01FB  29FE               	goto	u122_25
  2823  01FC  300A               	movlw	10
  2824  01FD  0279               	subwf	print_Countdown@num,w
  2825  01FE                     u122_25:	
  2826  01FE  1803               	skipnc
  2827  01FF  2A01               	goto	u122_21
  2828  0200  2A02               	goto	u122_20
  2829  0201                     u122_21:	
  2830  0201  2A09               	goto	i1l1528
  2831  0202                     u122_20:	
  2832  0202                     i1l1526:	
  2833                           
  2834                           ;main.c: 494:         length = 1;
  2835  0202  3001               	movlw	1
  2836  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2837  0204  1303               	bcf	3,6	;RP1=0, select bank0
  2838  0205  00EB               	movwf	print_Countdown@length
  2839  0206  3000               	movlw	0
  2840  0207  00EC               	movwf	print_Countdown@length+1
  2841  0208  2A16               	goto	i1l1532
  2842  0209                     i1l1528:	
  2843  0209  3064               	movlw	100
  2844  020A  0679               	xorwf	print_Countdown@num,w
  2845  020B  047A               	iorwf	print_Countdown@num+1,w
  2846  020C  1D03               	btfss	3,2
  2847  020D  2A0F               	goto	u123_21
  2848  020E  2A10               	goto	u123_20
  2849  020F                     u123_21:	
  2850  020F  2A16               	goto	i1l1532
  2851  0210                     u123_20:	
  2852  0210                     i1l1530:	
  2853                           
  2854                           ;main.c: 496:         length = 3;
  2855  0210  3003               	movlw	3
  2856  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2857  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2858  0213  00EB               	movwf	print_Countdown@length
  2859  0214  3000               	movlw	0
  2860  0215  00EC               	movwf	print_Countdown@length+1
  2861  0216                     i1l1532:	
  2862                           
  2863                           ;main.c: 498:     if(num != 0)
  2864  0216  0879               	movf	print_Countdown@num,w
  2865  0217  047A               	iorwf	print_Countdown@num+1,w
  2866  0218  1903               	btfsc	3,2
  2867  0219  2A1B               	goto	u124_21
  2868  021A  2A1C               	goto	u124_20
  2869  021B                     u124_21:	
  2870  021B  2A55               	goto	i1l1544
  2871  021C                     u124_20:	
  2872  021C  2A4E               	goto	i1l1542
  2873  021D                     i1l1536:	
  2874                           
  2875                           ;main.c: 501:         {;main.c: 502:             resultNum[i] = num%10 + '0';
  2876  021D  300A               	movlw	10
  2877  021E  00F0               	movwf	___awmod@divisor
  2878  021F  3000               	movlw	0
  2879  0220  00F1               	movwf	___awmod@divisor+1
  2880  0221  087A               	movf	print_Countdown@num+1,w
  2881  0222  00F3               	movwf	___awmod@dividend+1
  2882  0223  0879               	movf	print_Countdown@num,w
  2883  0224  00F2               	movwf	___awmod@dividend
  2884  0225  120A  118A  2528  120A  118A  	fcall	___awmod
  2885  022A  0870               	movf	?___awmod,w
  2886  022B  3E30               	addlw	48
  2887  022C  1283               	bcf	3,5	;RP0=0, select bank0
  2888  022D  1303               	bcf	3,6	;RP1=0, select bank0
  2889  022E  00A0               	movwf	??_print_Countdown
  2890  022F  086D               	movf	print_Countdown@i,w
  2891  0230  3E68               	addlw	(low (print_Countdown@resultNum| 0))& (0+255)
  2892  0231  0084               	movwf	4
  2893  0232  0820               	movf	??_print_Countdown,w
  2894  0233  1383               	bcf	3,7	;select IRP bank0
  2895  0234  0080               	movwf	0
  2896  0235                     i1l1538:	
  2897                           
  2898                           ;main.c: 503:             num /= 10;
  2899  0235  300A               	movlw	10
  2900  0236  00F0               	movwf	___awdiv@divisor
  2901  0237  3000               	movlw	0
  2902  0238  00F1               	movwf	___awdiv@divisor+1
  2903  0239  087A               	movf	print_Countdown@num+1,w
  2904  023A  00F3               	movwf	___awdiv@dividend+1
  2905  023B  0879               	movf	print_Countdown@num,w
  2906  023C  00F2               	movwf	___awdiv@dividend
  2907  023D  120A  118A  24C1  120A  118A  	fcall	___awdiv
  2908  0242  0871               	movf	?___awdiv+1,w
  2909  0243  00FA               	movwf	print_Countdown@num+1
  2910  0244  0870               	movf	?___awdiv,w
  2911  0245  00F9               	movwf	print_Countdown@num
  2912  0246                     i1l1540:	
  2913                           
  2914                           ;main.c: 504:             i++;
  2915  0246  3001               	movlw	1
  2916  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2917  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2918  0249  07ED               	addwf	print_Countdown@i,f
  2919  024A  1803               	skipnc
  2920  024B  0AEE               	incf	print_Countdown@i+1,f
  2921  024C  3000               	movlw	0
  2922  024D  07EE               	addwf	print_Countdown@i+1,f
  2923  024E                     i1l1542:	
  2924                           
  2925                           ;main.c: 500:         while(num)
  2926  024E  0879               	movf	print_Countdown@num,w
  2927  024F  047A               	iorwf	print_Countdown@num+1,w
  2928  0250  1D03               	btfss	3,2
  2929  0251  2A53               	goto	u125_21
  2930  0252  2A54               	goto	u125_20
  2931  0253                     u125_21:	
  2932  0253  2A1D               	goto	i1l1536
  2933  0254                     u125_20:	
  2934  0254  2A5B               	goto	i1l1546
  2935  0255                     i1l1544:	
  2936                           
  2937                           ;main.c: 508:     {;main.c: 509:         resultNum[0] = '0';
  2938  0255  3030               	movlw	48
  2939  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2940  0257  1303               	bcf	3,6	;RP1=0, select bank0
  2941  0258  00A0               	movwf	??_print_Countdown
  2942  0259  0820               	movf	??_print_Countdown,w
  2943  025A  00E8               	movwf	print_Countdown@resultNum
  2944  025B                     i1l1546:	
  2945                           
  2946                           ;main.c: 512:     for(i=0; i<length; i++)
  2947  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2948  025C  1303               	bcf	3,6	;RP1=0, select bank0
  2949  025D  01ED               	clrf	print_Countdown@i
  2950  025E  01EE               	clrf	print_Countdown@i+1
  2951  025F  2A74               	goto	i1l1552
  2952  0260                     i1l1548:	
  2953                           
  2954                           ;main.c: 513:     {;main.c: 514:         firstStr[13-i] = resultNum[i];
  2955  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2956  0261  1303               	bcf	3,6	;RP1=0, select bank0
  2957  0262  086D               	movf	print_Countdown@i,w
  2958  0263  3E68               	addlw	(low (print_Countdown@resultNum| 0))& (0+255)
  2959  0264  0084               	movwf	4
  2960  0265  1383               	bcf	3,7	;select IRP bank0
  2961  0266  0800               	movf	0,w
  2962  0267  00A0               	movwf	??_print_Countdown
  2963  0268  086D               	movf	print_Countdown@i,w
  2964  0269  3C0D               	sublw	13
  2965  026A  3E57               	addlw	(low (print_Countdown@firstStr| 0))& (0+255)
  2966  026B  0084               	movwf	4
  2967  026C  0820               	movf	??_print_Countdown,w
  2968  026D  0080               	movwf	0
  2969  026E                     i1l1550:	
  2970                           
  2971                           ;main.c: 515:     }
  2972  026E  3001               	movlw	1
  2973  026F  07ED               	addwf	print_Countdown@i,f
  2974  0270  1803               	skipnc
  2975  0271  0AEE               	incf	print_Countdown@i+1,f
  2976  0272  3000               	movlw	0
  2977  0273  07EE               	addwf	print_Countdown@i+1,f
  2978  0274                     i1l1552:	
  2979  0274  086E               	movf	print_Countdown@i+1,w
  2980  0275  3A80               	xorlw	128
  2981  0276  00A0               	movwf	??_print_Countdown
  2982  0277  086C               	movf	print_Countdown@length+1,w
  2983  0278  3A80               	xorlw	128
  2984  0279  0220               	subwf	??_print_Countdown,w
  2985  027A  1D03               	skipz
  2986  027B  2A7E               	goto	u126_25
  2987  027C  086B               	movf	print_Countdown@length,w
  2988  027D  026D               	subwf	print_Countdown@i,w
  2989  027E                     u126_25:	
  2990  027E  1C03               	skipc
  2991  027F  2A81               	goto	u126_21
  2992  0280  2A82               	goto	u126_20
  2993  0281                     u126_21:	
  2994  0281  2A60               	goto	i1l1548
  2995  0282                     u126_20:	
  2996  0282                     i1l1554:	
  2997                           
  2998                           ;main.c: 517:     send_cmd(0x01);
  2999  0282  3001               	movlw	1
  3000  0283  120A  118A  26C1  120A  118A  	fcall	i1_send_cmd
  3001                           
  3002                           ;main.c: 518:     send_cmd(0xC0);
  3003  0288  30C0               	movlw	192
  3004  0289  120A  118A  26C1  120A  118A  	fcall	i1_send_cmd
  3005  028E                     i1l1556:	
  3006                           
  3007                           ;main.c: 519:     if(statoSem==0)
  3008  028E  087B               	movf	print_Countdown@statoSem,w
  3009  028F  1D03               	btfss	3,2
  3010  0290  2A92               	goto	u127_21
  3011  0291  2A93               	goto	u127_20
  3012  0292                     u127_21:	
  3013  0292  2AB1               	goto	i1l1562
  3014  0293                     u127_20:	
  3015  0293                     i1l1558:	
  3016                           
  3017                           ;main.c: 520:     {;main.c: 521:        char secondStr[17] = "Sem 0:     Verde";
  3018  0293  3024               	movlw	print_Countdown@secondStr& (0+255)
  3019  0294  0084               	movwf	4
  3020  0295  30B2               	movlw	low print_Countdown@F927
  3021  0296  1283               	bcf	3,5	;RP0=0, select bank0
  3022  0297  1303               	bcf	3,6	;RP1=0, select bank0
  3023  0298  00A0               	movwf	??_print_Countdown
  3024  0299  0804               	movf	4,w
  3025  029A  00A1               	movwf	??_print_Countdown+1
  3026  029B  3011               	movlw	17
  3027  029C  00A2               	movwf	??_print_Countdown+2
  3028  029D                     u128_20:	
  3029  029D  0820               	movf	??_print_Countdown,w
  3030  029E  0084               	movwf	4
  3031  029F  1783               	bsf	3,7	;select IRP bank3
  3032  02A0  0800               	movf	0,w
  3033  02A1  00A3               	movwf	??_print_Countdown+3
  3034  02A2  0AA0               	incf	??_print_Countdown,f
  3035  02A3  0821               	movf	??_print_Countdown+1,w
  3036  02A4  0084               	movwf	4
  3037  02A5  1383               	bcf	3,7	;select IRP bank0
  3038  02A6  0823               	movf	??_print_Countdown+3,w
  3039  02A7  0080               	movwf	0
  3040  02A8  0AA1               	incf	??_print_Countdown+1,f
  3041  02A9  0BA2               	decfsz	??_print_Countdown+2,f
  3042  02AA  2A9D               	goto	u128_20
  3043  02AB                     i1l1560:	
  3044                           
  3045                           ;main.c: 522:        send_string(secondStr);
  3046  02AB  3024               	movlw	(low (print_Countdown@secondStr| 0))& (0+255)
  3047  02AC  120A  118A  26A0  120A  118A  	fcall	_send_string
  3048  02B1                     i1l1562:	
  3049                           
  3050                           ;main.c: 524:     if(statoSem==1)
  3051  02B1  037B               	decf	print_Countdown@statoSem,w
  3052  02B2  1D03               	btfss	3,2
  3053  02B3  2AB5               	goto	u129_21
  3054  02B4  2AB6               	goto	u129_20
  3055  02B5                     u129_21:	
  3056  02B5  2AD4               	goto	i1l1568
  3057  02B6                     u129_20:	
  3058  02B6                     i1l1564:	
  3059                           
  3060                           ;main.c: 525:     {;main.c: 526:        char secondStr[17] = "Sem 0:    Giallo";
  3061  02B6  3035               	movlw	print_Countdown@secondStr_401& (0+255)
  3062  02B7  0084               	movwf	4
  3063  02B8  30A1               	movlw	low print_Countdown@F929
  3064  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  3065  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  3066  02BB  00A0               	movwf	??_print_Countdown
  3067  02BC  0804               	movf	4,w
  3068  02BD  00A1               	movwf	??_print_Countdown+1
  3069  02BE  3011               	movlw	17
  3070  02BF  00A2               	movwf	??_print_Countdown+2
  3071  02C0                     u130_20:	
  3072  02C0  0820               	movf	??_print_Countdown,w
  3073  02C1  0084               	movwf	4
  3074  02C2  1783               	bsf	3,7	;select IRP bank3
  3075  02C3  0800               	movf	0,w
  3076  02C4  00A3               	movwf	??_print_Countdown+3
  3077  02C5  0AA0               	incf	??_print_Countdown,f
  3078  02C6  0821               	movf	??_print_Countdown+1,w
  3079  02C7  0084               	movwf	4
  3080  02C8  1383               	bcf	3,7	;select IRP bank0
  3081  02C9  0823               	movf	??_print_Countdown+3,w
  3082  02CA  0080               	movwf	0
  3083  02CB  0AA1               	incf	??_print_Countdown+1,f
  3084  02CC  0BA2               	decfsz	??_print_Countdown+2,f
  3085  02CD  2AC0               	goto	u130_20
  3086  02CE                     i1l1566:	
  3087                           
  3088                           ;main.c: 527:        send_string(secondStr);
  3089  02CE  3035               	movlw	(low (print_Countdown@secondStr_401| 0))& (0+255)
  3090  02CF  120A  118A  26A0  120A  118A  	fcall	_send_string
  3091  02D4                     i1l1568:	
  3092                           
  3093                           ;main.c: 529:     if(statoSem==2)
  3094  02D4  3002               	movlw	2
  3095  02D5  067B               	xorwf	print_Countdown@statoSem,w
  3096  02D6  1D03               	btfss	3,2
  3097  02D7  2AD9               	goto	u131_21
  3098  02D8  2ADA               	goto	u131_20
  3099  02D9                     u131_21:	
  3100  02D9  2AF8               	goto	i1l1574
  3101  02DA                     u131_20:	
  3102  02DA                     i1l1570:	
  3103                           
  3104                           ;main.c: 530:     {;main.c: 531:        char secondStr[17] = "Sem 0:     Rosso";
  3105  02DA  3046               	movlw	print_Countdown@secondStr_403& (0+255)
  3106  02DB  0084               	movwf	4
  3107  02DC  3090               	movlw	low print_Countdown@F931
  3108  02DD  1283               	bcf	3,5	;RP0=0, select bank0
  3109  02DE  1303               	bcf	3,6	;RP1=0, select bank0
  3110  02DF  00A0               	movwf	??_print_Countdown
  3111  02E0  0804               	movf	4,w
  3112  02E1  00A1               	movwf	??_print_Countdown+1
  3113  02E2  3011               	movlw	17
  3114  02E3  00A2               	movwf	??_print_Countdown+2
  3115  02E4                     u132_20:	
  3116  02E4  0820               	movf	??_print_Countdown,w
  3117  02E5  0084               	movwf	4
  3118  02E6  1783               	bsf	3,7	;select IRP bank3
  3119  02E7  0800               	movf	0,w
  3120  02E8  00A3               	movwf	??_print_Countdown+3
  3121  02E9  0AA0               	incf	??_print_Countdown,f
  3122  02EA  0821               	movf	??_print_Countdown+1,w
  3123  02EB  0084               	movwf	4
  3124  02EC  1383               	bcf	3,7	;select IRP bank0
  3125  02ED  0823               	movf	??_print_Countdown+3,w
  3126  02EE  0080               	movwf	0
  3127  02EF  0AA1               	incf	??_print_Countdown+1,f
  3128  02F0  0BA2               	decfsz	??_print_Countdown+2,f
  3129  02F1  2AE4               	goto	u132_20
  3130  02F2                     i1l1572:	
  3131                           
  3132                           ;main.c: 532:        send_string(secondStr);
  3133  02F2  3046               	movlw	(low (print_Countdown@secondStr_403| 0))& (0+255)
  3134  02F3  120A  118A  26A0  120A  118A  	fcall	_send_string
  3135  02F8                     i1l1574:	
  3136                           
  3137                           ;main.c: 536:     _delay((unsigned long)((100)*(32000000L/4000.0)));
  3138  02F8  3005               	movlw	5
  3139  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  3140  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  3141  02FB  00A2               	movwf	??_print_Countdown+2
  3142  02FC  300F               	movlw	15
  3143  02FD  00A1               	movwf	??_print_Countdown+1
  3144  02FE  30F0               	movlw	240
  3145  02FF  00A0               	movwf	??_print_Countdown
  3146  0300                     u178_27:	
  3147  0300  0BA0               	decfsz	??_print_Countdown,f
  3148  0301  2B00               	goto	u178_27
  3149  0302  0BA1               	decfsz	??_print_Countdown+1,f
  3150  0303  2B00               	goto	u178_27
  3151  0304  0BA2               	decfsz	??_print_Countdown+2,f
  3152  0305  2B00               	goto	u178_27
  3153  0306  0000               	nop
  3154                           
  3155                           ;main.c: 538:     send_cmd(0x80);
  3156  0307  3080               	movlw	128
  3157  0308  120A  118A  26C1  120A  118A  	fcall	i1_send_cmd
  3158  030D                     i1l1576:	
  3159                           
  3160                           ;main.c: 539:     send_string(firstStr);
  3161  030D  3057               	movlw	(low (print_Countdown@firstStr| 0))& (0+255)
  3162  030E  120A  118A  26A0  120A  118A  	fcall	_send_string
  3163  0313                     i1l220:	
  3164  0313  0008               	return
  3165  0314                     __end_of_print_Countdown:	
  3166                           
  3167                           	psect	text11
  3168  06C1                     __ptext11:	
  3169 ;; *************** function i1_send_cmd *****************
  3170 ;; Defined at:
  3171 ;;		line 569 in file "main.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  command         1    wreg     unsigned char 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;  command         1    2[COMMON] unsigned char 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3185 ;;      Params:         0       0       0       0       0
  3186 ;;      Locals:         1       0       0       0       0
  3187 ;;      Temps:          2       0       0       0       0
  3188 ;;      Totals:         3       0       0       0       0
  3189 ;;Total ram usage:        3 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; This function calls:
  3192 ;;		Nothing
  3193 ;; This function is called by:
  3194 ;;		_print_Countdown
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           
  3199                           ;psect for function i1_send_cmd
  3200  06C1                     i1_send_cmd:	
  3201                           
  3202                           ;incstack = 0
  3203                           ; Regs used in i1_send_cmd: [wreg]
  3204                           ;i1send_cmd@command stored from wreg
  3205  06C1  00F2               	movwf	i1send_cmd@command
  3206  06C2                     i1l1464:	
  3207                           
  3208                           ;main.c: 569: void send_cmd(char command);main.c: 570: {;main.c: 571:     PORTEbits.RE1 
      +                          = 1;
  3209  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  3210  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  3211  06C4  1489               	bsf	9,1	;volatile
  3212  06C5                     i1l1466:	
  3213                           
  3214                           ;main.c: 572:     PORTD = command;
  3215  06C5  0872               	movf	i1send_cmd@command,w
  3216  06C6  0088               	movwf	8	;volatile
  3217  06C7                     i1l1468:	
  3218                           
  3219                           ;main.c: 573:     PORTEbits.RE2 = 0;
  3220  06C7  1109               	bcf	9,2	;volatile
  3221                           
  3222                           ;main.c: 574:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3223  06C8  3020               	movlw	32
  3224  06C9  00F1               	movwf	??i1_send_cmd+1
  3225  06CA  3029               	movlw	41
  3226  06CB  00F0               	movwf	??i1_send_cmd
  3227  06CC                     u179_27:	
  3228  06CC  0BF0               	decfsz	??i1_send_cmd,f
  3229  06CD  2ECC               	goto	u179_27
  3230  06CE  0BF1               	decfsz	??i1_send_cmd+1,f
  3231  06CF  2ECC               	goto	u179_27
  3232  06D0  2ED1               	nop2
  3233  06D1                     i1l1470:	
  3234                           
  3235                           ;main.c: 575:     PORTEbits.RE1 = 0;
  3236  06D1  1283               	bcf	3,5	;RP0=0, select bank0
  3237  06D2  1303               	bcf	3,6	;RP1=0, select bank0
  3238  06D3  1089               	bcf	9,1	;volatile
  3239                           
  3240                           ;main.c: 576:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3241  06D4  3020               	movlw	32
  3242  06D5  00F1               	movwf	??i1_send_cmd+1
  3243  06D6  3029               	movlw	41
  3244  06D7  00F0               	movwf	??i1_send_cmd
  3245  06D8                     u180_27:	
  3246  06D8  0BF0               	decfsz	??i1_send_cmd,f
  3247  06D9  2ED8               	goto	u180_27
  3248  06DA  0BF1               	decfsz	??i1_send_cmd+1,f
  3249  06DB  2ED8               	goto	u180_27
  3250  06DC  2EDD               	nop2
  3251  06DD                     i1l1472:	
  3252                           
  3253                           ;main.c: 577:     PORTEbits.RE1 = 1;
  3254  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  3255  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  3256  06DF  1489               	bsf	9,1	;volatile
  3257  06E0                     i1l232:	
  3258  06E0  0008               	return
  3259  06E1                     __end_ofi1_send_cmd:	
  3260                           
  3261                           	psect	text12
  3262  06A0                     __ptext12:	
  3263 ;; *************** function _send_string *****************
  3264 ;; Defined at:
  3265 ;;		line 546 in file "main.c"
  3266 ;; Parameters:    Size  Location     Type
  3267 ;;  str             1    wreg     PTR unsigned char 
  3268 ;;		 -> print_Countdown@secondStr_403(17), print_Countdown@secondStr_401(17), print_Countdown@secondStr(17), print_Count
      +down@firstStr(17), 
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  str             1    6[COMMON] PTR unsigned char 
  3271 ;;		 -> print_Countdown@secondStr_403(17), print_Countdown@secondStr_401(17), print_Countdown@secondStr(17), print_Count
      +down@firstStr(17), 
  3272 ;;  i               2    4[COMMON] int 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3282 ;;      Params:         0       0       0       0       0
  3283 ;;      Locals:         3       0       0       0       0
  3284 ;;      Temps:          1       0       0       0       0
  3285 ;;      Totals:         4       0       0       0       0
  3286 ;;Total ram usage:        4 bytes
  3287 ;; Hardware stack levels used:    1
  3288 ;; Hardware stack levels required when called:    1
  3289 ;; This function calls:
  3290 ;;		_send_data
  3291 ;; This function is called by:
  3292 ;;		_print_Countdown
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           
  3297                           ;psect for function _send_string
  3298  06A0                     _send_string:	
  3299                           
  3300                           ;incstack = 0
  3301                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3302                           ;send_string@str stored from wreg
  3303  06A0  00F6               	movwf	send_string@str
  3304  06A1                     i1l1334:	
  3305                           
  3306                           ;main.c: 546: void send_string(char *str);main.c: 547: {;main.c: 548:     int i = 0;
  3307  06A1  01F4               	clrf	send_string@i
  3308  06A2  01F5               	clrf	send_string@i+1
  3309                           
  3310                           ;main.c: 549:     while(str[i] != '\0')
  3311  06A3  2EB5               	goto	i1l1340
  3312  06A4                     i1l1336:	
  3313                           
  3314                           ;main.c: 550:     {;main.c: 551:         send_data(str[i]);
  3315  06A4  0874               	movf	send_string@i,w
  3316  06A5  0776               	addwf	send_string@str,w
  3317  06A6  00F3               	movwf	??_send_string
  3318  06A7  0873               	movf	??_send_string,w
  3319  06A8  0084               	movwf	4
  3320  06A9  0800               	movf	0,w
  3321  06AA  120A  118A  26E1  120A  118A  	fcall	_send_data
  3322  06AF                     i1l1338:	
  3323                           
  3324                           ;main.c: 552:         i++;
  3325  06AF  3001               	movlw	1
  3326  06B0  07F4               	addwf	send_string@i,f
  3327  06B1  1803               	skipnc
  3328  06B2  0AF5               	incf	send_string@i+1,f
  3329  06B3  3000               	movlw	0
  3330  06B4  07F5               	addwf	send_string@i+1,f
  3331  06B5                     i1l1340:	
  3332                           
  3333                           ;main.c: 549:     while(str[i] != '\0')
  3334  06B5  0874               	movf	send_string@i,w
  3335  06B6  0776               	addwf	send_string@str,w
  3336  06B7  00F3               	movwf	??_send_string
  3337  06B8  0873               	movf	??_send_string,w
  3338  06B9  0084               	movwf	4
  3339  06BA  1383               	bcf	3,7	;select IRP bank0
  3340  06BB  0800               	movf	0,w
  3341  06BC  1D03               	btfss	3,2
  3342  06BD  2EBF               	goto	u90_21
  3343  06BE  2EC0               	goto	u90_20
  3344  06BF                     u90_21:	
  3345  06BF  2EA4               	goto	i1l1336
  3346  06C0                     u90_20:	
  3347  06C0                     i1l226:	
  3348  06C0  0008               	return
  3349  06C1                     __end_of_send_string:	
  3350                           
  3351                           	psect	text13
  3352  06E1                     __ptext13:	
  3353 ;; *************** function _send_data *****************
  3354 ;; Defined at:
  3355 ;;		line 557 in file "main.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  data            1    wreg     unsigned char 
  3358 ;; Auto vars:     Size  Location     Type
  3359 ;;  data            1    2[COMMON] unsigned char 
  3360 ;; Return value:  Size  Location     Type
  3361 ;;                  1    wreg      void 
  3362 ;; Registers used:
  3363 ;;		wreg
  3364 ;; Tracked objects:
  3365 ;;		On entry : 0/0
  3366 ;;		On exit  : 0/0
  3367 ;;		Unchanged: 0/0
  3368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3369 ;;      Params:         0       0       0       0       0
  3370 ;;      Locals:         1       0       0       0       0
  3371 ;;      Temps:          2       0       0       0       0
  3372 ;;      Totals:         3       0       0       0       0
  3373 ;;Total ram usage:        3 bytes
  3374 ;; Hardware stack levels used:    1
  3375 ;; This function calls:
  3376 ;;		Nothing
  3377 ;; This function is called by:
  3378 ;;		_send_string
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           
  3383                           ;psect for function _send_data
  3384  06E1                     _send_data:	
  3385                           
  3386                           ;incstack = 0
  3387                           ; Regs used in _send_data: [wreg]
  3388                           ;send_data@data stored from wreg
  3389  06E1  00F2               	movwf	send_data@data
  3390  06E2                     i1l1302:	
  3391                           
  3392                           ;main.c: 557: void send_data(char data);main.c: 558: {;main.c: 559:     PORTEbits.RE1 = 
      +                          1;
  3393  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  3394  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  3395  06E4  1489               	bsf	9,1	;volatile
  3396  06E5                     i1l1304:	
  3397                           
  3398                           ;main.c: 560:     PORTD = data;
  3399  06E5  0872               	movf	send_data@data,w
  3400  06E6  0088               	movwf	8	;volatile
  3401  06E7                     i1l1306:	
  3402                           
  3403                           ;main.c: 561:     PORTEbits.RE2 = 1;
  3404  06E7  1509               	bsf	9,2	;volatile
  3405                           
  3406                           ;main.c: 562:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3407  06E8  3020               	movlw	32
  3408  06E9  00F1               	movwf	??_send_data+1
  3409  06EA  3029               	movlw	41
  3410  06EB  00F0               	movwf	??_send_data
  3411  06EC                     u181_27:	
  3412  06EC  0BF0               	decfsz	??_send_data,f
  3413  06ED  2EEC               	goto	u181_27
  3414  06EE  0BF1               	decfsz	??_send_data+1,f
  3415  06EF  2EEC               	goto	u181_27
  3416  06F0  2EF1               	nop2
  3417  06F1                     i1l1308:	
  3418                           
  3419                           ;main.c: 563:     PORTEbits.RE1 = 0;
  3420  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  3421  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  3422  06F3  1089               	bcf	9,1	;volatile
  3423                           
  3424                           ;main.c: 564:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3425  06F4  3020               	movlw	32
  3426  06F5  00F1               	movwf	??_send_data+1
  3427  06F6  3029               	movlw	41
  3428  06F7  00F0               	movwf	??_send_data
  3429  06F8                     u182_27:	
  3430  06F8  0BF0               	decfsz	??_send_data,f
  3431  06F9  2EF8               	goto	u182_27
  3432  06FA  0BF1               	decfsz	??_send_data+1,f
  3433  06FB  2EF8               	goto	u182_27
  3434  06FC  2EFD               	nop2
  3435  06FD                     i1l1310:	
  3436                           
  3437                           ;main.c: 565:     PORTEbits.RE1 = 1;
  3438  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  3439  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  3440  06FF  1489               	bsf	9,1	;volatile
  3441  0700                     i1l229:	
  3442  0700  0008               	return
  3443  0701                     __end_of_send_data:	
  3444                           
  3445                           	psect	text14
  3446  0528                     __ptext14:	
  3447 ;; *************** function ___awmod *****************
  3448 ;; Defined at:
  3449 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  divisor         2    0[COMMON] int 
  3452 ;;  dividend        2    2[COMMON] int 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  sign            1    6[COMMON] unsigned char 
  3455 ;;  counter         1    5[COMMON] unsigned char 
  3456 ;; Return value:  Size  Location     Type
  3457 ;;                  2    0[COMMON] int 
  3458 ;; Registers used:
  3459 ;;		wreg, status,2, status,0
  3460 ;; Tracked objects:
  3461 ;;		On entry : 0/0
  3462 ;;		On exit  : 0/0
  3463 ;;		Unchanged: 0/0
  3464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3465 ;;      Params:         4       0       0       0       0
  3466 ;;      Locals:         2       0       0       0       0
  3467 ;;      Temps:          1       0       0       0       0
  3468 ;;      Totals:         7       0       0       0       0
  3469 ;;Total ram usage:        7 bytes
  3470 ;; Hardware stack levels used:    1
  3471 ;; This function calls:
  3472 ;;		Nothing
  3473 ;; This function is called by:
  3474 ;;		_print_Countdown
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           
  3479                           ;psect for function ___awmod
  3480  0528                     ___awmod:	
  3481  0528                     i1l1426:	
  3482                           ;incstack = 0
  3483                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3484                           
  3485  0528  01F6               	clrf	___awmod@sign
  3486  0529                     i1l1428:	
  3487  0529  1FF3               	btfss	___awmod@dividend+1,7
  3488  052A  2D2C               	goto	u111_21
  3489  052B  2D2D               	goto	u111_20
  3490  052C                     u111_21:	
  3491  052C  2D34               	goto	i1l1434
  3492  052D                     u111_20:	
  3493  052D                     i1l1430:	
  3494  052D  09F2               	comf	___awmod@dividend,f
  3495  052E  09F3               	comf	___awmod@dividend+1,f
  3496  052F  0AF2               	incf	___awmod@dividend,f
  3497  0530  1903               	skipnz
  3498  0531  0AF3               	incf	___awmod@dividend+1,f
  3499  0532                     i1l1432:	
  3500  0532  01F6               	clrf	___awmod@sign
  3501  0533  0AF6               	incf	___awmod@sign,f
  3502  0534                     i1l1434:	
  3503  0534  1FF1               	btfss	___awmod@divisor+1,7
  3504  0535  2D37               	goto	u112_21
  3505  0536  2D38               	goto	u112_20
  3506  0537                     u112_21:	
  3507  0537  2D3D               	goto	i1l1438
  3508  0538                     u112_20:	
  3509  0538                     i1l1436:	
  3510  0538  09F0               	comf	___awmod@divisor,f
  3511  0539  09F1               	comf	___awmod@divisor+1,f
  3512  053A  0AF0               	incf	___awmod@divisor,f
  3513  053B  1903               	skipnz
  3514  053C  0AF1               	incf	___awmod@divisor+1,f
  3515  053D                     i1l1438:	
  3516  053D  0870               	movf	___awmod@divisor,w
  3517  053E  0471               	iorwf	___awmod@divisor+1,w
  3518  053F  1903               	btfsc	3,2
  3519  0540  2D42               	goto	u113_21
  3520  0541  2D43               	goto	u113_20
  3521  0542                     u113_21:	
  3522  0542  2D72               	goto	i1l1456
  3523  0543                     u113_20:	
  3524  0543                     i1l1440:	
  3525  0543  01F5               	clrf	___awmod@counter
  3526  0544  0AF5               	incf	___awmod@counter,f
  3527  0545  2D51               	goto	i1l1446
  3528  0546                     i1l1442:	
  3529  0546  3001               	movlw	1
  3530  0547                     u114_25:	
  3531  0547  1003               	clrc
  3532  0548  0DF0               	rlf	___awmod@divisor,f
  3533  0549  0DF1               	rlf	___awmod@divisor+1,f
  3534  054A  3EFF               	addlw	-1
  3535  054B  1D03               	skipz
  3536  054C  2D47               	goto	u114_25
  3537  054D                     i1l1444:	
  3538  054D  3001               	movlw	1
  3539  054E  00F4               	movwf	??___awmod
  3540  054F  0874               	movf	??___awmod,w
  3541  0550  07F5               	addwf	___awmod@counter,f
  3542  0551                     i1l1446:	
  3543  0551  1FF1               	btfss	___awmod@divisor+1,7
  3544  0552  2D54               	goto	u115_21
  3545  0553  2D55               	goto	u115_20
  3546  0554                     u115_21:	
  3547  0554  2D46               	goto	i1l1442
  3548  0555                     u115_20:	
  3549  0555                     i1l1448:	
  3550  0555  0871               	movf	___awmod@divisor+1,w
  3551  0556  0273               	subwf	___awmod@dividend+1,w
  3552  0557  1D03               	skipz
  3553  0558  2D5B               	goto	u116_25
  3554  0559  0870               	movf	___awmod@divisor,w
  3555  055A  0272               	subwf	___awmod@dividend,w
  3556  055B                     u116_25:	
  3557  055B  1C03               	skipc
  3558  055C  2D5E               	goto	u116_21
  3559  055D  2D5F               	goto	u116_20
  3560  055E                     u116_21:	
  3561  055E  2D65               	goto	i1l1452
  3562  055F                     u116_20:	
  3563  055F                     i1l1450:	
  3564  055F  0870               	movf	___awmod@divisor,w
  3565  0560  02F2               	subwf	___awmod@dividend,f
  3566  0561  0871               	movf	___awmod@divisor+1,w
  3567  0562  1C03               	skipc
  3568  0563  03F3               	decf	___awmod@dividend+1,f
  3569  0564  02F3               	subwf	___awmod@dividend+1,f
  3570  0565                     i1l1452:	
  3571  0565  3001               	movlw	1
  3572  0566                     u117_25:	
  3573  0566  1003               	clrc
  3574  0567  0CF1               	rrf	___awmod@divisor+1,f
  3575  0568  0CF0               	rrf	___awmod@divisor,f
  3576  0569  3EFF               	addlw	-1
  3577  056A  1D03               	skipz
  3578  056B  2D66               	goto	u117_25
  3579  056C                     i1l1454:	
  3580  056C  3001               	movlw	1
  3581  056D  02F5               	subwf	___awmod@counter,f
  3582  056E  1D03               	btfss	3,2
  3583  056F  2D71               	goto	u118_21
  3584  0570  2D72               	goto	u118_20
  3585  0571                     u118_21:	
  3586  0571  2D55               	goto	i1l1448
  3587  0572                     u118_20:	
  3588  0572                     i1l1456:	
  3589  0572  0876               	movf	___awmod@sign,w
  3590  0573  1903               	btfsc	3,2
  3591  0574  2D76               	goto	u119_21
  3592  0575  2D77               	goto	u119_20
  3593  0576                     u119_21:	
  3594  0576  2D7C               	goto	i1l1460
  3595  0577                     u119_20:	
  3596  0577                     i1l1458:	
  3597  0577  09F2               	comf	___awmod@dividend,f
  3598  0578  09F3               	comf	___awmod@dividend+1,f
  3599  0579  0AF2               	incf	___awmod@dividend,f
  3600  057A  1903               	skipnz
  3601  057B  0AF3               	incf	___awmod@dividend+1,f
  3602  057C                     i1l1460:	
  3603  057C  0873               	movf	___awmod@dividend+1,w
  3604  057D  00F1               	movwf	?___awmod+1
  3605  057E  0872               	movf	___awmod@dividend,w
  3606  057F  00F0               	movwf	?___awmod
  3607  0580                     i1l496:	
  3608  0580  0008               	return
  3609  0581                     __end_of___awmod:	
  3610                           
  3611                           	psect	text15
  3612  04C1                     __ptext15:	
  3613 ;; *************** function ___awdiv *****************
  3614 ;; Defined at:
  3615 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  divisor         2    0[COMMON] int 
  3618 ;;  dividend        2    2[COMMON] int 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  quotient        2    7[COMMON] int 
  3621 ;;  sign            1    6[COMMON] unsigned char 
  3622 ;;  counter         1    5[COMMON] unsigned char 
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  2    0[COMMON] int 
  3625 ;; Registers used:
  3626 ;;		wreg, status,2, status,0
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3632 ;;      Params:         4       0       0       0       0
  3633 ;;      Locals:         4       0       0       0       0
  3634 ;;      Temps:          1       0       0       0       0
  3635 ;;      Totals:         9       0       0       0       0
  3636 ;;Total ram usage:        9 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; This function calls:
  3639 ;;		Nothing
  3640 ;; This function is called by:
  3641 ;;		_print_Countdown
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           
  3646                           ;psect for function ___awdiv
  3647  04C1                     ___awdiv:	
  3648  04C1                     i1l1382:	
  3649                           ;incstack = 0
  3650                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3651                           
  3652  04C1  01F6               	clrf	___awdiv@sign
  3653  04C2                     i1l1384:	
  3654  04C2  1FF1               	btfss	___awdiv@divisor+1,7
  3655  04C3  2CC5               	goto	u101_21
  3656  04C4  2CC6               	goto	u101_20
  3657  04C5                     u101_21:	
  3658  04C5  2CCD               	goto	i1l1390
  3659  04C6                     u101_20:	
  3660  04C6                     i1l1386:	
  3661  04C6  09F0               	comf	___awdiv@divisor,f
  3662  04C7  09F1               	comf	___awdiv@divisor+1,f
  3663  04C8  0AF0               	incf	___awdiv@divisor,f
  3664  04C9  1903               	skipnz
  3665  04CA  0AF1               	incf	___awdiv@divisor+1,f
  3666  04CB                     i1l1388:	
  3667  04CB  01F6               	clrf	___awdiv@sign
  3668  04CC  0AF6               	incf	___awdiv@sign,f
  3669  04CD                     i1l1390:	
  3670  04CD  1FF3               	btfss	___awdiv@dividend+1,7
  3671  04CE  2CD0               	goto	u102_21
  3672  04CF  2CD1               	goto	u102_20
  3673  04D0                     u102_21:	
  3674  04D0  2CDA               	goto	i1l1396
  3675  04D1                     u102_20:	
  3676  04D1                     i1l1392:	
  3677  04D1  09F2               	comf	___awdiv@dividend,f
  3678  04D2  09F3               	comf	___awdiv@dividend+1,f
  3679  04D3  0AF2               	incf	___awdiv@dividend,f
  3680  04D4  1903               	skipnz
  3681  04D5  0AF3               	incf	___awdiv@dividend+1,f
  3682  04D6                     i1l1394:	
  3683  04D6  3001               	movlw	1
  3684  04D7  00F4               	movwf	??___awdiv
  3685  04D8  0874               	movf	??___awdiv,w
  3686  04D9  06F6               	xorwf	___awdiv@sign,f
  3687  04DA                     i1l1396:	
  3688  04DA  01F7               	clrf	___awdiv@quotient
  3689  04DB  01F8               	clrf	___awdiv@quotient+1
  3690  04DC                     i1l1398:	
  3691  04DC  0870               	movf	___awdiv@divisor,w
  3692  04DD  0471               	iorwf	___awdiv@divisor+1,w
  3693  04DE  1903               	btfsc	3,2
  3694  04DF  2CE1               	goto	u103_21
  3695  04E0  2CE2               	goto	u103_20
  3696  04E1                     u103_21:	
  3697  04E1  2D19               	goto	i1l1418
  3698  04E2                     u103_20:	
  3699  04E2                     i1l1400:	
  3700  04E2  01F5               	clrf	___awdiv@counter
  3701  04E3  0AF5               	incf	___awdiv@counter,f
  3702  04E4  2CF0               	goto	i1l1406
  3703  04E5                     i1l1402:	
  3704  04E5  3001               	movlw	1
  3705  04E6                     u104_25:	
  3706  04E6  1003               	clrc
  3707  04E7  0DF0               	rlf	___awdiv@divisor,f
  3708  04E8  0DF1               	rlf	___awdiv@divisor+1,f
  3709  04E9  3EFF               	addlw	-1
  3710  04EA  1D03               	skipz
  3711  04EB  2CE6               	goto	u104_25
  3712  04EC                     i1l1404:	
  3713  04EC  3001               	movlw	1
  3714  04ED  00F4               	movwf	??___awdiv
  3715  04EE  0874               	movf	??___awdiv,w
  3716  04EF  07F5               	addwf	___awdiv@counter,f
  3717  04F0                     i1l1406:	
  3718  04F0  1FF1               	btfss	___awdiv@divisor+1,7
  3719  04F1  2CF3               	goto	u105_21
  3720  04F2  2CF4               	goto	u105_20
  3721  04F3                     u105_21:	
  3722  04F3  2CE5               	goto	i1l1402
  3723  04F4                     u105_20:	
  3724  04F4                     i1l1408:	
  3725  04F4  3001               	movlw	1
  3726  04F5                     u106_25:	
  3727  04F5  1003               	clrc
  3728  04F6  0DF7               	rlf	___awdiv@quotient,f
  3729  04F7  0DF8               	rlf	___awdiv@quotient+1,f
  3730  04F8  3EFF               	addlw	-1
  3731  04F9  1D03               	skipz
  3732  04FA  2CF5               	goto	u106_25
  3733  04FB  0871               	movf	___awdiv@divisor+1,w
  3734  04FC  0273               	subwf	___awdiv@dividend+1,w
  3735  04FD  1D03               	skipz
  3736  04FE  2D01               	goto	u107_25
  3737  04FF  0870               	movf	___awdiv@divisor,w
  3738  0500  0272               	subwf	___awdiv@dividend,w
  3739  0501                     u107_25:	
  3740  0501  1C03               	skipc
  3741  0502  2D04               	goto	u107_21
  3742  0503  2D05               	goto	u107_20
  3743  0504                     u107_21:	
  3744  0504  2D0C               	goto	i1l1414
  3745  0505                     u107_20:	
  3746  0505                     i1l1410:	
  3747  0505  0870               	movf	___awdiv@divisor,w
  3748  0506  02F2               	subwf	___awdiv@dividend,f
  3749  0507  0871               	movf	___awdiv@divisor+1,w
  3750  0508  1C03               	skipc
  3751  0509  03F3               	decf	___awdiv@dividend+1,f
  3752  050A  02F3               	subwf	___awdiv@dividend+1,f
  3753  050B                     i1l1412:	
  3754  050B  1477               	bsf	___awdiv@quotient,0
  3755  050C                     i1l1414:	
  3756  050C  3001               	movlw	1
  3757  050D                     u108_25:	
  3758  050D  1003               	clrc
  3759  050E  0CF1               	rrf	___awdiv@divisor+1,f
  3760  050F  0CF0               	rrf	___awdiv@divisor,f
  3761  0510  3EFF               	addlw	-1
  3762  0511  1D03               	skipz
  3763  0512  2D0D               	goto	u108_25
  3764  0513                     i1l1416:	
  3765  0513  3001               	movlw	1
  3766  0514  02F5               	subwf	___awdiv@counter,f
  3767  0515  1D03               	btfss	3,2
  3768  0516  2D18               	goto	u109_21
  3769  0517  2D19               	goto	u109_20
  3770  0518                     u109_21:	
  3771  0518  2CF4               	goto	i1l1408
  3772  0519                     u109_20:	
  3773  0519                     i1l1418:	
  3774  0519  0876               	movf	___awdiv@sign,w
  3775  051A  1903               	btfsc	3,2
  3776  051B  2D1D               	goto	u110_21
  3777  051C  2D1E               	goto	u110_20
  3778  051D                     u110_21:	
  3779  051D  2D23               	goto	i1l1422
  3780  051E                     u110_20:	
  3781  051E                     i1l1420:	
  3782  051E  09F7               	comf	___awdiv@quotient,f
  3783  051F  09F8               	comf	___awdiv@quotient+1,f
  3784  0520  0AF7               	incf	___awdiv@quotient,f
  3785  0521  1903               	skipnz
  3786  0522  0AF8               	incf	___awdiv@quotient+1,f
  3787  0523                     i1l1422:	
  3788  0523  0878               	movf	___awdiv@quotient+1,w
  3789  0524  00F1               	movwf	?___awdiv+1
  3790  0525  0877               	movf	___awdiv@quotient,w
  3791  0526  00F0               	movwf	?___awdiv
  3792  0527                     i1l483:	
  3793  0527  0008               	return
  3794  0528                     __end_of___awdiv:	
  3795  007E                     btemp	set	126	;btemp
  3796  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        77
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     79      80
    BANK1            80     33      67
    BANK3            96      0      68
    BANK2            96      0       0

Pointer List with Targets:

    send_string@str	PTR unsigned char  size(1) Largest target is 17
		 -> print_Countdown@secondStr_403(BANK0[17]), print_Countdown@secondStr_401(BANK0[17]), print_Countdown@secondStr(BANK0[17]), print_Countdown@firstStr(BANK0[17]), 

    Uart_send_string@str	PTR unsigned char  size(1) Largest target is 8
		 -> strToSend(BANK1[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_print_Countdown
    _print_Countdown->___awdiv
    _send_string->_send_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_print_Countdown

Critical Paths under _main in BANK1

    _main->_UART_init
    _messageTransmission->_Uart_send_string
    _Uart_send_string->_UART_TxChar
    _init_lcd->_send_cmd
    _UART_init->___aldiv

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3353
                                             28 BANK1      5     5      0
                          _UART_init
                            _initPic
                           _init_lcd
                _messageTransmission
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _messageTransmission                                  5     2      3    2513
                                             11 BANK1      5     2      3
                   _Uart_send_string
 ---------------------------------------------------------------------------------
 (2) _Uart_send_string                                     3     3      0     145
                                              8 BANK1      3     3      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              7 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             2     2      0      22
                                             10 BANK1      2     2      0
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _send_cmd                                             3     3      0      22
                                              7 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initPic                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            6     4      2     550
                                             22 BANK1      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              7 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  7     7      0    2110
                                              0 BANK1      7     7      0
                    _print_Countdown
 ---------------------------------------------------------------------------------
 (5) _print_Countdown                                     82    79      3    2110
                                              9 COMMON     3     0      3
                                              0 BANK0     79    79      0
                            ___awdiv
                            ___awmod
                        _send_string
                         i1_send_cmd
 ---------------------------------------------------------------------------------
 (6) i1_send_cmd                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _send_string                                          4     4      0     244
                                              3 COMMON     4     4      0
                          _send_data
 ---------------------------------------------------------------------------------
 (7) _send_data                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
   _initPic
   _init_lcd
     _send_cmd
   _messageTransmission
     _Uart_send_string
       _UART_TxChar
   _send_cmd

 _ISR (ROOT)
   _print_Countdown
     ___awdiv
     ___awmod
     _send_string
       _send_data
     i1_send_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      44       9       70.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     21      43       7       83.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E5      12        0.0%
ABS                  0      0      E5       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jul 17 09:28:46 2020

                               _f 00DE                                 pc 0002                       __CFG_CP$OFF 0000  
                    ___awdiv@sign 0076                                fsr 0004      print_Countdown@secondStr_401 0035  
    print_Countdown@secondStr_403 0046               _messageTransmission 067E                       __CFG_LVP$ON 0000  
                             l142 00FB                               l232 067D                               l241 0734  
                             l235 05D7                               l243 0739                               l244 0740  
                             l405 04C0                               l238 0655                               l183 071D  
                             l186 074F                               l178 069F                               l395 0438  
                    __CFG_CPD$OFF 0000                               _ISR 0314                               u910 042B  
                             u911 042A                               u920 043C                               u921 043B  
                             u930 045B                               u931 045A                               u950 046F  
                             u951 046E                               u880 0739                               u945 0460  
                             u881 0738                               u970 048A                               u890 071D  
                             u971 0489                               u891 071C                               u965 0471  
                             u990 04A8                               u991 04A7                               u975 0486  
                             u985 049A                               fsr0 0004                               indf 0000  
                    ___awmod@sign 0076                      __CFG_FOSC$HS 0000         messageTransmission@codice 00AC  
                            ?_ISR 0070         messageTransmission@valore 00AD                              l1300 073A  
                            l1320 067A                              l1312 0659                              l1314 065C  
                            l1330 0711                              l1322 0704                              l1316 0662  
                            l1500 05A8                              l1332 0717                              l1350 0447  
                            l1342 0424                              l1318 066D                              l1510 05CB  
                            l1502 05B3                              l1360 046B                              l1352 044B  
                            l1344 0427                              l1512 05D1                              l1504 05B9  
                            l1328 0705                              l1600 008A                              l1370 0499  
                            l1362 046F                              l1354 0453                              l1346 042B  
                            l1506 05BF                              l1514 0681                              l1602 008F  
                            l1372 04A2                              l1364 0478                              l1356 045B  
                            l1348 043C                              l1508 05C5                              l1516 0699  
                            l1620 00B2                              l1604 0093                              l1366 048A  
                            l1358 045E                              l1374 04A8                              l1630 00D4  
                            l1622 00B9                              l1614 009C                              l1606 0094  
                            l1376 04AD                              l1368 0498                              l1480 061C  
                            l1640 00EF                              l1632 00D7                              l1624 00BE  
                            l1616 00A6                              l1608 0099                              l1378 04B8  
                            l1482 0624                              l1474 0741                              l1490 0581  
                            l1298 0734                              l1650 0106                              l1642 00F2  
                            l1634 00DE                              l1618 00AF                              l1626 00C5  
                            l1484 0652                              l1476 0744                              l1492 0585  
                            l1660 01B5                              l1644 00F6                              l1628 00CB  
                            l1636 00E3                              l1652 010C                              l1580 0064  
                            l1486 0653                              l1478 0746                              l1494 058F  
                            l1670 01D2                              l1662 01C5                              l1654 0111  
                            l1638 00E9                              l1646 00FD                              l1590 007B  
                            l1582 006A                              l1488 0654                              l1496 0592  
                            l1664 01C8                              l1656 019F                              l1648 0102  
                            l1592 007F                              l1584 006E                              l1498 0598  
                            l1658 01A2                              l1666 01C9                              l1594 0080  
                            l1586 0072                              l1578 0049                              l1668 01CE  
                            l1596 0085                              l1588 0076                              l1598 0089  
                            u1000 04AD                              u1001 04AC                              u1200 0635  
                            u1205 0630                              u1400 00CB                              u1401 00CA  
                            u1410 00D4                              u1330 007B                              u1411 00D3  
                            u1331 007A                              u1420 00E3                              u1340 0085  
                            u1421 00E2                              u1341 0084                              u1430 00E9  
                            u1350 008F                              u1431 00E8                              u1351 008E  
                            u1440 00EF                              u1360 0099                              u1441 00EE  
                            u1361 0098                              u1450 00FB                              u1370 00A6  
                            u1451 00FA                              u1371 00A5                              u1460 0102  
                            u1380 00AF                              u1461 0101                              u1381 00AE  
                            u1470 010C                              u1390 00BE                              u1471 010B  
                            u1391 00BD                              u1480 0111                              u1481 0110  
                            u1490 01CE                              u1491 01CD                              u1737 058B  
                            u1747 059E                              u1757 05AE                              u1767 0669  
                            u1777 0676                              _RCIF 0065                              _TMR0 0001  
                            _TXIF 0064              ?_messageTransmission 00AB                      __CFG_WRT$OFF 0000  
                            _main 0049                        i1_send_cmd 06C1                              btemp 007E  
                   __CFG_BOREN$ON 0000                              start 0016                     _statoSemafori 00DB  
                           ??_ISR 00A0                   __end_of___aldiv 04C1                             ?_main 0070  
                 __end_of___awdiv 0528                     __CFG_WDTE$OFF 0000                   __end_of___awmod 0581  
                 ___awdiv@divisor 0070                             i1l220 0313                             i1l232 06E0  
                           i1l226 06C0                 Uart_send_string@i 00AA                             i1l229 0700  
                           i1l165 0399                             i1l157 032B                             i1l158 0348  
                           i1l175 0413                             i1l167 039D                             i1l159 0369  
                           i1l483 0527                             i1l496 0580                   ___awdiv@counter 0075  
                           _RCREG 001A                             _SPBRG 0099                             _PORTD 0008  
                           _TRISA 0085                             _TRISB 0086                             _TRISD 0088  
                           _TRISE 0089                             u90_20 06C0                             u90_21 06BF  
                           _TXREG 0019                             _PicId 00E0                     __CFG_PWRTE$ON 0000  
                  _scattoSemafori 00C8                __size_of_UART_init 003A                   __end_of_initPic 0750  
                           _count 00C5                             _stat1 00CD                             _stat2 00CB  
                           _stat3 00C9                             main@i 00C0             ??_messageTransmission 00AE  
                           pclath 000A                print_Countdown@num 0079                             status 0003  
                           wtemp0 007E                   __initialization 0019                      __end_of_main 01D7  
                          ??_main 00BC                            _ADCON0 001F                            _ADCON1 009F  
                          _ADRESH 001E                            _ADRESL 009E                  ___awdiv@dividend 0072  
                          u101_20 04C6                            u101_21 04C5                            u110_20 051E  
                          u102_20 04D1                            u110_21 051D                            u102_21 04D0  
                          i1l1310 06FD                            i1l1302 06E2                            i1l1400 04E2  
                          u103_20 04E2                            u111_20 052D                            i1l1304 06E5  
                          u103_21 04E1                            u111_21 052C                            i1l1410 0505  
                          i1l1402 04E5                            i1l1306 06E7                            i1l1420 051E  
                          i1l1412 050B                            i1l1404 04EC                            i1l1308 06F1  
                          i1l1340 06B5                            i1l1422 0523                            i1l1414 050C  
                          i1l1406 04F0                            i1l1430 052D                            i1l1334 06A1  
                          i1l1416 0513                            i1l1408 04F4                            i1l1440 0543  
                          u112_20 0538                            i1l1432 0532                            i1l1336 06A4  
                          i1l1520 01EF                            u112_21 0537                            i1l1418 0519  
                          i1l1450 055F                            i1l1442 0546                            i1l1434 0534  
                          i1l1426 0528                            i1l1338 06AF                            i1l1530 0210  
                          i1l1522 01F3                            i1l1460 057C                            i1l1452 0565  
                          i1l1444 054D                            i1l1436 0538                            i1l1428 0529  
                          i1l1540 0246                            i1l1532 0216                            i1l1524 01F5  
                          i1l1700 038A                            u104_25 04E6                            i1l1390 04CD  
                          i1l1382 04C1                            i1l1454 056C                            i1l1446 0551  
                          i1l1438 053D                            i1l1470 06D1                            i1l1550 026E  
                          i1l1542 024E                            i1l1526 0202                            i1l1518 01D7  
                          i1l1710 03A4                            i1l1702 038F                            u105_20 04F4  
                          i1l1392 04D1                            i1l1384 04C2                            i1l1448 0555  
                          i1l1456 0572                            u113_20 0543                            i1l1472 06DD  
                          i1l1464 06C2                            i1l1560 02AB                            i1l1552 0274  
                          i1l1536 021D                            i1l1544 0255                            i1l1528 0209  
                          u121_20 01E1                            i1l1720 03C3                            i1l1712 03A6  
                          i1l1704 0393                            u105_21 04F3                            u113_21 0542  
                          i1l1394 04D6                            i1l1386 04C6                            i1l1458 0577  
                          i1l1466 06C5                            i1l1570 02DA                            i1l1562 02B1  
                          i1l1554 0282                            i1l1546 025B                            i1l1538 0235  
                          i1l1730 03F5                            i1l1722 03C9                            i1l1714 03AA  
                          i1l1396 04DA                            i1l1388 04CB                            i1l1468 06C7  
                          i1l1572 02F2                            i1l1564 02B6                            i1l1556 028E  
                          i1l1548 0260                            i1l1732 03FB                            i1l1724 03D6  
                          i1l1716 03B0                            i1l1708 039E                            i1l1398 04DC  
                          i1l1574 02F8                            i1l1566 02CE                            i1l1558 0293  
                          i1l1734 0406                            i1l1726 03DE                            i1l1718 03B4  
                          i1l1576 030D                            u130_20 02C0                            i1l1568 02D4  
                          u122_20 0202                            i1l1736 040F                            i1l1728 03EE  
                          i1l1680 0337                            i1l1672 0314                            u122_21 0201  
                          i1l1738 0411                            i1l1690 0379                            i1l1682 033E  
                          i1l1674 031A                            i1l1692 037A                            i1l1684 0352  
                          i1l1676 031F                            u106_25 04F5                            u114_25 0547  
                          u122_25 01FE                            i1l1694 037E                            i1l1686 0358  
                          i1l1678 0333                            u107_20 0505                            u115_20 0555  
                          u131_20 02DA                            u123_20 0210                            i1l1696 0383  
                          i1l1688 035F                            u107_21 0504                            u115_21 0554  
                          u131_21 02D9                            u123_21 020F                            i1l1698 0385  
                          u107_25 0501                            u116_20 055F                            u132_20 02E4  
                          u124_20 021C                            u116_21 055E                            u124_21 021B  
                          u108_25 050D                            u116_25 055B                            u109_20 0519  
                          u125_20 0254                            u109_21 0518                            u125_21 0253  
                          u117_25 0566                            u118_20 0572                            u126_20 0282  
                          u150_20 031A                            u118_21 0571                            u126_21 0281  
                          u150_21 0319                            u126_25 027E                            u119_20 0577  
                          u127_20 0293                            u151_20 031F                            u119_21 0576  
                          u127_21 0292                            u151_21 031E                            u128_20 029D  
                          u160_20 0365                            u152_20 0327                            u160_21 0363  
                          u152_21 0325                            u129_20 02B6                            u161_20 0366  
                          u153_20 0328                            _INTCON 000B                            u129_21 02B5  
                          u170_20 03DE                            u162_20 0379                            u154_20 0337  
                          u170_21 03DD                            u162_21 0378                            u154_21 0336  
                          u171_20 03F5                            u163_20 0383                            u155_20 033E  
                          u171_21 03F4                            u163_21 0382                            u155_21 033D  
                          u172_20 03FB                            u164_20 038A                            u156_20 0344  
                          u172_21 03FA                            u164_21 0389                            u156_21 0342  
                          u180_27 06D8                            u165_20 0399                            u157_20 0345  
                          u165_21 0398                            u181_27 06EC                            u166_20 039D  
                          u158_20 0358                            u166_21 039C                            u158_21 0357  
                          u182_27 06F8                            u167_20 03AA                            u159_20 035F  
                    ?_send_string 0070                            u167_21 03A9                            u159_21 035E  
                          u168_20 03C3                            u168_21 03C2                            u169_20 03C9  
                          u169_21 03C8                            u178_27 0300                            u179_27 06CC  
                     ?i1_send_cmd 0070                    send_string@str 0076                      ?_UART_TxChar 0070  
        __size_of_print_Countdown 013D                         ??___aldiv 00AF                 __end_of_UART_init 0656  
                       ??___awdiv 0074                         ??___awmod 0074                  __end_of_init_lcd 05D8  
                ___awdiv@quotient 0077                   ___awmod@divisor 0070                   ___awmod@counter 0075  
             print_Countdown@F923 01C3               print_Countdown@F931 0190               print_Countdown@F927 01B2  
             print_Countdown@F929 01A1                  __end_of_send_cmd 067E                         ??_initPic 00A7  
                    __pdataCOMMON 007D                            saved_w 007E         __size_of_Uart_send_string 001D  
messageTransmission@tipoMessaggio 00AF           __end_of__initialization 0045                    __pcstackCOMMON 0070  
                    __pidataBANK1 0750                      __pidataBANK3 05D8               __size_ofi1_send_cmd 0020  
                      __pbssBANK0 006F                        __pbssBANK1 00C1       messageTransmission@idStrada 00AB  
                      __pmaintext 0049                        _flagGiallo 00C7                        __pintentry 0004  
              __size_of_send_data 0020                 ??_print_Countdown 0020                        _contCamion 00CE  
             Uart_send_string@str 00A9                 main@semaforoVerde 00BF                         ?_init_lcd 0070  
            __size_of_send_string 0021                         ?_send_cmd 0070              __size_of_UART_TxChar 0010  
                         ___aldiv 0424                           ___awdiv 04C1                           ___awmod 0528  
                         __ptext1 067E                           __ptext2 0701                           __ptext3 0731  
                         __ptext4 0581                           __ptext5 0656                           __ptext6 0741  
                         __ptext7 061C                           __ptext8 0424                           __ptext9 0314  
                    __size_of_ISR 0110                           _oldBtn1 006F                           _oldBtn2 00CC  
                         _oldBtn3 00CA                           _initPic 0741                  ___awmod@dividend 0072  
                ___aldiv@dividend 00AB       __end_of_messageTransmission 06A0                           clrloop0 0759  
                _Uart_send_string 0701              end_of_initialization 0045                 __end_of_send_data 0701  
                      ??_init_lcd 00AA                      ??i1_send_cmd 0070          print_Countdown@secondStr 0024  
                      ??_send_cmd 00A7                         _RCSTAbits 0018                  ___aldiv@quotient 00B2  
        print_Countdown@resultNum 0068                     send_data@data 0072                         _PORTBbits 0006  
                       _UART_init 061C                         _PORTEbits 0009                __end_ofi1_send_cmd 06E1  
                       _TRISCbits 0087                 i1send_cmd@command 0072                   _temporizzazione 007C  
                       _TXSTAbits 0098                  print_Countdown@i 006D                     __pidataCOMMON 0760  
                      ?_UART_init 00B6               start_initialization 0019                       __end_of_ISR 0424  
                 _print_Countdown 01D7                        init_fetch0 071E                       __pdataBANK1 00DB  
                     __pdataBANK3 0190                       __pbssCOMMON 007C                         ___latbits 0002  
                   __pcstackBANK0 0020                     __pcstackBANK1 00A0                       _datoSeriale 00D1  
               __size_of_init_lcd 0057                          ?___aldiv 00A7                 __size_of_send_cmd 0028  
                        ?___awdiv 0070                          ?___awmod 0070          __end_of_Uart_send_string 071E  
                     ??_UART_init 00B8                          ?_initPic 0070                         _countDown 007D  
         __end_of_print_Countdown 0314                     ??_send_string 0073           print_Countdown@firstStr 0057  
                 ___aldiv@divisor 00A7                 interrupt_function 0004                   ___aldiv@counter 00B0  
                       clear_ram0 0758                          _PIE1bits 008C                         _send_data 06E1  
                   ??_UART_TxChar 00A7                          _GO_nDONE 00FA                         _numStrade 00E2  
         print_Countdown@statoSem 007B                        _ADCON0bits 001F                         _strToSend 00D3  
    __size_of_messageTransmission 0022                        ?_send_data 0070                      send_string@i 0074  
             __end_of_send_string 06C1                   UART_TxChar@dato 00A7                  __size_of___aldiv 009D  
             __end_of_UART_TxChar 0741                  __size_of___awdiv 0067                  __size_of___awmod 0059  
                __size_of_initPic 000F                          __ptext10 01D7                          __ptext11 06C1  
                        __ptext12 06A0                          __ptext13 06E1                          __ptext14 0528  
                        __ptext15 04C1                          _contAuto 00D0                          _contMoto 00CF  
                ?_print_Countdown 0079                          _init_lcd 0581                     __size_of_main 018E  
                        _received 00D2                          _send_cmd 0656                          _semafori 00C1  
                      _INTCONbits 000B                          init_ram0 0722                   send_cmd@command 00A9  
                        intlevel1 0000                 UART_init@baudrate 00B6                       _send_string 06A0  
                     ??_send_data 0070                       _UART_TxChar 0731             print_Countdown@length 006B  
               ?_Uart_send_string 0070                ??_Uart_send_string 00A8                        _OPTION_REG 0081  
                    ___aldiv@sign 00B1  
