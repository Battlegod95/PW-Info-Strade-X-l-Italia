

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jul 17 09:05:59 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.10
    39                           ; Generated 31/07/2019 GMT
    40                           ; 
    41                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192                           
   193                           	psect	idataCOMMON
   194  075A                     __pidataCOMMON:	
   195                           
   196                           ;initializer for _countDown
   197  075A  3405               	retlw	5
   198                           
   199                           	psect	idataBANK1
   200  074A                     __pidataBANK1:	
   201                           
   202                           ;initializer for _statoSemafori
   203  074A  3400               	retlw	0
   204  074B  3401               	retlw	1
   205  074C  3402               	retlw	2
   206                           
   207                           ;initializer for _f
   208  074D  3403               	retlw	3
   209  074E  3400               	retlw	0
   210                           
   211                           ;initializer for _PicId
   212  074F  34A7               	retlw	167
   213  0750  3400               	retlw	0
   214                           
   215                           ;initializer for _numStrade
   216  0751  3404               	retlw	4
   217                           
   218                           	psect	idataBANK3
   219  05D2                     __pidataBANK3:	
   220                           
   221                           ;initializer for print_Countdown@F931
   222  05D2  3453               	retlw	83
   223  05D3  3465               	retlw	101
   224  05D4  346D               	retlw	109
   225  05D5  3420               	retlw	32
   226  05D6  3430               	retlw	48
   227  05D7  343A               	retlw	58
   228  05D8  3420               	retlw	32
   229  05D9  3420               	retlw	32
   230  05DA  3420               	retlw	32
   231  05DB  3420               	retlw	32
   232  05DC  3420               	retlw	32
   233  05DD  3452               	retlw	82
   234  05DE  346F               	retlw	111
   235  05DF  3473               	retlw	115
   236  05E0  3473               	retlw	115
   237  05E1  346F               	retlw	111
   238  05E2  3400               	retlw	0
   239                           
   240                           ;initializer for print_Countdown@F929
   241  05E3  3453               	retlw	83
   242  05E4  3465               	retlw	101
   243  05E5  346D               	retlw	109
   244  05E6  3420               	retlw	32
   245  05E7  3430               	retlw	48
   246  05E8  343A               	retlw	58
   247  05E9  3420               	retlw	32
   248  05EA  3420               	retlw	32
   249  05EB  3420               	retlw	32
   250  05EC  3420               	retlw	32
   251  05ED  3447               	retlw	71
   252  05EE  3469               	retlw	105
   253  05EF  3461               	retlw	97
   254  05F0  346C               	retlw	108
   255  05F1  346C               	retlw	108
   256  05F2  346F               	retlw	111
   257  05F3  3400               	retlw	0
   258                           
   259                           ;initializer for print_Countdown@F927
   260  05F4  3453               	retlw	83
   261  05F5  3465               	retlw	101
   262  05F6  346D               	retlw	109
   263  05F7  3420               	retlw	32
   264  05F8  3430               	retlw	48
   265  05F9  343A               	retlw	58
   266  05FA  3420               	retlw	32
   267  05FB  3420               	retlw	32
   268  05FC  3420               	retlw	32
   269  05FD  3420               	retlw	32
   270  05FE  3420               	retlw	32
   271  05FF  3456               	retlw	86
   272  0600  3465               	retlw	101
   273  0601  3472               	retlw	114
   274  0602  3464               	retlw	100
   275  0603  3465               	retlw	101
   276  0604  3400               	retlw	0
   277                           
   278                           ;initializer for print_Countdown@F923
   279  0605  3454               	retlw	84
   280  0606  3465               	retlw	101
   281  0607  346D               	retlw	109
   282  0608  3470               	retlw	112
   283  0609  346F               	retlw	111
   284  060A  343A               	retlw	58
   285  060B  3420               	retlw	32
   286  060C  3420               	retlw	32
   287  060D  3420               	retlw	32
   288  060E  3420               	retlw	32
   289  060F  3420               	retlw	32
   290  0610  3420               	retlw	32
   291  0611  3420               	retlw	32
   292  0612  3420               	retlw	32
   293  0613  3420               	retlw	32
   294  0614  3420               	retlw	32
   295  0615  3400               	retlw	0
   296  0019                     _TXREG	set	25
   297  000B                     _INTCONbits	set	11
   298  0018                     _RCSTAbits	set	24
   299  0008                     _PORTD	set	8
   300  0009                     _PORTEbits	set	9
   301  001E                     _ADRESH	set	30
   302  001F                     _ADCON0bits	set	31
   303  001F                     _ADCON0	set	31
   304  0001                     _TMR0	set	1
   305  000B                     _INTCON	set	11
   306  001A                     _RCREG	set	26
   307  0006                     _PORTBbits	set	6
   308  0064                     _TXIF	set	100
   309  00FA                     _GO_nDONE	set	250
   310  0065                     _RCIF	set	101
   311  008C                     _PIE1bits	set	140
   312  0099                     _SPBRG	set	153
   313  0098                     _TXSTAbits	set	152
   314  0087                     _TRISCbits	set	135
   315  009E                     _ADRESL	set	158
   316  009F                     _ADCON1	set	159
   317  0085                     _TRISA	set	133
   318  0081                     _OPTION_REG	set	129
   319  0089                     _TRISE	set	137
   320  0086                     _TRISB	set	134
   321  0088                     _TRISD	set	136
   322                           
   323                           ; #config settings
   324  0000                     
   325                           	psect	cinit
   326  0019                     start_initialization:	
   327  0019                     __initialization:	
   328                           
   329                           ; Initialize objects allocated to BANK3
   330  0019  1783               	bsf	3,7	;select IRP bank2
   331  001A  30D4               	movlw	low (__pdataBANK3+68)
   332  001B  00FD               	movwf	btemp+-1
   333  001C  3005               	movlw	high __pidataBANK3
   334  001D  00FE               	movwf	btemp
   335  001E  30D2               	movlw	low __pidataBANK3
   336  001F  00FF               	movwf	btemp+1
   337  0020  3090               	movlw	low __pdataBANK3
   338  0021  0084               	movwf	4
   339  0022  120A  118A  271C  120A  118A  	fcall	init_ram0
   340                           
   341                           ; Initialize objects allocated to BANK1
   342  0027  1383               	bcf	3,7	;select IRP bank0
   343  0028  30E3               	movlw	low (__pdataBANK1+8)
   344  0029  00FD               	movwf	btemp+-1
   345  002A  3007               	movlw	high __pidataBANK1
   346  002B  00FE               	movwf	btemp
   347  002C  304A               	movlw	low __pidataBANK1
   348  002D  00FF               	movwf	btemp+1
   349  002E  30DB               	movlw	low __pdataBANK1
   350  002F  0084               	movwf	4
   351  0030  120A  118A  271C  120A  118A  	fcall	init_ram0
   352                           
   353                           ; Initialize objects allocated to COMMON
   354  0035  120A  118A  275A  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   355  003A  00FD               	movwf	__pdataCOMMON& (0+127)
   356                           
   357                           ; Clear objects allocated to BANK1
   358  003B  30C1               	movlw	low __pbssBANK1
   359  003C  0084               	movwf	4
   360  003D  30DB               	movlw	low (__pbssBANK1+26)
   361  003E  120A  118A  2752  120A  118A  	fcall	clear_ram0
   362                           
   363                           ; Clear objects allocated to BANK0
   364  0043  01EF               	clrf	__pbssBANK0& (0+127)
   365                           
   366                           ; Clear objects allocated to COMMON
   367  0044  01FC               	clrf	__pbssCOMMON& (0+127)
   368  0045                     end_of_initialization:	
   369                           ;End of C runtime variable initialization code
   370                           
   371  0045                     __end_of__initialization:	
   372  0045  0183               	clrf	3
   373  0046  120A  118A  2849   	ljmp	_main	;jump to C main() function
   374                           
   375                           	psect	bssCOMMON
   376  007C                     __pbssCOMMON:	
   377  007C                     _temporizzazione:	
   378  007C                     	ds	1
   379                           
   380                           	psect	dataCOMMON
   381  007D                     __pdataCOMMON:	
   382  007D                     _countDown:	
   383  007D                     	ds	1
   384                           
   385                           	psect	bssBANK0
   386  006F                     __pbssBANK0:	
   387  006F                     _oldBtn1:	
   388  006F                     	ds	1
   389                           
   390                           	psect	bssBANK1
   391  00C1                     __pbssBANK1:	
   392  00C1                     _semafori:	
   393  00C1                     	ds	4
   394  00C5                     _count:	
   395  00C5                     	ds	2
   396  00C7                     _flagGiallo:	
   397  00C7                     	ds	1
   398  00C8                     _scattoSemafori:	
   399  00C8                     	ds	1
   400  00C9                     _stat3:	
   401  00C9                     	ds	1
   402  00CA                     _oldBtn3:	
   403  00CA                     	ds	1
   404  00CB                     _stat2:	
   405  00CB                     	ds	1
   406  00CC                     _oldBtn2:	
   407  00CC                     	ds	1
   408  00CD                     _stat1:	
   409  00CD                     	ds	1
   410  00CE                     _contCamion:	
   411  00CE                     	ds	1
   412  00CF                     _contMoto:	
   413  00CF                     	ds	1
   414  00D0                     _contAuto:	
   415  00D0                     	ds	1
   416  00D1                     _datoSeriale:	
   417  00D1                     	ds	1
   418  00D2                     _received:	
   419  00D2                     	ds	1
   420  00D3                     _strToSend:	
   421  00D3                     	ds	8
   422                           
   423                           	psect	dataBANK1
   424  00DB                     __pdataBANK1:	
   425  00DB                     _statoSemafori:	
   426  00DB                     	ds	3
   427  00DE                     _f:	
   428  00DE                     	ds	2
   429  00E0                     _PicId:	
   430  00E0                     	ds	2
   431  00E2                     _numStrade:	
   432  00E2                     	ds	1
   433                           
   434                           	psect	dataBANK3
   435  0190                     __pdataBANK3:	
   436  0190                     print_Countdown@F931:	
   437  0190                     	ds	17
   438  01A1                     print_Countdown@F929:	
   439  01A1                     	ds	17
   440  01B2                     print_Countdown@F927:	
   441  01B2                     	ds	17
   442  01C3                     print_Countdown@F923:	
   443  01C3                     	ds	17
   444                           
   445                           	psect	inittext
   446  0718                     init_fetch0:	
   447                           ;	Called with low address in FSR and high address in W
   448                           
   449  0718  087E               	movf	btemp,w
   450  0719  008A               	movwf	10
   451  071A  087F               	movf	btemp+1,w
   452  071B  0082               	movwf	2
   453  071C                     init_ram0:	
   454                           ;Called with:
   455                           ;	high address of idata address in btemp 
   456                           ;	low address of idata address in btemp+1 
   457                           ;	low address of data in FSR
   458                           ;	high address + 1 of data in btemp-1
   459                           
   460  071C  120A  118A  2718  120A  118A  	fcall	init_fetch0
   461  0721  0080               	movwf	0
   462  0722  0A84               	incf	4,f
   463  0723  0804               	movf	4,w
   464  0724  067D               	xorwf	btemp+-1,w
   465  0725  1903               	btfsc	3,2
   466  0726  3400               	retlw	0
   467  0727  0AFF               	incf	btemp+1,f
   468  0728  1903               	btfsc	3,2
   469  0729  0AFE               	incf	btemp,f
   470  072A  2F1C               	goto	init_ram0
   471                           
   472                           	psect	clrtext
   473  0752                     clear_ram0:	
   474                           ;	Called with FSR containing the base address, and
   475                           ;	W with the last address+1
   476                           
   477  0752  0064               	clrwdt	;clear the watchdog before getting into this loop
   478  0753                     clrloop0:	
   479  0753  0180               	clrf	0	;clear RAM location pointed to by FSR
   480  0754  0A84               	incf	4,f	;increment pointer
   481  0755  0604               	xorwf	4,w	;XOR with final address
   482  0756  1903               	btfsc	3,2	;have we reached the end yet?
   483  0757  3400               	retlw	0	;all done for this memory range, return
   484  0758  0604               	xorwf	4,w	;XOR again to restore value
   485  0759  2F53               	goto	clrloop0	;do the next byte
   486                           
   487                           	psect	cstackBANK1
   488  00A0                     __pcstackBANK1:	
   489  00A0                     ??_ISR:	
   490                           
   491                           ; 1 bytes @ 0x0
   492  00A0                     	ds	7
   493  00A7                     ??_initPic:	
   494  00A7                     ??_send_cmd:	
   495                           ; 1 bytes @ 0x7
   496                           
   497  00A7                     ??_UART_TxChar:	
   498                           ; 1 bytes @ 0x7
   499                           
   500  00A7                     ?___aldiv:	
   501                           ; 1 bytes @ 0x7
   502                           
   503  00A7                     UART_TxChar@dato:	
   504                           ; 4 bytes @ 0x7
   505                           
   506  00A7                     ___aldiv@divisor:	
   507                           ; 1 bytes @ 0x7
   508                           
   509                           
   510                           ; 4 bytes @ 0x7
   511  00A7                     	ds	1
   512  00A8                     ??_Uart_send_string:	
   513                           
   514                           ; 1 bytes @ 0x8
   515  00A8                     	ds	1
   516  00A9                     Uart_send_string@str:	
   517  00A9                     send_cmd@command:	
   518                           ; 1 bytes @ 0x9
   519                           
   520                           
   521                           ; 1 bytes @ 0x9
   522  00A9                     	ds	1
   523  00AA                     ??_init_lcd:	
   524  00AA                     Uart_send_string@i:	
   525                           ; 1 bytes @ 0xA
   526                           
   527                           
   528                           ; 1 bytes @ 0xA
   529  00AA                     	ds	1
   530  00AB                     ?_messageTransmission:	
   531  00AB                     messageTransmission@idStrada:	
   532                           ; 1 bytes @ 0xB
   533                           
   534  00AB                     ___aldiv@dividend:	
   535                           ; 1 bytes @ 0xB
   536                           
   537                           
   538                           ; 4 bytes @ 0xB
   539  00AB                     	ds	1
   540  00AC                     messageTransmission@codice:	
   541                           
   542                           ; 1 bytes @ 0xC
   543  00AC                     	ds	1
   544  00AD                     messageTransmission@valore:	
   545                           
   546                           ; 1 bytes @ 0xD
   547  00AD                     	ds	1
   548  00AE                     ??_messageTransmission:	
   549                           
   550                           ; 1 bytes @ 0xE
   551  00AE                     	ds	1
   552  00AF                     ??___aldiv:	
   553  00AF                     messageTransmission@tipoMessaggio:	
   554                           ; 1 bytes @ 0xF
   555                           
   556                           
   557                           ; 1 bytes @ 0xF
   558  00AF                     	ds	1
   559  00B0                     ___aldiv@counter:	
   560                           
   561                           ; 1 bytes @ 0x10
   562  00B0                     	ds	1
   563  00B1                     ___aldiv@sign:	
   564                           
   565                           ; 1 bytes @ 0x11
   566  00B1                     	ds	1
   567  00B2                     ___aldiv@quotient:	
   568                           
   569                           ; 4 bytes @ 0x12
   570  00B2                     	ds	4
   571  00B6                     ?_UART_init:	
   572  00B6                     UART_init@baudrate:	
   573                           ; 1 bytes @ 0x16
   574                           
   575                           
   576                           ; 2 bytes @ 0x16
   577  00B6                     	ds	2
   578  00B8                     ??_UART_init:	
   579                           
   580                           ; 1 bytes @ 0x18
   581  00B8                     	ds	4
   582  00BC                     ??_main:	
   583                           
   584                           ; 1 bytes @ 0x1C
   585  00BC                     	ds	3
   586  00BF                     main@semaforoVerde:	
   587                           
   588                           ; 1 bytes @ 0x1F
   589  00BF                     	ds	1
   590  00C0                     main@i:	
   591                           
   592                           ; 1 bytes @ 0x20
   593  00C0                     	ds	1
   594                           
   595                           	psect	cstackCOMMON
   596  0070                     __pcstackCOMMON:	
   597  0070                     ?_initPic:	
   598  0070                     ?_init_lcd:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_send_cmd:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_Uart_send_string:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_UART_TxChar:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_send_string:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_send_data:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ??_send_data:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_main:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_ISR:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?i1_send_cmd:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ??i1_send_cmd:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?___awdiv:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?___awmod:	
   635                           ; 2 bytes @ 0x0
   636                           
   637  0070                     ___awdiv@divisor:	
   638                           ; 2 bytes @ 0x0
   639                           
   640  0070                     ___awmod@divisor:	
   641                           ; 2 bytes @ 0x0
   642                           
   643                           
   644                           ; 2 bytes @ 0x0
   645  0070                     	ds	2
   646  0072                     send_data@data:	
   647  0072                     i1send_cmd@command:	
   648                           ; 1 bytes @ 0x2
   649                           
   650  0072                     ___awdiv@dividend:	
   651                           ; 1 bytes @ 0x2
   652                           
   653  0072                     ___awmod@dividend:	
   654                           ; 2 bytes @ 0x2
   655                           
   656                           
   657                           ; 2 bytes @ 0x2
   658  0072                     	ds	1
   659  0073                     ??_send_string:	
   660                           
   661                           ; 1 bytes @ 0x3
   662  0073                     	ds	1
   663  0074                     ??___awdiv:	
   664  0074                     ??___awmod:	
   665                           ; 1 bytes @ 0x4
   666                           
   667  0074                     send_string@i:	
   668                           ; 1 bytes @ 0x4
   669                           
   670                           
   671                           ; 2 bytes @ 0x4
   672  0074                     	ds	1
   673  0075                     ___awdiv@counter:	
   674  0075                     ___awmod@counter:	
   675                           ; 1 bytes @ 0x5
   676                           
   677                           
   678                           ; 1 bytes @ 0x5
   679  0075                     	ds	1
   680  0076                     send_string@str:	
   681  0076                     ___awdiv@sign:	
   682                           ; 1 bytes @ 0x6
   683                           
   684  0076                     ___awmod@sign:	
   685                           ; 1 bytes @ 0x6
   686                           
   687                           
   688                           ; 1 bytes @ 0x6
   689  0076                     	ds	1
   690  0077                     ___awdiv@quotient:	
   691                           
   692                           ; 2 bytes @ 0x7
   693  0077                     	ds	2
   694  0079                     ?_print_Countdown:	
   695  0079                     print_Countdown@num:	
   696                           ; 1 bytes @ 0x9
   697                           
   698                           
   699                           ; 2 bytes @ 0x9
   700  0079                     	ds	2
   701  007B                     print_Countdown@statoSem:	
   702                           
   703                           ; 1 bytes @ 0xB
   704  007B                     	ds	1
   705                           
   706                           	psect	cstackBANK0
   707  0020                     __pcstackBANK0:	
   708  0020                     ??_print_Countdown:	
   709                           
   710                           ; 1 bytes @ 0x0
   711  0020                     	ds	4
   712  0024                     print_Countdown@secondStr:	
   713                           
   714                           ; 17 bytes @ 0x4
   715  0024                     	ds	17
   716  0035                     print_Countdown@secondStr_401:	
   717                           
   718                           ; 17 bytes @ 0x15
   719  0035                     	ds	17
   720  0046                     print_Countdown@secondStr_403:	
   721                           
   722                           ; 17 bytes @ 0x26
   723  0046                     	ds	17
   724  0057                     print_Countdown@firstStr:	
   725                           
   726                           ; 17 bytes @ 0x37
   727  0057                     	ds	17
   728  0068                     print_Countdown@resultNum:	
   729                           
   730                           ; 3 bytes @ 0x48
   731  0068                     	ds	3
   732  006B                     print_Countdown@length:	
   733                           
   734                           ; 2 bytes @ 0x4B
   735  006B                     	ds	2
   736  006D                     print_Countdown@i:	
   737                           
   738                           ; 2 bytes @ 0x4D
   739  006D                     	ds	2
   740                           
   741                           	psect	maintext
   742  0049                     __pmaintext:	
   743 ;;
   744 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   745 ;;
   746 ;; *************** function _main *****************
   747 ;; Defined at:
   748 ;;		line 113 in file "main.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  semaforoVerd    1   31[BANK1 ] unsigned char 
   753 ;;  i               1   32[BANK1 ] unsigned char 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : B00/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       0       0       0       0
   764 ;;      Locals:         0       0       2       0       0
   765 ;;      Temps:          0       0       3       0       0
   766 ;;      Totals:         0       0       5       0       0
   767 ;;Total ram usage:        5 bytes
   768 ;; Hardware stack levels required when called:    7
   769 ;; This function calls:
   770 ;;		_UART_init
   771 ;;		_initPic
   772 ;;		_init_lcd
   773 ;;		_messageTransmission
   774 ;;		_send_cmd
   775 ;; This function is called by:
   776 ;;		Startup code after reset
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function _main
   782  0049                     _main:	
   783  0049                     l1574:	
   784                           ;incstack = 0
   785                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   786                           
   787                           
   788                           ;main.c: 115:     initPic();
   789  0049  120A  118A  273B  120A  118A  	fcall	_initPic
   790                           
   791                           ;main.c: 116:     UART_init(9600);
   792  004E  3080               	movlw	128
   793  004F  1683               	bsf	3,5	;RP0=1, select bank1
   794  0050  1303               	bcf	3,6	;RP1=0, select bank1
   795  0051  00B6               	movwf	UART_init@baudrate^(0+128)
   796  0052  3025               	movlw	37
   797  0053  00B7               	movwf	(UART_init@baudrate^(0+128)+1)
   798  0054  120A  118A  2616  120A  118A  	fcall	_UART_init
   799                           
   800                           ;main.c: 117:     init_lcd();
   801  0059  120A  118A  257B  120A  118A  	fcall	_init_lcd
   802                           
   803                           ;main.c: 118:     send_cmd(0x01);
   804  005E  3001               	movlw	1
   805  005F  120A  118A  2650  120A  118A  	fcall	_send_cmd
   806  0064                     l1576:	
   807                           
   808                           ;main.c: 190:     char i;;main.c: 193:     semafori[1]=statoSemafori[2];
   809  0064  1683               	bsf	3,5	;RP0=1, select bank1
   810  0065  1303               	bcf	3,6	;RP1=0, select bank1
   811  0066  085D               	movf	(_statoSemafori^(0+128)+2),w
   812  0067  00BC               	movwf	??_main^(0+128)
   813  0068  083C               	movf	??_main^(0+128),w
   814  0069  00C2               	movwf	(_semafori^(0+128)+1)
   815  006A                     l1578:	
   816                           
   817                           ;main.c: 194:     semafori[2]=statoSemafori[2];
   818  006A  085D               	movf	(_statoSemafori^(0+128)+2),w
   819  006B  00BC               	movwf	??_main^(0+128)
   820  006C  083C               	movf	??_main^(0+128),w
   821  006D  00C3               	movwf	(_semafori^(0+128)+2)
   822  006E                     l1580:	
   823                           
   824                           ;main.c: 195:     semafori[3]=statoSemafori[2];
   825  006E  085D               	movf	(_statoSemafori^(0+128)+2),w
   826  006F  00BC               	movwf	??_main^(0+128)
   827  0070  083C               	movf	??_main^(0+128),w
   828  0071  00C4               	movwf	(_semafori^(0+128)+3)
   829  0072                     l1582:	
   830                           
   831                           ;main.c: 196:     semafori[0]=statoSemafori[0];
   832  0072  085B               	movf	_statoSemafori^(0+128),w
   833  0073  00BC               	movwf	??_main^(0+128)
   834  0074  083C               	movf	??_main^(0+128),w
   835  0075  00C1               	movwf	_semafori^(0+128)
   836  0076                     l1584:	
   837                           
   838                           ;main.c: 200:     {;main.c: 204:         if(stat1)
   839  0076  084D               	movf	_stat1^(0+128),w
   840  0077  1903               	btfsc	3,2
   841  0078  287A               	goto	u1321
   842  0079  287B               	goto	u1320
   843  007A                     u1321:	
   844  007A  2880               	goto	l1590
   845  007B                     u1320:	
   846  007B                     l1586:	
   847                           
   848                           ;main.c: 205:         {;main.c: 206:             contAuto++;
   849  007B  3001               	movlw	1
   850  007C  00BC               	movwf	??_main^(0+128)
   851  007D  083C               	movf	??_main^(0+128),w
   852  007E  07D0               	addwf	_contAuto^(0+128),f
   853  007F                     l1588:	
   854                           
   855                           ;main.c: 207:             stat1=0;
   856  007F  01CD               	clrf	_stat1^(0+128)
   857  0080                     l1590:	
   858                           
   859                           ;main.c: 210:         if(stat2)
   860  0080  084B               	movf	_stat2^(0+128),w
   861  0081  1903               	btfsc	3,2
   862  0082  2884               	goto	u1331
   863  0083  2885               	goto	u1330
   864  0084                     u1331:	
   865  0084  288A               	goto	l1596
   866  0085                     u1330:	
   867  0085                     l1592:	
   868                           
   869                           ;main.c: 211:         {;main.c: 212:             contMoto++;
   870  0085  3001               	movlw	1
   871  0086  00BC               	movwf	??_main^(0+128)
   872  0087  083C               	movf	??_main^(0+128),w
   873  0088  07CF               	addwf	_contMoto^(0+128),f
   874  0089                     l1594:	
   875                           
   876                           ;main.c: 213:             stat2=0;
   877  0089  01CB               	clrf	_stat2^(0+128)
   878  008A                     l1596:	
   879                           
   880                           ;main.c: 215:         if(stat3)
   881  008A  0849               	movf	_stat3^(0+128),w
   882  008B  1903               	btfsc	3,2
   883  008C  288E               	goto	u1341
   884  008D  288F               	goto	u1340
   885  008E                     u1341:	
   886  008E  2894               	goto	l1602
   887  008F                     u1340:	
   888  008F                     l1598:	
   889                           
   890                           ;main.c: 216:         {;main.c: 217:             contCamion++;
   891  008F  3001               	movlw	1
   892  0090  00BC               	movwf	??_main^(0+128)
   893  0091  083C               	movf	??_main^(0+128),w
   894  0092  07CE               	addwf	_contCamion^(0+128),f
   895  0093                     l1600:	
   896                           
   897                           ;main.c: 218:             stat3=0;
   898  0093  01C9               	clrf	_stat3^(0+128)
   899  0094                     l1602:	
   900                           
   901                           ;main.c: 222:         if(scattoSemafori==1)
   902  0094  0348               	decf	_scattoSemafori^(0+128),w
   903  0095  1D03               	btfss	3,2
   904  0096  2898               	goto	u1351
   905  0097  2899               	goto	u1350
   906  0098                     u1351:	
   907  0098  2906               	goto	l1646
   908  0099                     u1350:	
   909  0099                     l1604:	
   910                           
   911                           ;main.c: 223:         {;main.c: 226:             char semaforoVerde=0;
   912  0099  01BF               	clrf	main@semaforoVerde^(0+128)
   913                           
   914                           ;main.c: 227:             for(i=0;i<4;i++)
   915  009A  01C0               	clrf	main@i^(0+128)
   916  009B                     l1610:	
   917                           
   918                           ;main.c: 228:             {;main.c: 230:                 if(semaforoVerde==0)
   919  009B  083F               	movf	main@semaforoVerde^(0+128),w
   920  009C  1D03               	btfss	3,2
   921  009D  289F               	goto	u1361
   922  009E  28A0               	goto	u1360
   923  009F                     u1361:	
   924  009F  28FC               	goto	l1642
   925  00A0                     u1360:	
   926  00A0                     l1612:	
   927                           
   928                           ;main.c: 231:                 {;main.c: 232:                     if(semafori[i]==statoSe
      +                          mafori[0])
   929  00A0  0840               	movf	main@i^(0+128),w
   930  00A1  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   931  00A2  0084               	movwf	4
   932  00A3  1383               	bcf	3,7	;select IRP bank1
   933  00A4  0800               	movf	0,w
   934  00A5  065B               	xorwf	_statoSemafori^(0+128),w
   935  00A6  1D03               	skipz
   936  00A7  28A9               	goto	u1371
   937  00A8  28AA               	goto	u1370
   938  00A9                     u1371:	
   939  00A9  28FC               	goto	l1642
   940  00AA                     u1370:	
   941  00AA                     l1614:	
   942                           
   943                           ;main.c: 233:                     {;main.c: 235:                         if(semafori[i]=
      +                          =statoSemafori[0])
   944  00AA  0840               	movf	main@i^(0+128),w
   945  00AB  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   946  00AC  0084               	movwf	4
   947  00AD  0800               	movf	0,w
   948  00AE  065B               	xorwf	_statoSemafori^(0+128),w
   949  00AF  1D03               	skipz
   950  00B0  28B2               	goto	u1381
   951  00B1  28B3               	goto	u1380
   952  00B2                     u1381:	
   953  00B2  28C9               	goto	l1624
   954  00B3                     u1380:	
   955  00B3                     l1616:	
   956                           
   957                           ;main.c: 236:                         {;main.c: 237:                             flagGia
      +                          llo=1;
   958  00B3  01C7               	clrf	_flagGiallo^(0+128)
   959  00B4  0AC7               	incf	_flagGiallo^(0+128),f
   960                           
   961                           ;main.c: 238:                             while(flagGiallo==1)
   962  00B5  28BD               	goto	l1620
   963  00B6                     l1618:	
   964                           
   965                           ;main.c: 239:                                 semafori[i]=statoSemafori[1];
   966  00B6  085C               	movf	(_statoSemafori^(0+128)+1),w
   967  00B7  00BC               	movwf	??_main^(0+128)
   968  00B8  0840               	movf	main@i^(0+128),w
   969  00B9  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   970  00BA  0084               	movwf	4
   971  00BB  083C               	movf	??_main^(0+128),w
   972  00BC  0080               	movwf	0
   973  00BD                     l1620:	
   974                           
   975                           ;main.c: 238:                             while(flagGiallo==1)
   976  00BD  0347               	decf	_flagGiallo^(0+128),w
   977  00BE  1903               	btfsc	3,2
   978  00BF  28C1               	goto	u1391
   979  00C0  28C2               	goto	u1390
   980  00C1                     u1391:	
   981  00C1  28B6               	goto	l1618
   982  00C2                     u1390:	
   983  00C2                     l1622:	
   984                           
   985                           ;main.c: 241:                             semafori[i]=statoSemafori[2];
   986  00C2  085D               	movf	(_statoSemafori^(0+128)+2),w
   987  00C3  00BC               	movwf	??_main^(0+128)
   988  00C4  0840               	movf	main@i^(0+128),w
   989  00C5  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   990  00C6  0084               	movwf	4
   991  00C7  083C               	movf	??_main^(0+128),w
   992  00C8  0080               	movwf	0
   993  00C9                     l1624:	
   994                           
   995                           ;main.c: 246:                         if(i<3)
   996  00C9  3003               	movlw	3
   997  00CA  0240               	subwf	main@i^(0+128),w
   998  00CB  1803               	skipnc
   999  00CC  28CE               	goto	u1401
  1000  00CD  28CF               	goto	u1400
  1001  00CE                     u1401:	
  1002  00CE  28E8               	goto	l1634
  1003  00CF                     u1400:	
  1004  00CF                     l1626:	
  1005                           
  1006                           ;main.c: 247:                         {;main.c: 250:                             if(sema
      +                          fori[i+1]==statoSemafori[2])
  1007  00CF  0840               	movf	main@i^(0+128),w
  1008  00D0  3EC2               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1009  00D1  0084               	movwf	4
  1010  00D2  0800               	movf	0,w
  1011  00D3  065D               	xorwf	(_statoSemafori^(0+128)+2),w
  1012  00D4  1D03               	skipz
  1013  00D5  28D7               	goto	u1411
  1014  00D6  28D8               	goto	u1410
  1015  00D7                     u1411:	
  1016  00D7  28FA               	goto	l141
  1017  00D8                     u1410:	
  1018  00D8                     l1628:	
  1019                           
  1020                           ;main.c: 251:                             {;main.c: 252:                                
      +                           flagGiallo=1;
  1021  00D8  01C7               	clrf	_flagGiallo^(0+128)
  1022  00D9  0AC7               	incf	_flagGiallo^(0+128),f
  1023                           
  1024                           ;main.c: 253:                                 while(flagGiallo==1)
  1025  00DA  28E2               	goto	l1632
  1026  00DB                     l1630:	
  1027                           
  1028                           ;main.c: 254:                                     semafori[i+1]=statoSemafori[1];
  1029  00DB  085C               	movf	(_statoSemafori^(0+128)+1),w
  1030  00DC  00BC               	movwf	??_main^(0+128)
  1031  00DD  0840               	movf	main@i^(0+128),w
  1032  00DE  3EC2               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1033  00DF  0084               	movwf	4
  1034  00E0  083C               	movf	??_main^(0+128),w
  1035  00E1  0080               	movwf	0
  1036  00E2                     l1632:	
  1037                           
  1038                           ;main.c: 253:                                 while(flagGiallo==1)
  1039  00E2  0347               	decf	_flagGiallo^(0+128),w
  1040  00E3  1903               	btfsc	3,2
  1041  00E4  28E6               	goto	u1421
  1042  00E5  28E7               	goto	u1420
  1043  00E6                     u1421:	
  1044  00E6  28DB               	goto	l1630
  1045  00E7                     u1420:	
  1046  00E7  28FA               	goto	l141
  1047  00E8                     l1634:	
  1048                           
  1049                           ;main.c: 262:                         {;main.c: 263:                             if(sema
      +                          fori[0]==statoSemafori[2])
  1050  00E8  085D               	movf	(_statoSemafori^(0+128)+2),w
  1051  00E9  0641               	xorwf	_semafori^(0+128),w
  1052  00EA  1D03               	skipz
  1053  00EB  28ED               	goto	u1431
  1054  00EC  28EE               	goto	u1430
  1055  00ED                     u1431:	
  1056  00ED  28FA               	goto	l141
  1057  00EE                     u1430:	
  1058  00EE                     l1636:	
  1059                           
  1060                           ;main.c: 264:                             {;main.c: 265:                                
      +                           flagGiallo=1;
  1061  00EE  01C7               	clrf	_flagGiallo^(0+128)
  1062  00EF  0AC7               	incf	_flagGiallo^(0+128),f
  1063                           
  1064                           ;main.c: 266:                                 while(flagGiallo==1)
  1065  00F0  28F5               	goto	l1640
  1066  00F1                     l1638:	
  1067                           
  1068                           ;main.c: 267:                                     semafori[0]=statoSemafori[1];
  1069  00F1  085C               	movf	(_statoSemafori^(0+128)+1),w
  1070  00F2  00BC               	movwf	??_main^(0+128)
  1071  00F3  083C               	movf	??_main^(0+128),w
  1072  00F4  00C1               	movwf	_semafori^(0+128)
  1073  00F5                     l1640:	
  1074                           
  1075                           ;main.c: 266:                                 while(flagGiallo==1)
  1076  00F5  0347               	decf	_flagGiallo^(0+128),w
  1077  00F6  1903               	btfsc	3,2
  1078  00F7  28F9               	goto	u1441
  1079  00F8  28FA               	goto	u1440
  1080  00F9                     u1441:	
  1081  00F9  28F1               	goto	l1638
  1082  00FA                     u1440:	
  1083  00FA                     l141:	
  1084                           ;main.c: 272:                         }
  1085                           
  1086                           
  1087                           ;main.c: 274:                         semaforoVerde=1;
  1088  00FA  01BF               	clrf	main@semaforoVerde^(0+128)
  1089  00FB  0ABF               	incf	main@semaforoVerde^(0+128),f
  1090  00FC                     l1642:	
  1091                           
  1092                           ;main.c: 278:             }
  1093  00FC  3001               	movlw	1
  1094  00FD  00BC               	movwf	??_main^(0+128)
  1095  00FE  083C               	movf	??_main^(0+128),w
  1096  00FF  07C0               	addwf	main@i^(0+128),f
  1097  0100                     l1644:	
  1098  0100  3004               	movlw	4
  1099  0101  0240               	subwf	main@i^(0+128),w
  1100  0102  1C03               	skipc
  1101  0103  2905               	goto	u1451
  1102  0104  2906               	goto	u1450
  1103  0105                     u1451:	
  1104  0105  289B               	goto	l1610
  1105  0106                     u1450:	
  1106  0106                     l1646:	
  1107                           
  1108                           ;main.c: 285:         if(scattoSemafori==1)
  1109  0106  0348               	decf	_scattoSemafori^(0+128),w
  1110  0107  1D03               	btfss	3,2
  1111  0108  290A               	goto	u1461
  1112  0109  290B               	goto	u1460
  1113  010A                     u1461:	
  1114  010A  29C3               	goto	l1660
  1115  010B                     u1460:	
  1116  010B                     l1648:	
  1117                           
  1118                           ;main.c: 286:         {;main.c: 288:             messageTransmission(1, 1, 0, 10);
  1119  010B  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1120  010C  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1121  010D  01AC               	clrf	messageTransmission@codice^(0+128)
  1122  010E  300A               	movlw	10
  1123  010F  00BC               	movwf	??_main^(0+128)
  1124  0110  083C               	movf	??_main^(0+128),w
  1125  0111  00AD               	movwf	messageTransmission@valore^(0+128)
  1126  0112  3001               	movlw	1
  1127  0113  120A  118A  2678  120A  118A  	fcall	_messageTransmission
  1128                           
  1129                           ;main.c: 289:             messageTransmission(1, 2, 1, 60);
  1130  0118  3002               	movlw	2
  1131  0119  1683               	bsf	3,5	;RP0=1, select bank1
  1132  011A  1303               	bcf	3,6	;RP1=0, select bank1
  1133  011B  00BC               	movwf	??_main^(0+128)
  1134  011C  083C               	movf	??_main^(0+128),w
  1135  011D  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1136  011E  01AC               	clrf	messageTransmission@codice^(0+128)
  1137  011F  0AAC               	incf	messageTransmission@codice^(0+128),f
  1138  0120  303C               	movlw	60
  1139  0121  00BD               	movwf	(??_main+1)^(0+128)
  1140  0122  083D               	movf	(??_main+1)^(0+128),w
  1141  0123  00AD               	movwf	messageTransmission@valore^(0+128)
  1142  0124  3001               	movlw	1
  1143  0125  120A  118A  2678  120A  118A  	fcall	_messageTransmission
  1144                           
  1145                           ;main.c: 290:             messageTransmission(1, 4, 2, 1);
  1146  012A  3004               	movlw	4
  1147  012B  1683               	bsf	3,5	;RP0=1, select bank1
  1148  012C  1303               	bcf	3,6	;RP1=0, select bank1
  1149  012D  00BC               	movwf	??_main^(0+128)
  1150  012E  083C               	movf	??_main^(0+128),w
  1151  012F  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1152  0130  3002               	movlw	2
  1153  0131  00BD               	movwf	(??_main+1)^(0+128)
  1154  0132  083D               	movf	(??_main+1)^(0+128),w
  1155  0133  00AC               	movwf	messageTransmission@codice^(0+128)
  1156  0134  01AD               	clrf	messageTransmission@valore^(0+128)
  1157  0135  0AAD               	incf	messageTransmission@valore^(0+128),f
  1158  0136  3001               	movlw	1
  1159  0137  120A  118A  2678  120A  118A  	fcall	_messageTransmission
  1160                           
  1161                           ;main.c: 292:             messageTransmission(2, 0, 3, semafori[0]);
  1162  013C  1683               	bsf	3,5	;RP0=1, select bank1
  1163  013D  1303               	bcf	3,6	;RP1=0, select bank1
  1164  013E  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1165  013F  3003               	movlw	3
  1166  0140  00BC               	movwf	??_main^(0+128)
  1167  0141  083C               	movf	??_main^(0+128),w
  1168  0142  00AC               	movwf	messageTransmission@codice^(0+128)
  1169  0143  0841               	movf	_semafori^(0+128),w
  1170  0144  00BD               	movwf	(??_main+1)^(0+128)
  1171  0145  083D               	movf	(??_main+1)^(0+128),w
  1172  0146  00AD               	movwf	messageTransmission@valore^(0+128)
  1173  0147  3002               	movlw	2
  1174  0148  120A  118A  2678  120A  118A  	fcall	_messageTransmission
  1175                           
  1176                           ;main.c: 293:             messageTransmission(2, 1, 3, semafori[1]);
  1177  014D  1683               	bsf	3,5	;RP0=1, select bank1
  1178  014E  1303               	bcf	3,6	;RP1=0, select bank1
  1179  014F  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1180  0150  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1181  0151  3003               	movlw	3
  1182  0152  00BC               	movwf	??_main^(0+128)
  1183  0153  083C               	movf	??_main^(0+128),w
  1184  0154  00AC               	movwf	messageTransmission@codice^(0+128)
  1185  0155  0842               	movf	(_semafori^(0+128)+1),w
  1186  0156  00BD               	movwf	(??_main+1)^(0+128)
  1187  0157  083D               	movf	(??_main+1)^(0+128),w
  1188  0158  00AD               	movwf	messageTransmission@valore^(0+128)
  1189  0159  3002               	movlw	2
  1190  015A  120A  118A  2678  120A  118A  	fcall	_messageTransmission
  1191                           
  1192                           ;main.c: 294:             messageTransmission(2, 2, 3, semafori[2]);
  1193  015F  3002               	movlw	2
  1194  0160  1683               	bsf	3,5	;RP0=1, select bank1
  1195  0161  1303               	bcf	3,6	;RP1=0, select bank1
  1196  0162  00BC               	movwf	??_main^(0+128)
  1197  0163  083C               	movf	??_main^(0+128),w
  1198  0164  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1199  0165  3003               	movlw	3
  1200  0166  00BD               	movwf	(??_main+1)^(0+128)
  1201  0167  083D               	movf	(??_main+1)^(0+128),w
  1202  0168  00AC               	movwf	messageTransmission@codice^(0+128)
  1203  0169  0843               	movf	(_semafori^(0+128)+2),w
  1204  016A  00BE               	movwf	(??_main+2)^(0+128)
  1205  016B  083E               	movf	(??_main+2)^(0+128),w
  1206  016C  00AD               	movwf	messageTransmission@valore^(0+128)
  1207  016D  3002               	movlw	2
  1208  016E  120A  118A  2678  120A  118A  	fcall	_messageTransmission
  1209                           
  1210                           ;main.c: 295:             messageTransmission(2, 3, 3, semafori[3]);
  1211  0173  3003               	movlw	3
  1212  0174  1683               	bsf	3,5	;RP0=1, select bank1
  1213  0175  1303               	bcf	3,6	;RP1=0, select bank1
  1214  0176  00BC               	movwf	??_main^(0+128)
  1215  0177  083C               	movf	??_main^(0+128),w
  1216  0178  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1217  0179  3003               	movlw	3
  1218  017A  00BD               	movwf	(??_main+1)^(0+128)
  1219  017B  083D               	movf	(??_main+1)^(0+128),w
  1220  017C  00AC               	movwf	messageTransmission@codice^(0+128)
  1221  017D  0844               	movf	(_semafori^(0+128)+3),w
  1222  017E  00BE               	movwf	(??_main+2)^(0+128)
  1223  017F  083E               	movf	(??_main+2)^(0+128),w
  1224  0180  00AD               	movwf	messageTransmission@valore^(0+128)
  1225  0181  3002               	movlw	2
  1226  0182  120A  118A  2678  120A  118A  	fcall	_messageTransmission
  1227                           
  1228                           ;main.c: 297:             messageTransmission(2, 1, 4, contMoto);
  1229  0187  1683               	bsf	3,5	;RP0=1, select bank1
  1230  0188  1303               	bcf	3,6	;RP1=0, select bank1
  1231  0189  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1232  018A  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1233  018B  3004               	movlw	4
  1234  018C  00BC               	movwf	??_main^(0+128)
  1235  018D  083C               	movf	??_main^(0+128),w
  1236  018E  00AC               	movwf	messageTransmission@codice^(0+128)
  1237  018F  084F               	movf	_contMoto^(0+128),w
  1238  0190  00BD               	movwf	(??_main+1)^(0+128)
  1239  0191  083D               	movf	(??_main+1)^(0+128),w
  1240  0192  00AD               	movwf	messageTransmission@valore^(0+128)
  1241  0193  3002               	movlw	2
  1242  0194  120A  118A  2678  120A  118A  	fcall	_messageTransmission
  1243  0199                     l1650:	
  1244                           
  1245                           ;main.c: 298:             contMoto=0;
  1246  0199  1683               	bsf	3,5	;RP0=1, select bank1
  1247  019A  1303               	bcf	3,6	;RP1=0, select bank1
  1248  019B  01CF               	clrf	_contMoto^(0+128)
  1249  019C                     l1652:	
  1250                           
  1251                           ;main.c: 299:             messageTransmission(2, 1, 5, contAuto);
  1252  019C  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1253  019D  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1254  019E  3005               	movlw	5
  1255  019F  00BC               	movwf	??_main^(0+128)
  1256  01A0  083C               	movf	??_main^(0+128),w
  1257  01A1  00AC               	movwf	messageTransmission@codice^(0+128)
  1258  01A2  0850               	movf	_contAuto^(0+128),w
  1259  01A3  00BD               	movwf	(??_main+1)^(0+128)
  1260  01A4  083D               	movf	(??_main+1)^(0+128),w
  1261  01A5  00AD               	movwf	messageTransmission@valore^(0+128)
  1262  01A6  3002               	movlw	2
  1263  01A7  120A  118A  2678  120A  118A  	fcall	_messageTransmission
  1264                           
  1265                           ;main.c: 300:             contAuto=0;
  1266  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  1267  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  1268  01AE  01D0               	clrf	_contAuto^(0+128)
  1269  01AF                     l1654:	
  1270                           
  1271                           ;main.c: 301:             messageTransmission(2, 1, 6, contCamion);
  1272  01AF  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1273  01B0  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1274  01B1  3006               	movlw	6
  1275  01B2  00BC               	movwf	??_main^(0+128)
  1276  01B3  083C               	movf	??_main^(0+128),w
  1277  01B4  00AC               	movwf	messageTransmission@codice^(0+128)
  1278  01B5  084E               	movf	_contCamion^(0+128),w
  1279  01B6  00BD               	movwf	(??_main+1)^(0+128)
  1280  01B7  083D               	movf	(??_main+1)^(0+128),w
  1281  01B8  00AD               	movwf	messageTransmission@valore^(0+128)
  1282  01B9  3002               	movlw	2
  1283  01BA  120A  118A  2678  120A  118A  	fcall	_messageTransmission
  1284  01BF                     l1656:	
  1285                           
  1286                           ;main.c: 302:             contCamion=0;
  1287  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  1288  01C0  1303               	bcf	3,6	;RP1=0, select bank1
  1289  01C1  01CE               	clrf	_contCamion^(0+128)
  1290  01C2                     l1658:	
  1291                           
  1292                           ;main.c: 303:             scattoSemafori=0;
  1293  01C2  01C8               	clrf	_scattoSemafori^(0+128)
  1294  01C3                     l1660:	
  1295                           
  1296                           ;main.c: 308:         if(received)
  1297  01C3  0852               	movf	_received^(0+128),w
  1298  01C4  1903               	btfsc	3,2
  1299  01C5  29C7               	goto	u1471
  1300  01C6  29C8               	goto	u1470
  1301  01C7                     u1471:	
  1302  01C7  2876               	goto	l1584
  1303  01C8                     u1470:	
  1304  01C8                     l1662:	
  1305                           
  1306                           ;main.c: 309:         {;main.c: 311:             temporizzazione=datoSeriale;
  1307  01C8  0851               	movf	_datoSeriale^(0+128),w
  1308  01C9  00BC               	movwf	??_main^(0+128)
  1309  01CA  083C               	movf	??_main^(0+128),w
  1310  01CB  00FC               	movwf	_temporizzazione
  1311  01CC                     l1664:	
  1312                           
  1313                           ;main.c: 315:             received=0;
  1314  01CC  01D2               	clrf	_received^(0+128)
  1315  01CD  2876               	goto	l1584
  1316  01CE  120A  118A  2816   	ljmp	start
  1317  01D1                     __end_of_main:	
  1318                           
  1319                           	psect	text1
  1320  0678                     __ptext1:	
  1321 ;; *************** function _messageTransmission *****************
  1322 ;; Defined at:
  1323 ;;		line 423 in file "main.c"
  1324 ;; Parameters:    Size  Location     Type
  1325 ;;  tipoMessaggi    1    wreg     unsigned char 
  1326 ;;  idStrada        1   11[BANK1 ] unsigned char 
  1327 ;;  codice          1   12[BANK1 ] unsigned char 
  1328 ;;  valore          1   13[BANK1 ] unsigned char 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;  tipoMessaggi    1   15[BANK1 ] unsigned char 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1340 ;;      Params:         0       0       3       0       0
  1341 ;;      Locals:         0       0       1       0       0
  1342 ;;      Temps:          0       0       1       0       0
  1343 ;;      Totals:         0       0       5       0       0
  1344 ;;Total ram usage:        5 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; Hardware stack levels required when called:    6
  1347 ;; This function calls:
  1348 ;;		_Uart_send_string
  1349 ;; This function is called by:
  1350 ;;		_main
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           
  1355                           ;psect for function _messageTransmission
  1356  0678                     _messageTransmission:	
  1357                           
  1358                           ;incstack = 0
  1359                           ; Regs used in _messageTransmission: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1360                           ;messageTransmission@tipoMessaggio stored from wreg
  1361  0678  1683               	bsf	3,5	;RP0=1, select bank1
  1362  0679  1303               	bcf	3,6	;RP1=0, select bank1
  1363  067A  00AF               	movwf	messageTransmission@tipoMessaggio^(0+128)
  1364  067B                     l1510:	
  1365                           
  1366                           ;main.c: 423: void messageTransmission(char tipoMessaggio, char idStrada, char codice, c
      +                          har valore);main.c: 424: {;main.c: 425:     strToSend[0]=tipoMessaggio;
  1367  067B  082F               	movf	messageTransmission@tipoMessaggio^(0+128),w
  1368  067C  00AE               	movwf	??_messageTransmission^(0+128)
  1369  067D  082E               	movf	??_messageTransmission^(0+128),w
  1370  067E  00D3               	movwf	_strToSend^(0+128)
  1371                           
  1372                           ;main.c: 426:     strToSend[1]=200;
  1373  067F  30C8               	movlw	200
  1374  0680  00AE               	movwf	??_messageTransmission^(0+128)
  1375  0681  082E               	movf	??_messageTransmission^(0+128),w
  1376  0682  00D4               	movwf	(_strToSend^(0+128)+1)
  1377                           
  1378                           ;main.c: 427:     strToSend[2]=4;
  1379  0683  3004               	movlw	4
  1380  0684  00AE               	movwf	??_messageTransmission^(0+128)
  1381  0685  082E               	movf	??_messageTransmission^(0+128),w
  1382  0686  00D5               	movwf	(_strToSend^(0+128)+2)
  1383                           
  1384                           ;main.c: 428:     strToSend[3]=idStrada;
  1385  0687  082B               	movf	messageTransmission@idStrada^(0+128),w
  1386  0688  00AE               	movwf	??_messageTransmission^(0+128)
  1387  0689  082E               	movf	??_messageTransmission^(0+128),w
  1388  068A  00D6               	movwf	(_strToSend^(0+128)+3)
  1389                           
  1390                           ;main.c: 429:     strToSend[4]=codice;
  1391  068B  082C               	movf	messageTransmission@codice^(0+128),w
  1392  068C  00AE               	movwf	??_messageTransmission^(0+128)
  1393  068D  082E               	movf	??_messageTransmission^(0+128),w
  1394  068E  00D7               	movwf	(_strToSend^(0+128)+4)
  1395                           
  1396                           ;main.c: 430:     strToSend[5]=valore;
  1397  068F  082D               	movf	messageTransmission@valore^(0+128),w
  1398  0690  00AE               	movwf	??_messageTransmission^(0+128)
  1399  0691  082E               	movf	??_messageTransmission^(0+128),w
  1400  0692  00D8               	movwf	(_strToSend^(0+128)+5)
  1401  0693                     l1512:	
  1402                           
  1403                           ;main.c: 431:     Uart_send_string(strToSend);
  1404  0693  30D3               	movlw	(low (_strToSend| 0))& (0+255)
  1405  0694  120A  118A  26FB  120A  118A  	fcall	_Uart_send_string
  1406  0699                     l176:	
  1407  0699  0008               	return
  1408  069A                     __end_of_messageTransmission:	
  1409                           
  1410                           	psect	text2
  1411  06FB                     __ptext2:	
  1412 ;; *************** function _Uart_send_string *****************
  1413 ;; Defined at:
  1414 ;;		line 435 in file "main.c"
  1415 ;; Parameters:    Size  Location     Type
  1416 ;;  str             1    wreg     PTR unsigned char 
  1417 ;;		 -> strToSend(8), 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  str             1    9[BANK1 ] PTR unsigned char 
  1420 ;;		 -> strToSend(8), 
  1421 ;;  i               1   10[BANK1 ] unsigned char 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1431 ;;      Params:         0       0       0       0       0
  1432 ;;      Locals:         0       0       2       0       0
  1433 ;;      Temps:          0       0       1       0       0
  1434 ;;      Totals:         0       0       3       0       0
  1435 ;;Total ram usage:        3 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    5
  1438 ;; This function calls:
  1439 ;;		_UART_TxChar
  1440 ;; This function is called by:
  1441 ;;		_messageTransmission
  1442 ;; This function uses a non-reentrant model
  1443 ;;
  1444                           
  1445                           
  1446                           ;psect for function _Uart_send_string
  1447  06FB                     _Uart_send_string:	
  1448                           
  1449                           ;incstack = 0
  1450                           ; Regs used in _Uart_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1451                           ;Uart_send_string@str stored from wreg
  1452  06FB  1683               	bsf	3,5	;RP0=1, select bank1
  1453  06FC  1303               	bcf	3,6	;RP1=0, select bank1
  1454  06FD  00A9               	movwf	Uart_send_string@str^(0+128)
  1455  06FE                     l1318:	
  1456                           
  1457                           ;main.c: 435: void Uart_send_string(char *str);main.c: 436: {;main.c: 437:     char i;;m
      +                          ain.c: 438:     for(i=0;i<6;i++)
  1458  06FE  01AA               	clrf	Uart_send_string@i^(0+128)
  1459  06FF                     l1324:	
  1460                           
  1461                           ;main.c: 439:     {;main.c: 440:         UART_TxChar(*(str+i));
  1462  06FF  082A               	movf	Uart_send_string@i^(0+128),w
  1463  0700  0729               	addwf	Uart_send_string@str^(0+128),w
  1464  0701  00A8               	movwf	??_Uart_send_string^(0+128)
  1465  0702  0828               	movf	??_Uart_send_string^(0+128),w
  1466  0703  0084               	movwf	4
  1467  0704  1383               	bcf	3,7	;select IRP bank0
  1468  0705  0800               	movf	0,w
  1469  0706  120A  118A  272B  120A  118A  	fcall	_UART_TxChar
  1470  070B                     l1326:	
  1471                           
  1472                           ;main.c: 441:     }
  1473  070B  3001               	movlw	1
  1474  070C  1683               	bsf	3,5	;RP0=1, select bank1
  1475  070D  1303               	bcf	3,6	;RP1=0, select bank1
  1476  070E  00A8               	movwf	??_Uart_send_string^(0+128)
  1477  070F  0828               	movf	??_Uart_send_string^(0+128),w
  1478  0710  07AA               	addwf	Uart_send_string@i^(0+128),f
  1479  0711                     l1328:	
  1480  0711  3006               	movlw	6
  1481  0712  022A               	subwf	Uart_send_string@i^(0+128),w
  1482  0713  1C03               	skipc
  1483  0714  2F16               	goto	u881
  1484  0715  2F17               	goto	u880
  1485  0716                     u881:	
  1486  0716  2EFF               	goto	l1324
  1487  0717                     u880:	
  1488  0717                     l181:	
  1489  0717  0008               	return
  1490  0718                     __end_of_Uart_send_string:	
  1491                           
  1492                           	psect	text3
  1493  072B                     __ptext3:	
  1494 ;; *************** function _UART_TxChar *****************
  1495 ;; Defined at:
  1496 ;;		line 604 in file "main.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;  dato            1    wreg     unsigned char 
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;  dato            1    7[BANK1 ] unsigned char 
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1510 ;;      Params:         0       0       0       0       0
  1511 ;;      Locals:         0       0       1       0       0
  1512 ;;      Temps:          0       0       0       0       0
  1513 ;;      Totals:         0       0       1       0       0
  1514 ;;Total ram usage:        1 bytes
  1515 ;; Hardware stack levels used:    1
  1516 ;; Hardware stack levels required when called:    4
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_Uart_send_string
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function _UART_TxChar
  1526  072B                     _UART_TxChar:	
  1527                           
  1528                           ;incstack = 0
  1529                           ; Regs used in _UART_TxChar: [wreg]
  1530                           ;UART_TxChar@dato stored from wreg
  1531  072B  1683               	bsf	3,5	;RP0=1, select bank1
  1532  072C  1303               	bcf	3,6	;RP1=0, select bank1
  1533  072D  00A7               	movwf	UART_TxChar@dato^(0+128)
  1534  072E                     l1294:	
  1535  072E                     l239:	
  1536                           ;main.c: 604: void UART_TxChar(char dato);main.c: 605: {;main.c: 606:     while (!TXIF);
  1537                           
  1538  072E  1283               	bcf	3,5	;RP0=0, select bank0
  1539  072F  1E0C               	btfss	12,4	;volatile
  1540  0730  2F32               	goto	u871
  1541  0731  2F33               	goto	u870
  1542  0732                     u871:	
  1543  0732  2F2E               	goto	l239
  1544  0733                     u870:	
  1545  0733                     l241:	
  1546                           
  1547                           ;main.c: 607:     TXIF = 0;
  1548  0733  120C               	bcf	12,4	;volatile
  1549  0734                     l1296:	
  1550                           
  1551                           ;main.c: 608:     TXREG = dato;
  1552  0734  1683               	bsf	3,5	;RP0=1, select bank1
  1553  0735  1303               	bcf	3,6	;RP1=0, select bank1
  1554  0736  0827               	movf	UART_TxChar@dato^(0+128),w
  1555  0737  1283               	bcf	3,5	;RP0=0, select bank0
  1556  0738  1303               	bcf	3,6	;RP1=0, select bank0
  1557  0739  0099               	movwf	25	;volatile
  1558  073A                     l242:	
  1559  073A  0008               	return
  1560  073B                     __end_of_UART_TxChar:	
  1561                           
  1562                           	psect	text4
  1563  057B                     __ptext4:	
  1564 ;; *************** function _init_lcd *****************
  1565 ;; Defined at:
  1566 ;;		line 571 in file "main.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;		None
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0, pclath, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1580 ;;      Params:         0       0       0       0       0
  1581 ;;      Locals:         0       0       0       0       0
  1582 ;;      Temps:          0       0       2       0       0
  1583 ;;      Totals:         0       0       2       0       0
  1584 ;;Total ram usage:        2 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    5
  1587 ;; This function calls:
  1588 ;;		_send_cmd
  1589 ;; This function is called by:
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           
  1595                           ;psect for function _init_lcd
  1596  057B                     _init_lcd:	
  1597  057B                     l1486:	
  1598                           ;incstack = 0
  1599                           ; Regs used in _init_lcd: [wreg+status,2+status,0+pclath+cstack]
  1600                           
  1601                           
  1602                           ;main.c: 573:     PORTEbits.RE2 = 0;
  1603  057B  1283               	bcf	3,5	;RP0=0, select bank0
  1604  057C  1303               	bcf	3,6	;RP1=0, select bank0
  1605  057D  1109               	bcf	9,2	;volatile
  1606                           
  1607                           ;main.c: 574:     PORTEbits.RE1 = 0;
  1608  057E  1089               	bcf	9,1	;volatile
  1609  057F                     l1488:	
  1610                           
  1611                           ;main.c: 575:     _delay((unsigned long)((20)*(32000000L/4000.0)));
  1612  057F  30D0               	movlw	208
  1613  0580  1683               	bsf	3,5	;RP0=1, select bank1
  1614  0581  1303               	bcf	3,6	;RP1=0, select bank1
  1615  0582  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1616  0583  30C9               	movlw	201
  1617  0584  00AA               	movwf	??_init_lcd^(0+128)
  1618  0585                     u1717:	
  1619  0585  0BAA               	decfsz	??_init_lcd^(0+128),f
  1620  0586  2D85               	goto	u1717
  1621  0587  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1622  0588  2D85               	goto	u1717
  1623  0589                     l1490:	
  1624                           
  1625                           ;main.c: 576:     PORTEbits.RE1 = 1;
  1626  0589  1283               	bcf	3,5	;RP0=0, select bank0
  1627  058A  1303               	bcf	3,6	;RP1=0, select bank0
  1628  058B  1489               	bsf	9,1	;volatile
  1629  058C                     l1492:	
  1630                           
  1631                           ;main.c: 577:     send_cmd(0x38);
  1632  058C  3038               	movlw	56
  1633  058D  120A  118A  2650  120A  118A  	fcall	_send_cmd
  1634  0592                     l1494:	
  1635                           
  1636                           ;main.c: 578:     _delay((unsigned long)((5)*(32000000L/4000.0)));
  1637  0592  3034               	movlw	52
  1638  0593  1683               	bsf	3,5	;RP0=1, select bank1
  1639  0594  1303               	bcf	3,6	;RP1=0, select bank1
  1640  0595  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1641  0596  30F1               	movlw	241
  1642  0597  00AA               	movwf	??_init_lcd^(0+128)
  1643  0598                     u1727:	
  1644  0598  0BAA               	decfsz	??_init_lcd^(0+128),f
  1645  0599  2D98               	goto	u1727
  1646  059A  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1647  059B  2D98               	goto	u1727
  1648                           
  1649                           ;main.c: 579:     send_cmd(0x38);
  1650  059C  3038               	movlw	56
  1651  059D  120A  118A  2650  120A  118A  	fcall	_send_cmd
  1652  05A2                     l1496:	
  1653                           
  1654                           ;main.c: 580:     _delay((unsigned long)((1)*(32000000L/4000.0)));
  1655  05A2  300B               	movlw	11
  1656  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  1657  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  1658  05A5  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1659  05A6  3061               	movlw	97
  1660  05A7  00AA               	movwf	??_init_lcd^(0+128)
  1661  05A8                     u1737:	
  1662  05A8  0BAA               	decfsz	??_init_lcd^(0+128),f
  1663  05A9  2DA8               	goto	u1737
  1664  05AA  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1665  05AB  2DA8               	goto	u1737
  1666  05AC  2DAD               	nop2
  1667  05AD                     l1498:	
  1668                           
  1669                           ;main.c: 581:     send_cmd(0x38);
  1670  05AD  3038               	movlw	56
  1671  05AE  120A  118A  2650  120A  118A  	fcall	_send_cmd
  1672  05B3                     l1500:	
  1673                           
  1674                           ;main.c: 582:     send_cmd(0x08);
  1675  05B3  3008               	movlw	8
  1676  05B4  120A  118A  2650  120A  118A  	fcall	_send_cmd
  1677  05B9                     l1502:	
  1678                           
  1679                           ;main.c: 583:     send_cmd(0x0F);
  1680  05B9  300F               	movlw	15
  1681  05BA  120A  118A  2650  120A  118A  	fcall	_send_cmd
  1682  05BF                     l1504:	
  1683                           
  1684                           ;main.c: 584:     send_cmd(0x01);
  1685  05BF  3001               	movlw	1
  1686  05C0  120A  118A  2650  120A  118A  	fcall	_send_cmd
  1687  05C5                     l1506:	
  1688                           
  1689                           ;main.c: 585:     send_cmd(0x0C);
  1690  05C5  300C               	movlw	12
  1691  05C6  120A  118A  2650  120A  118A  	fcall	_send_cmd
  1692  05CB                     l1508:	
  1693                           
  1694                           ;main.c: 586:     send_cmd(0x80);
  1695  05CB  3080               	movlw	128
  1696  05CC  120A  118A  2650  120A  118A  	fcall	_send_cmd
  1697  05D1                     l233:	
  1698  05D1  0008               	return
  1699  05D2                     __end_of_init_lcd:	
  1700                           
  1701                           	psect	text5
  1702  0650                     __ptext5:	
  1703 ;; *************** function _send_cmd *****************
  1704 ;; Defined at:
  1705 ;;		line 559 in file "main.c"
  1706 ;; Parameters:    Size  Location     Type
  1707 ;;  command         1    wreg     unsigned char 
  1708 ;; Auto vars:     Size  Location     Type
  1709 ;;  command         1    9[BANK1 ] unsigned char 
  1710 ;; Return value:  Size  Location     Type
  1711 ;;                  1    wreg      void 
  1712 ;; Registers used:
  1713 ;;		wreg
  1714 ;; Tracked objects:
  1715 ;;		On entry : 0/0
  1716 ;;		On exit  : 0/0
  1717 ;;		Unchanged: 0/0
  1718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1719 ;;      Params:         0       0       0       0       0
  1720 ;;      Locals:         0       0       1       0       0
  1721 ;;      Temps:          0       0       2       0       0
  1722 ;;      Totals:         0       0       3       0       0
  1723 ;;Total ram usage:        3 bytes
  1724 ;; Hardware stack levels used:    1
  1725 ;; Hardware stack levels required when called:    4
  1726 ;; This function calls:
  1727 ;;		Nothing
  1728 ;; This function is called by:
  1729 ;;		_main
  1730 ;;		_init_lcd
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           
  1735                           ;psect for function _send_cmd
  1736  0650                     _send_cmd:	
  1737                           
  1738                           ;incstack = 0
  1739                           ; Regs used in _send_cmd: [wreg]
  1740                           ;send_cmd@command stored from wreg
  1741  0650  1683               	bsf	3,5	;RP0=1, select bank1
  1742  0651  1303               	bcf	3,6	;RP1=0, select bank1
  1743  0652  00A9               	movwf	send_cmd@command^(0+128)
  1744  0653                     l1308:	
  1745                           
  1746                           ;main.c: 559: void send_cmd(char command);main.c: 560: {;main.c: 561:     PORTEbits.RE1 
      +                          = 1;
  1747  0653  1283               	bcf	3,5	;RP0=0, select bank0
  1748  0654  1303               	bcf	3,6	;RP1=0, select bank0
  1749  0655  1489               	bsf	9,1	;volatile
  1750  0656                     l1310:	
  1751                           
  1752                           ;main.c: 562:     PORTD = command;
  1753  0656  1683               	bsf	3,5	;RP0=1, select bank1
  1754  0657  1303               	bcf	3,6	;RP1=0, select bank1
  1755  0658  0829               	movf	send_cmd@command^(0+128),w
  1756  0659  1283               	bcf	3,5	;RP0=0, select bank0
  1757  065A  1303               	bcf	3,6	;RP1=0, select bank0
  1758  065B  0088               	movwf	8	;volatile
  1759  065C                     l1312:	
  1760                           
  1761                           ;main.c: 563:     PORTEbits.RE2 = 0;
  1762  065C  1109               	bcf	9,2	;volatile
  1763                           
  1764                           ;main.c: 564:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  1765  065D  3020               	movlw	32
  1766  065E  1683               	bsf	3,5	;RP0=1, select bank1
  1767  065F  1303               	bcf	3,6	;RP1=0, select bank1
  1768  0660  00A8               	movwf	(??_send_cmd^(0+128)+1)
  1769  0661  3029               	movlw	41
  1770  0662  00A7               	movwf	??_send_cmd^(0+128)
  1771  0663                     u1747:	
  1772  0663  0BA7               	decfsz	??_send_cmd^(0+128),f
  1773  0664  2E63               	goto	u1747
  1774  0665  0BA8               	decfsz	(??_send_cmd^(0+128)+1),f
  1775  0666  2E63               	goto	u1747
  1776  0667                     l1314:	
  1777                           
  1778                           ;main.c: 565:     PORTEbits.RE1 = 0;
  1779  0667  1283               	bcf	3,5	;RP0=0, select bank0
  1780  0668  1303               	bcf	3,6	;RP1=0, select bank0
  1781  0669  1089               	bcf	9,1	;volatile
  1782                           
  1783                           ;main.c: 566:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  1784  066A  3020               	movlw	32
  1785  066B  1683               	bsf	3,5	;RP0=1, select bank1
  1786  066C  1303               	bcf	3,6	;RP1=0, select bank1
  1787  066D  00A8               	movwf	(??_send_cmd^(0+128)+1)
  1788  066E  3029               	movlw	41
  1789  066F  00A7               	movwf	??_send_cmd^(0+128)
  1790  0670                     u1757:	
  1791  0670  0BA7               	decfsz	??_send_cmd^(0+128),f
  1792  0671  2E70               	goto	u1757
  1793  0672  0BA8               	decfsz	(??_send_cmd^(0+128)+1),f
  1794  0673  2E70               	goto	u1757
  1795  0674                     l1316:	
  1796                           
  1797                           ;main.c: 567:     PORTEbits.RE1 = 1;
  1798  0674  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0675  1303               	bcf	3,6	;RP1=0, select bank0
  1800  0676  1489               	bsf	9,1	;volatile
  1801  0677                     l230:	
  1802  0677  0008               	return
  1803  0678                     __end_of_send_cmd:	
  1804                           
  1805                           	psect	text6
  1806  073B                     __ptext6:	
  1807 ;; *************** function _initPic *****************
  1808 ;; Defined at:
  1809 ;;		line 445 in file "main.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;		None
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;		None
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1823 ;;      Params:         0       0       0       0       0
  1824 ;;      Locals:         0       0       0       0       0
  1825 ;;      Temps:          0       0       0       0       0
  1826 ;;      Totals:         0       0       0       0       0
  1827 ;;Total ram usage:        0 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    4
  1830 ;; This function calls:
  1831 ;;		Nothing
  1832 ;; This function is called by:
  1833 ;;		_main
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           
  1838                           ;psect for function _initPic
  1839  073B                     _initPic:	
  1840  073B                     l1470:	
  1841                           ;incstack = 0
  1842                           ; Regs used in _initPic: [wreg+status,2]
  1843                           
  1844                           
  1845                           ;main.c: 447:     TRISD = 0x00;
  1846  073B  1683               	bsf	3,5	;RP0=1, select bank1
  1847  073C  1303               	bcf	3,6	;RP1=0, select bank1
  1848  073D  0188               	clrf	8	;volatile
  1849  073E                     l1472:	
  1850                           
  1851                           ;main.c: 448:     TRISB = 0xFF;
  1852  073E  30FF               	movlw	255
  1853  073F  0086               	movwf	6	;volatile
  1854  0740                     l1474:	
  1855                           
  1856                           ;main.c: 449:     TRISE = 0x00;
  1857  0740  0189               	clrf	9	;volatile
  1858                           
  1859                           ;main.c: 451:     INTCON = 0xA0;
  1860  0741  30A0               	movlw	160
  1861  0742  008B               	movwf	11	;volatile
  1862                           
  1863                           ;main.c: 452:     OPTION_REG = 0x07;
  1864  0743  3007               	movlw	7
  1865  0744  0081               	movwf	1	;volatile
  1866                           
  1867                           ;main.c: 453:     TMR0 = 6;
  1868  0745  3006               	movlw	6
  1869  0746  1283               	bcf	3,5	;RP0=0, select bank0
  1870  0747  1303               	bcf	3,6	;RP1=0, select bank0
  1871  0748  0081               	movwf	1	;volatile
  1872  0749                     l184:	
  1873  0749  0008               	return
  1874  074A                     __end_of_initPic:	
  1875                           
  1876                           	psect	text7
  1877  0616                     __ptext7:	
  1878 ;; *************** function _UART_init *****************
  1879 ;; Defined at:
  1880 ;;		line 591 in file "main.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;  baudrate        2   22[BANK1 ] int 
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         0       0       2       0       0
  1895 ;;      Locals:         0       0       0       0       0
  1896 ;;      Temps:          0       0       4       0       0
  1897 ;;      Totals:         0       0       6       0       0
  1898 ;;Total ram usage:        6 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    5
  1901 ;; This function calls:
  1902 ;;		___aldiv
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           
  1909                           ;psect for function _UART_init
  1910  0616                     _UART_init:	
  1911  0616                     l1476:	
  1912                           ;incstack = 0
  1913                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  1914                           
  1915                           
  1916                           ;main.c: 591: void UART_init(int baudrate);main.c: 592: {;main.c: 593:     TRISCbits.TRI
      +                          SC6 = 0;
  1917  0616  1683               	bsf	3,5	;RP0=1, select bank1
  1918  0617  1303               	bcf	3,6	;RP1=0, select bank1
  1919  0618  1307               	bcf	7,6	;volatile
  1920                           
  1921                           ;main.c: 594:     TXSTAbits.TXEN = 1;
  1922  0619  1698               	bsf	24,5	;volatile
  1923                           
  1924                           ;main.c: 595:     RCSTAbits.SPEN = 1;
  1925  061A  1283               	bcf	3,5	;RP0=0, select bank0
  1926  061B  1303               	bcf	3,6	;RP1=0, select bank0
  1927  061C  1798               	bsf	24,7	;volatile
  1928                           
  1929                           ;main.c: 596:     RCSTAbits.CREN = 1;
  1930  061D  1618               	bsf	24,4	;volatile
  1931  061E                     l1478:	
  1932                           
  1933                           ;main.c: 597:     SPBRG = (32000000L/(long)(64UL*baudrate))-1;
  1934  061E  1683               	bsf	3,5	;RP0=1, select bank1
  1935  061F  1303               	bcf	3,6	;RP1=0, select bank1
  1936  0620  0836               	movf	UART_init@baudrate^(0+128),w
  1937  0621  00B8               	movwf	??_UART_init^(0+128)
  1938  0622  0837               	movf	(UART_init@baudrate+1)^(0+128),w
  1939  0623  00B9               	movwf	(??_UART_init^(0+128)+1)
  1940  0624  3000               	movlw	0
  1941  0625  1BB9               	btfsc	(??_UART_init^(0+128)+1),7
  1942  0626  30FF               	movlw	255
  1943  0627  00BA               	movwf	(??_UART_init^(0+128)+2)
  1944  0628  00BB               	movwf	(??_UART_init^(0+128)+3)
  1945  0629  3006               	movlw	6
  1946  062A                     u1195:	
  1947  062A  1003               	clrc
  1948  062B  0DB8               	rlf	??_UART_init^(0+128),f
  1949  062C  0DB9               	rlf	(??_UART_init^(0+128)+1),f
  1950  062D  0DBA               	rlf	(??_UART_init^(0+128)+2),f
  1951  062E  0DBB               	rlf	(??_UART_init^(0+128)+3),f
  1952  062F                     u1190:	
  1953  062F  3EFF               	addlw	-1
  1954  0630  1D03               	skipz
  1955  0631  2E2A               	goto	u1195
  1956  0632  083B               	movf	(??_UART_init+3)^(0+128),w
  1957  0633  00AA               	movwf	(___aldiv@divisor+3)^(0+128)
  1958  0634  083A               	movf	(??_UART_init+2)^(0+128),w
  1959  0635  00A9               	movwf	(___aldiv@divisor+2)^(0+128)
  1960  0636  0839               	movf	(??_UART_init+1)^(0+128),w
  1961  0637  00A8               	movwf	(___aldiv@divisor+1)^(0+128)
  1962  0638  0838               	movf	??_UART_init^(0+128),w
  1963  0639  00A7               	movwf	___aldiv@divisor^(0+128)
  1964  063A  3001               	movlw	1
  1965  063B  00AE               	movwf	(___aldiv@dividend+3)^(0+128)
  1966  063C  30E8               	movlw	232
  1967  063D  00AD               	movwf	(___aldiv@dividend+2)^(0+128)
  1968  063E  3048               	movlw	72
  1969  063F  00AC               	movwf	(___aldiv@dividend+1)^(0+128)
  1970  0640  3000               	movlw	0
  1971  0641  00AB               	movwf	___aldiv@dividend^(0+128)
  1972  0642  120A  118A  241E  120A  118A  	fcall	___aldiv
  1973  0647  1683               	bsf	3,5	;RP0=1, select bank1
  1974  0648  1303               	bcf	3,6	;RP1=0, select bank1
  1975  0649  0827               	movf	?___aldiv^(0+128),w
  1976  064A  3EFF               	addlw	255
  1977  064B  0099               	movwf	25	;volatile
  1978  064C                     l1480:	
  1979                           
  1980                           ;main.c: 598:     INTCONbits.GIE = 1;
  1981  064C  178B               	bsf	11,7	;volatile
  1982  064D                     l1482:	
  1983                           
  1984                           ;main.c: 599:     INTCONbits.PEIE = 1;
  1985  064D  170B               	bsf	11,6	;volatile
  1986  064E                     l1484:	
  1987                           
  1988                           ;main.c: 600:     PIE1bits.RCIE = 1;
  1989  064E  168C               	bsf	12,5	;volatile
  1990  064F                     l236:	
  1991  064F  0008               	return
  1992  0650                     __end_of_UART_init:	
  1993                           
  1994                           	psect	text8
  1995  041E                     __ptext8:	
  1996 ;; *************** function ___aldiv *****************
  1997 ;; Defined at:
  1998 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  divisor         4    7[BANK1 ] long 
  2001 ;;  dividend        4   11[BANK1 ] long 
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;  quotient        4   18[BANK1 ] long 
  2004 ;;  sign            1   17[BANK1 ] unsigned char 
  2005 ;;  counter         1   16[BANK1 ] unsigned char 
  2006 ;; Return value:  Size  Location     Type
  2007 ;;                  4    7[BANK1 ] long 
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0
  2010 ;; Tracked objects:
  2011 ;;		On entry : 0/0
  2012 ;;		On exit  : 0/0
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2015 ;;      Params:         0       0       8       0       0
  2016 ;;      Locals:         0       0       6       0       0
  2017 ;;      Temps:          0       0       1       0       0
  2018 ;;      Totals:         0       0      15       0       0
  2019 ;;Total ram usage:       15 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:    4
  2022 ;; This function calls:
  2023 ;;		Nothing
  2024 ;; This function is called by:
  2025 ;;		_UART_init
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           
  2030                           ;psect for function ___aldiv
  2031  041E                     ___aldiv:	
  2032  041E                     l1338:	
  2033                           ;incstack = 0
  2034                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2035                           
  2036  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2037  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2038  0420  01B1               	clrf	___aldiv@sign^(0+128)
  2039  0421                     l1340:	
  2040  0421  1FAA               	btfss	(___aldiv@divisor+3)^(0+128),7
  2041  0422  2C24               	goto	u901
  2042  0423  2C25               	goto	u900
  2043  0424                     u901:	
  2044  0424  2C32               	goto	l393
  2045  0425                     u900:	
  2046  0425                     l1342:	
  2047  0425  09A7               	comf	___aldiv@divisor^(0+128),f
  2048  0426  09A8               	comf	(___aldiv@divisor+1)^(0+128),f
  2049  0427  09A9               	comf	(___aldiv@divisor+2)^(0+128),f
  2050  0428  09AA               	comf	(___aldiv@divisor+3)^(0+128),f
  2051  0429  0AA7               	incf	___aldiv@divisor^(0+128),f
  2052  042A  1903               	skipnz
  2053  042B  0AA8               	incf	(___aldiv@divisor+1)^(0+128),f
  2054  042C  1903               	skipnz
  2055  042D  0AA9               	incf	(___aldiv@divisor+2)^(0+128),f
  2056  042E  1903               	skipnz
  2057  042F  0AAA               	incf	(___aldiv@divisor+3)^(0+128),f
  2058  0430  01B1               	clrf	___aldiv@sign^(0+128)
  2059  0431  0AB1               	incf	___aldiv@sign^(0+128),f
  2060  0432                     l393:	
  2061  0432  1FAE               	btfss	(___aldiv@dividend+3)^(0+128),7
  2062  0433  2C35               	goto	u911
  2063  0434  2C36               	goto	u910
  2064  0435                     u911:	
  2065  0435  2C45               	goto	l1348
  2066  0436                     u910:	
  2067  0436                     l1344:	
  2068  0436  09AB               	comf	___aldiv@dividend^(0+128),f
  2069  0437  09AC               	comf	(___aldiv@dividend+1)^(0+128),f
  2070  0438  09AD               	comf	(___aldiv@dividend+2)^(0+128),f
  2071  0439  09AE               	comf	(___aldiv@dividend+3)^(0+128),f
  2072  043A  0AAB               	incf	___aldiv@dividend^(0+128),f
  2073  043B  1903               	skipnz
  2074  043C  0AAC               	incf	(___aldiv@dividend+1)^(0+128),f
  2075  043D  1903               	skipnz
  2076  043E  0AAD               	incf	(___aldiv@dividend+2)^(0+128),f
  2077  043F  1903               	skipnz
  2078  0440  0AAE               	incf	(___aldiv@dividend+3)^(0+128),f
  2079  0441                     l1346:	
  2080  0441  3001               	movlw	1
  2081  0442  00AF               	movwf	??___aldiv^(0+128)
  2082  0443  082F               	movf	??___aldiv^(0+128),w
  2083  0444  06B1               	xorwf	___aldiv@sign^(0+128),f
  2084  0445                     l1348:	
  2085  0445  3000               	movlw	0
  2086  0446  00B5               	movwf	(___aldiv@quotient+3)^(0+128)
  2087  0447  3000               	movlw	0
  2088  0448  00B4               	movwf	(___aldiv@quotient+2)^(0+128)
  2089  0449  3000               	movlw	0
  2090  044A  00B3               	movwf	(___aldiv@quotient+1)^(0+128)
  2091  044B  3000               	movlw	0
  2092  044C  00B2               	movwf	___aldiv@quotient^(0+128)
  2093  044D                     l1350:	
  2094  044D  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2095  044E  0429               	iorwf	(___aldiv@divisor+2)^(0+128),w
  2096  044F  0428               	iorwf	(___aldiv@divisor+1)^(0+128),w
  2097  0450  0427               	iorwf	___aldiv@divisor^(0+128),w
  2098  0451  1903               	skipnz
  2099  0452  2C54               	goto	u921
  2100  0453  2C55               	goto	u920
  2101  0454                     u921:	
  2102  0454  2CA2               	goto	l1370
  2103  0455                     u920:	
  2104  0455                     l1352:	
  2105  0455  01B0               	clrf	___aldiv@counter^(0+128)
  2106  0456  0AB0               	incf	___aldiv@counter^(0+128),f
  2107  0457  2C65               	goto	l1356
  2108  0458                     l1354:	
  2109  0458  3001               	movlw	1
  2110  0459  00AF               	movwf	??___aldiv^(0+128)
  2111  045A                     u935:	
  2112  045A  1003               	clrc
  2113  045B  0DA7               	rlf	___aldiv@divisor^(0+128),f
  2114  045C  0DA8               	rlf	(___aldiv@divisor+1)^(0+128),f
  2115  045D  0DA9               	rlf	(___aldiv@divisor+2)^(0+128),f
  2116  045E  0DAA               	rlf	(___aldiv@divisor+3)^(0+128),f
  2117  045F  0BAF               	decfsz	??___aldiv^(0+128),f
  2118  0460  2C5A               	goto	u935
  2119  0461  3001               	movlw	1
  2120  0462  00AF               	movwf	??___aldiv^(0+128)
  2121  0463  082F               	movf	??___aldiv^(0+128),w
  2122  0464  07B0               	addwf	___aldiv@counter^(0+128),f
  2123  0465                     l1356:	
  2124  0465  1FAA               	btfss	(___aldiv@divisor+3)^(0+128),7
  2125  0466  2C68               	goto	u941
  2126  0467  2C69               	goto	u940
  2127  0468                     u941:	
  2128  0468  2C58               	goto	l1354
  2129  0469                     u940:	
  2130  0469                     l1358:	
  2131  0469  3001               	movlw	1
  2132  046A  00AF               	movwf	??___aldiv^(0+128)
  2133  046B                     u955:	
  2134  046B  1003               	clrc
  2135  046C  0DB2               	rlf	___aldiv@quotient^(0+128),f
  2136  046D  0DB3               	rlf	(___aldiv@quotient+1)^(0+128),f
  2137  046E  0DB4               	rlf	(___aldiv@quotient+2)^(0+128),f
  2138  046F  0DB5               	rlf	(___aldiv@quotient+3)^(0+128),f
  2139  0470  0BAF               	decfsz	??___aldiv^(0+128),f
  2140  0471  2C6B               	goto	u955
  2141  0472                     l1360:	
  2142  0472  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2143  0473  022E               	subwf	(___aldiv@dividend+3)^(0+128),w
  2144  0474  1D03               	skipz
  2145  0475  2C80               	goto	u965
  2146  0476  0829               	movf	(___aldiv@divisor+2)^(0+128),w
  2147  0477  022D               	subwf	(___aldiv@dividend+2)^(0+128),w
  2148  0478  1D03               	skipz
  2149  0479  2C80               	goto	u965
  2150  047A  0828               	movf	(___aldiv@divisor+1)^(0+128),w
  2151  047B  022C               	subwf	(___aldiv@dividend+1)^(0+128),w
  2152  047C  1D03               	skipz
  2153  047D  2C80               	goto	u965
  2154  047E  0827               	movf	___aldiv@divisor^(0+128),w
  2155  047F  022B               	subwf	___aldiv@dividend^(0+128),w
  2156  0480                     u965:	
  2157  0480  1C03               	skipc
  2158  0481  2C83               	goto	u961
  2159  0482  2C84               	goto	u960
  2160  0483                     u961:	
  2161  0483  2C93               	goto	l1366
  2162  0484                     u960:	
  2163  0484                     l1362:	
  2164  0484  0827               	movf	___aldiv@divisor^(0+128),w
  2165  0485  02AB               	subwf	___aldiv@dividend^(0+128),f
  2166  0486  0828               	movf	(___aldiv@divisor+1)^(0+128),w
  2167  0487  1C03               	skipc
  2168  0488  0F28               	incfsz	(___aldiv@divisor+1)^(0+128),w
  2169  0489  02AC               	subwf	(___aldiv@dividend+1)^(0+128),f
  2170  048A  0829               	movf	(___aldiv@divisor+2)^(0+128),w
  2171  048B  1C03               	skipc
  2172  048C  0F29               	incfsz	(___aldiv@divisor+2)^(0+128),w
  2173  048D  02AD               	subwf	(___aldiv@dividend+2)^(0+128),f
  2174  048E  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2175  048F  1C03               	skipc
  2176  0490  0F2A               	incfsz	(___aldiv@divisor+3)^(0+128),w
  2177  0491  02AE               	subwf	(___aldiv@dividend+3)^(0+128),f
  2178  0492                     l1364:	
  2179  0492  1432               	bsf	___aldiv@quotient^(0+128),0
  2180  0493                     l1366:	
  2181  0493  3001               	movlw	1
  2182  0494                     u975:	
  2183  0494  1003               	clrc
  2184  0495  0CAA               	rrf	(___aldiv@divisor+3)^(0+128),f
  2185  0496  0CA9               	rrf	(___aldiv@divisor+2)^(0+128),f
  2186  0497  0CA8               	rrf	(___aldiv@divisor+1)^(0+128),f
  2187  0498  0CA7               	rrf	___aldiv@divisor^(0+128),f
  2188  0499  3EFF               	addlw	-1
  2189  049A  1D03               	skipz
  2190  049B  2C94               	goto	u975
  2191  049C                     l1368:	
  2192  049C  3001               	movlw	1
  2193  049D  02B0               	subwf	___aldiv@counter^(0+128),f
  2194  049E  1D03               	btfss	3,2
  2195  049F  2CA1               	goto	u981
  2196  04A0  2CA2               	goto	u980
  2197  04A1                     u981:	
  2198  04A1  2C69               	goto	l1358
  2199  04A2                     u980:	
  2200  04A2                     l1370:	
  2201  04A2  0831               	movf	___aldiv@sign^(0+128),w
  2202  04A3  1903               	btfsc	3,2
  2203  04A4  2CA6               	goto	u991
  2204  04A5  2CA7               	goto	u990
  2205  04A6                     u991:	
  2206  04A6  2CB2               	goto	l1374
  2207  04A7                     u990:	
  2208  04A7                     l1372:	
  2209  04A7  09B2               	comf	___aldiv@quotient^(0+128),f
  2210  04A8  09B3               	comf	(___aldiv@quotient+1)^(0+128),f
  2211  04A9  09B4               	comf	(___aldiv@quotient+2)^(0+128),f
  2212  04AA  09B5               	comf	(___aldiv@quotient+3)^(0+128),f
  2213  04AB  0AB2               	incf	___aldiv@quotient^(0+128),f
  2214  04AC  1903               	skipnz
  2215  04AD  0AB3               	incf	(___aldiv@quotient+1)^(0+128),f
  2216  04AE  1903               	skipnz
  2217  04AF  0AB4               	incf	(___aldiv@quotient+2)^(0+128),f
  2218  04B0  1903               	skipnz
  2219  04B1  0AB5               	incf	(___aldiv@quotient+3)^(0+128),f
  2220  04B2                     l1374:	
  2221  04B2  0835               	movf	(___aldiv@quotient+3)^(0+128),w
  2222  04B3  00AA               	movwf	(?___aldiv+3)^(0+128)
  2223  04B4  0834               	movf	(___aldiv@quotient+2)^(0+128),w
  2224  04B5  00A9               	movwf	(?___aldiv+2)^(0+128)
  2225  04B6  0833               	movf	(___aldiv@quotient+1)^(0+128),w
  2226  04B7  00A8               	movwf	(?___aldiv+1)^(0+128)
  2227  04B8  0832               	movf	___aldiv@quotient^(0+128),w
  2228  04B9  00A7               	movwf	?___aldiv^(0+128)
  2229  04BA                     l403:	
  2230  04BA  0008               	return
  2231  04BB                     __end_of___aldiv:	
  2232                           
  2233                           	psect	text9
  2234  030E                     __ptext9:	
  2235 ;; *************** function _ISR *****************
  2236 ;; Defined at:
  2237 ;;		line 325 in file "main.c"
  2238 ;; Parameters:    Size  Location     Type
  2239 ;;		None
  2240 ;; Auto vars:     Size  Location     Type
  2241 ;;		None
  2242 ;; Return value:  Size  Location     Type
  2243 ;;                  1    wreg      void 
  2244 ;; Registers used:
  2245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2246 ;; Tracked objects:
  2247 ;;		On entry : 0/0
  2248 ;;		On exit  : 0/0
  2249 ;;		Unchanged: 0/0
  2250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2251 ;;      Params:         0       0       0       0       0
  2252 ;;      Locals:         0       0       0       0       0
  2253 ;;      Temps:          0       0       7       0       0
  2254 ;;      Totals:         0       0       7       0       0
  2255 ;;Total ram usage:        7 bytes
  2256 ;; Hardware stack levels used:    1
  2257 ;; Hardware stack levels required when called:    3
  2258 ;; This function calls:
  2259 ;;		_print_Countdown
  2260 ;; This function is called by:
  2261 ;;		Interrupt level 1
  2262 ;; This function uses a non-reentrant model
  2263 ;;
  2264                           
  2265                           
  2266                           ;psect for function _ISR
  2267  030E                     _ISR:	
  2268  030E                     i1l1666:	
  2269                           
  2270                           ;main.c: 329:     if (!(PORTBbits.RB3)&& (!oldBtn1))
  2271  030E  1283               	bcf	3,5	;RP0=0, select bank0
  2272  030F  1303               	bcf	3,6	;RP1=0, select bank0
  2273  0310  1986               	btfsc	6,3	;volatile
  2274  0311  2B13               	goto	u148_21
  2275  0312  2B14               	goto	u148_20
  2276  0313                     u148_21:	
  2277  0313  2B25               	goto	i1l155
  2278  0314                     u148_20:	
  2279  0314                     i1l1668:	
  2280  0314  086F               	movf	_oldBtn1,w
  2281  0315  1D03               	btfss	3,2
  2282  0316  2B18               	goto	u149_21
  2283  0317  2B19               	goto	u149_20
  2284  0318                     u149_21:	
  2285  0318  2B25               	goto	i1l155
  2286  0319                     u149_20:	
  2287  0319                     i1l1670:	
  2288                           
  2289                           ;main.c: 330:     {;main.c: 331:         stat1=!stat1;
  2290  0319  1683               	bsf	3,5	;RP0=1, select bank1
  2291  031A  1303               	bcf	3,6	;RP1=0, select bank1
  2292  031B  084D               	movf	_stat1^(0+128),w
  2293  031C  1903               	btfsc	3,2
  2294  031D  2B1F               	goto	u150_21
  2295  031E  2B21               	goto	u150_20
  2296  031F                     u150_21:	
  2297  031F  3001               	movlw	1
  2298  0320  2B22               	goto	u151_20
  2299  0321                     u150_20:	
  2300  0321  3000               	movlw	0
  2301  0322                     u151_20:	
  2302  0322  00A0               	movwf	??_ISR^(0+128)
  2303  0323  0820               	movf	??_ISR^(0+128),w
  2304  0324  00CD               	movwf	_stat1^(0+128)
  2305  0325                     i1l155:	
  2306                           ;main.c: 333:     }
  2307                           
  2308                           
  2309                           ;main.c: 334:     oldBtn1 = !PORTBbits.RB3;
  2310  0325  1003               	clrc
  2311  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2312  0327  1D86               	btfss	6,3	;volatile
  2313  0328  1403               	setc
  2314  0329  3000               	movlw	0
  2315  032A  1803               	btfsc	3,0
  2316  032B  3001               	movlw	1
  2317  032C  00EF               	movwf	_oldBtn1
  2318  032D                     i1l1672:	
  2319                           
  2320                           ;main.c: 336:     if (!(PORTBbits.RB4)&& (!oldBtn2))
  2321  032D  1A06               	btfsc	6,4	;volatile
  2322  032E  2B30               	goto	u152_21
  2323  032F  2B31               	goto	u152_20
  2324  0330                     u152_21:	
  2325  0330  2B42               	goto	i1l156
  2326  0331                     u152_20:	
  2327  0331                     i1l1674:	
  2328  0331  1683               	bsf	3,5	;RP0=1, select bank1
  2329  0332  1303               	bcf	3,6	;RP1=0, select bank1
  2330  0333  084C               	movf	_oldBtn2^(0+128),w
  2331  0334  1D03               	btfss	3,2
  2332  0335  2B37               	goto	u153_21
  2333  0336  2B38               	goto	u153_20
  2334  0337                     u153_21:	
  2335  0337  2B42               	goto	i1l156
  2336  0338                     u153_20:	
  2337  0338                     i1l1676:	
  2338                           
  2339                           ;main.c: 337:     {;main.c: 338:         stat2=!stat2;
  2340  0338  084B               	movf	_stat2^(0+128),w
  2341  0339  1903               	btfsc	3,2
  2342  033A  2B3C               	goto	u154_21
  2343  033B  2B3E               	goto	u154_20
  2344  033C                     u154_21:	
  2345  033C  3001               	movlw	1
  2346  033D  2B3F               	goto	u155_20
  2347  033E                     u154_20:	
  2348  033E  3000               	movlw	0
  2349  033F                     u155_20:	
  2350  033F  00A0               	movwf	??_ISR^(0+128)
  2351  0340  0820               	movf	??_ISR^(0+128),w
  2352  0341  00CB               	movwf	_stat2^(0+128)
  2353  0342                     i1l156:	
  2354                           ;main.c: 340:     }
  2355                           
  2356                           
  2357                           ;main.c: 341:     oldBtn2 = !PORTBbits.RB4;
  2358  0342  1003               	clrc
  2359  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2360  0344  1E06               	btfss	6,4	;volatile
  2361  0345  1403               	setc
  2362  0346  3000               	movlw	0
  2363  0347  1803               	btfsc	3,0
  2364  0348  3001               	movlw	1
  2365  0349  1683               	bsf	3,5	;RP0=1, select bank1
  2366  034A  1303               	bcf	3,6	;RP1=0, select bank1
  2367  034B  00CC               	movwf	_oldBtn2^(0+128)
  2368  034C                     i1l1678:	
  2369                           
  2370                           ;main.c: 343:     if (!(PORTBbits.RB5)&& (!oldBtn3))
  2371  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2372  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2373  034E  1A86               	btfsc	6,5	;volatile
  2374  034F  2B51               	goto	u156_21
  2375  0350  2B52               	goto	u156_20
  2376  0351                     u156_21:	
  2377  0351  2B63               	goto	i1l157
  2378  0352                     u156_20:	
  2379  0352                     i1l1680:	
  2380  0352  1683               	bsf	3,5	;RP0=1, select bank1
  2381  0353  1303               	bcf	3,6	;RP1=0, select bank1
  2382  0354  084A               	movf	_oldBtn3^(0+128),w
  2383  0355  1D03               	btfss	3,2
  2384  0356  2B58               	goto	u157_21
  2385  0357  2B59               	goto	u157_20
  2386  0358                     u157_21:	
  2387  0358  2B63               	goto	i1l157
  2388  0359                     u157_20:	
  2389  0359                     i1l1682:	
  2390                           
  2391                           ;main.c: 344:     {;main.c: 345:         stat3=!stat3;
  2392  0359  0849               	movf	_stat3^(0+128),w
  2393  035A  1903               	btfsc	3,2
  2394  035B  2B5D               	goto	u158_21
  2395  035C  2B5F               	goto	u158_20
  2396  035D                     u158_21:	
  2397  035D  3001               	movlw	1
  2398  035E  2B60               	goto	u159_20
  2399  035F                     u158_20:	
  2400  035F  3000               	movlw	0
  2401  0360                     u159_20:	
  2402  0360  00A0               	movwf	??_ISR^(0+128)
  2403  0361  0820               	movf	??_ISR^(0+128),w
  2404  0362  00C9               	movwf	_stat3^(0+128)
  2405  0363                     i1l157:	
  2406                           ;main.c: 347:     }
  2407                           
  2408                           
  2409                           ;main.c: 348:     oldBtn3 = !PORTBbits.RB5;
  2410  0363  1003               	clrc
  2411  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2412  0365  1E86               	btfss	6,5	;volatile
  2413  0366  1403               	setc
  2414  0367  3000               	movlw	0
  2415  0368  1803               	btfsc	3,0
  2416  0369  3001               	movlw	1
  2417  036A  1683               	bsf	3,5	;RP0=1, select bank1
  2418  036B  1303               	bcf	3,6	;RP1=0, select bank1
  2419  036C  00CA               	movwf	_oldBtn3^(0+128)
  2420  036D                     i1l1684:	
  2421                           
  2422                           ;main.c: 352:    if(RCIF)
  2423  036D  1283               	bcf	3,5	;RP0=0, select bank0
  2424  036E  1303               	bcf	3,6	;RP1=0, select bank0
  2425  036F  1E8C               	btfss	12,5	;volatile
  2426  0370  2B72               	goto	u160_21
  2427  0371  2B73               	goto	u160_20
  2428  0372                     u160_21:	
  2429  0372  2B80               	goto	i1l1692
  2430  0373                     u160_20:	
  2431  0373                     i1l159:	
  2432  0373  1E8C               	btfss	12,5	;volatile
  2433  0374  2B76               	goto	u161_21
  2434  0375  2B77               	goto	u161_20
  2435  0376                     u161_21:	
  2436  0376  2B73               	goto	i1l159
  2437  0377                     u161_20:	
  2438  0377                     i1l161:	
  2439                           
  2440                           ;main.c: 355:         RCIF = 0;
  2441  0377  128C               	bcf	12,5	;volatile
  2442  0378                     i1l1688:	
  2443                           
  2444                           ;main.c: 356:         datoSeriale = RCREG;
  2445  0378  081A               	movf	26,w	;volatile
  2446  0379  1683               	bsf	3,5	;RP0=1, select bank1
  2447  037A  1303               	bcf	3,6	;RP1=0, select bank1
  2448  037B  00A0               	movwf	??_ISR^(0+128)
  2449  037C  0820               	movf	??_ISR^(0+128),w
  2450  037D  00D1               	movwf	_datoSeriale^(0+128)
  2451  037E                     i1l1690:	
  2452                           
  2453                           ;main.c: 357:         received = 1;
  2454  037E  01D2               	clrf	_received^(0+128)
  2455  037F  0AD2               	incf	_received^(0+128),f
  2456  0380                     i1l1692:	
  2457                           
  2458                           ;main.c: 360:    if (INTCON&0x04)
  2459  0380  1D0B               	btfss	11,2	;volatile
  2460  0381  2B83               	goto	u162_21
  2461  0382  2B84               	goto	u162_20
  2462  0383                     u162_21:	
  2463  0383  2C0D               	goto	i1l173
  2464  0384                     u162_20:	
  2465  0384                     i1l1694:	
  2466                           
  2467                           ;main.c: 361:     {;main.c: 362:         INTCON &= ~0x04;
  2468  0384  30FB               	movlw	251
  2469  0385  1683               	bsf	3,5	;RP0=1, select bank1
  2470  0386  1303               	bcf	3,6	;RP1=0, select bank1
  2471  0387  00A0               	movwf	??_ISR^(0+128)
  2472  0388  0820               	movf	??_ISR^(0+128),w
  2473  0389  058B               	andwf	11,f	;volatile
  2474  038A                     i1l1696:	
  2475                           
  2476                           ;main.c: 363:         TMR0 = 6;
  2477  038A  3006               	movlw	6
  2478  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2479  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2480  038D  0081               	movwf	1	;volatile
  2481  038E                     i1l1698:	
  2482                           
  2483                           ;main.c: 364:         count++;
  2484  038E  3001               	movlw	1
  2485  038F  1683               	bsf	3,5	;RP0=1, select bank1
  2486  0390  1303               	bcf	3,6	;RP1=0, select bank1
  2487  0391  07C5               	addwf	_count^(0+128),f
  2488  0392  1803               	skipnc
  2489  0393  0AC6               	incf	(_count+1)^(0+128),f
  2490  0394  3000               	movlw	0
  2491  0395  07C6               	addwf	(_count+1)^(0+128),f
  2492                           
  2493                           ;main.c: 365:         if (count == 125)
  2494  0396  307D               	movlw	125
  2495  0397  0645               	xorwf	_count^(0+128),w
  2496  0398  0446               	iorwf	(_count+1)^(0+128),w
  2497  0399  1D03               	btfss	3,2
  2498  039A  2B9C               	goto	u163_21
  2499  039B  2B9D               	goto	u163_20
  2500  039C                     u163_21:	
  2501  039C  2C0D               	goto	i1l173
  2502  039D                     u163_20:	
  2503  039D                     i1l1700:	
  2504                           
  2505                           ;main.c: 366:         {;main.c: 369:             if(semafori[0]==statoSemafori[0])
  2506  039D  0841               	movf	_semafori^(0+128),w
  2507  039E  065B               	xorwf	_statoSemafori^(0+128),w
  2508  039F  1D03               	skipz
  2509  03A0  2BA2               	goto	u164_21
  2510  03A1  2BA3               	goto	u164_20
  2511  03A2                     u164_21:	
  2512  03A2  2BB0               	goto	i1l1704
  2513  03A3                     u164_20:	
  2514  03A3                     i1l1702:	
  2515                           
  2516                           ;main.c: 370:                 print_Countdown(countDown, 0);
  2517  03A3  087D               	movf	_countDown,w
  2518  03A4  00A0               	movwf	??_ISR^(0+128)
  2519  03A5  01A1               	clrf	(??_ISR^(0+128)+1)
  2520  03A6  0820               	movf	??_ISR^(0+128),w
  2521  03A7  00F9               	movwf	print_Countdown@num
  2522  03A8  0821               	movf	(??_ISR+1)^(0+128),w
  2523  03A9  00FA               	movwf	print_Countdown@num+1
  2524  03AA  01FB               	clrf	print_Countdown@statoSem
  2525  03AB  120A  118A  21D1  120A  118A  	fcall	_print_Countdown
  2526  03B0                     i1l1704:	
  2527                           
  2528                           ;main.c: 372:             if(semafori[0]==statoSemafori[2])
  2529  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  2530  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  2531  03B2  085D               	movf	(_statoSemafori^(0+128)+2),w
  2532  03B3  0641               	xorwf	_semafori^(0+128),w
  2533  03B4  1D03               	skipz
  2534  03B5  2BB7               	goto	u165_21
  2535  03B6  2BB8               	goto	u165_20
  2536  03B7                     u165_21:	
  2537  03B7  2BC8               	goto	i1l1708
  2538  03B8                     u165_20:	
  2539  03B8                     i1l1706:	
  2540                           
  2541                           ;main.c: 373:                 print_Countdown(countDown, 2);
  2542  03B8  087D               	movf	_countDown,w
  2543  03B9  00A0               	movwf	??_ISR^(0+128)
  2544  03BA  01A1               	clrf	(??_ISR^(0+128)+1)
  2545  03BB  0820               	movf	??_ISR^(0+128),w
  2546  03BC  00F9               	movwf	print_Countdown@num
  2547  03BD  0821               	movf	(??_ISR+1)^(0+128),w
  2548  03BE  00FA               	movwf	print_Countdown@num+1
  2549  03BF  3002               	movlw	2
  2550  03C0  00A2               	movwf	(??_ISR+2)^(0+128)
  2551  03C1  0822               	movf	(??_ISR+2)^(0+128),w
  2552  03C2  00FB               	movwf	print_Countdown@statoSem
  2553  03C3  120A  118A  21D1  120A  118A  	fcall	_print_Countdown
  2554  03C8                     i1l1708:	
  2555                           
  2556                           ;main.c: 376:             if(flagGiallo==1)
  2557  03C8  1683               	bsf	3,5	;RP0=1, select bank1
  2558  03C9  1303               	bcf	3,6	;RP1=0, select bank1
  2559  03CA  0347               	decf	_flagGiallo^(0+128),w
  2560  03CB  1D03               	btfss	3,2
  2561  03CC  2BCE               	goto	u166_21
  2562  03CD  2BCF               	goto	u166_20
  2563  03CE                     u166_21:	
  2564  03CE  2BF4               	goto	i1l1722
  2565  03CF                     u166_20:	
  2566  03CF                     i1l1710:	
  2567                           
  2568                           ;main.c: 377:             {;main.c: 378:                 if(semafori[0]==statoSemafori[1
      +                          ])
  2569  03CF  085C               	movf	(_statoSemafori^(0+128)+1),w
  2570  03D0  0641               	xorwf	_semafori^(0+128),w
  2571  03D1  1D03               	skipz
  2572  03D2  2BD4               	goto	u167_21
  2573  03D3  2BD5               	goto	u167_20
  2574  03D4                     u167_21:	
  2575  03D4  2BE0               	goto	i1l1714
  2576  03D5                     u167_20:	
  2577  03D5                     i1l1712:	
  2578                           
  2579                           ;main.c: 379:                    print_Countdown(f, 1);
  2580  03D5  085F               	movf	(_f+1)^(0+128),w
  2581  03D6  00FA               	movwf	print_Countdown@num+1
  2582  03D7  085E               	movf	_f^(0+128),w
  2583  03D8  00F9               	movwf	print_Countdown@num
  2584  03D9  01FB               	clrf	print_Countdown@statoSem
  2585  03DA  0AFB               	incf	print_Countdown@statoSem,f
  2586  03DB  120A  118A  21D1  120A  118A  	fcall	_print_Countdown
  2587  03E0                     i1l1714:	
  2588                           
  2589                           ;main.c: 381:                 f--;
  2590  03E0  30FF               	movlw	255
  2591  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  2592  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  2593  03E3  07DE               	addwf	_f^(0+128),f
  2594  03E4  1803               	skipnc
  2595  03E5  0ADF               	incf	(_f+1)^(0+128),f
  2596  03E6  30FF               	movlw	255
  2597  03E7  07DF               	addwf	(_f+1)^(0+128),f
  2598  03E8                     i1l1716:	
  2599                           
  2600                           ;main.c: 382:                 if(f==0)
  2601  03E8  085E               	movf	_f^(0+128),w
  2602  03E9  045F               	iorwf	(_f+1)^(0+128),w
  2603  03EA  1D03               	btfss	3,2
  2604  03EB  2BED               	goto	u168_21
  2605  03EC  2BEE               	goto	u168_20
  2606  03ED                     u168_21:	
  2607  03ED  2C0B               	goto	i1l1732
  2608  03EE                     u168_20:	
  2609  03EE                     i1l1718:	
  2610                           
  2611                           ;main.c: 383:                 {;main.c: 384:                     flagGiallo=0;
  2612  03EE  01C7               	clrf	_flagGiallo^(0+128)
  2613  03EF                     i1l1720:	
  2614                           
  2615                           ;main.c: 385:                     f=3;
  2616  03EF  3003               	movlw	3
  2617  03F0  00DE               	movwf	_f^(0+128)
  2618  03F1  3000               	movlw	0
  2619  03F2  00DF               	movwf	(_f^(0+128)+1)
  2620  03F3  2C0B               	goto	i1l1732
  2621  03F4                     i1l1722:	
  2622                           
  2623                           ;main.c: 389:             {;main.c: 390:                 countDown--;
  2624  03F4  3001               	movlw	1
  2625  03F5  02FD               	subwf	_countDown,f
  2626                           
  2627                           ;main.c: 391:                 if(countDown==0)
  2628  03F6  087D               	movf	_countDown,w
  2629  03F7  1D03               	btfss	3,2
  2630  03F8  2BFA               	goto	u169_21
  2631  03F9  2BFB               	goto	u169_20
  2632  03FA                     u169_21:	
  2633  03FA  2C0B               	goto	i1l1732
  2634  03FB                     u169_20:	
  2635  03FB                     i1l1724:	
  2636                           
  2637                           ;main.c: 392:                 {;main.c: 393:                     scattoSemafori=1;
  2638  03FB  01C8               	clrf	_scattoSemafori^(0+128)
  2639  03FC  0AC8               	incf	_scattoSemafori^(0+128),f
  2640  03FD                     i1l1726:	
  2641                           
  2642                           ;main.c: 394:                     if(temporizzazione!=0)
  2643  03FD  087C               	movf	_temporizzazione,w
  2644  03FE  1903               	btfsc	3,2
  2645  03FF  2C01               	goto	u170_21
  2646  0400  2C02               	goto	u170_20
  2647  0401                     u170_21:	
  2648  0401  2C07               	goto	i1l1730
  2649  0402                     u170_20:	
  2650  0402                     i1l1728:	
  2651                           
  2652                           ;main.c: 395:                         countDown=temporizzazione;
  2653  0402  087C               	movf	_temporizzazione,w
  2654  0403  00A0               	movwf	??_ISR^(0+128)
  2655  0404  0820               	movf	??_ISR^(0+128),w
  2656  0405  00FD               	movwf	_countDown
  2657  0406  2C0B               	goto	i1l1732
  2658  0407                     i1l1730:	
  2659                           
  2660                           ;main.c: 397:                         countDown=5;
  2661  0407  3005               	movlw	5
  2662  0408  00A0               	movwf	??_ISR^(0+128)
  2663  0409  0820               	movf	??_ISR^(0+128),w
  2664  040A  00FD               	movwf	_countDown
  2665  040B                     i1l1732:	
  2666                           
  2667                           ;main.c: 400:             count = 0;
  2668  040B  01C5               	clrf	_count^(0+128)
  2669  040C  01C6               	clrf	(_count+1)^(0+128)
  2670  040D                     i1l173:	
  2671  040D  1683               	bsf	3,5	;RP0=1, select bank1
  2672  040E  1303               	bcf	3,6	;RP1=0, select bank1
  2673  040F  0826               	movf	(??_ISR+6)^(0+128),w
  2674  0410  1283               	bcf	3,5	;RP0=0, select bank0
  2675  0411  1303               	bcf	3,6	;RP1=0, select bank0
  2676  0412  00FF               	movwf	btemp+1
  2677  0413  1683               	bsf	3,5	;RP0=1, select bank1
  2678  0414  1303               	bcf	3,6	;RP1=0, select bank1
  2679  0415  0825               	movf	(??_ISR+5)^(0+128),w
  2680  0416  008A               	movwf	10
  2681  0417  0824               	movf	(??_ISR+4)^(0+128),w
  2682  0418  0084               	movwf	4
  2683  0419  0E23               	swapf	(??_ISR+3)^(0+128),w
  2684  041A  0083               	movwf	3
  2685  041B  0EFE               	swapf	btemp,f
  2686  041C  0E7E               	swapf	btemp,w
  2687  041D  0009               	retfie
  2688  041E                     __end_of_ISR:	
  2689                           
  2690                           	psect	intentry
  2691  0004                     __pintentry:	
  2692                           ;incstack = 0
  2693                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2694                           
  2695  0004                     interrupt_function:	
  2696  007E                     saved_w	set	btemp
  2697  0004  00FE               	movwf	btemp
  2698  0005  0E03               	swapf	3,w
  2699  0006  1683               	bsf	3,5	;RP0=1, select bank1
  2700  0007  1303               	bcf	3,6	;RP1=0, select bank1
  2701  0008  00A3               	movwf	(??_ISR+3)^(0+128)
  2702  0009  0804               	movf	4,w
  2703  000A  00A4               	movwf	(??_ISR+4)^(0+128)
  2704  000B  080A               	movf	10,w
  2705  000C  00A5               	movwf	(??_ISR+5)^(0+128)
  2706  000D  1283               	bcf	3,5	;RP0=0, select bank0
  2707  000E  1303               	bcf	3,6	;RP1=0, select bank0
  2708  000F  087F               	movf	btemp+1,w
  2709  0010  1683               	bsf	3,5	;RP0=1, select bank1
  2710  0011  1303               	bcf	3,6	;RP1=0, select bank1
  2711  0012  00A6               	movwf	(??_ISR+6)^(0+128)
  2712  0013  120A  118A  2B0E   	ljmp	_ISR
  2713                           
  2714                           	psect	text10
  2715  01D1                     __ptext10:	
  2716 ;; *************** function _print_Countdown *****************
  2717 ;; Defined at:
  2718 ;;		line 478 in file "main.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  num             2    9[COMMON] int 
  2721 ;;  statoSem        1   11[COMMON] unsigned char 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  secondStr      17   38[BANK0 ] unsigned char [17]
  2724 ;;  secondStr      17   21[BANK0 ] unsigned char [17]
  2725 ;;  secondStr      17    4[BANK0 ] unsigned char [17]
  2726 ;;  firstStr       17   55[BANK0 ] unsigned char [17]
  2727 ;;  resultNum       3   72[BANK0 ] unsigned char [3]
  2728 ;;  i               2   77[BANK0 ] int 
  2729 ;;  length          2   75[BANK0 ] int 
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2739 ;;      Params:         3       0       0       0       0
  2740 ;;      Locals:         0      75       0       0       0
  2741 ;;      Temps:          0       4       0       0       0
  2742 ;;      Totals:         3      79       0       0       0
  2743 ;;Total ram usage:       82 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:    2
  2746 ;; This function calls:
  2747 ;;		___awdiv
  2748 ;;		___awmod
  2749 ;;		_send_string
  2750 ;;		i1_send_cmd
  2751 ;; This function is called by:
  2752 ;;		_ISR
  2753 ;; This function uses a non-reentrant model
  2754 ;;
  2755                           
  2756                           
  2757                           ;psect for function _print_Countdown
  2758  01D1                     _print_Countdown:	
  2759  01D1                     i1l1514:	
  2760                           ;incstack = 0
  2761                           ; Regs used in _print_Countdown: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2762                           
  2763                           
  2764                           ;main.c: 478: void print_Countdown(int num, char statoSem);main.c: 479: {;main.c: 480:  
      +                             char resultNum[3], firstStr[17] = "Tempo:          ";
  2765  01D1  3057               	movlw	print_Countdown@firstStr& (0+255)
  2766  01D2  0084               	movwf	4
  2767  01D3  30C3               	movlw	low print_Countdown@F923
  2768  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  2769  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  2770  01D6  00A0               	movwf	??_print_Countdown
  2771  01D7  0804               	movf	4,w
  2772  01D8  00A1               	movwf	??_print_Countdown+1
  2773  01D9  3011               	movlw	17
  2774  01DA  00A2               	movwf	??_print_Countdown+2
  2775  01DB                     u120_20:	
  2776  01DB  0820               	movf	??_print_Countdown,w
  2777  01DC  0084               	movwf	4
  2778  01DD  1783               	bsf	3,7	;select IRP bank3
  2779  01DE  0800               	movf	0,w
  2780  01DF  00A3               	movwf	??_print_Countdown+3
  2781  01E0  0AA0               	incf	??_print_Countdown,f
  2782  01E1  0821               	movf	??_print_Countdown+1,w
  2783  01E2  0084               	movwf	4
  2784  01E3  1383               	bcf	3,7	;select IRP bank0
  2785  01E4  0823               	movf	??_print_Countdown+3,w
  2786  01E5  0080               	movwf	0
  2787  01E6  0AA1               	incf	??_print_Countdown+1,f
  2788  01E7  0BA2               	decfsz	??_print_Countdown+2,f
  2789  01E8  29DB               	goto	u120_20
  2790  01E9                     i1l1516:	
  2791                           
  2792                           ;main.c: 481:     int length = 2, i = 0;
  2793  01E9  3002               	movlw	2
  2794  01EA  00EB               	movwf	print_Countdown@length
  2795  01EB  3000               	movlw	0
  2796  01EC  00EC               	movwf	print_Countdown@length+1
  2797  01ED                     i1l1518:	
  2798  01ED  01ED               	clrf	print_Countdown@i
  2799  01EE  01EE               	clrf	print_Countdown@i+1
  2800  01EF                     i1l1520:	
  2801                           
  2802                           ;main.c: 483:     if(num < 10)
  2803  01EF  087A               	movf	print_Countdown@num+1,w
  2804  01F0  3A80               	xorlw	128
  2805  01F1  00FF               	movwf	btemp+1
  2806  01F2  3080               	movlw	128
  2807  01F3  027F               	subwf	btemp+1,w
  2808  01F4  1D03               	skipz
  2809  01F5  29F8               	goto	u121_25
  2810  01F6  300A               	movlw	10
  2811  01F7  0279               	subwf	print_Countdown@num,w
  2812  01F8                     u121_25:	
  2813  01F8  1803               	skipnc
  2814  01F9  29FB               	goto	u121_21
  2815  01FA  29FC               	goto	u121_20
  2816  01FB                     u121_21:	
  2817  01FB  2A03               	goto	i1l1524
  2818  01FC                     u121_20:	
  2819  01FC                     i1l1522:	
  2820                           
  2821                           ;main.c: 484:         length = 1;
  2822  01FC  3001               	movlw	1
  2823  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  2824  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  2825  01FF  00EB               	movwf	print_Countdown@length
  2826  0200  3000               	movlw	0
  2827  0201  00EC               	movwf	print_Countdown@length+1
  2828  0202  2A10               	goto	i1l1528
  2829  0203                     i1l1524:	
  2830  0203  3064               	movlw	100
  2831  0204  0679               	xorwf	print_Countdown@num,w
  2832  0205  047A               	iorwf	print_Countdown@num+1,w
  2833  0206  1D03               	btfss	3,2
  2834  0207  2A09               	goto	u122_21
  2835  0208  2A0A               	goto	u122_20
  2836  0209                     u122_21:	
  2837  0209  2A10               	goto	i1l1528
  2838  020A                     u122_20:	
  2839  020A                     i1l1526:	
  2840                           
  2841                           ;main.c: 486:         length = 3;
  2842  020A  3003               	movlw	3
  2843  020B  1283               	bcf	3,5	;RP0=0, select bank0
  2844  020C  1303               	bcf	3,6	;RP1=0, select bank0
  2845  020D  00EB               	movwf	print_Countdown@length
  2846  020E  3000               	movlw	0
  2847  020F  00EC               	movwf	print_Countdown@length+1
  2848  0210                     i1l1528:	
  2849                           
  2850                           ;main.c: 488:     if(num != 0)
  2851  0210  0879               	movf	print_Countdown@num,w
  2852  0211  047A               	iorwf	print_Countdown@num+1,w
  2853  0212  1903               	btfsc	3,2
  2854  0213  2A15               	goto	u123_21
  2855  0214  2A16               	goto	u123_20
  2856  0215                     u123_21:	
  2857  0215  2A4F               	goto	i1l1540
  2858  0216                     u123_20:	
  2859  0216  2A48               	goto	i1l1538
  2860  0217                     i1l1532:	
  2861                           
  2862                           ;main.c: 491:         {;main.c: 492:             resultNum[i] = num%10 + '0';
  2863  0217  300A               	movlw	10
  2864  0218  00F0               	movwf	___awmod@divisor
  2865  0219  3000               	movlw	0
  2866  021A  00F1               	movwf	___awmod@divisor+1
  2867  021B  087A               	movf	print_Countdown@num+1,w
  2868  021C  00F3               	movwf	___awmod@dividend+1
  2869  021D  0879               	movf	print_Countdown@num,w
  2870  021E  00F2               	movwf	___awmod@dividend
  2871  021F  120A  118A  2522  120A  118A  	fcall	___awmod
  2872  0224  0870               	movf	?___awmod,w
  2873  0225  3E30               	addlw	48
  2874  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2875  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2876  0228  00A0               	movwf	??_print_Countdown
  2877  0229  086D               	movf	print_Countdown@i,w
  2878  022A  3E68               	addlw	(low (print_Countdown@resultNum| 0))& (0+255)
  2879  022B  0084               	movwf	4
  2880  022C  0820               	movf	??_print_Countdown,w
  2881  022D  1383               	bcf	3,7	;select IRP bank0
  2882  022E  0080               	movwf	0
  2883  022F                     i1l1534:	
  2884                           
  2885                           ;main.c: 493:             num /= 10;
  2886  022F  300A               	movlw	10
  2887  0230  00F0               	movwf	___awdiv@divisor
  2888  0231  3000               	movlw	0
  2889  0232  00F1               	movwf	___awdiv@divisor+1
  2890  0233  087A               	movf	print_Countdown@num+1,w
  2891  0234  00F3               	movwf	___awdiv@dividend+1
  2892  0235  0879               	movf	print_Countdown@num,w
  2893  0236  00F2               	movwf	___awdiv@dividend
  2894  0237  120A  118A  24BB  120A  118A  	fcall	___awdiv
  2895  023C  0871               	movf	?___awdiv+1,w
  2896  023D  00FA               	movwf	print_Countdown@num+1
  2897  023E  0870               	movf	?___awdiv,w
  2898  023F  00F9               	movwf	print_Countdown@num
  2899  0240                     i1l1536:	
  2900                           
  2901                           ;main.c: 494:             i++;
  2902  0240  3001               	movlw	1
  2903  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2904  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2905  0243  07ED               	addwf	print_Countdown@i,f
  2906  0244  1803               	skipnc
  2907  0245  0AEE               	incf	print_Countdown@i+1,f
  2908  0246  3000               	movlw	0
  2909  0247  07EE               	addwf	print_Countdown@i+1,f
  2910  0248                     i1l1538:	
  2911                           
  2912                           ;main.c: 490:         while(num)
  2913  0248  0879               	movf	print_Countdown@num,w
  2914  0249  047A               	iorwf	print_Countdown@num+1,w
  2915  024A  1D03               	btfss	3,2
  2916  024B  2A4D               	goto	u124_21
  2917  024C  2A4E               	goto	u124_20
  2918  024D                     u124_21:	
  2919  024D  2A17               	goto	i1l1532
  2920  024E                     u124_20:	
  2921  024E  2A55               	goto	i1l1542
  2922  024F                     i1l1540:	
  2923                           
  2924                           ;main.c: 498:     {;main.c: 499:         resultNum[0] = '0';
  2925  024F  3030               	movlw	48
  2926  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2927  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2928  0252  00A0               	movwf	??_print_Countdown
  2929  0253  0820               	movf	??_print_Countdown,w
  2930  0254  00E8               	movwf	print_Countdown@resultNum
  2931  0255                     i1l1542:	
  2932                           
  2933                           ;main.c: 502:     for(i=0; i<length; i++)
  2934  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2935  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2936  0257  01ED               	clrf	print_Countdown@i
  2937  0258  01EE               	clrf	print_Countdown@i+1
  2938  0259  2A6E               	goto	i1l1548
  2939  025A                     i1l1544:	
  2940                           
  2941                           ;main.c: 503:     {;main.c: 504:         firstStr[13-i] = resultNum[i];
  2942  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2943  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2944  025C  086D               	movf	print_Countdown@i,w
  2945  025D  3E68               	addlw	(low (print_Countdown@resultNum| 0))& (0+255)
  2946  025E  0084               	movwf	4
  2947  025F  1383               	bcf	3,7	;select IRP bank0
  2948  0260  0800               	movf	0,w
  2949  0261  00A0               	movwf	??_print_Countdown
  2950  0262  086D               	movf	print_Countdown@i,w
  2951  0263  3C0D               	sublw	13
  2952  0264  3E57               	addlw	(low (print_Countdown@firstStr| 0))& (0+255)
  2953  0265  0084               	movwf	4
  2954  0266  0820               	movf	??_print_Countdown,w
  2955  0267  0080               	movwf	0
  2956  0268                     i1l1546:	
  2957                           
  2958                           ;main.c: 505:     }
  2959  0268  3001               	movlw	1
  2960  0269  07ED               	addwf	print_Countdown@i,f
  2961  026A  1803               	skipnc
  2962  026B  0AEE               	incf	print_Countdown@i+1,f
  2963  026C  3000               	movlw	0
  2964  026D  07EE               	addwf	print_Countdown@i+1,f
  2965  026E                     i1l1548:	
  2966  026E  086E               	movf	print_Countdown@i+1,w
  2967  026F  3A80               	xorlw	128
  2968  0270  00A0               	movwf	??_print_Countdown
  2969  0271  086C               	movf	print_Countdown@length+1,w
  2970  0272  3A80               	xorlw	128
  2971  0273  0220               	subwf	??_print_Countdown,w
  2972  0274  1D03               	skipz
  2973  0275  2A78               	goto	u125_25
  2974  0276  086B               	movf	print_Countdown@length,w
  2975  0277  026D               	subwf	print_Countdown@i,w
  2976  0278                     u125_25:	
  2977  0278  1C03               	skipc
  2978  0279  2A7B               	goto	u125_21
  2979  027A  2A7C               	goto	u125_20
  2980  027B                     u125_21:	
  2981  027B  2A5A               	goto	i1l1544
  2982  027C                     u125_20:	
  2983  027C                     i1l1550:	
  2984                           
  2985                           ;main.c: 507:     send_cmd(0x01);
  2986  027C  3001               	movlw	1
  2987  027D  120A  118A  26BB  120A  118A  	fcall	i1_send_cmd
  2988                           
  2989                           ;main.c: 508:     send_cmd(0xC0);
  2990  0282  30C0               	movlw	192
  2991  0283  120A  118A  26BB  120A  118A  	fcall	i1_send_cmd
  2992  0288                     i1l1552:	
  2993                           
  2994                           ;main.c: 509:     if(statoSem==0)
  2995  0288  087B               	movf	print_Countdown@statoSem,w
  2996  0289  1D03               	btfss	3,2
  2997  028A  2A8C               	goto	u126_21
  2998  028B  2A8D               	goto	u126_20
  2999  028C                     u126_21:	
  3000  028C  2AAB               	goto	i1l1558
  3001  028D                     u126_20:	
  3002  028D                     i1l1554:	
  3003                           
  3004                           ;main.c: 510:     {;main.c: 511:        char secondStr[17] = "Sem 0:     Verde";
  3005  028D  3024               	movlw	print_Countdown@secondStr& (0+255)
  3006  028E  0084               	movwf	4
  3007  028F  30B2               	movlw	low print_Countdown@F927
  3008  0290  1283               	bcf	3,5	;RP0=0, select bank0
  3009  0291  1303               	bcf	3,6	;RP1=0, select bank0
  3010  0292  00A0               	movwf	??_print_Countdown
  3011  0293  0804               	movf	4,w
  3012  0294  00A1               	movwf	??_print_Countdown+1
  3013  0295  3011               	movlw	17
  3014  0296  00A2               	movwf	??_print_Countdown+2
  3015  0297                     u127_20:	
  3016  0297  0820               	movf	??_print_Countdown,w
  3017  0298  0084               	movwf	4
  3018  0299  1783               	bsf	3,7	;select IRP bank3
  3019  029A  0800               	movf	0,w
  3020  029B  00A3               	movwf	??_print_Countdown+3
  3021  029C  0AA0               	incf	??_print_Countdown,f
  3022  029D  0821               	movf	??_print_Countdown+1,w
  3023  029E  0084               	movwf	4
  3024  029F  1383               	bcf	3,7	;select IRP bank0
  3025  02A0  0823               	movf	??_print_Countdown+3,w
  3026  02A1  0080               	movwf	0
  3027  02A2  0AA1               	incf	??_print_Countdown+1,f
  3028  02A3  0BA2               	decfsz	??_print_Countdown+2,f
  3029  02A4  2A97               	goto	u127_20
  3030  02A5                     i1l1556:	
  3031                           
  3032                           ;main.c: 512:        send_string(secondStr);
  3033  02A5  3024               	movlw	(low (print_Countdown@secondStr| 0))& (0+255)
  3034  02A6  120A  118A  269A  120A  118A  	fcall	_send_string
  3035  02AB                     i1l1558:	
  3036                           
  3037                           ;main.c: 514:     if(statoSem==1)
  3038  02AB  037B               	decf	print_Countdown@statoSem,w
  3039  02AC  1D03               	btfss	3,2
  3040  02AD  2AAF               	goto	u128_21
  3041  02AE  2AB0               	goto	u128_20
  3042  02AF                     u128_21:	
  3043  02AF  2ACE               	goto	i1l1564
  3044  02B0                     u128_20:	
  3045  02B0                     i1l1560:	
  3046                           
  3047                           ;main.c: 515:     {;main.c: 516:        char secondStr[17] = "Sem 0:    Giallo";
  3048  02B0  3035               	movlw	print_Countdown@secondStr_401& (0+255)
  3049  02B1  0084               	movwf	4
  3050  02B2  30A1               	movlw	low print_Countdown@F929
  3051  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  3052  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  3053  02B5  00A0               	movwf	??_print_Countdown
  3054  02B6  0804               	movf	4,w
  3055  02B7  00A1               	movwf	??_print_Countdown+1
  3056  02B8  3011               	movlw	17
  3057  02B9  00A2               	movwf	??_print_Countdown+2
  3058  02BA                     u129_20:	
  3059  02BA  0820               	movf	??_print_Countdown,w
  3060  02BB  0084               	movwf	4
  3061  02BC  1783               	bsf	3,7	;select IRP bank3
  3062  02BD  0800               	movf	0,w
  3063  02BE  00A3               	movwf	??_print_Countdown+3
  3064  02BF  0AA0               	incf	??_print_Countdown,f
  3065  02C0  0821               	movf	??_print_Countdown+1,w
  3066  02C1  0084               	movwf	4
  3067  02C2  1383               	bcf	3,7	;select IRP bank0
  3068  02C3  0823               	movf	??_print_Countdown+3,w
  3069  02C4  0080               	movwf	0
  3070  02C5  0AA1               	incf	??_print_Countdown+1,f
  3071  02C6  0BA2               	decfsz	??_print_Countdown+2,f
  3072  02C7  2ABA               	goto	u129_20
  3073  02C8                     i1l1562:	
  3074                           
  3075                           ;main.c: 517:        send_string(secondStr);
  3076  02C8  3035               	movlw	(low (print_Countdown@secondStr_401| 0))& (0+255)
  3077  02C9  120A  118A  269A  120A  118A  	fcall	_send_string
  3078  02CE                     i1l1564:	
  3079                           
  3080                           ;main.c: 519:     if(statoSem==2)
  3081  02CE  3002               	movlw	2
  3082  02CF  067B               	xorwf	print_Countdown@statoSem,w
  3083  02D0  1D03               	btfss	3,2
  3084  02D1  2AD3               	goto	u130_21
  3085  02D2  2AD4               	goto	u130_20
  3086  02D3                     u130_21:	
  3087  02D3  2AF2               	goto	i1l1570
  3088  02D4                     u130_20:	
  3089  02D4                     i1l1566:	
  3090                           
  3091                           ;main.c: 520:     {;main.c: 521:        char secondStr[17] = "Sem 0:     Rosso";
  3092  02D4  3046               	movlw	print_Countdown@secondStr_403& (0+255)
  3093  02D5  0084               	movwf	4
  3094  02D6  3090               	movlw	low print_Countdown@F931
  3095  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  3096  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  3097  02D9  00A0               	movwf	??_print_Countdown
  3098  02DA  0804               	movf	4,w
  3099  02DB  00A1               	movwf	??_print_Countdown+1
  3100  02DC  3011               	movlw	17
  3101  02DD  00A2               	movwf	??_print_Countdown+2
  3102  02DE                     u131_20:	
  3103  02DE  0820               	movf	??_print_Countdown,w
  3104  02DF  0084               	movwf	4
  3105  02E0  1783               	bsf	3,7	;select IRP bank3
  3106  02E1  0800               	movf	0,w
  3107  02E2  00A3               	movwf	??_print_Countdown+3
  3108  02E3  0AA0               	incf	??_print_Countdown,f
  3109  02E4  0821               	movf	??_print_Countdown+1,w
  3110  02E5  0084               	movwf	4
  3111  02E6  1383               	bcf	3,7	;select IRP bank0
  3112  02E7  0823               	movf	??_print_Countdown+3,w
  3113  02E8  0080               	movwf	0
  3114  02E9  0AA1               	incf	??_print_Countdown+1,f
  3115  02EA  0BA2               	decfsz	??_print_Countdown+2,f
  3116  02EB  2ADE               	goto	u131_20
  3117  02EC                     i1l1568:	
  3118                           
  3119                           ;main.c: 522:        send_string(secondStr);
  3120  02EC  3046               	movlw	(low (print_Countdown@secondStr_403| 0))& (0+255)
  3121  02ED  120A  118A  269A  120A  118A  	fcall	_send_string
  3122  02F2                     i1l1570:	
  3123                           
  3124                           ;main.c: 526:     _delay((unsigned long)((100)*(32000000L/4000.0)));
  3125  02F2  3005               	movlw	5
  3126  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  3127  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  3128  02F5  00A2               	movwf	??_print_Countdown+2
  3129  02F6  300F               	movlw	15
  3130  02F7  00A1               	movwf	??_print_Countdown+1
  3131  02F8  30F0               	movlw	240
  3132  02F9  00A0               	movwf	??_print_Countdown
  3133  02FA                     u176_27:	
  3134  02FA  0BA0               	decfsz	??_print_Countdown,f
  3135  02FB  2AFA               	goto	u176_27
  3136  02FC  0BA1               	decfsz	??_print_Countdown+1,f
  3137  02FD  2AFA               	goto	u176_27
  3138  02FE  0BA2               	decfsz	??_print_Countdown+2,f
  3139  02FF  2AFA               	goto	u176_27
  3140  0300  0000               	nop
  3141                           
  3142                           ;main.c: 528:     send_cmd(0x80);
  3143  0301  3080               	movlw	128
  3144  0302  120A  118A  26BB  120A  118A  	fcall	i1_send_cmd
  3145  0307                     i1l1572:	
  3146                           
  3147                           ;main.c: 529:     send_string(firstStr);
  3148  0307  3057               	movlw	(low (print_Countdown@firstStr| 0))& (0+255)
  3149  0308  120A  118A  269A  120A  118A  	fcall	_send_string
  3150  030D                     i1l218:	
  3151  030D  0008               	return
  3152  030E                     __end_of_print_Countdown:	
  3153                           
  3154                           	psect	text11
  3155  06BB                     __ptext11:	
  3156 ;; *************** function i1_send_cmd *****************
  3157 ;; Defined at:
  3158 ;;		line 559 in file "main.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  command         1    wreg     unsigned char 
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;  command         1    2[COMMON] unsigned char 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3172 ;;      Params:         0       0       0       0       0
  3173 ;;      Locals:         1       0       0       0       0
  3174 ;;      Temps:          2       0       0       0       0
  3175 ;;      Totals:         3       0       0       0       0
  3176 ;;Total ram usage:        3 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; This function calls:
  3179 ;;		Nothing
  3180 ;; This function is called by:
  3181 ;;		_print_Countdown
  3182 ;; This function uses a non-reentrant model
  3183 ;;
  3184                           
  3185                           
  3186                           ;psect for function i1_send_cmd
  3187  06BB                     i1_send_cmd:	
  3188                           
  3189                           ;incstack = 0
  3190                           ; Regs used in i1_send_cmd: [wreg]
  3191                           ;i1send_cmd@command stored from wreg
  3192  06BB  00F2               	movwf	i1send_cmd@command
  3193  06BC                     i1l1460:	
  3194                           
  3195                           ;main.c: 559: void send_cmd(char command);main.c: 560: {;main.c: 561:     PORTEbits.RE1 
      +                          = 1;
  3196  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  3197  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  3198  06BE  1489               	bsf	9,1	;volatile
  3199  06BF                     i1l1462:	
  3200                           
  3201                           ;main.c: 562:     PORTD = command;
  3202  06BF  0872               	movf	i1send_cmd@command,w
  3203  06C0  0088               	movwf	8	;volatile
  3204  06C1                     i1l1464:	
  3205                           
  3206                           ;main.c: 563:     PORTEbits.RE2 = 0;
  3207  06C1  1109               	bcf	9,2	;volatile
  3208                           
  3209                           ;main.c: 564:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3210  06C2  3020               	movlw	32
  3211  06C3  00F1               	movwf	??i1_send_cmd+1
  3212  06C4  3029               	movlw	41
  3213  06C5  00F0               	movwf	??i1_send_cmd
  3214  06C6                     u177_27:	
  3215  06C6  0BF0               	decfsz	??i1_send_cmd,f
  3216  06C7  2EC6               	goto	u177_27
  3217  06C8  0BF1               	decfsz	??i1_send_cmd+1,f
  3218  06C9  2EC6               	goto	u177_27
  3219  06CA  2ECB               	nop2
  3220  06CB                     i1l1466:	
  3221                           
  3222                           ;main.c: 565:     PORTEbits.RE1 = 0;
  3223  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  3224  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  3225  06CD  1089               	bcf	9,1	;volatile
  3226                           
  3227                           ;main.c: 566:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3228  06CE  3020               	movlw	32
  3229  06CF  00F1               	movwf	??i1_send_cmd+1
  3230  06D0  3029               	movlw	41
  3231  06D1  00F0               	movwf	??i1_send_cmd
  3232  06D2                     u178_27:	
  3233  06D2  0BF0               	decfsz	??i1_send_cmd,f
  3234  06D3  2ED2               	goto	u178_27
  3235  06D4  0BF1               	decfsz	??i1_send_cmd+1,f
  3236  06D5  2ED2               	goto	u178_27
  3237  06D6  2ED7               	nop2
  3238  06D7                     i1l1468:	
  3239                           
  3240                           ;main.c: 567:     PORTEbits.RE1 = 1;
  3241  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3242  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  3243  06D9  1489               	bsf	9,1	;volatile
  3244  06DA                     i1l230:	
  3245  06DA  0008               	return
  3246  06DB                     __end_ofi1_send_cmd:	
  3247                           
  3248                           	psect	text12
  3249  069A                     __ptext12:	
  3250 ;; *************** function _send_string *****************
  3251 ;; Defined at:
  3252 ;;		line 536 in file "main.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  str             1    wreg     PTR unsigned char 
  3255 ;;		 -> print_Countdown@secondStr_403(17), print_Countdown@secondStr_401(17), print_Countdown@secondStr(17), print_Count
      +down@firstStr(17), 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  str             1    6[COMMON] PTR unsigned char 
  3258 ;;		 -> print_Countdown@secondStr_403(17), print_Countdown@secondStr_401(17), print_Countdown@secondStr(17), print_Count
      +down@firstStr(17), 
  3259 ;;  i               2    4[COMMON] int 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3269 ;;      Params:         0       0       0       0       0
  3270 ;;      Locals:         3       0       0       0       0
  3271 ;;      Temps:          1       0       0       0       0
  3272 ;;      Totals:         4       0       0       0       0
  3273 ;;Total ram usage:        4 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    1
  3276 ;; This function calls:
  3277 ;;		_send_data
  3278 ;; This function is called by:
  3279 ;;		_print_Countdown
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           
  3284                           ;psect for function _send_string
  3285  069A                     _send_string:	
  3286                           
  3287                           ;incstack = 0
  3288                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3289                           ;send_string@str stored from wreg
  3290  069A  00F6               	movwf	send_string@str
  3291  069B                     i1l1330:	
  3292                           
  3293                           ;main.c: 536: void send_string(char *str);main.c: 537: {;main.c: 538:     int i = 0;
  3294  069B  01F4               	clrf	send_string@i
  3295  069C  01F5               	clrf	send_string@i+1
  3296                           
  3297                           ;main.c: 539:     while(str[i] != '\0')
  3298  069D  2EAF               	goto	i1l1336
  3299  069E                     i1l1332:	
  3300                           
  3301                           ;main.c: 540:     {;main.c: 541:         send_data(str[i]);
  3302  069E  0874               	movf	send_string@i,w
  3303  069F  0776               	addwf	send_string@str,w
  3304  06A0  00F3               	movwf	??_send_string
  3305  06A1  0873               	movf	??_send_string,w
  3306  06A2  0084               	movwf	4
  3307  06A3  0800               	movf	0,w
  3308  06A4  120A  118A  26DB  120A  118A  	fcall	_send_data
  3309  06A9                     i1l1334:	
  3310                           
  3311                           ;main.c: 542:         i++;
  3312  06A9  3001               	movlw	1
  3313  06AA  07F4               	addwf	send_string@i,f
  3314  06AB  1803               	skipnc
  3315  06AC  0AF5               	incf	send_string@i+1,f
  3316  06AD  3000               	movlw	0
  3317  06AE  07F5               	addwf	send_string@i+1,f
  3318  06AF                     i1l1336:	
  3319                           
  3320                           ;main.c: 539:     while(str[i] != '\0')
  3321  06AF  0874               	movf	send_string@i,w
  3322  06B0  0776               	addwf	send_string@str,w
  3323  06B1  00F3               	movwf	??_send_string
  3324  06B2  0873               	movf	??_send_string,w
  3325  06B3  0084               	movwf	4
  3326  06B4  1383               	bcf	3,7	;select IRP bank0
  3327  06B5  0800               	movf	0,w
  3328  06B6  1D03               	btfss	3,2
  3329  06B7  2EB9               	goto	u89_21
  3330  06B8  2EBA               	goto	u89_20
  3331  06B9                     u89_21:	
  3332  06B9  2E9E               	goto	i1l1332
  3333  06BA                     u89_20:	
  3334  06BA                     i1l224:	
  3335  06BA  0008               	return
  3336  06BB                     __end_of_send_string:	
  3337                           
  3338                           	psect	text13
  3339  06DB                     __ptext13:	
  3340 ;; *************** function _send_data *****************
  3341 ;; Defined at:
  3342 ;;		line 547 in file "main.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  data            1    wreg     unsigned char 
  3345 ;; Auto vars:     Size  Location     Type
  3346 ;;  data            1    2[COMMON] unsigned char 
  3347 ;; Return value:  Size  Location     Type
  3348 ;;                  1    wreg      void 
  3349 ;; Registers used:
  3350 ;;		wreg
  3351 ;; Tracked objects:
  3352 ;;		On entry : 0/0
  3353 ;;		On exit  : 0/0
  3354 ;;		Unchanged: 0/0
  3355 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3356 ;;      Params:         0       0       0       0       0
  3357 ;;      Locals:         1       0       0       0       0
  3358 ;;      Temps:          2       0       0       0       0
  3359 ;;      Totals:         3       0       0       0       0
  3360 ;;Total ram usage:        3 bytes
  3361 ;; Hardware stack levels used:    1
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_send_string
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           
  3370                           ;psect for function _send_data
  3371  06DB                     _send_data:	
  3372                           
  3373                           ;incstack = 0
  3374                           ; Regs used in _send_data: [wreg]
  3375                           ;send_data@data stored from wreg
  3376  06DB  00F2               	movwf	send_data@data
  3377  06DC                     i1l1298:	
  3378                           
  3379                           ;main.c: 547: void send_data(char data);main.c: 548: {;main.c: 549:     PORTEbits.RE1 = 
      +                          1;
  3380  06DC  1283               	bcf	3,5	;RP0=0, select bank0
  3381  06DD  1303               	bcf	3,6	;RP1=0, select bank0
  3382  06DE  1489               	bsf	9,1	;volatile
  3383  06DF                     i1l1300:	
  3384                           
  3385                           ;main.c: 550:     PORTD = data;
  3386  06DF  0872               	movf	send_data@data,w
  3387  06E0  0088               	movwf	8	;volatile
  3388  06E1                     i1l1302:	
  3389                           
  3390                           ;main.c: 551:     PORTEbits.RE2 = 1;
  3391  06E1  1509               	bsf	9,2	;volatile
  3392                           
  3393                           ;main.c: 552:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3394  06E2  3020               	movlw	32
  3395  06E3  00F1               	movwf	??_send_data+1
  3396  06E4  3029               	movlw	41
  3397  06E5  00F0               	movwf	??_send_data
  3398  06E6                     u179_27:	
  3399  06E6  0BF0               	decfsz	??_send_data,f
  3400  06E7  2EE6               	goto	u179_27
  3401  06E8  0BF1               	decfsz	??_send_data+1,f
  3402  06E9  2EE6               	goto	u179_27
  3403  06EA  2EEB               	nop2
  3404  06EB                     i1l1304:	
  3405                           
  3406                           ;main.c: 553:     PORTEbits.RE1 = 0;
  3407  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  3408  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  3409  06ED  1089               	bcf	9,1	;volatile
  3410                           
  3411                           ;main.c: 554:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3412  06EE  3020               	movlw	32
  3413  06EF  00F1               	movwf	??_send_data+1
  3414  06F0  3029               	movlw	41
  3415  06F1  00F0               	movwf	??_send_data
  3416  06F2                     u180_27:	
  3417  06F2  0BF0               	decfsz	??_send_data,f
  3418  06F3  2EF2               	goto	u180_27
  3419  06F4  0BF1               	decfsz	??_send_data+1,f
  3420  06F5  2EF2               	goto	u180_27
  3421  06F6  2EF7               	nop2
  3422  06F7                     i1l1306:	
  3423                           
  3424                           ;main.c: 555:     PORTEbits.RE1 = 1;
  3425  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  3426  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  3427  06F9  1489               	bsf	9,1	;volatile
  3428  06FA                     i1l227:	
  3429  06FA  0008               	return
  3430  06FB                     __end_of_send_data:	
  3431                           
  3432                           	psect	text14
  3433  0522                     __ptext14:	
  3434 ;; *************** function ___awmod *****************
  3435 ;; Defined at:
  3436 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3437 ;; Parameters:    Size  Location     Type
  3438 ;;  divisor         2    0[COMMON] int 
  3439 ;;  dividend        2    2[COMMON] int 
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;  sign            1    6[COMMON] unsigned char 
  3442 ;;  counter         1    5[COMMON] unsigned char 
  3443 ;; Return value:  Size  Location     Type
  3444 ;;                  2    0[COMMON] int 
  3445 ;; Registers used:
  3446 ;;		wreg, status,2, status,0
  3447 ;; Tracked objects:
  3448 ;;		On entry : 0/0
  3449 ;;		On exit  : 0/0
  3450 ;;		Unchanged: 0/0
  3451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3452 ;;      Params:         4       0       0       0       0
  3453 ;;      Locals:         2       0       0       0       0
  3454 ;;      Temps:          1       0       0       0       0
  3455 ;;      Totals:         7       0       0       0       0
  3456 ;;Total ram usage:        7 bytes
  3457 ;; Hardware stack levels used:    1
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_print_Countdown
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           
  3466                           ;psect for function ___awmod
  3467  0522                     ___awmod:	
  3468  0522                     i1l1422:	
  3469                           ;incstack = 0
  3470                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3471                           
  3472  0522  01F6               	clrf	___awmod@sign
  3473  0523                     i1l1424:	
  3474  0523  1FF3               	btfss	___awmod@dividend+1,7
  3475  0524  2D26               	goto	u110_21
  3476  0525  2D27               	goto	u110_20
  3477  0526                     u110_21:	
  3478  0526  2D2E               	goto	i1l1430
  3479  0527                     u110_20:	
  3480  0527                     i1l1426:	
  3481  0527  09F2               	comf	___awmod@dividend,f
  3482  0528  09F3               	comf	___awmod@dividend+1,f
  3483  0529  0AF2               	incf	___awmod@dividend,f
  3484  052A  1903               	skipnz
  3485  052B  0AF3               	incf	___awmod@dividend+1,f
  3486  052C                     i1l1428:	
  3487  052C  01F6               	clrf	___awmod@sign
  3488  052D  0AF6               	incf	___awmod@sign,f
  3489  052E                     i1l1430:	
  3490  052E  1FF1               	btfss	___awmod@divisor+1,7
  3491  052F  2D31               	goto	u111_21
  3492  0530  2D32               	goto	u111_20
  3493  0531                     u111_21:	
  3494  0531  2D37               	goto	i1l1434
  3495  0532                     u111_20:	
  3496  0532                     i1l1432:	
  3497  0532  09F0               	comf	___awmod@divisor,f
  3498  0533  09F1               	comf	___awmod@divisor+1,f
  3499  0534  0AF0               	incf	___awmod@divisor,f
  3500  0535  1903               	skipnz
  3501  0536  0AF1               	incf	___awmod@divisor+1,f
  3502  0537                     i1l1434:	
  3503  0537  0870               	movf	___awmod@divisor,w
  3504  0538  0471               	iorwf	___awmod@divisor+1,w
  3505  0539  1903               	btfsc	3,2
  3506  053A  2D3C               	goto	u112_21
  3507  053B  2D3D               	goto	u112_20
  3508  053C                     u112_21:	
  3509  053C  2D6C               	goto	i1l1452
  3510  053D                     u112_20:	
  3511  053D                     i1l1436:	
  3512  053D  01F5               	clrf	___awmod@counter
  3513  053E  0AF5               	incf	___awmod@counter,f
  3514  053F  2D4B               	goto	i1l1442
  3515  0540                     i1l1438:	
  3516  0540  3001               	movlw	1
  3517  0541                     u113_25:	
  3518  0541  1003               	clrc
  3519  0542  0DF0               	rlf	___awmod@divisor,f
  3520  0543  0DF1               	rlf	___awmod@divisor+1,f
  3521  0544  3EFF               	addlw	-1
  3522  0545  1D03               	skipz
  3523  0546  2D41               	goto	u113_25
  3524  0547                     i1l1440:	
  3525  0547  3001               	movlw	1
  3526  0548  00F4               	movwf	??___awmod
  3527  0549  0874               	movf	??___awmod,w
  3528  054A  07F5               	addwf	___awmod@counter,f
  3529  054B                     i1l1442:	
  3530  054B  1FF1               	btfss	___awmod@divisor+1,7
  3531  054C  2D4E               	goto	u114_21
  3532  054D  2D4F               	goto	u114_20
  3533  054E                     u114_21:	
  3534  054E  2D40               	goto	i1l1438
  3535  054F                     u114_20:	
  3536  054F                     i1l1444:	
  3537  054F  0871               	movf	___awmod@divisor+1,w
  3538  0550  0273               	subwf	___awmod@dividend+1,w
  3539  0551  1D03               	skipz
  3540  0552  2D55               	goto	u115_25
  3541  0553  0870               	movf	___awmod@divisor,w
  3542  0554  0272               	subwf	___awmod@dividend,w
  3543  0555                     u115_25:	
  3544  0555  1C03               	skipc
  3545  0556  2D58               	goto	u115_21
  3546  0557  2D59               	goto	u115_20
  3547  0558                     u115_21:	
  3548  0558  2D5F               	goto	i1l1448
  3549  0559                     u115_20:	
  3550  0559                     i1l1446:	
  3551  0559  0870               	movf	___awmod@divisor,w
  3552  055A  02F2               	subwf	___awmod@dividend,f
  3553  055B  0871               	movf	___awmod@divisor+1,w
  3554  055C  1C03               	skipc
  3555  055D  03F3               	decf	___awmod@dividend+1,f
  3556  055E  02F3               	subwf	___awmod@dividend+1,f
  3557  055F                     i1l1448:	
  3558  055F  3001               	movlw	1
  3559  0560                     u116_25:	
  3560  0560  1003               	clrc
  3561  0561  0CF1               	rrf	___awmod@divisor+1,f
  3562  0562  0CF0               	rrf	___awmod@divisor,f
  3563  0563  3EFF               	addlw	-1
  3564  0564  1D03               	skipz
  3565  0565  2D60               	goto	u116_25
  3566  0566                     i1l1450:	
  3567  0566  3001               	movlw	1
  3568  0567  02F5               	subwf	___awmod@counter,f
  3569  0568  1D03               	btfss	3,2
  3570  0569  2D6B               	goto	u117_21
  3571  056A  2D6C               	goto	u117_20
  3572  056B                     u117_21:	
  3573  056B  2D4F               	goto	i1l1444
  3574  056C                     u117_20:	
  3575  056C                     i1l1452:	
  3576  056C  0876               	movf	___awmod@sign,w
  3577  056D  1903               	btfsc	3,2
  3578  056E  2D70               	goto	u118_21
  3579  056F  2D71               	goto	u118_20
  3580  0570                     u118_21:	
  3581  0570  2D76               	goto	i1l1456
  3582  0571                     u118_20:	
  3583  0571                     i1l1454:	
  3584  0571  09F2               	comf	___awmod@dividend,f
  3585  0572  09F3               	comf	___awmod@dividend+1,f
  3586  0573  0AF2               	incf	___awmod@dividend,f
  3587  0574  1903               	skipnz
  3588  0575  0AF3               	incf	___awmod@dividend+1,f
  3589  0576                     i1l1456:	
  3590  0576  0873               	movf	___awmod@dividend+1,w
  3591  0577  00F1               	movwf	?___awmod+1
  3592  0578  0872               	movf	___awmod@dividend,w
  3593  0579  00F0               	movwf	?___awmod
  3594  057A                     i1l494:	
  3595  057A  0008               	return
  3596  057B                     __end_of___awmod:	
  3597                           
  3598                           	psect	text15
  3599  04BB                     __ptext15:	
  3600 ;; *************** function ___awdiv *****************
  3601 ;; Defined at:
  3602 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;  divisor         2    0[COMMON] int 
  3605 ;;  dividend        2    2[COMMON] int 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;  quotient        2    7[COMMON] int 
  3608 ;;  sign            1    6[COMMON] unsigned char 
  3609 ;;  counter         1    5[COMMON] unsigned char 
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  2    0[COMMON] int 
  3612 ;; Registers used:
  3613 ;;		wreg, status,2, status,0
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3619 ;;      Params:         4       0       0       0       0
  3620 ;;      Locals:         4       0       0       0       0
  3621 ;;      Temps:          1       0       0       0       0
  3622 ;;      Totals:         9       0       0       0       0
  3623 ;;Total ram usage:        9 bytes
  3624 ;; Hardware stack levels used:    1
  3625 ;; This function calls:
  3626 ;;		Nothing
  3627 ;; This function is called by:
  3628 ;;		_print_Countdown
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           
  3633                           ;psect for function ___awdiv
  3634  04BB                     ___awdiv:	
  3635  04BB                     i1l1378:	
  3636                           ;incstack = 0
  3637                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3638                           
  3639  04BB  01F6               	clrf	___awdiv@sign
  3640  04BC                     i1l1380:	
  3641  04BC  1FF1               	btfss	___awdiv@divisor+1,7
  3642  04BD  2CBF               	goto	u100_21
  3643  04BE  2CC0               	goto	u100_20
  3644  04BF                     u100_21:	
  3645  04BF  2CC7               	goto	i1l1386
  3646  04C0                     u100_20:	
  3647  04C0                     i1l1382:	
  3648  04C0  09F0               	comf	___awdiv@divisor,f
  3649  04C1  09F1               	comf	___awdiv@divisor+1,f
  3650  04C2  0AF0               	incf	___awdiv@divisor,f
  3651  04C3  1903               	skipnz
  3652  04C4  0AF1               	incf	___awdiv@divisor+1,f
  3653  04C5                     i1l1384:	
  3654  04C5  01F6               	clrf	___awdiv@sign
  3655  04C6  0AF6               	incf	___awdiv@sign,f
  3656  04C7                     i1l1386:	
  3657  04C7  1FF3               	btfss	___awdiv@dividend+1,7
  3658  04C8  2CCA               	goto	u101_21
  3659  04C9  2CCB               	goto	u101_20
  3660  04CA                     u101_21:	
  3661  04CA  2CD4               	goto	i1l1392
  3662  04CB                     u101_20:	
  3663  04CB                     i1l1388:	
  3664  04CB  09F2               	comf	___awdiv@dividend,f
  3665  04CC  09F3               	comf	___awdiv@dividend+1,f
  3666  04CD  0AF2               	incf	___awdiv@dividend,f
  3667  04CE  1903               	skipnz
  3668  04CF  0AF3               	incf	___awdiv@dividend+1,f
  3669  04D0                     i1l1390:	
  3670  04D0  3001               	movlw	1
  3671  04D1  00F4               	movwf	??___awdiv
  3672  04D2  0874               	movf	??___awdiv,w
  3673  04D3  06F6               	xorwf	___awdiv@sign,f
  3674  04D4                     i1l1392:	
  3675  04D4  01F7               	clrf	___awdiv@quotient
  3676  04D5  01F8               	clrf	___awdiv@quotient+1
  3677  04D6                     i1l1394:	
  3678  04D6  0870               	movf	___awdiv@divisor,w
  3679  04D7  0471               	iorwf	___awdiv@divisor+1,w
  3680  04D8  1903               	btfsc	3,2
  3681  04D9  2CDB               	goto	u102_21
  3682  04DA  2CDC               	goto	u102_20
  3683  04DB                     u102_21:	
  3684  04DB  2D13               	goto	i1l1414
  3685  04DC                     u102_20:	
  3686  04DC                     i1l1396:	
  3687  04DC  01F5               	clrf	___awdiv@counter
  3688  04DD  0AF5               	incf	___awdiv@counter,f
  3689  04DE  2CEA               	goto	i1l1402
  3690  04DF                     i1l1398:	
  3691  04DF  3001               	movlw	1
  3692  04E0                     u103_25:	
  3693  04E0  1003               	clrc
  3694  04E1  0DF0               	rlf	___awdiv@divisor,f
  3695  04E2  0DF1               	rlf	___awdiv@divisor+1,f
  3696  04E3  3EFF               	addlw	-1
  3697  04E4  1D03               	skipz
  3698  04E5  2CE0               	goto	u103_25
  3699  04E6                     i1l1400:	
  3700  04E6  3001               	movlw	1
  3701  04E7  00F4               	movwf	??___awdiv
  3702  04E8  0874               	movf	??___awdiv,w
  3703  04E9  07F5               	addwf	___awdiv@counter,f
  3704  04EA                     i1l1402:	
  3705  04EA  1FF1               	btfss	___awdiv@divisor+1,7
  3706  04EB  2CED               	goto	u104_21
  3707  04EC  2CEE               	goto	u104_20
  3708  04ED                     u104_21:	
  3709  04ED  2CDF               	goto	i1l1398
  3710  04EE                     u104_20:	
  3711  04EE                     i1l1404:	
  3712  04EE  3001               	movlw	1
  3713  04EF                     u105_25:	
  3714  04EF  1003               	clrc
  3715  04F0  0DF7               	rlf	___awdiv@quotient,f
  3716  04F1  0DF8               	rlf	___awdiv@quotient+1,f
  3717  04F2  3EFF               	addlw	-1
  3718  04F3  1D03               	skipz
  3719  04F4  2CEF               	goto	u105_25
  3720  04F5  0871               	movf	___awdiv@divisor+1,w
  3721  04F6  0273               	subwf	___awdiv@dividend+1,w
  3722  04F7  1D03               	skipz
  3723  04F8  2CFB               	goto	u106_25
  3724  04F9  0870               	movf	___awdiv@divisor,w
  3725  04FA  0272               	subwf	___awdiv@dividend,w
  3726  04FB                     u106_25:	
  3727  04FB  1C03               	skipc
  3728  04FC  2CFE               	goto	u106_21
  3729  04FD  2CFF               	goto	u106_20
  3730  04FE                     u106_21:	
  3731  04FE  2D06               	goto	i1l1410
  3732  04FF                     u106_20:	
  3733  04FF                     i1l1406:	
  3734  04FF  0870               	movf	___awdiv@divisor,w
  3735  0500  02F2               	subwf	___awdiv@dividend,f
  3736  0501  0871               	movf	___awdiv@divisor+1,w
  3737  0502  1C03               	skipc
  3738  0503  03F3               	decf	___awdiv@dividend+1,f
  3739  0504  02F3               	subwf	___awdiv@dividend+1,f
  3740  0505                     i1l1408:	
  3741  0505  1477               	bsf	___awdiv@quotient,0
  3742  0506                     i1l1410:	
  3743  0506  3001               	movlw	1
  3744  0507                     u107_25:	
  3745  0507  1003               	clrc
  3746  0508  0CF1               	rrf	___awdiv@divisor+1,f
  3747  0509  0CF0               	rrf	___awdiv@divisor,f
  3748  050A  3EFF               	addlw	-1
  3749  050B  1D03               	skipz
  3750  050C  2D07               	goto	u107_25
  3751  050D                     i1l1412:	
  3752  050D  3001               	movlw	1
  3753  050E  02F5               	subwf	___awdiv@counter,f
  3754  050F  1D03               	btfss	3,2
  3755  0510  2D12               	goto	u108_21
  3756  0511  2D13               	goto	u108_20
  3757  0512                     u108_21:	
  3758  0512  2CEE               	goto	i1l1404
  3759  0513                     u108_20:	
  3760  0513                     i1l1414:	
  3761  0513  0876               	movf	___awdiv@sign,w
  3762  0514  1903               	btfsc	3,2
  3763  0515  2D17               	goto	u109_21
  3764  0516  2D18               	goto	u109_20
  3765  0517                     u109_21:	
  3766  0517  2D1D               	goto	i1l1418
  3767  0518                     u109_20:	
  3768  0518                     i1l1416:	
  3769  0518  09F7               	comf	___awdiv@quotient,f
  3770  0519  09F8               	comf	___awdiv@quotient+1,f
  3771  051A  0AF7               	incf	___awdiv@quotient,f
  3772  051B  1903               	skipnz
  3773  051C  0AF8               	incf	___awdiv@quotient+1,f
  3774  051D                     i1l1418:	
  3775  051D  0878               	movf	___awdiv@quotient+1,w
  3776  051E  00F1               	movwf	?___awdiv+1
  3777  051F  0877               	movf	___awdiv@quotient,w
  3778  0520  00F0               	movwf	?___awdiv
  3779  0521                     i1l481:	
  3780  0521  0008               	return
  3781  0522                     __end_of___awdiv:	
  3782  007E                     btemp	set	126	;btemp
  3783  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        77
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     79      80
    BANK1            80     33      67
    BANK3            96      0      68
    BANK2            96      0       0

Pointer List with Targets:

    send_string@str	PTR unsigned char  size(1) Largest target is 17
		 -> print_Countdown@secondStr_403(BANK0[17]), print_Countdown@secondStr_401(BANK0[17]), print_Countdown@secondStr(BANK0[17]), print_Countdown@firstStr(BANK0[17]), 

    Uart_send_string@str	PTR unsigned char  size(1) Largest target is 8
		 -> strToSend(BANK1[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_print_Countdown
    _print_Countdown->___awdiv
    _send_string->_send_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_print_Countdown

Critical Paths under _main in BANK1

    _main->_UART_init
    _messageTransmission->_Uart_send_string
    _Uart_send_string->_UART_TxChar
    _init_lcd->_send_cmd
    _UART_init->___aldiv

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3331
                                             28 BANK1      5     5      0
                          _UART_init
                            _initPic
                           _init_lcd
                _messageTransmission
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _messageTransmission                                  5     2      3    2513
                                             11 BANK1      5     2      3
                   _Uart_send_string
 ---------------------------------------------------------------------------------
 (2) _Uart_send_string                                     3     3      0     145
                                              8 BANK1      3     3      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              7 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             2     2      0      22
                                             10 BANK1      2     2      0
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _send_cmd                                             3     3      0      22
                                              7 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initPic                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            6     4      2     550
                                             22 BANK1      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              7 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  7     7      0    2110
                                              0 BANK1      7     7      0
                    _print_Countdown
 ---------------------------------------------------------------------------------
 (5) _print_Countdown                                     82    79      3    2110
                                              9 COMMON     3     0      3
                                              0 BANK0     79    79      0
                            ___awdiv
                            ___awmod
                        _send_string
                         i1_send_cmd
 ---------------------------------------------------------------------------------
 (6) i1_send_cmd                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _send_string                                          4     4      0     244
                                              3 COMMON     4     4      0
                          _send_data
 ---------------------------------------------------------------------------------
 (7) _send_data                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
   _initPic
   _init_lcd
     _send_cmd
   _messageTransmission
     _Uart_send_string
       _UART_TxChar
   _send_cmd

 _ISR (ROOT)
   _print_Countdown
     ___awdiv
     ___awmod
     _send_string
       _send_data
     i1_send_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      44       9       70.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     21      43       7       83.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E5      12        0.0%
ABS                  0      0      E5       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jul 17 09:05:59 2020

                               _f 00DE                                 pc 0002                       __CFG_CP$OFF 0000  
                    ___awdiv@sign 0076                                fsr 0004      print_Countdown@secondStr_401 0035  
    print_Countdown@secondStr_403 0046               _messageTransmission 0678                       __CFG_LVP$ON 0000  
                             l141 00FA                               l230 0677                               l233 05D1  
                             l241 0733                               l242 073A                               l403 04BA  
                             l236 064F                               l181 0717                               l239 072E  
                             l184 0749                               l176 0699                               l393 0432  
                    __CFG_CPD$OFF 0000                               _ISR 030E                               u900 0425  
                             u901 0424                               u910 0436                               u911 0435  
                             u920 0455                               u921 0454                               u940 0469  
                             u941 0468                               u870 0733                               u935 045A  
                             u871 0732                               u960 0484                               u880 0717  
                             u961 0483                               u881 0716                               u955 046B  
                             u980 04A2                               u981 04A1                               u965 0480  
                             u990 04A7                               u991 04A6                               u975 0494  
                             fsr0 0004                               indf 0000                      ___awmod@sign 0076  
                    __CFG_FOSC$HS 0000         messageTransmission@codice 00AC                              ?_ISR 0070  
       messageTransmission@valore 00AD                              l1310 0656                              l1312 065C  
                            l1314 0667                              l1340 0421                              l1316 0674  
                            l1308 0653                              l1500 05B3                              l1324 06FF  
                            l1350 044D                              l1342 0425                              l1502 05B9  
                            l1326 070B                              l1318 06FE                              l1510 067B  
                            l1360 0472                              l1352 0455                              l1344 0436  
                            l1504 05BF                              l1328 0711                              l1512 0693  
                            l1600 0093                              l1362 0484                              l1354 0458  
                            l1370 04A2                              l1346 0441                              l1338 041E  
                            l1506 05C5                              l1610 009B                              l1602 0094  
                            l1372 04A7                              l1364 0492                              l1356 0465  
                            l1348 0445                              l1508 05CB                              l1620 00BD  
                            l1612 00A0                              l1604 0099                              l1374 04B2  
                            l1366 0493                              l1358 0469                              l1470 073B  
                            l1294 072E                              l1630 00DB                              l1622 00C2  
                            l1614 00AA                              l1368 049C                              l1480 064C  
                            l1472 073E                              l1296 0734                              l1640 00F5  
                            l1632 00E2                              l1616 00B3                              l1624 00C9  
                            l1482 064D                              l1474 0740                              l1490 0589  
                            l1650 0199                              l1626 00CF                              l1634 00E8  
                            l1618 00B6                              l1642 00FC                              l1484 064E  
                            l1476 0616                              l1492 058C                              l1652 019C  
                            l1660 01C3                              l1644 0100                              l1636 00EE  
                            l1628 00D8                              l1580 006E                              l1478 061E  
                            l1494 0592                              l1486 057B                              l1662 01C8  
                            l1654 01AF                              l1638 00F1                              l1646 0106  
                            l1590 0080                              l1582 0072                              l1574 0049  
                            l1496 05A2                              l1488 057F                              l1664 01CC  
                            l1656 01BF                              l1648 010B                              l1592 0085  
                            l1584 0076                              l1576 0064                              l1498 05AD  
                            l1658 01C2                              l1594 0089                              l1586 007B  
                            l1578 006A                              l1596 008A                              l1588 007F  
                            l1598 008F                              u1400 00CF                              u1320 007B  
                            u1401 00CE                              u1321 007A                              u1410 00D8  
                            u1330 0085                              u1411 00D7                              u1331 0084  
                            u1420 00E7                              u1340 008F                              u1421 00E6  
                            u1341 008E                              u1190 062F                              u1430 00EE  
                            u1350 0099                              u1431 00ED                              u1351 0098  
                            u1440 00FA                              u1360 00A0                              u1441 00F9  
                            u1361 009F                              u1450 0106                              u1370 00AA  
                            u1195 062A                              u1451 0105                              u1371 00A9  
                            u1460 010B                              u1380 00B3                              u1461 010A  
                            u1381 00B2                              u1470 01C8                              u1390 00C2  
                            u1471 01C7                              u1391 00C1                              u1717 0585  
                            u1727 0598                              u1737 05A8                              u1747 0663  
                            u1757 0670                              _RCIF 0065                              _TMR0 0001  
                            _TXIF 0064              ?_messageTransmission 00AB                      __CFG_WRT$OFF 0000  
                            _main 0049                        i1_send_cmd 06BB                              btemp 007E  
                   __CFG_BOREN$ON 0000                              start 0016                     _statoSemafori 00DB  
                           ??_ISR 00A0                   __end_of___aldiv 04BB                             ?_main 0070  
                 __end_of___awdiv 0522                     __CFG_WDTE$OFF 0000                   __end_of___awmod 057B  
                 ___awdiv@divisor 0070                             i1l230 06DA                             i1l224 06BA  
                           i1l161 0377                             i1l218 030D                             i1l227 06FA  
                           i1l155 0325                 Uart_send_string@i 00AA                             i1l156 0342  
                           i1l173 040D                             i1l157 0363                             i1l159 0373  
                           i1l481 0521                             i1l494 057A                   ___awdiv@counter 0075  
                           _RCREG 001A                             _SPBRG 0099                             _PORTD 0008  
                           _TRISA 0085                             _TRISB 0086                             _TRISD 0088  
                           _TRISE 0089                             u89_20 06BA                             u89_21 06B9  
                           _TXREG 0019                             _PicId 00E0                     __CFG_PWRTE$ON 0000  
                  _scattoSemafori 00C8                __size_of_UART_init 003A                   __end_of_initPic 074A  
                           _count 00C5                             _stat1 00CD                             _stat2 00CB  
                           _stat3 00C9                             main@i 00C0             ??_messageTransmission 00AE  
                           pclath 000A                print_Countdown@num 0079                             status 0003  
                           wtemp0 007E                   __initialization 0019                      __end_of_main 01D1  
                          ??_main 00BC                            _ADCON0 001F                            _ADCON1 009F  
                          _ADRESH 001E                            _ADRESL 009E                  ___awdiv@dividend 0072  
                          u100_20 04C0                            u100_21 04BF                            u101_20 04CB  
                          u101_21 04CA                            u102_20 04DC                            u110_20 0527  
                          u102_21 04DB                            u110_21 0526                            i1l1300 06DF  
                          i1l1302 06E1                            i1l1400 04E6                            u111_20 0532  
                          i1l1304 06EB                            u111_21 0531                            i1l1410 0506  
                          i1l1402 04EA                            i1l1306 06F7                            i1l1330 069B  
                          i1l1412 050D                            i1l1404 04EE                            i1l1332 069E  
                          u103_25 04E0                            i1l1406 04FF                            i1l1414 0513  
                          i1l1430 052E                            i1l1422 0522                            i1l1334 06A9  
                          i1l1416 0518                            i1l1408 0505                            u104_20 04EE  
                          i1l1440 0547                            u112_20 053D                            i1l1432 0532  
                          i1l1424 0523                            i1l1336 06AF                            i1l1520 01EF  
                          u120_20 01DB                            u104_21 04ED                            u112_21 053C  
                          i1l1418 051D                            i1l1450 0566                            i1l1442 054B  
                          i1l1434 0537                            i1l1426 0527                            i1l1522 01FC  
                          i1l1514 01D1                            i1l1380 04BC                            i1l1444 054F  
                          i1l1436 053D                            i1l1452 056C                            i1l1428 052C  
                          i1l1460 06BC                            i1l1532 0217                            i1l1540 024F  
                          i1l1524 0203                            i1l1516 01E9                            i1l1700 039D  
                          i1l1390 04D0                            i1l1382 04C0                            i1l1454 0571  
                          i1l1446 0559                            i1l1438 0540                            i1l1462 06BF  
                          i1l1550 027C                            i1l1542 0255                            i1l1534 022F  
                          i1l1526 020A                            i1l1518 01ED                            i1l1710 03CF  
                          i1l1702 03A3                            i1l1392 04D4                            i1l1384 04C5  
                          i1l1456 0576                            i1l1448 055F                            i1l1464 06C1  
                          i1l1560 02B0                            i1l1552 0288                            i1l1544 025A  
                          i1l1536 0240                            i1l1528 0210                            u121_20 01FC  
                          i1l1720 03EF                            i1l1712 03D5                            i1l1704 03B0  
                          u121_21 01FB                            i1l1394 04D6                            i1l1386 04C7  
                          i1l1378 04BB                            i1l1298 06DC                            i1l1466 06CB  
                          i1l1570 02F2                            i1l1562 02C8                            i1l1554 028D  
                          i1l1546 0268                            i1l1538 0248                            i1l1730 0407  
                          i1l1714 03E0                            i1l1722 03F4                            i1l1706 03B8  
                          i1l1396 04DC                            i1l1388 04CB                            i1l1468 06D7  
                          i1l1572 0307                            i1l1564 02CE                            i1l1556 02A5  
                          i1l1548 026E                            i1l1724 03FB                            i1l1732 040B  
                          i1l1716 03E8                            i1l1708 03C8                            u105_25 04EF  
                          u113_25 0541                            u121_25 01F8                            i1l1398 04DF  
                          i1l1566 02D4                            i1l1558 02AB                            i1l1726 03FD  
                          i1l1718 03EE                            i1l1670 0319                            u106_20 04FF  
                          u114_20 054F                            i1l1568 02EC                            u130_20 02D4  
                          u122_20 020A                            i1l1728 0402                            i1l1680 0352  
                          i1l1672 032D                            u106_21 04FE                            u114_21 054E  
                          u130_21 02D3                            u122_21 0209                            i1l1690 037E  
                          i1l1682 0359                            i1l1674 0331                            i1l1666 030E  
                          i1l1692 0380                            i1l1684 036D                            i1l1676 0338  
                          i1l1668 0314                            u106_25 04FB                            i1l1694 0384  
                          i1l1678 034C                            u115_20 0559                            u131_20 02DE  
                          u123_20 0216                            i1l1696 038A                            i1l1688 0378  
                          u115_21 0558                            u123_21 0215                            i1l1698 038E  
                          u107_25 0507                            u115_25 0555                            u108_20 0513  
                          u124_20 024E                            u108_21 0512                            u124_21 024D  
                          u116_25 0560                            u109_20 0518                            u117_20 056C  
                          u125_20 027C                            u109_21 0517                            u117_21 056B  
                          u125_21 027B                            u125_25 0278                            u118_20 0571  
                          u126_20 028D                            u150_20 0321                            u118_21 0570  
                          u126_21 028C                            u150_21 031F                            u127_20 0297  
                          u151_20 0322                            u128_20 02B0                            u160_20 0373  
                          u152_20 0331                            u128_21 02AF                            u160_21 0372  
                          u152_21 0330                            u129_20 02BA                            u161_20 0377  
                          u153_20 0338                            _INTCON 000B                            u161_21 0376  
                          u153_21 0337                            u170_20 0402                            u162_20 0384  
                          u154_20 033E                            u170_21 0401                            u162_21 0383  
                          u154_21 033C                            u163_20 039D                            u155_20 033F  
                          u163_21 039C                            u164_20 03A3                            u156_20 0352  
                          u148_20 0314                            u164_21 03A2                            u156_21 0351  
                          u148_21 0313                            u180_27 06F2                            u165_20 03B8  
                          u157_20 0359                            u149_20 0319                            u165_21 03B7  
                          u157_21 0358                            u149_21 0318                            u166_20 03CF  
                          u158_20 035F                            u166_21 03CE                            u158_21 035D  
                          u167_20 03D5                            u159_20 0360                      ?_send_string 0070  
                          u167_21 03D4                            u168_20 03EE                            u168_21 03ED  
                          u176_27 02FA                            u169_20 03FB                            u169_21 03FA  
                          u177_27 06C6                            u178_27 06D2                            u179_27 06E6  
                     ?i1_send_cmd 0070                    send_string@str 0076                      ?_UART_TxChar 0070  
        __size_of_print_Countdown 013D                         ??___aldiv 00AF                 __end_of_UART_init 0650  
                       ??___awdiv 0074                         ??___awmod 0074                  __end_of_init_lcd 05D2  
                ___awdiv@quotient 0077                   ___awmod@divisor 0070                   ___awmod@counter 0075  
             print_Countdown@F923 01C3               print_Countdown@F931 0190               print_Countdown@F927 01B2  
             print_Countdown@F929 01A1                  __end_of_send_cmd 0678                         ??_initPic 00A7  
                    __pdataCOMMON 007D                            saved_w 007E         __size_of_Uart_send_string 001D  
messageTransmission@tipoMessaggio 00AF           __end_of__initialization 0045                    __pcstackCOMMON 0070  
                    __pidataBANK1 074A                      __pidataBANK3 05D2               __size_ofi1_send_cmd 0020  
                      __pbssBANK0 006F                        __pbssBANK1 00C1       messageTransmission@idStrada 00AB  
                      __pmaintext 0049                        _flagGiallo 00C7                        __pintentry 0004  
              __size_of_send_data 0020                 ??_print_Countdown 0020                        _contCamion 00CE  
             Uart_send_string@str 00A9                 main@semaforoVerde 00BF                         ?_init_lcd 0070  
            __size_of_send_string 0021                         ?_send_cmd 0070              __size_of_UART_TxChar 0010  
                         ___aldiv 041E                           ___awdiv 04BB                           ___awmod 0522  
                         __ptext1 0678                           __ptext2 06FB                           __ptext3 072B  
                         __ptext4 057B                           __ptext5 0650                           __ptext6 073B  
                         __ptext7 0616                           __ptext8 041E                           __ptext9 030E  
                    __size_of_ISR 0110                           _oldBtn1 006F                           _oldBtn2 00CC  
                         _oldBtn3 00CA                           _initPic 073B                  ___awmod@dividend 0072  
                ___aldiv@dividend 00AB       __end_of_messageTransmission 069A                           clrloop0 0753  
                _Uart_send_string 06FB              end_of_initialization 0045                 __end_of_send_data 06FB  
                      ??_init_lcd 00AA                      ??i1_send_cmd 0070          print_Countdown@secondStr 0024  
                      ??_send_cmd 00A7                         _RCSTAbits 0018                  ___aldiv@quotient 00B2  
        print_Countdown@resultNum 0068                     send_data@data 0072                         _PORTBbits 0006  
                       _UART_init 0616                         _PORTEbits 0009                __end_ofi1_send_cmd 06DB  
                       _TRISCbits 0087                 i1send_cmd@command 0072                   _temporizzazione 007C  
                       _TXSTAbits 0098                  print_Countdown@i 006D                     __pidataCOMMON 075A  
                      ?_UART_init 00B6               start_initialization 0019                       __end_of_ISR 041E  
                 _print_Countdown 01D1                        init_fetch0 0718                       __pdataBANK1 00DB  
                     __pdataBANK3 0190                       __pbssCOMMON 007C                         ___latbits 0002  
                   __pcstackBANK0 0020                     __pcstackBANK1 00A0                       _datoSeriale 00D1  
               __size_of_init_lcd 0057                          ?___aldiv 00A7                 __size_of_send_cmd 0028  
                        ?___awdiv 0070                          ?___awmod 0070          __end_of_Uart_send_string 0718  
                     ??_UART_init 00B8                          ?_initPic 0070                         _countDown 007D  
         __end_of_print_Countdown 030E                     ??_send_string 0073           print_Countdown@firstStr 0057  
                 ___aldiv@divisor 00A7                 interrupt_function 0004                   ___aldiv@counter 00B0  
                       clear_ram0 0752                          _PIE1bits 008C                         _send_data 06DB  
                   ??_UART_TxChar 00A7                          _GO_nDONE 00FA                         _numStrade 00E2  
         print_Countdown@statoSem 007B                        _ADCON0bits 001F                         _strToSend 00D3  
    __size_of_messageTransmission 0022                        ?_send_data 0070                      send_string@i 0074  
             __end_of_send_string 06BB                   UART_TxChar@dato 00A7                  __size_of___aldiv 009D  
             __end_of_UART_TxChar 073B                  __size_of___awdiv 0067                  __size_of___awmod 0059  
                __size_of_initPic 000F                          __ptext10 01D1                          __ptext11 06BB  
                        __ptext12 069A                          __ptext13 06DB                          __ptext14 0522  
                        __ptext15 04BB                          _contAuto 00D0                          _contMoto 00CF  
                ?_print_Countdown 0079                          _init_lcd 057B                     __size_of_main 0188  
                        _received 00D2                          _send_cmd 0650                          _semafori 00C1  
                      _INTCONbits 000B                          init_ram0 071C                   send_cmd@command 00A9  
                        intlevel1 0000                 UART_init@baudrate 00B6                       _send_string 069A  
                     ??_send_data 0070                       _UART_TxChar 072B             print_Countdown@length 006B  
               ?_Uart_send_string 0070                ??_Uart_send_string 00A8                        _OPTION_REG 0081  
                    ___aldiv@sign 00B1  
