

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jul 16 17:02:55 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.10
    39                           ; Generated 31/07/2019 GMT
    40                           ; 
    41                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192                           
   193                           	psect	idataCOMMON
   194  0767                     __pidataCOMMON:	
   195                           
   196                           ;initializer for _countDown
   197  0767  3405               	retlw	5
   198                           
   199                           	psect	idataBANK1
   200  0761                     __pidataBANK1:	
   201                           
   202                           ;initializer for _statoSemafori
   203  0761  3400               	retlw	0
   204  0762  3401               	retlw	1
   205  0763  3402               	retlw	2
   206                           
   207                           ;initializer for _PicId
   208  0764  34A7               	retlw	167
   209  0765  3400               	retlw	0
   210                           
   211                           ;initializer for _numStrade
   212  0766  3404               	retlw	4
   213                           
   214                           	psect	idataBANK3
   215  05E1                     __pidataBANK3:	
   216                           
   217                           ;initializer for print_Countdown@F937
   218  05E1  3453               	retlw	83
   219  05E2  3465               	retlw	101
   220  05E3  346D               	retlw	109
   221  05E4  3420               	retlw	32
   222  05E5  3430               	retlw	48
   223  05E6  343A               	retlw	58
   224  05E7  3420               	retlw	32
   225  05E8  3420               	retlw	32
   226  05E9  3420               	retlw	32
   227  05EA  3420               	retlw	32
   228  05EB  3420               	retlw	32
   229  05EC  3452               	retlw	82
   230  05ED  346F               	retlw	111
   231  05EE  3473               	retlw	115
   232  05EF  3473               	retlw	115
   233  05F0  346F               	retlw	111
   234  05F1  3400               	retlw	0
   235                           
   236                           ;initializer for print_Countdown@F935
   237  05F2  3453               	retlw	83
   238  05F3  3465               	retlw	101
   239  05F4  346D               	retlw	109
   240  05F5  3420               	retlw	32
   241  05F6  3430               	retlw	48
   242  05F7  343A               	retlw	58
   243  05F8  3420               	retlw	32
   244  05F9  3420               	retlw	32
   245  05FA  3420               	retlw	32
   246  05FB  3420               	retlw	32
   247  05FC  3447               	retlw	71
   248  05FD  3469               	retlw	105
   249  05FE  3461               	retlw	97
   250  05FF  346C               	retlw	108
   251  0600  346C               	retlw	108
   252  0601  346F               	retlw	111
   253  0602  3400               	retlw	0
   254                           
   255                           ;initializer for print_Countdown@F933
   256  0603  3453               	retlw	83
   257  0604  3465               	retlw	101
   258  0605  346D               	retlw	109
   259  0606  3420               	retlw	32
   260  0607  3430               	retlw	48
   261  0608  343A               	retlw	58
   262  0609  3420               	retlw	32
   263  060A  3420               	retlw	32
   264  060B  3420               	retlw	32
   265  060C  3420               	retlw	32
   266  060D  3420               	retlw	32
   267  060E  3456               	retlw	86
   268  060F  3465               	retlw	101
   269  0610  3472               	retlw	114
   270  0611  3464               	retlw	100
   271  0612  3465               	retlw	101
   272  0613  3400               	retlw	0
   273                           
   274                           ;initializer for print_Countdown@F929
   275  0614  3454               	retlw	84
   276  0615  3465               	retlw	101
   277  0616  346D               	retlw	109
   278  0617  3470               	retlw	112
   279  0618  346F               	retlw	111
   280  0619  343A               	retlw	58
   281  061A  3420               	retlw	32
   282  061B  3420               	retlw	32
   283  061C  3420               	retlw	32
   284  061D  3420               	retlw	32
   285  061E  3420               	retlw	32
   286  061F  3420               	retlw	32
   287  0620  3420               	retlw	32
   288  0621  3420               	retlw	32
   289  0622  3420               	retlw	32
   290  0623  3420               	retlw	32
   291  0624  3400               	retlw	0
   292  0019                     _TXREG	set	25
   293  000B                     _INTCONbits	set	11
   294  0018                     _RCSTAbits	set	24
   295  0008                     _PORTD	set	8
   296  0009                     _PORTEbits	set	9
   297  001E                     _ADRESH	set	30
   298  001F                     _ADCON0bits	set	31
   299  001F                     _ADCON0	set	31
   300  0001                     _TMR0	set	1
   301  000B                     _INTCON	set	11
   302  001A                     _RCREG	set	26
   303  0006                     _PORTBbits	set	6
   304  0064                     _TXIF	set	100
   305  00FA                     _GO_nDONE	set	250
   306  0065                     _RCIF	set	101
   307  008C                     _PIE1bits	set	140
   308  0099                     _SPBRG	set	153
   309  0098                     _TXSTAbits	set	152
   310  0087                     _TRISCbits	set	135
   311  009E                     _ADRESL	set	158
   312  009F                     _ADCON1	set	159
   313  0085                     _TRISA	set	133
   314  0081                     _OPTION_REG	set	129
   315  0089                     _TRISE	set	137
   316  0086                     _TRISB	set	134
   317  0088                     _TRISD	set	136
   318                           
   319                           ; #config settings
   320  0000                     
   321                           	psect	cinit
   322  0019                     start_initialization:	
   323  0019                     __initialization:	
   324                           
   325                           ; Initialize objects allocated to BANK3
   326  0019  1783               	bsf	3,7	;select IRP bank2
   327  001A  30D4               	movlw	low (__pdataBANK3+68)
   328  001B  00FD               	movwf	btemp+-1
   329  001C  3005               	movlw	high __pidataBANK3
   330  001D  00FE               	movwf	btemp
   331  001E  30E1               	movlw	low __pidataBANK3
   332  001F  00FF               	movwf	btemp+1
   333  0020  3090               	movlw	low __pdataBANK3
   334  0021  0084               	movwf	4
   335  0022  120A  118A  272B  120A  118A  	fcall	init_ram0
   336                           
   337                           ; Initialize objects allocated to BANK1
   338  0027  1383               	bcf	3,7	;select IRP bank0
   339  0028  30E3               	movlw	low (__pdataBANK1+6)
   340  0029  00FD               	movwf	btemp+-1
   341  002A  3007               	movlw	high __pidataBANK1
   342  002B  00FE               	movwf	btemp
   343  002C  3061               	movlw	low __pidataBANK1
   344  002D  00FF               	movwf	btemp+1
   345  002E  30DD               	movlw	low __pdataBANK1
   346  002F  0084               	movwf	4
   347  0030  120A  118A  272B  120A  118A  	fcall	init_ram0
   348                           
   349                           ; Initialize objects allocated to COMMON
   350  0035  120A  118A  2767  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   351  003A  00FD               	movwf	__pdataCOMMON& (0+127)
   352                           
   353                           ; Clear objects allocated to BANK1
   354  003B  30C1               	movlw	low __pbssBANK1
   355  003C  0084               	movwf	4
   356  003D  30DD               	movlw	low (__pbssBANK1+28)
   357  003E  120A  118A  2759  120A  118A  	fcall	clear_ram0
   358                           
   359                           ; Clear objects allocated to BANK0
   360  0043  01EF               	clrf	__pbssBANK0& (0+127)
   361                           
   362                           ; Clear objects allocated to COMMON
   363  0044  01FC               	clrf	__pbssCOMMON& (0+127)
   364  0045                     end_of_initialization:	
   365                           ;End of C runtime variable initialization code
   366                           
   367  0045                     __end_of__initialization:	
   368  0045  0183               	clrf	3
   369  0046  120A  118A  2849   	ljmp	_main	;jump to C main() function
   370                           
   371                           	psect	bssCOMMON
   372  007C                     __pbssCOMMON:	
   373  007C                     _temporizzazione:	
   374  007C                     	ds	1
   375                           
   376                           	psect	dataCOMMON
   377  007D                     __pdataCOMMON:	
   378  007D                     _countDown:	
   379  007D                     	ds	1
   380                           
   381                           	psect	bssBANK0
   382  006F                     __pbssBANK0:	
   383  006F                     _oldBtn1:	
   384  006F                     	ds	1
   385                           
   386                           	psect	bssBANK1
   387  00C1                     __pbssBANK1:	
   388  00C1                     _semafori:	
   389  00C1                     	ds	4
   390  00C5                     _f:	
   391  00C5                     	ds	2
   392  00C7                     _count:	
   393  00C7                     	ds	2
   394  00C9                     _flagGiallo:	
   395  00C9                     	ds	1
   396  00CA                     _scattoSemafori:	
   397  00CA                     	ds	1
   398  00CB                     _stat3:	
   399  00CB                     	ds	1
   400  00CC                     _oldBtn3:	
   401  00CC                     	ds	1
   402  00CD                     _stat2:	
   403  00CD                     	ds	1
   404  00CE                     _oldBtn2:	
   405  00CE                     	ds	1
   406  00CF                     _stat1:	
   407  00CF                     	ds	1
   408  00D0                     _contCamion:	
   409  00D0                     	ds	1
   410  00D1                     _contMoto:	
   411  00D1                     	ds	1
   412  00D2                     _contAuto:	
   413  00D2                     	ds	1
   414  00D3                     _datoSeriale:	
   415  00D3                     	ds	1
   416  00D4                     _received:	
   417  00D4                     	ds	1
   418  00D5                     _strToSend:	
   419  00D5                     	ds	8
   420                           
   421                           	psect	dataBANK1
   422  00DD                     __pdataBANK1:	
   423  00DD                     _statoSemafori:	
   424  00DD                     	ds	3
   425  00E0                     _PicId:	
   426  00E0                     	ds	2
   427  00E2                     _numStrade:	
   428  00E2                     	ds	1
   429                           
   430                           	psect	dataBANK3
   431  0190                     __pdataBANK3:	
   432  0190                     print_Countdown@F937:	
   433  0190                     	ds	17
   434  01A1                     print_Countdown@F935:	
   435  01A1                     	ds	17
   436  01B2                     print_Countdown@F933:	
   437  01B2                     	ds	17
   438  01C3                     print_Countdown@F929:	
   439  01C3                     	ds	17
   440                           
   441                           	psect	inittext
   442  0727                     init_fetch0:	
   443                           ;	Called with low address in FSR and high address in W
   444                           
   445  0727  087E               	movf	btemp,w
   446  0728  008A               	movwf	10
   447  0729  087F               	movf	btemp+1,w
   448  072A  0082               	movwf	2
   449  072B                     init_ram0:	
   450                           ;Called with:
   451                           ;	high address of idata address in btemp 
   452                           ;	low address of idata address in btemp+1 
   453                           ;	low address of data in FSR
   454                           ;	high address + 1 of data in btemp-1
   455                           
   456  072B  120A  118A  2727  120A  118A  	fcall	init_fetch0
   457  0730  0080               	movwf	0
   458  0731  0A84               	incf	4,f
   459  0732  0804               	movf	4,w
   460  0733  067D               	xorwf	btemp+-1,w
   461  0734  1903               	btfsc	3,2
   462  0735  3400               	retlw	0
   463  0736  0AFF               	incf	btemp+1,f
   464  0737  1903               	btfsc	3,2
   465  0738  0AFE               	incf	btemp,f
   466  0739  2F2B               	goto	init_ram0
   467                           
   468                           	psect	clrtext
   469  0759                     clear_ram0:	
   470                           ;	Called with FSR containing the base address, and
   471                           ;	W with the last address+1
   472                           
   473  0759  0064               	clrwdt	;clear the watchdog before getting into this loop
   474  075A                     clrloop0:	
   475  075A  0180               	clrf	0	;clear RAM location pointed to by FSR
   476  075B  0A84               	incf	4,f	;increment pointer
   477  075C  0604               	xorwf	4,w	;XOR with final address
   478  075D  1903               	btfsc	3,2	;have we reached the end yet?
   479  075E  3400               	retlw	0	;all done for this memory range, return
   480  075F  0604               	xorwf	4,w	;XOR again to restore value
   481  0760  2F5A               	goto	clrloop0	;do the next byte
   482                           
   483                           	psect	cstackBANK1
   484  00A0                     __pcstackBANK1:	
   485  00A0                     ??_ISR:	
   486                           
   487                           ; 1 bytes @ 0x0
   488  00A0                     	ds	7
   489  00A7                     ??_initPic:	
   490  00A7                     ??_send_cmd:	
   491                           ; 1 bytes @ 0x7
   492                           
   493  00A7                     ??_UART_TxChar:	
   494                           ; 1 bytes @ 0x7
   495                           
   496  00A7                     ?___aldiv:	
   497                           ; 1 bytes @ 0x7
   498                           
   499  00A7                     UART_TxChar@dato:	
   500                           ; 4 bytes @ 0x7
   501                           
   502  00A7                     ___aldiv@divisor:	
   503                           ; 1 bytes @ 0x7
   504                           
   505                           
   506                           ; 4 bytes @ 0x7
   507  00A7                     	ds	1
   508  00A8                     ??_Uart_send_string:	
   509                           
   510                           ; 1 bytes @ 0x8
   511  00A8                     	ds	1
   512  00A9                     Uart_send_string@str:	
   513  00A9                     send_cmd@command:	
   514                           ; 1 bytes @ 0x9
   515                           
   516                           
   517                           ; 1 bytes @ 0x9
   518  00A9                     	ds	1
   519  00AA                     ??_init_lcd:	
   520  00AA                     Uart_send_string@i:	
   521                           ; 1 bytes @ 0xA
   522                           
   523                           
   524                           ; 1 bytes @ 0xA
   525  00AA                     	ds	1
   526  00AB                     ?_messageTransmission:	
   527  00AB                     messageTransmission@idStrada:	
   528                           ; 1 bytes @ 0xB
   529                           
   530  00AB                     ___aldiv@dividend:	
   531                           ; 1 bytes @ 0xB
   532                           
   533                           
   534                           ; 4 bytes @ 0xB
   535  00AB                     	ds	1
   536  00AC                     messageTransmission@codice:	
   537                           
   538                           ; 1 bytes @ 0xC
   539  00AC                     	ds	1
   540  00AD                     messageTransmission@valore:	
   541                           
   542                           ; 1 bytes @ 0xD
   543  00AD                     	ds	1
   544  00AE                     ??_messageTransmission:	
   545                           
   546                           ; 1 bytes @ 0xE
   547  00AE                     	ds	1
   548  00AF                     ??___aldiv:	
   549  00AF                     messageTransmission@tipoMessaggio:	
   550                           ; 1 bytes @ 0xF
   551                           
   552                           
   553                           ; 1 bytes @ 0xF
   554  00AF                     	ds	1
   555  00B0                     ___aldiv@counter:	
   556                           
   557                           ; 1 bytes @ 0x10
   558  00B0                     	ds	1
   559  00B1                     ___aldiv@sign:	
   560                           
   561                           ; 1 bytes @ 0x11
   562  00B1                     	ds	1
   563  00B2                     ___aldiv@quotient:	
   564                           
   565                           ; 4 bytes @ 0x12
   566  00B2                     	ds	4
   567  00B6                     ?_UART_init:	
   568  00B6                     UART_init@baudrate:	
   569                           ; 1 bytes @ 0x16
   570                           
   571                           
   572                           ; 2 bytes @ 0x16
   573  00B6                     	ds	2
   574  00B8                     ??_UART_init:	
   575                           
   576                           ; 1 bytes @ 0x18
   577  00B8                     	ds	4
   578  00BC                     ??_main:	
   579                           
   580                           ; 1 bytes @ 0x1C
   581  00BC                     	ds	3
   582  00BF                     main@semaforoVerde:	
   583                           
   584                           ; 1 bytes @ 0x1F
   585  00BF                     	ds	1
   586  00C0                     main@i:	
   587                           
   588                           ; 1 bytes @ 0x20
   589  00C0                     	ds	1
   590                           
   591                           	psect	cstackCOMMON
   592  0070                     __pcstackCOMMON:	
   593  0070                     ?_initPic:	
   594  0070                     ?_init_lcd:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_send_cmd:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_Uart_send_string:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_UART_TxChar:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_send_string:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_send_data:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ??_send_data:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_main:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_ISR:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?i1_send_cmd:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ??i1_send_cmd:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?___awdiv:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?___awmod:	
   631                           ; 2 bytes @ 0x0
   632                           
   633  0070                     ___awdiv@divisor:	
   634                           ; 2 bytes @ 0x0
   635                           
   636  0070                     ___awmod@divisor:	
   637                           ; 2 bytes @ 0x0
   638                           
   639                           
   640                           ; 2 bytes @ 0x0
   641  0070                     	ds	2
   642  0072                     send_data@data:	
   643  0072                     i1send_cmd@command:	
   644                           ; 1 bytes @ 0x2
   645                           
   646  0072                     ___awdiv@dividend:	
   647                           ; 1 bytes @ 0x2
   648                           
   649  0072                     ___awmod@dividend:	
   650                           ; 2 bytes @ 0x2
   651                           
   652                           
   653                           ; 2 bytes @ 0x2
   654  0072                     	ds	1
   655  0073                     ??_send_string:	
   656                           
   657                           ; 1 bytes @ 0x3
   658  0073                     	ds	1
   659  0074                     ??___awdiv:	
   660  0074                     ??___awmod:	
   661                           ; 1 bytes @ 0x4
   662                           
   663  0074                     send_string@i:	
   664                           ; 1 bytes @ 0x4
   665                           
   666                           
   667                           ; 2 bytes @ 0x4
   668  0074                     	ds	1
   669  0075                     ___awdiv@counter:	
   670  0075                     ___awmod@counter:	
   671                           ; 1 bytes @ 0x5
   672                           
   673                           
   674                           ; 1 bytes @ 0x5
   675  0075                     	ds	1
   676  0076                     send_string@str:	
   677  0076                     ___awdiv@sign:	
   678                           ; 1 bytes @ 0x6
   679                           
   680  0076                     ___awmod@sign:	
   681                           ; 1 bytes @ 0x6
   682                           
   683                           
   684                           ; 1 bytes @ 0x6
   685  0076                     	ds	1
   686  0077                     ___awdiv@quotient:	
   687                           
   688                           ; 2 bytes @ 0x7
   689  0077                     	ds	2
   690  0079                     ?_print_Countdown:	
   691  0079                     print_Countdown@num:	
   692                           ; 1 bytes @ 0x9
   693                           
   694                           
   695                           ; 2 bytes @ 0x9
   696  0079                     	ds	2
   697  007B                     print_Countdown@statoSem:	
   698                           
   699                           ; 1 bytes @ 0xB
   700  007B                     	ds	1
   701                           
   702                           	psect	cstackBANK0
   703  0020                     __pcstackBANK0:	
   704  0020                     ??_print_Countdown:	
   705                           
   706                           ; 1 bytes @ 0x0
   707  0020                     	ds	4
   708  0024                     print_Countdown@secondStr:	
   709                           
   710                           ; 17 bytes @ 0x4
   711  0024                     	ds	17
   712  0035                     print_Countdown@secondStr_407:	
   713                           
   714                           ; 17 bytes @ 0x15
   715  0035                     	ds	17
   716  0046                     print_Countdown@secondStr_409:	
   717                           
   718                           ; 17 bytes @ 0x26
   719  0046                     	ds	17
   720  0057                     print_Countdown@firstStr:	
   721                           
   722                           ; 17 bytes @ 0x37
   723  0057                     	ds	17
   724  0068                     print_Countdown@resultNum:	
   725                           
   726                           ; 3 bytes @ 0x48
   727  0068                     	ds	3
   728  006B                     print_Countdown@length:	
   729                           
   730                           ; 2 bytes @ 0x4B
   731  006B                     	ds	2
   732  006D                     print_Countdown@i:	
   733                           
   734                           ; 2 bytes @ 0x4D
   735  006D                     	ds	2
   736                           
   737                           	psect	maintext
   738  0049                     __pmaintext:	
   739 ;;
   740 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   741 ;;
   742 ;; *************** function _main *****************
   743 ;; Defined at:
   744 ;;		line 113 in file "main.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  semaforoVerd    1   31[BANK1 ] unsigned char 
   749 ;;  i               1   32[BANK1 ] unsigned char 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : B00/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   759 ;;      Params:         0       0       0       0       0
   760 ;;      Locals:         0       0       2       0       0
   761 ;;      Temps:          0       0       3       0       0
   762 ;;      Totals:         0       0       5       0       0
   763 ;;Total ram usage:        5 bytes
   764 ;; Hardware stack levels required when called:    7
   765 ;; This function calls:
   766 ;;		_UART_init
   767 ;;		_initPic
   768 ;;		_init_lcd
   769 ;;		_messageTransmission
   770 ;;		_send_cmd
   771 ;; This function is called by:
   772 ;;		Startup code after reset
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           
   777                           ;psect for function _main
   778  0049                     _main:	
   779  0049                     l1593:	
   780                           ;incstack = 0
   781                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   782                           
   783                           
   784                           ;main.c: 115:     initPic();
   785  0049  120A  118A  274A  120A  118A  	fcall	_initPic
   786                           
   787                           ;main.c: 116:     UART_init(9600);
   788  004E  3080               	movlw	128
   789  004F  1683               	bsf	3,5	;RP0=1, select bank1
   790  0050  1303               	bcf	3,6	;RP1=0, select bank1
   791  0051  00B6               	movwf	UART_init@baudrate^(0+128)
   792  0052  3025               	movlw	37
   793  0053  00B7               	movwf	(UART_init@baudrate^(0+128)+1)
   794  0054  120A  118A  2625  120A  118A  	fcall	_UART_init
   795                           
   796                           ;main.c: 117:     init_lcd();
   797  0059  120A  118A  258A  120A  118A  	fcall	_init_lcd
   798                           
   799                           ;main.c: 118:     send_cmd(0x01);
   800  005E  3001               	movlw	1
   801  005F  120A  118A  265F  120A  118A  	fcall	_send_cmd
   802  0064                     l1595:	
   803                           
   804                           ;main.c: 190:     char i;;main.c: 193:     semafori[1]=statoSemafori[2];
   805  0064  1683               	bsf	3,5	;RP0=1, select bank1
   806  0065  1303               	bcf	3,6	;RP1=0, select bank1
   807  0066  085F               	movf	(_statoSemafori^(0+128)+2),w
   808  0067  00BC               	movwf	??_main^(0+128)
   809  0068  083C               	movf	??_main^(0+128),w
   810  0069  00C2               	movwf	(_semafori^(0+128)+1)
   811  006A                     l1597:	
   812                           
   813                           ;main.c: 194:     semafori[2]=statoSemafori[2];
   814  006A  085F               	movf	(_statoSemafori^(0+128)+2),w
   815  006B  00BC               	movwf	??_main^(0+128)
   816  006C  083C               	movf	??_main^(0+128),w
   817  006D  00C3               	movwf	(_semafori^(0+128)+2)
   818  006E                     l1599:	
   819                           
   820                           ;main.c: 195:     semafori[3]=statoSemafori[2];
   821  006E  085F               	movf	(_statoSemafori^(0+128)+2),w
   822  006F  00BC               	movwf	??_main^(0+128)
   823  0070  083C               	movf	??_main^(0+128),w
   824  0071  00C4               	movwf	(_semafori^(0+128)+3)
   825  0072                     l1601:	
   826                           
   827                           ;main.c: 196:     semafori[0]=statoSemafori[0];
   828  0072  085D               	movf	_statoSemafori^(0+128),w
   829  0073  00BC               	movwf	??_main^(0+128)
   830  0074  083C               	movf	??_main^(0+128),w
   831  0075  00C1               	movwf	_semafori^(0+128)
   832  0076                     l1603:	
   833                           
   834                           ;main.c: 200:     {;main.c: 204:         if(stat1)
   835  0076  084F               	movf	_stat1^(0+128),w
   836  0077  1903               	btfsc	3,2
   837  0078  287A               	goto	u1341
   838  0079  287B               	goto	u1340
   839  007A                     u1341:	
   840  007A  2880               	goto	l1609
   841  007B                     u1340:	
   842  007B                     l1605:	
   843                           
   844                           ;main.c: 205:         {;main.c: 206:             contAuto++;
   845  007B  3001               	movlw	1
   846  007C  00BC               	movwf	??_main^(0+128)
   847  007D  083C               	movf	??_main^(0+128),w
   848  007E  07D2               	addwf	_contAuto^(0+128),f
   849  007F                     l1607:	
   850                           
   851                           ;main.c: 207:             stat1=0;
   852  007F  01CF               	clrf	_stat1^(0+128)
   853  0080                     l1609:	
   854                           
   855                           ;main.c: 210:         if(stat2)
   856  0080  084D               	movf	_stat2^(0+128),w
   857  0081  1903               	btfsc	3,2
   858  0082  2884               	goto	u1351
   859  0083  2885               	goto	u1350
   860  0084                     u1351:	
   861  0084  288A               	goto	l1615
   862  0085                     u1350:	
   863  0085                     l1611:	
   864                           
   865                           ;main.c: 211:         {;main.c: 212:             contMoto++;
   866  0085  3001               	movlw	1
   867  0086  00BC               	movwf	??_main^(0+128)
   868  0087  083C               	movf	??_main^(0+128),w
   869  0088  07D1               	addwf	_contMoto^(0+128),f
   870  0089                     l1613:	
   871                           
   872                           ;main.c: 213:             stat2=0;
   873  0089  01CD               	clrf	_stat2^(0+128)
   874  008A                     l1615:	
   875                           
   876                           ;main.c: 215:         if(stat3)
   877  008A  084B               	movf	_stat3^(0+128),w
   878  008B  1903               	btfsc	3,2
   879  008C  288E               	goto	u1361
   880  008D  288F               	goto	u1360
   881  008E                     u1361:	
   882  008E  2894               	goto	l1621
   883  008F                     u1360:	
   884  008F                     l1617:	
   885                           
   886                           ;main.c: 216:         {;main.c: 217:             contCamion++;
   887  008F  3001               	movlw	1
   888  0090  00BC               	movwf	??_main^(0+128)
   889  0091  083C               	movf	??_main^(0+128),w
   890  0092  07D0               	addwf	_contCamion^(0+128),f
   891  0093                     l1619:	
   892                           
   893                           ;main.c: 218:             stat3=0;
   894  0093  01CB               	clrf	_stat3^(0+128)
   895  0094                     l1621:	
   896                           
   897                           ;main.c: 222:         if(scattoSemafori==1)
   898  0094  034A               	decf	_scattoSemafori^(0+128),w
   899  0095  1D03               	btfss	3,2
   900  0096  2898               	goto	u1371
   901  0097  2899               	goto	u1370
   902  0098                     u1371:	
   903  0098  2909               	goto	l1665
   904  0099                     u1370:	
   905  0099                     l1623:	
   906                           
   907                           ;main.c: 223:         {;main.c: 226:             char semaforoVerde=0;
   908  0099  01BF               	clrf	main@semaforoVerde^(0+128)
   909                           
   910                           ;main.c: 227:             for(i=0;i<4;i++)
   911  009A  01C0               	clrf	main@i^(0+128)
   912  009B                     l1629:	
   913                           
   914                           ;main.c: 228:             {;main.c: 230:                 if(semaforoVerde==0)
   915  009B  083F               	movf	main@semaforoVerde^(0+128),w
   916  009C  1D03               	btfss	3,2
   917  009D  289F               	goto	u1381
   918  009E  28A0               	goto	u1380
   919  009F                     u1381:	
   920  009F  28FF               	goto	l1661
   921  00A0                     u1380:	
   922  00A0                     l1631:	
   923                           
   924                           ;main.c: 231:                 {;main.c: 232:                     if(semafori[i]==statoSe
      +                          mafori[0])
   925  00A0  0840               	movf	main@i^(0+128),w
   926  00A1  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   927  00A2  0084               	movwf	4
   928  00A3  1383               	bcf	3,7	;select IRP bank1
   929  00A4  0800               	movf	0,w
   930  00A5  065D               	xorwf	_statoSemafori^(0+128),w
   931  00A6  1D03               	skipz
   932  00A7  28A9               	goto	u1391
   933  00A8  28AA               	goto	u1390
   934  00A9                     u1391:	
   935  00A9  28FF               	goto	l1661
   936  00AA                     u1390:	
   937  00AA                     l1633:	
   938                           
   939                           ;main.c: 233:                     {;main.c: 235:                          if(semafori[i]
      +                          ==statoSemafori[0])
   940  00AA  0840               	movf	main@i^(0+128),w
   941  00AB  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   942  00AC  0084               	movwf	4
   943  00AD  0800               	movf	0,w
   944  00AE  065D               	xorwf	_statoSemafori^(0+128),w
   945  00AF  1D03               	skipz
   946  00B0  28B2               	goto	u1401
   947  00B1  28B3               	goto	u1400
   948  00B2                     u1401:	
   949  00B2  28C9               	goto	l1643
   950  00B3                     u1400:	
   951  00B3                     l1635:	
   952                           
   953                           ;main.c: 236:                         {;main.c: 237:                             flagGia
      +                          llo=1;
   954  00B3  01C9               	clrf	_flagGiallo^(0+128)
   955  00B4  0AC9               	incf	_flagGiallo^(0+128),f
   956                           
   957                           ;main.c: 238:                             while(flagGiallo==1)
   958  00B5  28BD               	goto	l1639
   959  00B6                     l1637:	
   960                           
   961                           ;main.c: 239:                                 semafori[i]=statoSemafori[1];
   962  00B6  085E               	movf	(_statoSemafori^(0+128)+1),w
   963  00B7  00BC               	movwf	??_main^(0+128)
   964  00B8  0840               	movf	main@i^(0+128),w
   965  00B9  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   966  00BA  0084               	movwf	4
   967  00BB  083C               	movf	??_main^(0+128),w
   968  00BC  0080               	movwf	0
   969  00BD                     l1639:	
   970                           
   971                           ;main.c: 238:                             while(flagGiallo==1)
   972  00BD  0349               	decf	_flagGiallo^(0+128),w
   973  00BE  1903               	btfsc	3,2
   974  00BF  28C1               	goto	u1411
   975  00C0  28C2               	goto	u1410
   976  00C1                     u1411:	
   977  00C1  28B6               	goto	l1637
   978  00C2                     u1410:	
   979  00C2                     l1641:	
   980                           
   981                           ;main.c: 241:                             semafori[i]=statoSemafori[2];
   982  00C2  085F               	movf	(_statoSemafori^(0+128)+2),w
   983  00C3  00BC               	movwf	??_main^(0+128)
   984  00C4  0840               	movf	main@i^(0+128),w
   985  00C5  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   986  00C6  0084               	movwf	4
   987  00C7  083C               	movf	??_main^(0+128),w
   988  00C8  0080               	movwf	0
   989  00C9                     l1643:	
   990                           
   991                           ;main.c: 246:                         if(i<3)
   992  00C9  3003               	movlw	3
   993  00CA  0240               	subwf	main@i^(0+128),w
   994  00CB  1803               	skipnc
   995  00CC  28CE               	goto	u1421
   996  00CD  28CF               	goto	u1420
   997  00CE                     u1421:	
   998  00CE  28E8               	goto	l1653
   999  00CF                     u1420:	
  1000  00CF                     l1645:	
  1001                           
  1002                           ;main.c: 247:                         {;main.c: 250:                             if(sema
      +                          fori[i+1]==statoSemafori[2])
  1003  00CF  0840               	movf	main@i^(0+128),w
  1004  00D0  3EC2               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1005  00D1  0084               	movwf	4
  1006  00D2  0800               	movf	0,w
  1007  00D3  065F               	xorwf	(_statoSemafori^(0+128)+2),w
  1008  00D4  1D03               	skipz
  1009  00D5  28D7               	goto	u1431
  1010  00D6  28D8               	goto	u1430
  1011  00D7                     u1431:	
  1012  00D7  28FD               	goto	l141
  1013  00D8                     u1430:	
  1014  00D8                     l1647:	
  1015                           
  1016                           ;main.c: 251:                             {;main.c: 252:                                
      +                           flagGiallo=1;
  1017  00D8  01C9               	clrf	_flagGiallo^(0+128)
  1018  00D9  0AC9               	incf	_flagGiallo^(0+128),f
  1019                           
  1020                           ;main.c: 253:                                 while(flagGiallo==1)
  1021  00DA  28E2               	goto	l1651
  1022  00DB                     l1649:	
  1023                           
  1024                           ;main.c: 254:                                     semafori[i+1]=statoSemafori[1];
  1025  00DB  085E               	movf	(_statoSemafori^(0+128)+1),w
  1026  00DC  00BC               	movwf	??_main^(0+128)
  1027  00DD  0840               	movf	main@i^(0+128),w
  1028  00DE  3EC2               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1029  00DF  0084               	movwf	4
  1030  00E0  083C               	movf	??_main^(0+128),w
  1031  00E1  0080               	movwf	0
  1032  00E2                     l1651:	
  1033                           
  1034                           ;main.c: 253:                                 while(flagGiallo==1)
  1035  00E2  0349               	decf	_flagGiallo^(0+128),w
  1036  00E3  1903               	btfsc	3,2
  1037  00E4  28E6               	goto	u1441
  1038  00E5  28E7               	goto	u1440
  1039  00E6                     u1441:	
  1040  00E6  28DB               	goto	l1649
  1041  00E7                     u1440:	
  1042  00E7  28FD               	goto	l141
  1043  00E8                     l1653:	
  1044                           
  1045                           ;main.c: 262:                         {;main.c: 263:                             if(sema
      +                          fori[0]==statoSemafori[2])
  1046  00E8  085F               	movf	(_statoSemafori^(0+128)+2),w
  1047  00E9  0641               	xorwf	_semafori^(0+128),w
  1048  00EA  1D03               	skipz
  1049  00EB  28ED               	goto	u1451
  1050  00EC  28EE               	goto	u1450
  1051  00ED                     u1451:	
  1052  00ED  28FD               	goto	l141
  1053  00EE                     u1450:	
  1054  00EE                     l1655:	
  1055                           
  1056                           ;main.c: 264:                             {;main.c: 265:                                
      +                           flagGiallo=1;
  1057  00EE  01C9               	clrf	_flagGiallo^(0+128)
  1058  00EF  0AC9               	incf	_flagGiallo^(0+128),f
  1059                           
  1060                           ;main.c: 266:                                 while(flagGiallo==1)
  1061  00F0  28F8               	goto	l1659
  1062  00F1                     l1657:	
  1063                           
  1064                           ;main.c: 267:                                     semafori[i+1]=statoSemafori[1];
  1065  00F1  085E               	movf	(_statoSemafori^(0+128)+1),w
  1066  00F2  00BC               	movwf	??_main^(0+128)
  1067  00F3  0840               	movf	main@i^(0+128),w
  1068  00F4  3EC2               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1069  00F5  0084               	movwf	4
  1070  00F6  083C               	movf	??_main^(0+128),w
  1071  00F7  0080               	movwf	0
  1072  00F8                     l1659:	
  1073                           
  1074                           ;main.c: 266:                                 while(flagGiallo==1)
  1075  00F8  0349               	decf	_flagGiallo^(0+128),w
  1076  00F9  1903               	btfsc	3,2
  1077  00FA  28FC               	goto	u1461
  1078  00FB  28FD               	goto	u1460
  1079  00FC                     u1461:	
  1080  00FC  28F1               	goto	l1657
  1081  00FD                     u1460:	
  1082  00FD                     l141:	
  1083                           ;main.c: 272:                         }
  1084                           
  1085                           
  1086                           ;main.c: 274:                         semaforoVerde=1;
  1087  00FD  01BF               	clrf	main@semaforoVerde^(0+128)
  1088  00FE  0ABF               	incf	main@semaforoVerde^(0+128),f
  1089  00FF                     l1661:	
  1090                           
  1091                           ;main.c: 278:             }
  1092  00FF  3001               	movlw	1
  1093  0100  00BC               	movwf	??_main^(0+128)
  1094  0101  083C               	movf	??_main^(0+128),w
  1095  0102  07C0               	addwf	main@i^(0+128),f
  1096  0103                     l1663:	
  1097  0103  3004               	movlw	4
  1098  0104  0240               	subwf	main@i^(0+128),w
  1099  0105  1C03               	skipc
  1100  0106  2908               	goto	u1471
  1101  0107  2909               	goto	u1470
  1102  0108                     u1471:	
  1103  0108  289B               	goto	l1629
  1104  0109                     u1470:	
  1105  0109                     l1665:	
  1106                           
  1107                           ;main.c: 309:         if(scattoSemafori==1)
  1108  0109  034A               	decf	_scattoSemafori^(0+128),w
  1109  010A  1D03               	btfss	3,2
  1110  010B  290D               	goto	u1481
  1111  010C  290E               	goto	u1480
  1112  010D                     u1481:	
  1113  010D  29C6               	goto	l1679
  1114  010E                     u1480:	
  1115  010E                     l1667:	
  1116                           
  1117                           ;main.c: 310:         {;main.c: 312:             messageTransmission(1, 1, 0, 10);
  1118  010E  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1119  010F  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1120  0110  01AC               	clrf	messageTransmission@codice^(0+128)
  1121  0111  300A               	movlw	10
  1122  0112  00BC               	movwf	??_main^(0+128)
  1123  0113  083C               	movf	??_main^(0+128),w
  1124  0114  00AD               	movwf	messageTransmission@valore^(0+128)
  1125  0115  3001               	movlw	1
  1126  0116  120A  118A  2687  120A  118A  	fcall	_messageTransmission
  1127                           
  1128                           ;main.c: 313:             messageTransmission(1, 2, 1, 60);
  1129  011B  3002               	movlw	2
  1130  011C  1683               	bsf	3,5	;RP0=1, select bank1
  1131  011D  1303               	bcf	3,6	;RP1=0, select bank1
  1132  011E  00BC               	movwf	??_main^(0+128)
  1133  011F  083C               	movf	??_main^(0+128),w
  1134  0120  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1135  0121  01AC               	clrf	messageTransmission@codice^(0+128)
  1136  0122  0AAC               	incf	messageTransmission@codice^(0+128),f
  1137  0123  303C               	movlw	60
  1138  0124  00BD               	movwf	(??_main+1)^(0+128)
  1139  0125  083D               	movf	(??_main+1)^(0+128),w
  1140  0126  00AD               	movwf	messageTransmission@valore^(0+128)
  1141  0127  3001               	movlw	1
  1142  0128  120A  118A  2687  120A  118A  	fcall	_messageTransmission
  1143                           
  1144                           ;main.c: 314:             messageTransmission(1, 4, 2, 1);
  1145  012D  3004               	movlw	4
  1146  012E  1683               	bsf	3,5	;RP0=1, select bank1
  1147  012F  1303               	bcf	3,6	;RP1=0, select bank1
  1148  0130  00BC               	movwf	??_main^(0+128)
  1149  0131  083C               	movf	??_main^(0+128),w
  1150  0132  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1151  0133  3002               	movlw	2
  1152  0134  00BD               	movwf	(??_main+1)^(0+128)
  1153  0135  083D               	movf	(??_main+1)^(0+128),w
  1154  0136  00AC               	movwf	messageTransmission@codice^(0+128)
  1155  0137  01AD               	clrf	messageTransmission@valore^(0+128)
  1156  0138  0AAD               	incf	messageTransmission@valore^(0+128),f
  1157  0139  3001               	movlw	1
  1158  013A  120A  118A  2687  120A  118A  	fcall	_messageTransmission
  1159                           
  1160                           ;main.c: 316:             messageTransmission(2, 0, 3, semafori[0]);
  1161  013F  1683               	bsf	3,5	;RP0=1, select bank1
  1162  0140  1303               	bcf	3,6	;RP1=0, select bank1
  1163  0141  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1164  0142  3003               	movlw	3
  1165  0143  00BC               	movwf	??_main^(0+128)
  1166  0144  083C               	movf	??_main^(0+128),w
  1167  0145  00AC               	movwf	messageTransmission@codice^(0+128)
  1168  0146  0841               	movf	_semafori^(0+128),w
  1169  0147  00BD               	movwf	(??_main+1)^(0+128)
  1170  0148  083D               	movf	(??_main+1)^(0+128),w
  1171  0149  00AD               	movwf	messageTransmission@valore^(0+128)
  1172  014A  3002               	movlw	2
  1173  014B  120A  118A  2687  120A  118A  	fcall	_messageTransmission
  1174                           
  1175                           ;main.c: 317:             messageTransmission(2, 1, 3, semafori[1]);
  1176  0150  1683               	bsf	3,5	;RP0=1, select bank1
  1177  0151  1303               	bcf	3,6	;RP1=0, select bank1
  1178  0152  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1179  0153  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1180  0154  3003               	movlw	3
  1181  0155  00BC               	movwf	??_main^(0+128)
  1182  0156  083C               	movf	??_main^(0+128),w
  1183  0157  00AC               	movwf	messageTransmission@codice^(0+128)
  1184  0158  0842               	movf	(_semafori^(0+128)+1),w
  1185  0159  00BD               	movwf	(??_main+1)^(0+128)
  1186  015A  083D               	movf	(??_main+1)^(0+128),w
  1187  015B  00AD               	movwf	messageTransmission@valore^(0+128)
  1188  015C  3002               	movlw	2
  1189  015D  120A  118A  2687  120A  118A  	fcall	_messageTransmission
  1190                           
  1191                           ;main.c: 318:             messageTransmission(2, 2, 3, semafori[2]);
  1192  0162  3002               	movlw	2
  1193  0163  1683               	bsf	3,5	;RP0=1, select bank1
  1194  0164  1303               	bcf	3,6	;RP1=0, select bank1
  1195  0165  00BC               	movwf	??_main^(0+128)
  1196  0166  083C               	movf	??_main^(0+128),w
  1197  0167  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1198  0168  3003               	movlw	3
  1199  0169  00BD               	movwf	(??_main+1)^(0+128)
  1200  016A  083D               	movf	(??_main+1)^(0+128),w
  1201  016B  00AC               	movwf	messageTransmission@codice^(0+128)
  1202  016C  0843               	movf	(_semafori^(0+128)+2),w
  1203  016D  00BE               	movwf	(??_main+2)^(0+128)
  1204  016E  083E               	movf	(??_main+2)^(0+128),w
  1205  016F  00AD               	movwf	messageTransmission@valore^(0+128)
  1206  0170  3002               	movlw	2
  1207  0171  120A  118A  2687  120A  118A  	fcall	_messageTransmission
  1208                           
  1209                           ;main.c: 319:             messageTransmission(2, 3, 3, semafori[3]);
  1210  0176  3003               	movlw	3
  1211  0177  1683               	bsf	3,5	;RP0=1, select bank1
  1212  0178  1303               	bcf	3,6	;RP1=0, select bank1
  1213  0179  00BC               	movwf	??_main^(0+128)
  1214  017A  083C               	movf	??_main^(0+128),w
  1215  017B  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1216  017C  3003               	movlw	3
  1217  017D  00BD               	movwf	(??_main+1)^(0+128)
  1218  017E  083D               	movf	(??_main+1)^(0+128),w
  1219  017F  00AC               	movwf	messageTransmission@codice^(0+128)
  1220  0180  0844               	movf	(_semafori^(0+128)+3),w
  1221  0181  00BE               	movwf	(??_main+2)^(0+128)
  1222  0182  083E               	movf	(??_main+2)^(0+128),w
  1223  0183  00AD               	movwf	messageTransmission@valore^(0+128)
  1224  0184  3002               	movlw	2
  1225  0185  120A  118A  2687  120A  118A  	fcall	_messageTransmission
  1226                           
  1227                           ;main.c: 321:             messageTransmission(2, 1, 4, contMoto);
  1228  018A  1683               	bsf	3,5	;RP0=1, select bank1
  1229  018B  1303               	bcf	3,6	;RP1=0, select bank1
  1230  018C  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1231  018D  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1232  018E  3004               	movlw	4
  1233  018F  00BC               	movwf	??_main^(0+128)
  1234  0190  083C               	movf	??_main^(0+128),w
  1235  0191  00AC               	movwf	messageTransmission@codice^(0+128)
  1236  0192  0851               	movf	_contMoto^(0+128),w
  1237  0193  00BD               	movwf	(??_main+1)^(0+128)
  1238  0194  083D               	movf	(??_main+1)^(0+128),w
  1239  0195  00AD               	movwf	messageTransmission@valore^(0+128)
  1240  0196  3002               	movlw	2
  1241  0197  120A  118A  2687  120A  118A  	fcall	_messageTransmission
  1242  019C                     l1669:	
  1243                           
  1244                           ;main.c: 322:             contMoto=0;
  1245  019C  1683               	bsf	3,5	;RP0=1, select bank1
  1246  019D  1303               	bcf	3,6	;RP1=0, select bank1
  1247  019E  01D1               	clrf	_contMoto^(0+128)
  1248  019F                     l1671:	
  1249                           
  1250                           ;main.c: 323:             messageTransmission(2, 1, 5, contAuto);
  1251  019F  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1252  01A0  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1253  01A1  3005               	movlw	5
  1254  01A2  00BC               	movwf	??_main^(0+128)
  1255  01A3  083C               	movf	??_main^(0+128),w
  1256  01A4  00AC               	movwf	messageTransmission@codice^(0+128)
  1257  01A5  0852               	movf	_contAuto^(0+128),w
  1258  01A6  00BD               	movwf	(??_main+1)^(0+128)
  1259  01A7  083D               	movf	(??_main+1)^(0+128),w
  1260  01A8  00AD               	movwf	messageTransmission@valore^(0+128)
  1261  01A9  3002               	movlw	2
  1262  01AA  120A  118A  2687  120A  118A  	fcall	_messageTransmission
  1263                           
  1264                           ;main.c: 324:             contAuto=0;
  1265  01AF  1683               	bsf	3,5	;RP0=1, select bank1
  1266  01B0  1303               	bcf	3,6	;RP1=0, select bank1
  1267  01B1  01D2               	clrf	_contAuto^(0+128)
  1268  01B2                     l1673:	
  1269                           
  1270                           ;main.c: 325:             messageTransmission(2, 1, 6, contCamion);
  1271  01B2  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1272  01B3  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1273  01B4  3006               	movlw	6
  1274  01B5  00BC               	movwf	??_main^(0+128)
  1275  01B6  083C               	movf	??_main^(0+128),w
  1276  01B7  00AC               	movwf	messageTransmission@codice^(0+128)
  1277  01B8  0850               	movf	_contCamion^(0+128),w
  1278  01B9  00BD               	movwf	(??_main+1)^(0+128)
  1279  01BA  083D               	movf	(??_main+1)^(0+128),w
  1280  01BB  00AD               	movwf	messageTransmission@valore^(0+128)
  1281  01BC  3002               	movlw	2
  1282  01BD  120A  118A  2687  120A  118A  	fcall	_messageTransmission
  1283  01C2                     l1675:	
  1284                           
  1285                           ;main.c: 326:             contCamion=0;
  1286  01C2  1683               	bsf	3,5	;RP0=1, select bank1
  1287  01C3  1303               	bcf	3,6	;RP1=0, select bank1
  1288  01C4  01D0               	clrf	_contCamion^(0+128)
  1289  01C5                     l1677:	
  1290                           
  1291                           ;main.c: 327:             scattoSemafori=0;
  1292  01C5  01CA               	clrf	_scattoSemafori^(0+128)
  1293  01C6                     l1679:	
  1294                           
  1295                           ;main.c: 332:         if(received)
  1296  01C6  0854               	movf	_received^(0+128),w
  1297  01C7  1903               	btfsc	3,2
  1298  01C8  29CA               	goto	u1491
  1299  01C9  29CB               	goto	u1490
  1300  01CA                     u1491:	
  1301  01CA  2876               	goto	l1603
  1302  01CB                     u1490:	
  1303  01CB                     l1681:	
  1304                           
  1305                           ;main.c: 333:         {;main.c: 335:             temporizzazione=datoSeriale;
  1306  01CB  0853               	movf	_datoSeriale^(0+128),w
  1307  01CC  00BC               	movwf	??_main^(0+128)
  1308  01CD  083C               	movf	??_main^(0+128),w
  1309  01CE  00FC               	movwf	_temporizzazione
  1310  01CF                     l1683:	
  1311                           
  1312                           ;main.c: 339:             received=0;
  1313  01CF  01D4               	clrf	_received^(0+128)
  1314  01D0  2876               	goto	l1603
  1315  01D1  120A  118A  2816   	ljmp	start
  1316  01D4                     __end_of_main:	
  1317                           
  1318                           	psect	text1
  1319  0687                     __ptext1:	
  1320 ;; *************** function _messageTransmission *****************
  1321 ;; Defined at:
  1322 ;;		line 449 in file "main.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  tipoMessaggi    1    wreg     unsigned char 
  1325 ;;  idStrada        1   11[BANK1 ] unsigned char 
  1326 ;;  codice          1   12[BANK1 ] unsigned char 
  1327 ;;  valore          1   13[BANK1 ] unsigned char 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  tipoMessaggi    1   15[BANK1 ] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       0       3       0       0
  1340 ;;      Locals:         0       0       1       0       0
  1341 ;;      Temps:          0       0       1       0       0
  1342 ;;      Totals:         0       0       5       0       0
  1343 ;;Total ram usage:        5 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; Hardware stack levels required when called:    6
  1346 ;; This function calls:
  1347 ;;		_Uart_send_string
  1348 ;; This function is called by:
  1349 ;;		_main
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           
  1354                           ;psect for function _messageTransmission
  1355  0687                     _messageTransmission:	
  1356                           
  1357                           ;incstack = 0
  1358                           ; Regs used in _messageTransmission: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1359                           ;messageTransmission@tipoMessaggio stored from wreg
  1360  0687  1683               	bsf	3,5	;RP0=1, select bank1
  1361  0688  1303               	bcf	3,6	;RP1=0, select bank1
  1362  0689  00AF               	movwf	messageTransmission@tipoMessaggio^(0+128)
  1363  068A                     l1529:	
  1364                           
  1365                           ;main.c: 449: void messageTransmission(char tipoMessaggio, char idStrada, char codice, c
      +                          har valore);main.c: 450: {;main.c: 451:     strToSend[0]=tipoMessaggio;
  1366  068A  082F               	movf	messageTransmission@tipoMessaggio^(0+128),w
  1367  068B  00AE               	movwf	??_messageTransmission^(0+128)
  1368  068C  082E               	movf	??_messageTransmission^(0+128),w
  1369  068D  00D5               	movwf	_strToSend^(0+128)
  1370                           
  1371                           ;main.c: 452:     strToSend[1]=200;
  1372  068E  30C8               	movlw	200
  1373  068F  00AE               	movwf	??_messageTransmission^(0+128)
  1374  0690  082E               	movf	??_messageTransmission^(0+128),w
  1375  0691  00D6               	movwf	(_strToSend^(0+128)+1)
  1376                           
  1377                           ;main.c: 453:     strToSend[2]=4;
  1378  0692  3004               	movlw	4
  1379  0693  00AE               	movwf	??_messageTransmission^(0+128)
  1380  0694  082E               	movf	??_messageTransmission^(0+128),w
  1381  0695  00D7               	movwf	(_strToSend^(0+128)+2)
  1382                           
  1383                           ;main.c: 454:     strToSend[3]=idStrada;
  1384  0696  082B               	movf	messageTransmission@idStrada^(0+128),w
  1385  0697  00AE               	movwf	??_messageTransmission^(0+128)
  1386  0698  082E               	movf	??_messageTransmission^(0+128),w
  1387  0699  00D8               	movwf	(_strToSend^(0+128)+3)
  1388                           
  1389                           ;main.c: 455:     strToSend[4]=codice;
  1390  069A  082C               	movf	messageTransmission@codice^(0+128),w
  1391  069B  00AE               	movwf	??_messageTransmission^(0+128)
  1392  069C  082E               	movf	??_messageTransmission^(0+128),w
  1393  069D  00D9               	movwf	(_strToSend^(0+128)+4)
  1394                           
  1395                           ;main.c: 456:     strToSend[5]=valore;
  1396  069E  082D               	movf	messageTransmission@valore^(0+128),w
  1397  069F  00AE               	movwf	??_messageTransmission^(0+128)
  1398  06A0  082E               	movf	??_messageTransmission^(0+128),w
  1399  06A1  00DA               	movwf	(_strToSend^(0+128)+5)
  1400  06A2                     l1531:	
  1401                           
  1402                           ;main.c: 457:     Uart_send_string(strToSend);
  1403  06A2  30D5               	movlw	(low (_strToSend| 0))& (0+255)
  1404  06A3  120A  118A  270A  120A  118A  	fcall	_Uart_send_string
  1405  06A8                     l176:	
  1406  06A8  0008               	return
  1407  06A9                     __end_of_messageTransmission:	
  1408                           
  1409                           	psect	text2
  1410  070A                     __ptext2:	
  1411 ;; *************** function _Uart_send_string *****************
  1412 ;; Defined at:
  1413 ;;		line 483 in file "main.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  str             1    wreg     PTR unsigned char 
  1416 ;;		 -> strToSend(8), 
  1417 ;; Auto vars:     Size  Location     Type
  1418 ;;  str             1    9[BANK1 ] PTR unsigned char 
  1419 ;;		 -> strToSend(8), 
  1420 ;;  i               1   10[BANK1 ] unsigned char 
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  1    wreg      void 
  1423 ;; Registers used:
  1424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1430 ;;      Params:         0       0       0       0       0
  1431 ;;      Locals:         0       0       2       0       0
  1432 ;;      Temps:          0       0       1       0       0
  1433 ;;      Totals:         0       0       3       0       0
  1434 ;;Total ram usage:        3 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    5
  1437 ;; This function calls:
  1438 ;;		_UART_TxChar
  1439 ;; This function is called by:
  1440 ;;		_messageTransmission
  1441 ;; This function uses a non-reentrant model
  1442 ;;
  1443                           
  1444                           
  1445                           ;psect for function _Uart_send_string
  1446  070A                     _Uart_send_string:	
  1447                           
  1448                           ;incstack = 0
  1449                           ; Regs used in _Uart_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1450                           ;Uart_send_string@str stored from wreg
  1451  070A  1683               	bsf	3,5	;RP0=1, select bank1
  1452  070B  1303               	bcf	3,6	;RP1=0, select bank1
  1453  070C  00A9               	movwf	Uart_send_string@str^(0+128)
  1454  070D                     l1337:	
  1455                           
  1456                           ;main.c: 483: void Uart_send_string(char *str);main.c: 484: {;main.c: 485:     char i;;m
      +                          ain.c: 486:     for(i=0;i<6;i++)
  1457  070D  01AA               	clrf	Uart_send_string@i^(0+128)
  1458  070E                     l1343:	
  1459                           
  1460                           ;main.c: 487:     {;main.c: 488:         UART_TxChar(*(str+i));
  1461  070E  082A               	movf	Uart_send_string@i^(0+128),w
  1462  070F  0729               	addwf	Uart_send_string@str^(0+128),w
  1463  0710  00A8               	movwf	??_Uart_send_string^(0+128)
  1464  0711  0828               	movf	??_Uart_send_string^(0+128),w
  1465  0712  0084               	movwf	4
  1466  0713  1383               	bcf	3,7	;select IRP bank0
  1467  0714  0800               	movf	0,w
  1468  0715  120A  118A  273A  120A  118A  	fcall	_UART_TxChar
  1469  071A                     l1345:	
  1470                           
  1471                           ;main.c: 489:     }
  1472  071A  3001               	movlw	1
  1473  071B  1683               	bsf	3,5	;RP0=1, select bank1
  1474  071C  1303               	bcf	3,6	;RP1=0, select bank1
  1475  071D  00A8               	movwf	??_Uart_send_string^(0+128)
  1476  071E  0828               	movf	??_Uart_send_string^(0+128),w
  1477  071F  07AA               	addwf	Uart_send_string@i^(0+128),f
  1478  0720                     l1347:	
  1479  0720  3006               	movlw	6
  1480  0721  022A               	subwf	Uart_send_string@i^(0+128),w
  1481  0722  1C03               	skipc
  1482  0723  2F25               	goto	u901
  1483  0724  2F26               	goto	u900
  1484  0725                     u901:	
  1485  0725  2F0E               	goto	l1343
  1486  0726                     u900:	
  1487  0726                     l190:	
  1488  0726  0008               	return
  1489  0727                     __end_of_Uart_send_string:	
  1490                           
  1491                           	psect	text3
  1492  073A                     __ptext3:	
  1493 ;; *************** function _UART_TxChar *****************
  1494 ;; Defined at:
  1495 ;;		line 654 in file "main.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;  dato            1    wreg     unsigned char 
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;  dato            1    7[BANK1 ] unsigned char 
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      void 
  1502 ;; Registers used:
  1503 ;;		wreg
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         0       0       0       0       0
  1510 ;;      Locals:         0       0       1       0       0
  1511 ;;      Temps:          0       0       0       0       0
  1512 ;;      Totals:         0       0       1       0       0
  1513 ;;Total ram usage:        1 bytes
  1514 ;; Hardware stack levels used:    1
  1515 ;; Hardware stack levels required when called:    4
  1516 ;; This function calls:
  1517 ;;		Nothing
  1518 ;; This function is called by:
  1519 ;;		_Uart_send_string
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           
  1524                           ;psect for function _UART_TxChar
  1525  073A                     _UART_TxChar:	
  1526                           
  1527                           ;incstack = 0
  1528                           ; Regs used in _UART_TxChar: [wreg]
  1529                           ;UART_TxChar@dato stored from wreg
  1530  073A  1683               	bsf	3,5	;RP0=1, select bank1
  1531  073B  1303               	bcf	3,6	;RP1=0, select bank1
  1532  073C  00A7               	movwf	UART_TxChar@dato^(0+128)
  1533  073D                     l1313:	
  1534  073D                     l248:	
  1535                           ;main.c: 654: void UART_TxChar(char dato);main.c: 655: {;main.c: 656:     while (!TXIF);
  1536                           
  1537  073D  1283               	bcf	3,5	;RP0=0, select bank0
  1538  073E  1E0C               	btfss	12,4	;volatile
  1539  073F  2F41               	goto	u891
  1540  0740  2F42               	goto	u890
  1541  0741                     u891:	
  1542  0741  2F3D               	goto	l248
  1543  0742                     u890:	
  1544  0742                     l250:	
  1545                           
  1546                           ;main.c: 657:     TXIF = 0;
  1547  0742  120C               	bcf	12,4	;volatile
  1548  0743                     l1315:	
  1549                           
  1550                           ;main.c: 658:     TXREG = dato;
  1551  0743  1683               	bsf	3,5	;RP0=1, select bank1
  1552  0744  1303               	bcf	3,6	;RP1=0, select bank1
  1553  0745  0827               	movf	UART_TxChar@dato^(0+128),w
  1554  0746  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0747  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0748  0099               	movwf	25	;volatile
  1557  0749                     l251:	
  1558  0749  0008               	return
  1559  074A                     __end_of_UART_TxChar:	
  1560                           
  1561                           	psect	text4
  1562  058A                     __ptext4:	
  1563 ;; *************** function _init_lcd *****************
  1564 ;; Defined at:
  1565 ;;		line 621 in file "main.c"
  1566 ;; Parameters:    Size  Location     Type
  1567 ;;		None
  1568 ;; Auto vars:     Size  Location     Type
  1569 ;;		None
  1570 ;; Return value:  Size  Location     Type
  1571 ;;                  1    wreg      void 
  1572 ;; Registers used:
  1573 ;;		wreg, status,2, status,0, pclath, cstack
  1574 ;; Tracked objects:
  1575 ;;		On entry : 0/0
  1576 ;;		On exit  : 0/0
  1577 ;;		Unchanged: 0/0
  1578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1579 ;;      Params:         0       0       0       0       0
  1580 ;;      Locals:         0       0       0       0       0
  1581 ;;      Temps:          0       0       2       0       0
  1582 ;;      Totals:         0       0       2       0       0
  1583 ;;Total ram usage:        2 bytes
  1584 ;; Hardware stack levels used:    1
  1585 ;; Hardware stack levels required when called:    5
  1586 ;; This function calls:
  1587 ;;		_send_cmd
  1588 ;; This function is called by:
  1589 ;;		_main
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           
  1594                           ;psect for function _init_lcd
  1595  058A                     _init_lcd:	
  1596  058A                     l1505:	
  1597                           ;incstack = 0
  1598                           ; Regs used in _init_lcd: [wreg+status,2+status,0+pclath+cstack]
  1599                           
  1600                           
  1601                           ;main.c: 623:     PORTEbits.RE2 = 0;
  1602  058A  1283               	bcf	3,5	;RP0=0, select bank0
  1603  058B  1303               	bcf	3,6	;RP1=0, select bank0
  1604  058C  1109               	bcf	9,2	;volatile
  1605                           
  1606                           ;main.c: 624:     PORTEbits.RE1 = 0;
  1607  058D  1089               	bcf	9,1	;volatile
  1608  058E                     l1507:	
  1609                           
  1610                           ;main.c: 625:     _delay((unsigned long)((20)*(32000000L/4000.0)));
  1611  058E  30D0               	movlw	208
  1612  058F  1683               	bsf	3,5	;RP0=1, select bank1
  1613  0590  1303               	bcf	3,6	;RP1=0, select bank1
  1614  0591  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1615  0592  30C9               	movlw	201
  1616  0593  00AA               	movwf	??_init_lcd^(0+128)
  1617  0594                     u1737:	
  1618  0594  0BAA               	decfsz	??_init_lcd^(0+128),f
  1619  0595  2D94               	goto	u1737
  1620  0596  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1621  0597  2D94               	goto	u1737
  1622  0598                     l1509:	
  1623                           
  1624                           ;main.c: 626:     PORTEbits.RE1 = 1;
  1625  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1626  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1627  059A  1489               	bsf	9,1	;volatile
  1628  059B                     l1511:	
  1629                           
  1630                           ;main.c: 627:     send_cmd(0x38);
  1631  059B  3038               	movlw	56
  1632  059C  120A  118A  265F  120A  118A  	fcall	_send_cmd
  1633  05A1                     l1513:	
  1634                           
  1635                           ;main.c: 628:     _delay((unsigned long)((5)*(32000000L/4000.0)));
  1636  05A1  3034               	movlw	52
  1637  05A2  1683               	bsf	3,5	;RP0=1, select bank1
  1638  05A3  1303               	bcf	3,6	;RP1=0, select bank1
  1639  05A4  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1640  05A5  30F1               	movlw	241
  1641  05A6  00AA               	movwf	??_init_lcd^(0+128)
  1642  05A7                     u1747:	
  1643  05A7  0BAA               	decfsz	??_init_lcd^(0+128),f
  1644  05A8  2DA7               	goto	u1747
  1645  05A9  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1646  05AA  2DA7               	goto	u1747
  1647                           
  1648                           ;main.c: 629:     send_cmd(0x38);
  1649  05AB  3038               	movlw	56
  1650  05AC  120A  118A  265F  120A  118A  	fcall	_send_cmd
  1651  05B1                     l1515:	
  1652                           
  1653                           ;main.c: 630:     _delay((unsigned long)((1)*(32000000L/4000.0)));
  1654  05B1  300B               	movlw	11
  1655  05B2  1683               	bsf	3,5	;RP0=1, select bank1
  1656  05B3  1303               	bcf	3,6	;RP1=0, select bank1
  1657  05B4  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1658  05B5  3061               	movlw	97
  1659  05B6  00AA               	movwf	??_init_lcd^(0+128)
  1660  05B7                     u1757:	
  1661  05B7  0BAA               	decfsz	??_init_lcd^(0+128),f
  1662  05B8  2DB7               	goto	u1757
  1663  05B9  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1664  05BA  2DB7               	goto	u1757
  1665  05BB  2DBC               	nop2
  1666  05BC                     l1517:	
  1667                           
  1668                           ;main.c: 631:     send_cmd(0x38);
  1669  05BC  3038               	movlw	56
  1670  05BD  120A  118A  265F  120A  118A  	fcall	_send_cmd
  1671  05C2                     l1519:	
  1672                           
  1673                           ;main.c: 632:     send_cmd(0x08);
  1674  05C2  3008               	movlw	8
  1675  05C3  120A  118A  265F  120A  118A  	fcall	_send_cmd
  1676  05C8                     l1521:	
  1677                           
  1678                           ;main.c: 633:     send_cmd(0x0F);
  1679  05C8  300F               	movlw	15
  1680  05C9  120A  118A  265F  120A  118A  	fcall	_send_cmd
  1681  05CE                     l1523:	
  1682                           
  1683                           ;main.c: 634:     send_cmd(0x01);
  1684  05CE  3001               	movlw	1
  1685  05CF  120A  118A  265F  120A  118A  	fcall	_send_cmd
  1686  05D4                     l1525:	
  1687                           
  1688                           ;main.c: 635:     send_cmd(0x0C);
  1689  05D4  300C               	movlw	12
  1690  05D5  120A  118A  265F  120A  118A  	fcall	_send_cmd
  1691  05DA                     l1527:	
  1692                           
  1693                           ;main.c: 636:     send_cmd(0x80);
  1694  05DA  3080               	movlw	128
  1695  05DB  120A  118A  265F  120A  118A  	fcall	_send_cmd
  1696  05E0                     l242:	
  1697  05E0  0008               	return
  1698  05E1                     __end_of_init_lcd:	
  1699                           
  1700                           	psect	text5
  1701  065F                     __ptext5:	
  1702 ;; *************** function _send_cmd *****************
  1703 ;; Defined at:
  1704 ;;		line 609 in file "main.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  command         1    wreg     unsigned char 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  command         1    9[BANK1 ] unsigned char 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1718 ;;      Params:         0       0       0       0       0
  1719 ;;      Locals:         0       0       1       0       0
  1720 ;;      Temps:          0       0       2       0       0
  1721 ;;      Totals:         0       0       3       0       0
  1722 ;;Total ram usage:        3 bytes
  1723 ;; Hardware stack levels used:    1
  1724 ;; Hardware stack levels required when called:    4
  1725 ;; This function calls:
  1726 ;;		Nothing
  1727 ;; This function is called by:
  1728 ;;		_main
  1729 ;;		_init_lcd
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           
  1734                           ;psect for function _send_cmd
  1735  065F                     _send_cmd:	
  1736                           
  1737                           ;incstack = 0
  1738                           ; Regs used in _send_cmd: [wreg]
  1739                           ;send_cmd@command stored from wreg
  1740  065F  1683               	bsf	3,5	;RP0=1, select bank1
  1741  0660  1303               	bcf	3,6	;RP1=0, select bank1
  1742  0661  00A9               	movwf	send_cmd@command^(0+128)
  1743  0662                     l1327:	
  1744                           
  1745                           ;main.c: 609: void send_cmd(char command);main.c: 610: {;main.c: 611:     PORTEbits.RE1 
      +                          = 1;
  1746  0662  1283               	bcf	3,5	;RP0=0, select bank0
  1747  0663  1303               	bcf	3,6	;RP1=0, select bank0
  1748  0664  1489               	bsf	9,1	;volatile
  1749  0665                     l1329:	
  1750                           
  1751                           ;main.c: 612:     PORTD = command;
  1752  0665  1683               	bsf	3,5	;RP0=1, select bank1
  1753  0666  1303               	bcf	3,6	;RP1=0, select bank1
  1754  0667  0829               	movf	send_cmd@command^(0+128),w
  1755  0668  1283               	bcf	3,5	;RP0=0, select bank0
  1756  0669  1303               	bcf	3,6	;RP1=0, select bank0
  1757  066A  0088               	movwf	8	;volatile
  1758  066B                     l1331:	
  1759                           
  1760                           ;main.c: 613:     PORTEbits.RE2 = 0;
  1761  066B  1109               	bcf	9,2	;volatile
  1762                           
  1763                           ;main.c: 614:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  1764  066C  3020               	movlw	32
  1765  066D  1683               	bsf	3,5	;RP0=1, select bank1
  1766  066E  1303               	bcf	3,6	;RP1=0, select bank1
  1767  066F  00A8               	movwf	(??_send_cmd^(0+128)+1)
  1768  0670  3029               	movlw	41
  1769  0671  00A7               	movwf	??_send_cmd^(0+128)
  1770  0672                     u1767:	
  1771  0672  0BA7               	decfsz	??_send_cmd^(0+128),f
  1772  0673  2E72               	goto	u1767
  1773  0674  0BA8               	decfsz	(??_send_cmd^(0+128)+1),f
  1774  0675  2E72               	goto	u1767
  1775  0676                     l1333:	
  1776                           
  1777                           ;main.c: 615:     PORTEbits.RE1 = 0;
  1778  0676  1283               	bcf	3,5	;RP0=0, select bank0
  1779  0677  1303               	bcf	3,6	;RP1=0, select bank0
  1780  0678  1089               	bcf	9,1	;volatile
  1781                           
  1782                           ;main.c: 616:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  1783  0679  3020               	movlw	32
  1784  067A  1683               	bsf	3,5	;RP0=1, select bank1
  1785  067B  1303               	bcf	3,6	;RP1=0, select bank1
  1786  067C  00A8               	movwf	(??_send_cmd^(0+128)+1)
  1787  067D  3029               	movlw	41
  1788  067E  00A7               	movwf	??_send_cmd^(0+128)
  1789  067F                     u1777:	
  1790  067F  0BA7               	decfsz	??_send_cmd^(0+128),f
  1791  0680  2E7F               	goto	u1777
  1792  0681  0BA8               	decfsz	(??_send_cmd^(0+128)+1),f
  1793  0682  2E7F               	goto	u1777
  1794  0683                     l1335:	
  1795                           
  1796                           ;main.c: 617:     PORTEbits.RE1 = 1;
  1797  0683  1283               	bcf	3,5	;RP0=0, select bank0
  1798  0684  1303               	bcf	3,6	;RP1=0, select bank0
  1799  0685  1489               	bsf	9,1	;volatile
  1800  0686                     l239:	
  1801  0686  0008               	return
  1802  0687                     __end_of_send_cmd:	
  1803                           
  1804                           	psect	text6
  1805  074A                     __ptext6:	
  1806 ;; *************** function _initPic *****************
  1807 ;; Defined at:
  1808 ;;		line 495 in file "main.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg, status,2
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1822 ;;      Params:         0       0       0       0       0
  1823 ;;      Locals:         0       0       0       0       0
  1824 ;;      Temps:          0       0       0       0       0
  1825 ;;      Totals:         0       0       0       0       0
  1826 ;;Total ram usage:        0 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; Hardware stack levels required when called:    4
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           
  1837                           ;psect for function _initPic
  1838  074A                     _initPic:	
  1839  074A                     l1489:	
  1840                           ;incstack = 0
  1841                           ; Regs used in _initPic: [wreg+status,2]
  1842                           
  1843                           
  1844                           ;main.c: 497:     TRISD = 0x00;
  1845  074A  1683               	bsf	3,5	;RP0=1, select bank1
  1846  074B  1303               	bcf	3,6	;RP1=0, select bank1
  1847  074C  0188               	clrf	8	;volatile
  1848  074D                     l1491:	
  1849                           
  1850                           ;main.c: 498:     TRISB = 0xFF;
  1851  074D  30FF               	movlw	255
  1852  074E  0086               	movwf	6	;volatile
  1853  074F                     l1493:	
  1854                           
  1855                           ;main.c: 499:     TRISE = 0x00;
  1856  074F  0189               	clrf	9	;volatile
  1857                           
  1858                           ;main.c: 501:     INTCON = 0xA0;
  1859  0750  30A0               	movlw	160
  1860  0751  008B               	movwf	11	;volatile
  1861                           
  1862                           ;main.c: 502:     OPTION_REG = 0x07;
  1863  0752  3007               	movlw	7
  1864  0753  0081               	movwf	1	;volatile
  1865                           
  1866                           ;main.c: 503:     TMR0 = 6;
  1867  0754  3006               	movlw	6
  1868  0755  1283               	bcf	3,5	;RP0=0, select bank0
  1869  0756  1303               	bcf	3,6	;RP1=0, select bank0
  1870  0757  0081               	movwf	1	;volatile
  1871  0758                     l193:	
  1872  0758  0008               	return
  1873  0759                     __end_of_initPic:	
  1874                           
  1875                           	psect	text7
  1876  0625                     __ptext7:	
  1877 ;; *************** function _UART_init *****************
  1878 ;; Defined at:
  1879 ;;		line 641 in file "main.c"
  1880 ;; Parameters:    Size  Location     Type
  1881 ;;  baudrate        2   22[BANK1 ] int 
  1882 ;; Auto vars:     Size  Location     Type
  1883 ;;		None
  1884 ;; Return value:  Size  Location     Type
  1885 ;;                  1    wreg      void 
  1886 ;; Registers used:
  1887 ;;		wreg, status,2, status,0, pclath, cstack
  1888 ;; Tracked objects:
  1889 ;;		On entry : 0/0
  1890 ;;		On exit  : 0/0
  1891 ;;		Unchanged: 0/0
  1892 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1893 ;;      Params:         0       0       2       0       0
  1894 ;;      Locals:         0       0       0       0       0
  1895 ;;      Temps:          0       0       4       0       0
  1896 ;;      Totals:         0       0       6       0       0
  1897 ;;Total ram usage:        6 bytes
  1898 ;; Hardware stack levels used:    1
  1899 ;; Hardware stack levels required when called:    5
  1900 ;; This function calls:
  1901 ;;		___aldiv
  1902 ;; This function is called by:
  1903 ;;		_main
  1904 ;; This function uses a non-reentrant model
  1905 ;;
  1906                           
  1907                           
  1908                           ;psect for function _UART_init
  1909  0625                     _UART_init:	
  1910  0625                     l1495:	
  1911                           ;incstack = 0
  1912                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  1913                           
  1914                           
  1915                           ;main.c: 641: void UART_init(int baudrate);main.c: 642: {;main.c: 643:     TRISCbits.TRI
      +                          SC6 = 0;
  1916  0625  1683               	bsf	3,5	;RP0=1, select bank1
  1917  0626  1303               	bcf	3,6	;RP1=0, select bank1
  1918  0627  1307               	bcf	7,6	;volatile
  1919                           
  1920                           ;main.c: 644:     TXSTAbits.TXEN = 1;
  1921  0628  1698               	bsf	24,5	;volatile
  1922                           
  1923                           ;main.c: 645:     RCSTAbits.SPEN = 1;
  1924  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1925  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1926  062B  1798               	bsf	24,7	;volatile
  1927                           
  1928                           ;main.c: 646:     RCSTAbits.CREN = 1;
  1929  062C  1618               	bsf	24,4	;volatile
  1930  062D                     l1497:	
  1931                           
  1932                           ;main.c: 647:     SPBRG = (32000000L/(long)(64UL*baudrate))-1;
  1933  062D  1683               	bsf	3,5	;RP0=1, select bank1
  1934  062E  1303               	bcf	3,6	;RP1=0, select bank1
  1935  062F  0836               	movf	UART_init@baudrate^(0+128),w
  1936  0630  00B8               	movwf	??_UART_init^(0+128)
  1937  0631  0837               	movf	(UART_init@baudrate+1)^(0+128),w
  1938  0632  00B9               	movwf	(??_UART_init^(0+128)+1)
  1939  0633  3000               	movlw	0
  1940  0634  1BB9               	btfsc	(??_UART_init^(0+128)+1),7
  1941  0635  30FF               	movlw	255
  1942  0636  00BA               	movwf	(??_UART_init^(0+128)+2)
  1943  0637  00BB               	movwf	(??_UART_init^(0+128)+3)
  1944  0638  3006               	movlw	6
  1945  0639                     u1215:	
  1946  0639  1003               	clrc
  1947  063A  0DB8               	rlf	??_UART_init^(0+128),f
  1948  063B  0DB9               	rlf	(??_UART_init^(0+128)+1),f
  1949  063C  0DBA               	rlf	(??_UART_init^(0+128)+2),f
  1950  063D  0DBB               	rlf	(??_UART_init^(0+128)+3),f
  1951  063E                     u1210:	
  1952  063E  3EFF               	addlw	-1
  1953  063F  1D03               	skipz
  1954  0640  2E39               	goto	u1215
  1955  0641  083B               	movf	(??_UART_init+3)^(0+128),w
  1956  0642  00AA               	movwf	(___aldiv@divisor+3)^(0+128)
  1957  0643  083A               	movf	(??_UART_init+2)^(0+128),w
  1958  0644  00A9               	movwf	(___aldiv@divisor+2)^(0+128)
  1959  0645  0839               	movf	(??_UART_init+1)^(0+128),w
  1960  0646  00A8               	movwf	(___aldiv@divisor+1)^(0+128)
  1961  0647  0838               	movf	??_UART_init^(0+128),w
  1962  0648  00A7               	movwf	___aldiv@divisor^(0+128)
  1963  0649  3001               	movlw	1
  1964  064A  00AE               	movwf	(___aldiv@dividend+3)^(0+128)
  1965  064B  30E8               	movlw	232
  1966  064C  00AD               	movwf	(___aldiv@dividend+2)^(0+128)
  1967  064D  3048               	movlw	72
  1968  064E  00AC               	movwf	(___aldiv@dividend+1)^(0+128)
  1969  064F  3000               	movlw	0
  1970  0650  00AB               	movwf	___aldiv@dividend^(0+128)
  1971  0651  120A  118A  242D  120A  118A  	fcall	___aldiv
  1972  0656  1683               	bsf	3,5	;RP0=1, select bank1
  1973  0657  1303               	bcf	3,6	;RP1=0, select bank1
  1974  0658  0827               	movf	?___aldiv^(0+128),w
  1975  0659  3EFF               	addlw	255
  1976  065A  0099               	movwf	25	;volatile
  1977  065B                     l1499:	
  1978                           
  1979                           ;main.c: 648:     INTCONbits.GIE = 1;
  1980  065B  178B               	bsf	11,7	;volatile
  1981  065C                     l1501:	
  1982                           
  1983                           ;main.c: 649:     INTCONbits.PEIE = 1;
  1984  065C  170B               	bsf	11,6	;volatile
  1985  065D                     l1503:	
  1986                           
  1987                           ;main.c: 650:     PIE1bits.RCIE = 1;
  1988  065D  168C               	bsf	12,5	;volatile
  1989  065E                     l245:	
  1990  065E  0008               	return
  1991  065F                     __end_of_UART_init:	
  1992                           
  1993                           	psect	text8
  1994  042D                     __ptext8:	
  1995 ;; *************** function ___aldiv *****************
  1996 ;; Defined at:
  1997 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  divisor         4    7[BANK1 ] long 
  2000 ;;  dividend        4   11[BANK1 ] long 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  quotient        4   18[BANK1 ] long 
  2003 ;;  sign            1   17[BANK1 ] unsigned char 
  2004 ;;  counter         1   16[BANK1 ] unsigned char 
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  4    7[BANK1 ] long 
  2007 ;; Registers used:
  2008 ;;		wreg, status,2, status,0
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2014 ;;      Params:         0       0       8       0       0
  2015 ;;      Locals:         0       0       6       0       0
  2016 ;;      Temps:          0       0       1       0       0
  2017 ;;      Totals:         0       0      15       0       0
  2018 ;;Total ram usage:       15 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; Hardware stack levels required when called:    4
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_UART_init
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           
  2029                           ;psect for function ___aldiv
  2030  042D                     ___aldiv:	
  2031  042D                     l1357:	
  2032                           ;incstack = 0
  2033                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2034                           
  2035  042D  1683               	bsf	3,5	;RP0=1, select bank1
  2036  042E  1303               	bcf	3,6	;RP1=0, select bank1
  2037  042F  01B1               	clrf	___aldiv@sign^(0+128)
  2038  0430                     l1359:	
  2039  0430  1FAA               	btfss	(___aldiv@divisor+3)^(0+128),7
  2040  0431  2C33               	goto	u921
  2041  0432  2C34               	goto	u920
  2042  0433                     u921:	
  2043  0433  2C41               	goto	l402
  2044  0434                     u920:	
  2045  0434                     l1361:	
  2046  0434  09A7               	comf	___aldiv@divisor^(0+128),f
  2047  0435  09A8               	comf	(___aldiv@divisor+1)^(0+128),f
  2048  0436  09A9               	comf	(___aldiv@divisor+2)^(0+128),f
  2049  0437  09AA               	comf	(___aldiv@divisor+3)^(0+128),f
  2050  0438  0AA7               	incf	___aldiv@divisor^(0+128),f
  2051  0439  1903               	skipnz
  2052  043A  0AA8               	incf	(___aldiv@divisor+1)^(0+128),f
  2053  043B  1903               	skipnz
  2054  043C  0AA9               	incf	(___aldiv@divisor+2)^(0+128),f
  2055  043D  1903               	skipnz
  2056  043E  0AAA               	incf	(___aldiv@divisor+3)^(0+128),f
  2057  043F  01B1               	clrf	___aldiv@sign^(0+128)
  2058  0440  0AB1               	incf	___aldiv@sign^(0+128),f
  2059  0441                     l402:	
  2060  0441  1FAE               	btfss	(___aldiv@dividend+3)^(0+128),7
  2061  0442  2C44               	goto	u931
  2062  0443  2C45               	goto	u930
  2063  0444                     u931:	
  2064  0444  2C54               	goto	l1367
  2065  0445                     u930:	
  2066  0445                     l1363:	
  2067  0445  09AB               	comf	___aldiv@dividend^(0+128),f
  2068  0446  09AC               	comf	(___aldiv@dividend+1)^(0+128),f
  2069  0447  09AD               	comf	(___aldiv@dividend+2)^(0+128),f
  2070  0448  09AE               	comf	(___aldiv@dividend+3)^(0+128),f
  2071  0449  0AAB               	incf	___aldiv@dividend^(0+128),f
  2072  044A  1903               	skipnz
  2073  044B  0AAC               	incf	(___aldiv@dividend+1)^(0+128),f
  2074  044C  1903               	skipnz
  2075  044D  0AAD               	incf	(___aldiv@dividend+2)^(0+128),f
  2076  044E  1903               	skipnz
  2077  044F  0AAE               	incf	(___aldiv@dividend+3)^(0+128),f
  2078  0450                     l1365:	
  2079  0450  3001               	movlw	1
  2080  0451  00AF               	movwf	??___aldiv^(0+128)
  2081  0452  082F               	movf	??___aldiv^(0+128),w
  2082  0453  06B1               	xorwf	___aldiv@sign^(0+128),f
  2083  0454                     l1367:	
  2084  0454  3000               	movlw	0
  2085  0455  00B5               	movwf	(___aldiv@quotient+3)^(0+128)
  2086  0456  3000               	movlw	0
  2087  0457  00B4               	movwf	(___aldiv@quotient+2)^(0+128)
  2088  0458  3000               	movlw	0
  2089  0459  00B3               	movwf	(___aldiv@quotient+1)^(0+128)
  2090  045A  3000               	movlw	0
  2091  045B  00B2               	movwf	___aldiv@quotient^(0+128)
  2092  045C                     l1369:	
  2093  045C  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2094  045D  0429               	iorwf	(___aldiv@divisor+2)^(0+128),w
  2095  045E  0428               	iorwf	(___aldiv@divisor+1)^(0+128),w
  2096  045F  0427               	iorwf	___aldiv@divisor^(0+128),w
  2097  0460  1903               	skipnz
  2098  0461  2C63               	goto	u941
  2099  0462  2C64               	goto	u940
  2100  0463                     u941:	
  2101  0463  2CB1               	goto	l1389
  2102  0464                     u940:	
  2103  0464                     l1371:	
  2104  0464  01B0               	clrf	___aldiv@counter^(0+128)
  2105  0465  0AB0               	incf	___aldiv@counter^(0+128),f
  2106  0466  2C74               	goto	l1375
  2107  0467                     l1373:	
  2108  0467  3001               	movlw	1
  2109  0468  00AF               	movwf	??___aldiv^(0+128)
  2110  0469                     u955:	
  2111  0469  1003               	clrc
  2112  046A  0DA7               	rlf	___aldiv@divisor^(0+128),f
  2113  046B  0DA8               	rlf	(___aldiv@divisor+1)^(0+128),f
  2114  046C  0DA9               	rlf	(___aldiv@divisor+2)^(0+128),f
  2115  046D  0DAA               	rlf	(___aldiv@divisor+3)^(0+128),f
  2116  046E  0BAF               	decfsz	??___aldiv^(0+128),f
  2117  046F  2C69               	goto	u955
  2118  0470  3001               	movlw	1
  2119  0471  00AF               	movwf	??___aldiv^(0+128)
  2120  0472  082F               	movf	??___aldiv^(0+128),w
  2121  0473  07B0               	addwf	___aldiv@counter^(0+128),f
  2122  0474                     l1375:	
  2123  0474  1FAA               	btfss	(___aldiv@divisor+3)^(0+128),7
  2124  0475  2C77               	goto	u961
  2125  0476  2C78               	goto	u960
  2126  0477                     u961:	
  2127  0477  2C67               	goto	l1373
  2128  0478                     u960:	
  2129  0478                     l1377:	
  2130  0478  3001               	movlw	1
  2131  0479  00AF               	movwf	??___aldiv^(0+128)
  2132  047A                     u975:	
  2133  047A  1003               	clrc
  2134  047B  0DB2               	rlf	___aldiv@quotient^(0+128),f
  2135  047C  0DB3               	rlf	(___aldiv@quotient+1)^(0+128),f
  2136  047D  0DB4               	rlf	(___aldiv@quotient+2)^(0+128),f
  2137  047E  0DB5               	rlf	(___aldiv@quotient+3)^(0+128),f
  2138  047F  0BAF               	decfsz	??___aldiv^(0+128),f
  2139  0480  2C7A               	goto	u975
  2140  0481                     l1379:	
  2141  0481  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2142  0482  022E               	subwf	(___aldiv@dividend+3)^(0+128),w
  2143  0483  1D03               	skipz
  2144  0484  2C8F               	goto	u985
  2145  0485  0829               	movf	(___aldiv@divisor+2)^(0+128),w
  2146  0486  022D               	subwf	(___aldiv@dividend+2)^(0+128),w
  2147  0487  1D03               	skipz
  2148  0488  2C8F               	goto	u985
  2149  0489  0828               	movf	(___aldiv@divisor+1)^(0+128),w
  2150  048A  022C               	subwf	(___aldiv@dividend+1)^(0+128),w
  2151  048B  1D03               	skipz
  2152  048C  2C8F               	goto	u985
  2153  048D  0827               	movf	___aldiv@divisor^(0+128),w
  2154  048E  022B               	subwf	___aldiv@dividend^(0+128),w
  2155  048F                     u985:	
  2156  048F  1C03               	skipc
  2157  0490  2C92               	goto	u981
  2158  0491  2C93               	goto	u980
  2159  0492                     u981:	
  2160  0492  2CA2               	goto	l1385
  2161  0493                     u980:	
  2162  0493                     l1381:	
  2163  0493  0827               	movf	___aldiv@divisor^(0+128),w
  2164  0494  02AB               	subwf	___aldiv@dividend^(0+128),f
  2165  0495  0828               	movf	(___aldiv@divisor+1)^(0+128),w
  2166  0496  1C03               	skipc
  2167  0497  0F28               	incfsz	(___aldiv@divisor+1)^(0+128),w
  2168  0498  02AC               	subwf	(___aldiv@dividend+1)^(0+128),f
  2169  0499  0829               	movf	(___aldiv@divisor+2)^(0+128),w
  2170  049A  1C03               	skipc
  2171  049B  0F29               	incfsz	(___aldiv@divisor+2)^(0+128),w
  2172  049C  02AD               	subwf	(___aldiv@dividend+2)^(0+128),f
  2173  049D  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2174  049E  1C03               	skipc
  2175  049F  0F2A               	incfsz	(___aldiv@divisor+3)^(0+128),w
  2176  04A0  02AE               	subwf	(___aldiv@dividend+3)^(0+128),f
  2177  04A1                     l1383:	
  2178  04A1  1432               	bsf	___aldiv@quotient^(0+128),0
  2179  04A2                     l1385:	
  2180  04A2  3001               	movlw	1
  2181  04A3                     u995:	
  2182  04A3  1003               	clrc
  2183  04A4  0CAA               	rrf	(___aldiv@divisor+3)^(0+128),f
  2184  04A5  0CA9               	rrf	(___aldiv@divisor+2)^(0+128),f
  2185  04A6  0CA8               	rrf	(___aldiv@divisor+1)^(0+128),f
  2186  04A7  0CA7               	rrf	___aldiv@divisor^(0+128),f
  2187  04A8  3EFF               	addlw	-1
  2188  04A9  1D03               	skipz
  2189  04AA  2CA3               	goto	u995
  2190  04AB                     l1387:	
  2191  04AB  3001               	movlw	1
  2192  04AC  02B0               	subwf	___aldiv@counter^(0+128),f
  2193  04AD  1D03               	btfss	3,2
  2194  04AE  2CB0               	goto	u1001
  2195  04AF  2CB1               	goto	u1000
  2196  04B0                     u1001:	
  2197  04B0  2C78               	goto	l1377
  2198  04B1                     u1000:	
  2199  04B1                     l1389:	
  2200  04B1  0831               	movf	___aldiv@sign^(0+128),w
  2201  04B2  1903               	btfsc	3,2
  2202  04B3  2CB5               	goto	u1011
  2203  04B4  2CB6               	goto	u1010
  2204  04B5                     u1011:	
  2205  04B5  2CC1               	goto	l1393
  2206  04B6                     u1010:	
  2207  04B6                     l1391:	
  2208  04B6  09B2               	comf	___aldiv@quotient^(0+128),f
  2209  04B7  09B3               	comf	(___aldiv@quotient+1)^(0+128),f
  2210  04B8  09B4               	comf	(___aldiv@quotient+2)^(0+128),f
  2211  04B9  09B5               	comf	(___aldiv@quotient+3)^(0+128),f
  2212  04BA  0AB2               	incf	___aldiv@quotient^(0+128),f
  2213  04BB  1903               	skipnz
  2214  04BC  0AB3               	incf	(___aldiv@quotient+1)^(0+128),f
  2215  04BD  1903               	skipnz
  2216  04BE  0AB4               	incf	(___aldiv@quotient+2)^(0+128),f
  2217  04BF  1903               	skipnz
  2218  04C0  0AB5               	incf	(___aldiv@quotient+3)^(0+128),f
  2219  04C1                     l1393:	
  2220  04C1  0835               	movf	(___aldiv@quotient+3)^(0+128),w
  2221  04C2  00AA               	movwf	(?___aldiv+3)^(0+128)
  2222  04C3  0834               	movf	(___aldiv@quotient+2)^(0+128),w
  2223  04C4  00A9               	movwf	(?___aldiv+2)^(0+128)
  2224  04C5  0833               	movf	(___aldiv@quotient+1)^(0+128),w
  2225  04C6  00A8               	movwf	(?___aldiv+1)^(0+128)
  2226  04C7  0832               	movf	___aldiv@quotient^(0+128),w
  2227  04C8  00A7               	movwf	?___aldiv^(0+128)
  2228  04C9                     l412:	
  2229  04C9  0008               	return
  2230  04CA                     __end_of___aldiv:	
  2231                           
  2232                           	psect	text9
  2233  0311                     __ptext9:	
  2234 ;; *************** function _ISR *****************
  2235 ;; Defined at:
  2236 ;;		line 349 in file "main.c"
  2237 ;; Parameters:    Size  Location     Type
  2238 ;;		None
  2239 ;; Auto vars:     Size  Location     Type
  2240 ;;		None
  2241 ;; Return value:  Size  Location     Type
  2242 ;;                  1    wreg      void 
  2243 ;; Registers used:
  2244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2245 ;; Tracked objects:
  2246 ;;		On entry : 0/0
  2247 ;;		On exit  : 0/0
  2248 ;;		Unchanged: 0/0
  2249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2250 ;;      Params:         0       0       0       0       0
  2251 ;;      Locals:         0       0       0       0       0
  2252 ;;      Temps:          0       0       7       0       0
  2253 ;;      Totals:         0       0       7       0       0
  2254 ;;Total ram usage:        7 bytes
  2255 ;; Hardware stack levels used:    1
  2256 ;; Hardware stack levels required when called:    3
  2257 ;; This function calls:
  2258 ;;		_print_Countdown
  2259 ;; This function is called by:
  2260 ;;		Interrupt level 1
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           
  2265                           ;psect for function _ISR
  2266  0311                     _ISR:	
  2267  0311                     i1l1685:	
  2268                           
  2269                           ;main.c: 353:     if (!(PORTBbits.RB3)&& (!oldBtn1))
  2270  0311  1283               	bcf	3,5	;RP0=0, select bank0
  2271  0312  1303               	bcf	3,6	;RP1=0, select bank0
  2272  0313  1986               	btfsc	6,3	;volatile
  2273  0314  2B16               	goto	u150_21
  2274  0315  2B17               	goto	u150_20
  2275  0316                     u150_21:	
  2276  0316  2B28               	goto	i1l155
  2277  0317                     u150_20:	
  2278  0317                     i1l1687:	
  2279  0317  086F               	movf	_oldBtn1,w
  2280  0318  1D03               	btfss	3,2
  2281  0319  2B1B               	goto	u151_21
  2282  031A  2B1C               	goto	u151_20
  2283  031B                     u151_21:	
  2284  031B  2B28               	goto	i1l155
  2285  031C                     u151_20:	
  2286  031C                     i1l1689:	
  2287                           
  2288                           ;main.c: 354:     {;main.c: 355:         stat1=!stat1;
  2289  031C  1683               	bsf	3,5	;RP0=1, select bank1
  2290  031D  1303               	bcf	3,6	;RP1=0, select bank1
  2291  031E  084F               	movf	_stat1^(0+128),w
  2292  031F  1903               	btfsc	3,2
  2293  0320  2B22               	goto	u152_21
  2294  0321  2B24               	goto	u152_20
  2295  0322                     u152_21:	
  2296  0322  3001               	movlw	1
  2297  0323  2B25               	goto	u153_20
  2298  0324                     u152_20:	
  2299  0324  3000               	movlw	0
  2300  0325                     u153_20:	
  2301  0325  00A0               	movwf	??_ISR^(0+128)
  2302  0326  0820               	movf	??_ISR^(0+128),w
  2303  0327  00CF               	movwf	_stat1^(0+128)
  2304  0328                     i1l155:	
  2305                           ;main.c: 357:     }
  2306                           
  2307                           
  2308                           ;main.c: 358:     oldBtn1 = !PORTBbits.RB3;
  2309  0328  1003               	clrc
  2310  0329  1283               	bcf	3,5	;RP0=0, select bank0
  2311  032A  1D86               	btfss	6,3	;volatile
  2312  032B  1403               	setc
  2313  032C  3000               	movlw	0
  2314  032D  1803               	btfsc	3,0
  2315  032E  3001               	movlw	1
  2316  032F  00EF               	movwf	_oldBtn1
  2317  0330                     i1l1691:	
  2318                           
  2319                           ;main.c: 360:     if (!(PORTBbits.RB4)&& (!oldBtn2))
  2320  0330  1A06               	btfsc	6,4	;volatile
  2321  0331  2B33               	goto	u154_21
  2322  0332  2B34               	goto	u154_20
  2323  0333                     u154_21:	
  2324  0333  2B45               	goto	i1l156
  2325  0334                     u154_20:	
  2326  0334                     i1l1693:	
  2327  0334  1683               	bsf	3,5	;RP0=1, select bank1
  2328  0335  1303               	bcf	3,6	;RP1=0, select bank1
  2329  0336  084E               	movf	_oldBtn2^(0+128),w
  2330  0337  1D03               	btfss	3,2
  2331  0338  2B3A               	goto	u155_21
  2332  0339  2B3B               	goto	u155_20
  2333  033A                     u155_21:	
  2334  033A  2B45               	goto	i1l156
  2335  033B                     u155_20:	
  2336  033B                     i1l1695:	
  2337                           
  2338                           ;main.c: 361:     {;main.c: 362:         stat2=!stat2;
  2339  033B  084D               	movf	_stat2^(0+128),w
  2340  033C  1903               	btfsc	3,2
  2341  033D  2B3F               	goto	u156_21
  2342  033E  2B41               	goto	u156_20
  2343  033F                     u156_21:	
  2344  033F  3001               	movlw	1
  2345  0340  2B42               	goto	u157_20
  2346  0341                     u156_20:	
  2347  0341  3000               	movlw	0
  2348  0342                     u157_20:	
  2349  0342  00A0               	movwf	??_ISR^(0+128)
  2350  0343  0820               	movf	??_ISR^(0+128),w
  2351  0344  00CD               	movwf	_stat2^(0+128)
  2352  0345                     i1l156:	
  2353                           ;main.c: 364:     }
  2354                           
  2355                           
  2356                           ;main.c: 365:     oldBtn2 = !PORTBbits.RB4;
  2357  0345  1003               	clrc
  2358  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2359  0347  1E06               	btfss	6,4	;volatile
  2360  0348  1403               	setc
  2361  0349  3000               	movlw	0
  2362  034A  1803               	btfsc	3,0
  2363  034B  3001               	movlw	1
  2364  034C  1683               	bsf	3,5	;RP0=1, select bank1
  2365  034D  1303               	bcf	3,6	;RP1=0, select bank1
  2366  034E  00CE               	movwf	_oldBtn2^(0+128)
  2367  034F                     i1l1697:	
  2368                           
  2369                           ;main.c: 367:     if (!(PORTBbits.RB5)&& (!oldBtn3))
  2370  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2371  0350  1303               	bcf	3,6	;RP1=0, select bank0
  2372  0351  1A86               	btfsc	6,5	;volatile
  2373  0352  2B54               	goto	u158_21
  2374  0353  2B55               	goto	u158_20
  2375  0354                     u158_21:	
  2376  0354  2B66               	goto	i1l157
  2377  0355                     u158_20:	
  2378  0355                     i1l1699:	
  2379  0355  1683               	bsf	3,5	;RP0=1, select bank1
  2380  0356  1303               	bcf	3,6	;RP1=0, select bank1
  2381  0357  084C               	movf	_oldBtn3^(0+128),w
  2382  0358  1D03               	btfss	3,2
  2383  0359  2B5B               	goto	u159_21
  2384  035A  2B5C               	goto	u159_20
  2385  035B                     u159_21:	
  2386  035B  2B66               	goto	i1l157
  2387  035C                     u159_20:	
  2388  035C                     i1l1701:	
  2389                           
  2390                           ;main.c: 368:     {;main.c: 369:         stat3=!stat3;
  2391  035C  084B               	movf	_stat3^(0+128),w
  2392  035D  1903               	btfsc	3,2
  2393  035E  2B60               	goto	u160_21
  2394  035F  2B62               	goto	u160_20
  2395  0360                     u160_21:	
  2396  0360  3001               	movlw	1
  2397  0361  2B63               	goto	u161_20
  2398  0362                     u160_20:	
  2399  0362  3000               	movlw	0
  2400  0363                     u161_20:	
  2401  0363  00A0               	movwf	??_ISR^(0+128)
  2402  0364  0820               	movf	??_ISR^(0+128),w
  2403  0365  00CB               	movwf	_stat3^(0+128)
  2404  0366                     i1l157:	
  2405                           ;main.c: 371:     }
  2406                           
  2407                           
  2408                           ;main.c: 372:     oldBtn3 = !PORTBbits.RB5;
  2409  0366  1003               	clrc
  2410  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2411  0368  1E86               	btfss	6,5	;volatile
  2412  0369  1403               	setc
  2413  036A  3000               	movlw	0
  2414  036B  1803               	btfsc	3,0
  2415  036C  3001               	movlw	1
  2416  036D  1683               	bsf	3,5	;RP0=1, select bank1
  2417  036E  1303               	bcf	3,6	;RP1=0, select bank1
  2418  036F  00CC               	movwf	_oldBtn3^(0+128)
  2419  0370                     i1l1703:	
  2420                           
  2421                           ;main.c: 376:    if(RCIF)
  2422  0370  1283               	bcf	3,5	;RP0=0, select bank0
  2423  0371  1303               	bcf	3,6	;RP1=0, select bank0
  2424  0372  1E8C               	btfss	12,5	;volatile
  2425  0373  2B75               	goto	u162_21
  2426  0374  2B76               	goto	u162_20
  2427  0375                     u162_21:	
  2428  0375  2B83               	goto	i1l1711
  2429  0376                     u162_20:	
  2430  0376                     i1l159:	
  2431  0376  1E8C               	btfss	12,5	;volatile
  2432  0377  2B79               	goto	u163_21
  2433  0378  2B7A               	goto	u163_20
  2434  0379                     u163_21:	
  2435  0379  2B76               	goto	i1l159
  2436  037A                     u163_20:	
  2437  037A                     i1l161:	
  2438                           
  2439                           ;main.c: 379:         RCIF = 0;
  2440  037A  128C               	bcf	12,5	;volatile
  2441  037B                     i1l1707:	
  2442                           
  2443                           ;main.c: 380:         datoSeriale = RCREG;
  2444  037B  081A               	movf	26,w	;volatile
  2445  037C  1683               	bsf	3,5	;RP0=1, select bank1
  2446  037D  1303               	bcf	3,6	;RP1=0, select bank1
  2447  037E  00A0               	movwf	??_ISR^(0+128)
  2448  037F  0820               	movf	??_ISR^(0+128),w
  2449  0380  00D3               	movwf	_datoSeriale^(0+128)
  2450  0381                     i1l1709:	
  2451                           
  2452                           ;main.c: 381:         received = 1;
  2453  0381  01D4               	clrf	_received^(0+128)
  2454  0382  0AD4               	incf	_received^(0+128),f
  2455  0383                     i1l1711:	
  2456                           
  2457                           ;main.c: 384:    if (INTCON&0x04)
  2458  0383  1D0B               	btfss	11,2	;volatile
  2459  0384  2B86               	goto	u164_21
  2460  0385  2B87               	goto	u164_20
  2461  0386                     u164_21:	
  2462  0386  2C1C               	goto	i1l173
  2463  0387                     u164_20:	
  2464  0387                     i1l1713:	
  2465                           
  2466                           ;main.c: 385:     {;main.c: 386:         INTCON &= ~0x04;
  2467  0387  30FB               	movlw	251
  2468  0388  1683               	bsf	3,5	;RP0=1, select bank1
  2469  0389  1303               	bcf	3,6	;RP1=0, select bank1
  2470  038A  00A0               	movwf	??_ISR^(0+128)
  2471  038B  0820               	movf	??_ISR^(0+128),w
  2472  038C  058B               	andwf	11,f	;volatile
  2473  038D                     i1l1715:	
  2474                           
  2475                           ;main.c: 387:         TMR0 = 6;
  2476  038D  3006               	movlw	6
  2477  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2478  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2479  0390  0081               	movwf	1	;volatile
  2480  0391                     i1l1717:	
  2481                           
  2482                           ;main.c: 388:         count++;
  2483  0391  3001               	movlw	1
  2484  0392  1683               	bsf	3,5	;RP0=1, select bank1
  2485  0393  1303               	bcf	3,6	;RP1=0, select bank1
  2486  0394  07C7               	addwf	_count^(0+128),f
  2487  0395  1803               	skipnc
  2488  0396  0AC8               	incf	(_count+1)^(0+128),f
  2489  0397  3000               	movlw	0
  2490  0398  07C8               	addwf	(_count+1)^(0+128),f
  2491                           
  2492                           ;main.c: 389:         if (count == 125)
  2493  0399  307D               	movlw	125
  2494  039A  0647               	xorwf	_count^(0+128),w
  2495  039B  0448               	iorwf	(_count+1)^(0+128),w
  2496  039C  1D03               	btfss	3,2
  2497  039D  2B9F               	goto	u165_21
  2498  039E  2BA0               	goto	u165_20
  2499  039F                     u165_21:	
  2500  039F  2C1C               	goto	i1l173
  2501  03A0                     u165_20:	
  2502  03A0                     i1l1719:	
  2503                           
  2504                           ;main.c: 390:         {;main.c: 392:             if(semafori[0]==statoSemafori[0])
  2505  03A0  0841               	movf	_semafori^(0+128),w
  2506  03A1  065D               	xorwf	_statoSemafori^(0+128),w
  2507  03A2  1D03               	skipz
  2508  03A3  2BA5               	goto	u166_21
  2509  03A4  2BA6               	goto	u166_20
  2510  03A5                     u166_21:	
  2511  03A5  2BB3               	goto	i1l1723
  2512  03A6                     u166_20:	
  2513  03A6                     i1l1721:	
  2514                           
  2515                           ;main.c: 393:                 print_Countdown(countDown, 0);
  2516  03A6  087D               	movf	_countDown,w
  2517  03A7  00A0               	movwf	??_ISR^(0+128)
  2518  03A8  01A1               	clrf	(??_ISR^(0+128)+1)
  2519  03A9  0820               	movf	??_ISR^(0+128),w
  2520  03AA  00F9               	movwf	print_Countdown@num
  2521  03AB  0821               	movf	(??_ISR+1)^(0+128),w
  2522  03AC  00FA               	movwf	print_Countdown@num+1
  2523  03AD  01FB               	clrf	print_Countdown@statoSem
  2524  03AE  120A  118A  21D4  120A  118A  	fcall	_print_Countdown
  2525  03B3                     i1l1723:	
  2526                           
  2527                           ;main.c: 394:             if(semafori[0]==statoSemafori[1])
  2528  03B3  1683               	bsf	3,5	;RP0=1, select bank1
  2529  03B4  1303               	bcf	3,6	;RP1=0, select bank1
  2530  03B5  085E               	movf	(_statoSemafori^(0+128)+1),w
  2531  03B6  0641               	xorwf	_semafori^(0+128),w
  2532  03B7  1D03               	skipz
  2533  03B8  2BBA               	goto	u167_21
  2534  03B9  2BBB               	goto	u167_20
  2535  03BA                     u167_21:	
  2536  03BA  2BC9               	goto	i1l1727
  2537  03BB                     u167_20:	
  2538  03BB                     i1l1725:	
  2539                           
  2540                           ;main.c: 395:                 print_Countdown(countDown, 1);
  2541  03BB  087D               	movf	_countDown,w
  2542  03BC  00A0               	movwf	??_ISR^(0+128)
  2543  03BD  01A1               	clrf	(??_ISR^(0+128)+1)
  2544  03BE  0820               	movf	??_ISR^(0+128),w
  2545  03BF  00F9               	movwf	print_Countdown@num
  2546  03C0  0821               	movf	(??_ISR+1)^(0+128),w
  2547  03C1  00FA               	movwf	print_Countdown@num+1
  2548  03C2  01FB               	clrf	print_Countdown@statoSem
  2549  03C3  0AFB               	incf	print_Countdown@statoSem,f
  2550  03C4  120A  118A  21D4  120A  118A  	fcall	_print_Countdown
  2551  03C9                     i1l1727:	
  2552                           
  2553                           ;main.c: 396:             if(semafori[0]==statoSemafori[2])
  2554  03C9  1683               	bsf	3,5	;RP0=1, select bank1
  2555  03CA  1303               	bcf	3,6	;RP1=0, select bank1
  2556  03CB  085F               	movf	(_statoSemafori^(0+128)+2),w
  2557  03CC  0641               	xorwf	_semafori^(0+128),w
  2558  03CD  1D03               	skipz
  2559  03CE  2BD0               	goto	u168_21
  2560  03CF  2BD1               	goto	u168_20
  2561  03D0                     u168_21:	
  2562  03D0  2BE1               	goto	i1l1731
  2563  03D1                     u168_20:	
  2564  03D1                     i1l1729:	
  2565                           
  2566                           ;main.c: 397:                 print_Countdown(countDown, 2);
  2567  03D1  087D               	movf	_countDown,w
  2568  03D2  00A0               	movwf	??_ISR^(0+128)
  2569  03D3  01A1               	clrf	(??_ISR^(0+128)+1)
  2570  03D4  0820               	movf	??_ISR^(0+128),w
  2571  03D5  00F9               	movwf	print_Countdown@num
  2572  03D6  0821               	movf	(??_ISR+1)^(0+128),w
  2573  03D7  00FA               	movwf	print_Countdown@num+1
  2574  03D8  3002               	movlw	2
  2575  03D9  00A2               	movwf	(??_ISR+2)^(0+128)
  2576  03DA  0822               	movf	(??_ISR+2)^(0+128),w
  2577  03DB  00FB               	movwf	print_Countdown@statoSem
  2578  03DC  120A  118A  21D4  120A  118A  	fcall	_print_Countdown
  2579  03E1                     i1l1731:	
  2580                           
  2581                           ;main.c: 399:             if(flagGiallo==1)
  2582  03E1  1683               	bsf	3,5	;RP0=1, select bank1
  2583  03E2  1303               	bcf	3,6	;RP1=0, select bank1
  2584  03E3  0349               	decf	_flagGiallo^(0+128),w
  2585  03E4  1D03               	btfss	3,2
  2586  03E5  2BE7               	goto	u169_21
  2587  03E6  2BE8               	goto	u169_20
  2588  03E7                     u169_21:	
  2589  03E7  2C01               	goto	i1l1739
  2590  03E8                     u169_20:	
  2591  03E8                     i1l1733:	
  2592                           
  2593                           ;main.c: 400:             {;main.c: 401:                 f++;
  2594  03E8  3001               	movlw	1
  2595  03E9  07C5               	addwf	_f^(0+128),f
  2596  03EA  1803               	skipnc
  2597  03EB  0AC6               	incf	(_f+1)^(0+128),f
  2598  03EC  3000               	movlw	0
  2599  03ED  07C6               	addwf	(_f+1)^(0+128),f
  2600  03EE                     i1l1735:	
  2601                           
  2602                           ;main.c: 402:                 if(f>=3)
  2603  03EE  0846               	movf	(_f+1)^(0+128),w
  2604  03EF  3A80               	xorlw	128
  2605  03F0  00FF               	movwf	btemp+1
  2606  03F1  3080               	movlw	128
  2607  03F2  027F               	subwf	btemp+1,w
  2608  03F3  1D03               	skipz
  2609  03F4  2BF7               	goto	u170_25
  2610  03F5  3003               	movlw	3
  2611  03F6  0245               	subwf	_f^(0+128),w
  2612  03F7                     u170_25:	
  2613  03F7  1C03               	skipc
  2614  03F8  2BFA               	goto	u170_21
  2615  03F9  2BFB               	goto	u170_20
  2616  03FA                     u170_21:	
  2617  03FA  2C18               	goto	i1l1749
  2618  03FB                     u170_20:	
  2619  03FB                     i1l1737:	
  2620                           
  2621                           ;main.c: 403:                 {;main.c: 404:                     flagGiallo=0;
  2622  03FB  1683               	bsf	3,5	;RP0=1, select bank1
  2623  03FC  1303               	bcf	3,6	;RP1=0, select bank1
  2624  03FD  01C9               	clrf	_flagGiallo^(0+128)
  2625                           
  2626                           ;main.c: 405:                     f=0;
  2627  03FE  01C5               	clrf	_f^(0+128)
  2628  03FF  01C6               	clrf	(_f+1)^(0+128)
  2629  0400  2C18               	goto	i1l1749
  2630  0401                     i1l1739:	
  2631                           
  2632                           ;main.c: 409:             {;main.c: 410:                 countDown--;
  2633  0401  3001               	movlw	1
  2634  0402  02FD               	subwf	_countDown,f
  2635                           
  2636                           ;main.c: 411:                 if(countDown==0)
  2637  0403  087D               	movf	_countDown,w
  2638  0404  1D03               	btfss	3,2
  2639  0405  2C07               	goto	u171_21
  2640  0406  2C08               	goto	u171_20
  2641  0407                     u171_21:	
  2642  0407  2C18               	goto	i1l1749
  2643  0408                     u171_20:	
  2644  0408                     i1l1741:	
  2645                           
  2646                           ;main.c: 412:                 {;main.c: 413:                     scattoSemafori=1;
  2647  0408  01CA               	clrf	_scattoSemafori^(0+128)
  2648  0409  0ACA               	incf	_scattoSemafori^(0+128),f
  2649  040A                     i1l1743:	
  2650                           
  2651                           ;main.c: 414:                     if(temporizzazione!=0)
  2652  040A  087C               	movf	_temporizzazione,w
  2653  040B  1903               	btfsc	3,2
  2654  040C  2C0E               	goto	u172_21
  2655  040D  2C0F               	goto	u172_20
  2656  040E                     u172_21:	
  2657  040E  2C14               	goto	i1l1747
  2658  040F                     u172_20:	
  2659  040F                     i1l1745:	
  2660                           
  2661                           ;main.c: 415:                         countDown=temporizzazione;
  2662  040F  087C               	movf	_temporizzazione,w
  2663  0410  00A0               	movwf	??_ISR^(0+128)
  2664  0411  0820               	movf	??_ISR^(0+128),w
  2665  0412  00FD               	movwf	_countDown
  2666  0413  2C18               	goto	i1l1749
  2667  0414                     i1l1747:	
  2668                           
  2669                           ;main.c: 417:                         countDown=5;
  2670  0414  3005               	movlw	5
  2671  0415  00A0               	movwf	??_ISR^(0+128)
  2672  0416  0820               	movf	??_ISR^(0+128),w
  2673  0417  00FD               	movwf	_countDown
  2674  0418                     i1l1749:	
  2675                           
  2676                           ;main.c: 426:             count = 0;
  2677  0418  1683               	bsf	3,5	;RP0=1, select bank1
  2678  0419  1303               	bcf	3,6	;RP1=0, select bank1
  2679  041A  01C7               	clrf	_count^(0+128)
  2680  041B  01C8               	clrf	(_count+1)^(0+128)
  2681  041C                     i1l173:	
  2682  041C  1683               	bsf	3,5	;RP0=1, select bank1
  2683  041D  1303               	bcf	3,6	;RP1=0, select bank1
  2684  041E  0826               	movf	(??_ISR+6)^(0+128),w
  2685  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2686  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2687  0421  00FF               	movwf	btemp+1
  2688  0422  1683               	bsf	3,5	;RP0=1, select bank1
  2689  0423  1303               	bcf	3,6	;RP1=0, select bank1
  2690  0424  0825               	movf	(??_ISR+5)^(0+128),w
  2691  0425  008A               	movwf	10
  2692  0426  0824               	movf	(??_ISR+4)^(0+128),w
  2693  0427  0084               	movwf	4
  2694  0428  0E23               	swapf	(??_ISR+3)^(0+128),w
  2695  0429  0083               	movwf	3
  2696  042A  0EFE               	swapf	btemp,f
  2697  042B  0E7E               	swapf	btemp,w
  2698  042C  0009               	retfie
  2699  042D                     __end_of_ISR:	
  2700                           
  2701                           	psect	intentry
  2702  0004                     __pintentry:	
  2703                           ;incstack = 0
  2704                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2705                           
  2706  0004                     interrupt_function:	
  2707  007E                     saved_w	set	btemp
  2708  0004  00FE               	movwf	btemp
  2709  0005  0E03               	swapf	3,w
  2710  0006  1683               	bsf	3,5	;RP0=1, select bank1
  2711  0007  1303               	bcf	3,6	;RP1=0, select bank1
  2712  0008  00A3               	movwf	(??_ISR+3)^(0+128)
  2713  0009  0804               	movf	4,w
  2714  000A  00A4               	movwf	(??_ISR+4)^(0+128)
  2715  000B  080A               	movf	10,w
  2716  000C  00A5               	movwf	(??_ISR+5)^(0+128)
  2717  000D  1283               	bcf	3,5	;RP0=0, select bank0
  2718  000E  1303               	bcf	3,6	;RP1=0, select bank0
  2719  000F  087F               	movf	btemp+1,w
  2720  0010  1683               	bsf	3,5	;RP0=1, select bank1
  2721  0011  1303               	bcf	3,6	;RP1=0, select bank1
  2722  0012  00A6               	movwf	(??_ISR+6)^(0+128)
  2723  0013  120A  118A  2B11   	ljmp	_ISR
  2724                           
  2725                           	psect	text10
  2726  01D4                     __ptext10:	
  2727 ;; *************** function _print_Countdown *****************
  2728 ;; Defined at:
  2729 ;;		line 528 in file "main.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;  num             2    9[COMMON] int 
  2732 ;;  statoSem        1   11[COMMON] unsigned char 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  secondStr      17   38[BANK0 ] unsigned char [17]
  2735 ;;  secondStr      17   21[BANK0 ] unsigned char [17]
  2736 ;;  secondStr      17    4[BANK0 ] unsigned char [17]
  2737 ;;  firstStr       17   55[BANK0 ] unsigned char [17]
  2738 ;;  resultNum       3   72[BANK0 ] unsigned char [3]
  2739 ;;  i               2   77[BANK0 ] int 
  2740 ;;  length          2   75[BANK0 ] int 
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2750 ;;      Params:         3       0       0       0       0
  2751 ;;      Locals:         0      75       0       0       0
  2752 ;;      Temps:          0       4       0       0       0
  2753 ;;      Totals:         3      79       0       0       0
  2754 ;;Total ram usage:       82 bytes
  2755 ;; Hardware stack levels used:    1
  2756 ;; Hardware stack levels required when called:    2
  2757 ;; This function calls:
  2758 ;;		___awdiv
  2759 ;;		___awmod
  2760 ;;		_send_string
  2761 ;;		i1_send_cmd
  2762 ;; This function is called by:
  2763 ;;		_ISR
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           
  2768                           ;psect for function _print_Countdown
  2769  01D4                     _print_Countdown:	
  2770  01D4                     i1l1533:	
  2771                           ;incstack = 0
  2772                           ; Regs used in _print_Countdown: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2773                           
  2774                           
  2775                           ;main.c: 528: void print_Countdown(int num, char statoSem);main.c: 529: {;main.c: 530:  
      +                             char resultNum[3], firstStr[17] = "Tempo:          ";
  2776  01D4  3057               	movlw	print_Countdown@firstStr& (0+255)
  2777  01D5  0084               	movwf	4
  2778  01D6  30C3               	movlw	low print_Countdown@F929
  2779  01D7  1283               	bcf	3,5	;RP0=0, select bank0
  2780  01D8  1303               	bcf	3,6	;RP1=0, select bank0
  2781  01D9  00A0               	movwf	??_print_Countdown
  2782  01DA  0804               	movf	4,w
  2783  01DB  00A1               	movwf	??_print_Countdown+1
  2784  01DC  3011               	movlw	17
  2785  01DD  00A2               	movwf	??_print_Countdown+2
  2786  01DE                     u122_20:	
  2787  01DE  0820               	movf	??_print_Countdown,w
  2788  01DF  0084               	movwf	4
  2789  01E0  1783               	bsf	3,7	;select IRP bank3
  2790  01E1  0800               	movf	0,w
  2791  01E2  00A3               	movwf	??_print_Countdown+3
  2792  01E3  0AA0               	incf	??_print_Countdown,f
  2793  01E4  0821               	movf	??_print_Countdown+1,w
  2794  01E5  0084               	movwf	4
  2795  01E6  1383               	bcf	3,7	;select IRP bank0
  2796  01E7  0823               	movf	??_print_Countdown+3,w
  2797  01E8  0080               	movwf	0
  2798  01E9  0AA1               	incf	??_print_Countdown+1,f
  2799  01EA  0BA2               	decfsz	??_print_Countdown+2,f
  2800  01EB  29DE               	goto	u122_20
  2801  01EC                     i1l1535:	
  2802                           
  2803                           ;main.c: 531:     int length = 2, i = 0;
  2804  01EC  3002               	movlw	2
  2805  01ED  00EB               	movwf	print_Countdown@length
  2806  01EE  3000               	movlw	0
  2807  01EF  00EC               	movwf	print_Countdown@length+1
  2808  01F0                     i1l1537:	
  2809  01F0  01ED               	clrf	print_Countdown@i
  2810  01F1  01EE               	clrf	print_Countdown@i+1
  2811  01F2                     i1l1539:	
  2812                           
  2813                           ;main.c: 533:     if(num < 10)
  2814  01F2  087A               	movf	print_Countdown@num+1,w
  2815  01F3  3A80               	xorlw	128
  2816  01F4  00FF               	movwf	btemp+1
  2817  01F5  3080               	movlw	128
  2818  01F6  027F               	subwf	btemp+1,w
  2819  01F7  1D03               	skipz
  2820  01F8  29FB               	goto	u123_25
  2821  01F9  300A               	movlw	10
  2822  01FA  0279               	subwf	print_Countdown@num,w
  2823  01FB                     u123_25:	
  2824  01FB  1803               	skipnc
  2825  01FC  29FE               	goto	u123_21
  2826  01FD  29FF               	goto	u123_20
  2827  01FE                     u123_21:	
  2828  01FE  2A06               	goto	i1l1543
  2829  01FF                     u123_20:	
  2830  01FF                     i1l1541:	
  2831                           
  2832                           ;main.c: 534:         length = 1;
  2833  01FF  3001               	movlw	1
  2834  0200  1283               	bcf	3,5	;RP0=0, select bank0
  2835  0201  1303               	bcf	3,6	;RP1=0, select bank0
  2836  0202  00EB               	movwf	print_Countdown@length
  2837  0203  3000               	movlw	0
  2838  0204  00EC               	movwf	print_Countdown@length+1
  2839  0205  2A13               	goto	i1l1547
  2840  0206                     i1l1543:	
  2841  0206  3064               	movlw	100
  2842  0207  0679               	xorwf	print_Countdown@num,w
  2843  0208  047A               	iorwf	print_Countdown@num+1,w
  2844  0209  1D03               	btfss	3,2
  2845  020A  2A0C               	goto	u124_21
  2846  020B  2A0D               	goto	u124_20
  2847  020C                     u124_21:	
  2848  020C  2A13               	goto	i1l1547
  2849  020D                     u124_20:	
  2850  020D                     i1l1545:	
  2851                           
  2852                           ;main.c: 536:         length = 3;
  2853  020D  3003               	movlw	3
  2854  020E  1283               	bcf	3,5	;RP0=0, select bank0
  2855  020F  1303               	bcf	3,6	;RP1=0, select bank0
  2856  0210  00EB               	movwf	print_Countdown@length
  2857  0211  3000               	movlw	0
  2858  0212  00EC               	movwf	print_Countdown@length+1
  2859  0213                     i1l1547:	
  2860                           
  2861                           ;main.c: 538:     if(num != 0)
  2862  0213  0879               	movf	print_Countdown@num,w
  2863  0214  047A               	iorwf	print_Countdown@num+1,w
  2864  0215  1903               	btfsc	3,2
  2865  0216  2A18               	goto	u125_21
  2866  0217  2A19               	goto	u125_20
  2867  0218                     u125_21:	
  2868  0218  2A52               	goto	i1l1559
  2869  0219                     u125_20:	
  2870  0219  2A4B               	goto	i1l1557
  2871  021A                     i1l1551:	
  2872                           
  2873                           ;main.c: 541:         {;main.c: 542:             resultNum[i] = num%10 + '0';
  2874  021A  300A               	movlw	10
  2875  021B  00F0               	movwf	___awmod@divisor
  2876  021C  3000               	movlw	0
  2877  021D  00F1               	movwf	___awmod@divisor+1
  2878  021E  087A               	movf	print_Countdown@num+1,w
  2879  021F  00F3               	movwf	___awmod@dividend+1
  2880  0220  0879               	movf	print_Countdown@num,w
  2881  0221  00F2               	movwf	___awmod@dividend
  2882  0222  120A  118A  2531  120A  118A  	fcall	___awmod
  2883  0227  0870               	movf	?___awmod,w
  2884  0228  3E30               	addlw	48
  2885  0229  1283               	bcf	3,5	;RP0=0, select bank0
  2886  022A  1303               	bcf	3,6	;RP1=0, select bank0
  2887  022B  00A0               	movwf	??_print_Countdown
  2888  022C  086D               	movf	print_Countdown@i,w
  2889  022D  3E68               	addlw	(low (print_Countdown@resultNum| 0))& (0+255)
  2890  022E  0084               	movwf	4
  2891  022F  0820               	movf	??_print_Countdown,w
  2892  0230  1383               	bcf	3,7	;select IRP bank0
  2893  0231  0080               	movwf	0
  2894  0232                     i1l1553:	
  2895                           
  2896                           ;main.c: 543:             num /= 10;
  2897  0232  300A               	movlw	10
  2898  0233  00F0               	movwf	___awdiv@divisor
  2899  0234  3000               	movlw	0
  2900  0235  00F1               	movwf	___awdiv@divisor+1
  2901  0236  087A               	movf	print_Countdown@num+1,w
  2902  0237  00F3               	movwf	___awdiv@dividend+1
  2903  0238  0879               	movf	print_Countdown@num,w
  2904  0239  00F2               	movwf	___awdiv@dividend
  2905  023A  120A  118A  24CA  120A  118A  	fcall	___awdiv
  2906  023F  0871               	movf	?___awdiv+1,w
  2907  0240  00FA               	movwf	print_Countdown@num+1
  2908  0241  0870               	movf	?___awdiv,w
  2909  0242  00F9               	movwf	print_Countdown@num
  2910  0243                     i1l1555:	
  2911                           
  2912                           ;main.c: 544:             i++;
  2913  0243  3001               	movlw	1
  2914  0244  1283               	bcf	3,5	;RP0=0, select bank0
  2915  0245  1303               	bcf	3,6	;RP1=0, select bank0
  2916  0246  07ED               	addwf	print_Countdown@i,f
  2917  0247  1803               	skipnc
  2918  0248  0AEE               	incf	print_Countdown@i+1,f
  2919  0249  3000               	movlw	0
  2920  024A  07EE               	addwf	print_Countdown@i+1,f
  2921  024B                     i1l1557:	
  2922                           
  2923                           ;main.c: 540:         while(num)
  2924  024B  0879               	movf	print_Countdown@num,w
  2925  024C  047A               	iorwf	print_Countdown@num+1,w
  2926  024D  1D03               	btfss	3,2
  2927  024E  2A50               	goto	u126_21
  2928  024F  2A51               	goto	u126_20
  2929  0250                     u126_21:	
  2930  0250  2A1A               	goto	i1l1551
  2931  0251                     u126_20:	
  2932  0251  2A58               	goto	i1l1561
  2933  0252                     i1l1559:	
  2934                           
  2935                           ;main.c: 548:     {;main.c: 549:         resultNum[0] = '0';
  2936  0252  3030               	movlw	48
  2937  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2938  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2939  0255  00A0               	movwf	??_print_Countdown
  2940  0256  0820               	movf	??_print_Countdown,w
  2941  0257  00E8               	movwf	print_Countdown@resultNum
  2942  0258                     i1l1561:	
  2943                           
  2944                           ;main.c: 552:     for(i=0; i<length; i++)
  2945  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2946  0259  1303               	bcf	3,6	;RP1=0, select bank0
  2947  025A  01ED               	clrf	print_Countdown@i
  2948  025B  01EE               	clrf	print_Countdown@i+1
  2949  025C  2A71               	goto	i1l1567
  2950  025D                     i1l1563:	
  2951                           
  2952                           ;main.c: 553:     {;main.c: 554:         firstStr[13-i] = resultNum[i];
  2953  025D  1283               	bcf	3,5	;RP0=0, select bank0
  2954  025E  1303               	bcf	3,6	;RP1=0, select bank0
  2955  025F  086D               	movf	print_Countdown@i,w
  2956  0260  3E68               	addlw	(low (print_Countdown@resultNum| 0))& (0+255)
  2957  0261  0084               	movwf	4
  2958  0262  1383               	bcf	3,7	;select IRP bank0
  2959  0263  0800               	movf	0,w
  2960  0264  00A0               	movwf	??_print_Countdown
  2961  0265  086D               	movf	print_Countdown@i,w
  2962  0266  3C0D               	sublw	13
  2963  0267  3E57               	addlw	(low (print_Countdown@firstStr| 0))& (0+255)
  2964  0268  0084               	movwf	4
  2965  0269  0820               	movf	??_print_Countdown,w
  2966  026A  0080               	movwf	0
  2967  026B                     i1l1565:	
  2968                           
  2969                           ;main.c: 555:     }
  2970  026B  3001               	movlw	1
  2971  026C  07ED               	addwf	print_Countdown@i,f
  2972  026D  1803               	skipnc
  2973  026E  0AEE               	incf	print_Countdown@i+1,f
  2974  026F  3000               	movlw	0
  2975  0270  07EE               	addwf	print_Countdown@i+1,f
  2976  0271                     i1l1567:	
  2977  0271  086E               	movf	print_Countdown@i+1,w
  2978  0272  3A80               	xorlw	128
  2979  0273  00A0               	movwf	??_print_Countdown
  2980  0274  086C               	movf	print_Countdown@length+1,w
  2981  0275  3A80               	xorlw	128
  2982  0276  0220               	subwf	??_print_Countdown,w
  2983  0277  1D03               	skipz
  2984  0278  2A7B               	goto	u127_25
  2985  0279  086B               	movf	print_Countdown@length,w
  2986  027A  026D               	subwf	print_Countdown@i,w
  2987  027B                     u127_25:	
  2988  027B  1C03               	skipc
  2989  027C  2A7E               	goto	u127_21
  2990  027D  2A7F               	goto	u127_20
  2991  027E                     u127_21:	
  2992  027E  2A5D               	goto	i1l1563
  2993  027F                     u127_20:	
  2994  027F                     i1l1569:	
  2995                           
  2996                           ;main.c: 557:     send_cmd(0x01);
  2997  027F  3001               	movlw	1
  2998  0280  120A  118A  26CA  120A  118A  	fcall	i1_send_cmd
  2999                           
  3000                           ;main.c: 558:     send_cmd(0xC0);
  3001  0285  30C0               	movlw	192
  3002  0286  120A  118A  26CA  120A  118A  	fcall	i1_send_cmd
  3003  028B                     i1l1571:	
  3004                           
  3005                           ;main.c: 559:     if(statoSem==0)
  3006  028B  087B               	movf	print_Countdown@statoSem,w
  3007  028C  1D03               	btfss	3,2
  3008  028D  2A8F               	goto	u128_21
  3009  028E  2A90               	goto	u128_20
  3010  028F                     u128_21:	
  3011  028F  2AAE               	goto	i1l1577
  3012  0290                     u128_20:	
  3013  0290                     i1l1573:	
  3014                           
  3015                           ;main.c: 560:     {;main.c: 561:        char secondStr[17] = "Sem 0:     Verde";
  3016  0290  3024               	movlw	print_Countdown@secondStr& (0+255)
  3017  0291  0084               	movwf	4
  3018  0292  30B2               	movlw	low print_Countdown@F933
  3019  0293  1283               	bcf	3,5	;RP0=0, select bank0
  3020  0294  1303               	bcf	3,6	;RP1=0, select bank0
  3021  0295  00A0               	movwf	??_print_Countdown
  3022  0296  0804               	movf	4,w
  3023  0297  00A1               	movwf	??_print_Countdown+1
  3024  0298  3011               	movlw	17
  3025  0299  00A2               	movwf	??_print_Countdown+2
  3026  029A                     u129_20:	
  3027  029A  0820               	movf	??_print_Countdown,w
  3028  029B  0084               	movwf	4
  3029  029C  1783               	bsf	3,7	;select IRP bank3
  3030  029D  0800               	movf	0,w
  3031  029E  00A3               	movwf	??_print_Countdown+3
  3032  029F  0AA0               	incf	??_print_Countdown,f
  3033  02A0  0821               	movf	??_print_Countdown+1,w
  3034  02A1  0084               	movwf	4
  3035  02A2  1383               	bcf	3,7	;select IRP bank0
  3036  02A3  0823               	movf	??_print_Countdown+3,w
  3037  02A4  0080               	movwf	0
  3038  02A5  0AA1               	incf	??_print_Countdown+1,f
  3039  02A6  0BA2               	decfsz	??_print_Countdown+2,f
  3040  02A7  2A9A               	goto	u129_20
  3041  02A8                     i1l1575:	
  3042                           
  3043                           ;main.c: 562:        send_string(secondStr);
  3044  02A8  3024               	movlw	(low (print_Countdown@secondStr| 0))& (0+255)
  3045  02A9  120A  118A  26A9  120A  118A  	fcall	_send_string
  3046  02AE                     i1l1577:	
  3047                           
  3048                           ;main.c: 564:     if(statoSem==1)
  3049  02AE  037B               	decf	print_Countdown@statoSem,w
  3050  02AF  1D03               	btfss	3,2
  3051  02B0  2AB2               	goto	u130_21
  3052  02B1  2AB3               	goto	u130_20
  3053  02B2                     u130_21:	
  3054  02B2  2AD1               	goto	i1l1583
  3055  02B3                     u130_20:	
  3056  02B3                     i1l1579:	
  3057                           
  3058                           ;main.c: 565:     {;main.c: 566:        char secondStr[17] = "Sem 0:    Giallo";
  3059  02B3  3035               	movlw	print_Countdown@secondStr_407& (0+255)
  3060  02B4  0084               	movwf	4
  3061  02B5  30A1               	movlw	low print_Countdown@F935
  3062  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  3063  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  3064  02B8  00A0               	movwf	??_print_Countdown
  3065  02B9  0804               	movf	4,w
  3066  02BA  00A1               	movwf	??_print_Countdown+1
  3067  02BB  3011               	movlw	17
  3068  02BC  00A2               	movwf	??_print_Countdown+2
  3069  02BD                     u131_20:	
  3070  02BD  0820               	movf	??_print_Countdown,w
  3071  02BE  0084               	movwf	4
  3072  02BF  1783               	bsf	3,7	;select IRP bank3
  3073  02C0  0800               	movf	0,w
  3074  02C1  00A3               	movwf	??_print_Countdown+3
  3075  02C2  0AA0               	incf	??_print_Countdown,f
  3076  02C3  0821               	movf	??_print_Countdown+1,w
  3077  02C4  0084               	movwf	4
  3078  02C5  1383               	bcf	3,7	;select IRP bank0
  3079  02C6  0823               	movf	??_print_Countdown+3,w
  3080  02C7  0080               	movwf	0
  3081  02C8  0AA1               	incf	??_print_Countdown+1,f
  3082  02C9  0BA2               	decfsz	??_print_Countdown+2,f
  3083  02CA  2ABD               	goto	u131_20
  3084  02CB                     i1l1581:	
  3085                           
  3086                           ;main.c: 567:        send_string(secondStr);
  3087  02CB  3035               	movlw	(low (print_Countdown@secondStr_407| 0))& (0+255)
  3088  02CC  120A  118A  26A9  120A  118A  	fcall	_send_string
  3089  02D1                     i1l1583:	
  3090                           
  3091                           ;main.c: 569:     if(statoSem==2)
  3092  02D1  3002               	movlw	2
  3093  02D2  067B               	xorwf	print_Countdown@statoSem,w
  3094  02D3  1D03               	btfss	3,2
  3095  02D4  2AD6               	goto	u132_21
  3096  02D5  2AD7               	goto	u132_20
  3097  02D6                     u132_21:	
  3098  02D6  2AF5               	goto	i1l1589
  3099  02D7                     u132_20:	
  3100  02D7                     i1l1585:	
  3101                           
  3102                           ;main.c: 570:     {;main.c: 571:        char secondStr[17] = "Sem 0:     Rosso";
  3103  02D7  3046               	movlw	print_Countdown@secondStr_409& (0+255)
  3104  02D8  0084               	movwf	4
  3105  02D9  3090               	movlw	low print_Countdown@F937
  3106  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  3107  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  3108  02DC  00A0               	movwf	??_print_Countdown
  3109  02DD  0804               	movf	4,w
  3110  02DE  00A1               	movwf	??_print_Countdown+1
  3111  02DF  3011               	movlw	17
  3112  02E0  00A2               	movwf	??_print_Countdown+2
  3113  02E1                     u133_20:	
  3114  02E1  0820               	movf	??_print_Countdown,w
  3115  02E2  0084               	movwf	4
  3116  02E3  1783               	bsf	3,7	;select IRP bank3
  3117  02E4  0800               	movf	0,w
  3118  02E5  00A3               	movwf	??_print_Countdown+3
  3119  02E6  0AA0               	incf	??_print_Countdown,f
  3120  02E7  0821               	movf	??_print_Countdown+1,w
  3121  02E8  0084               	movwf	4
  3122  02E9  1383               	bcf	3,7	;select IRP bank0
  3123  02EA  0823               	movf	??_print_Countdown+3,w
  3124  02EB  0080               	movwf	0
  3125  02EC  0AA1               	incf	??_print_Countdown+1,f
  3126  02ED  0BA2               	decfsz	??_print_Countdown+2,f
  3127  02EE  2AE1               	goto	u133_20
  3128  02EF                     i1l1587:	
  3129                           
  3130                           ;main.c: 572:        send_string(secondStr);
  3131  02EF  3046               	movlw	(low (print_Countdown@secondStr_409| 0))& (0+255)
  3132  02F0  120A  118A  26A9  120A  118A  	fcall	_send_string
  3133  02F5                     i1l1589:	
  3134                           
  3135                           ;main.c: 576:     _delay((unsigned long)((100)*(32000000L/4000.0)));
  3136  02F5  3005               	movlw	5
  3137  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  3138  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  3139  02F8  00A2               	movwf	??_print_Countdown+2
  3140  02F9  300F               	movlw	15
  3141  02FA  00A1               	movwf	??_print_Countdown+1
  3142  02FB  30F0               	movlw	240
  3143  02FC  00A0               	movwf	??_print_Countdown
  3144  02FD                     u178_27:	
  3145  02FD  0BA0               	decfsz	??_print_Countdown,f
  3146  02FE  2AFD               	goto	u178_27
  3147  02FF  0BA1               	decfsz	??_print_Countdown+1,f
  3148  0300  2AFD               	goto	u178_27
  3149  0301  0BA2               	decfsz	??_print_Countdown+2,f
  3150  0302  2AFD               	goto	u178_27
  3151  0303  0000               	nop
  3152                           
  3153                           ;main.c: 578:     send_cmd(0x80);
  3154  0304  3080               	movlw	128
  3155  0305  120A  118A  26CA  120A  118A  	fcall	i1_send_cmd
  3156  030A                     i1l1591:	
  3157                           
  3158                           ;main.c: 579:     send_string(firstStr);
  3159  030A  3057               	movlw	(low (print_Countdown@firstStr| 0))& (0+255)
  3160  030B  120A  118A  26A9  120A  118A  	fcall	_send_string
  3161  0310                     i1l227:	
  3162  0310  0008               	return
  3163  0311                     __end_of_print_Countdown:	
  3164                           
  3165                           	psect	text11
  3166  06CA                     __ptext11:	
  3167 ;; *************** function i1_send_cmd *****************
  3168 ;; Defined at:
  3169 ;;		line 609 in file "main.c"
  3170 ;; Parameters:    Size  Location     Type
  3171 ;;  command         1    wreg     unsigned char 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;  command         1    2[COMMON] unsigned char 
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3183 ;;      Params:         0       0       0       0       0
  3184 ;;      Locals:         1       0       0       0       0
  3185 ;;      Temps:          2       0       0       0       0
  3186 ;;      Totals:         3       0       0       0       0
  3187 ;;Total ram usage:        3 bytes
  3188 ;; Hardware stack levels used:    1
  3189 ;; This function calls:
  3190 ;;		Nothing
  3191 ;; This function is called by:
  3192 ;;		_print_Countdown
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           
  3197                           ;psect for function i1_send_cmd
  3198  06CA                     i1_send_cmd:	
  3199                           
  3200                           ;incstack = 0
  3201                           ; Regs used in i1_send_cmd: [wreg]
  3202                           ;i1send_cmd@command stored from wreg
  3203  06CA  00F2               	movwf	i1send_cmd@command
  3204  06CB                     i1l1479:	
  3205                           
  3206                           ;main.c: 609: void send_cmd(char command);main.c: 610: {;main.c: 611:     PORTEbits.RE1 
      +                          = 1;
  3207  06CB  1283               	bcf	3,5	;RP0=0, select bank0
  3208  06CC  1303               	bcf	3,6	;RP1=0, select bank0
  3209  06CD  1489               	bsf	9,1	;volatile
  3210  06CE                     i1l1481:	
  3211                           
  3212                           ;main.c: 612:     PORTD = command;
  3213  06CE  0872               	movf	i1send_cmd@command,w
  3214  06CF  0088               	movwf	8	;volatile
  3215  06D0                     i1l1483:	
  3216                           
  3217                           ;main.c: 613:     PORTEbits.RE2 = 0;
  3218  06D0  1109               	bcf	9,2	;volatile
  3219                           
  3220                           ;main.c: 614:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3221  06D1  3020               	movlw	32
  3222  06D2  00F1               	movwf	??i1_send_cmd+1
  3223  06D3  3029               	movlw	41
  3224  06D4  00F0               	movwf	??i1_send_cmd
  3225  06D5                     u179_27:	
  3226  06D5  0BF0               	decfsz	??i1_send_cmd,f
  3227  06D6  2ED5               	goto	u179_27
  3228  06D7  0BF1               	decfsz	??i1_send_cmd+1,f
  3229  06D8  2ED5               	goto	u179_27
  3230  06D9  2EDA               	nop2
  3231  06DA                     i1l1485:	
  3232                           
  3233                           ;main.c: 615:     PORTEbits.RE1 = 0;
  3234  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  3235  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  3236  06DC  1089               	bcf	9,1	;volatile
  3237                           
  3238                           ;main.c: 616:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3239  06DD  3020               	movlw	32
  3240  06DE  00F1               	movwf	??i1_send_cmd+1
  3241  06DF  3029               	movlw	41
  3242  06E0  00F0               	movwf	??i1_send_cmd
  3243  06E1                     u180_27:	
  3244  06E1  0BF0               	decfsz	??i1_send_cmd,f
  3245  06E2  2EE1               	goto	u180_27
  3246  06E3  0BF1               	decfsz	??i1_send_cmd+1,f
  3247  06E4  2EE1               	goto	u180_27
  3248  06E5  2EE6               	nop2
  3249  06E6                     i1l1487:	
  3250                           
  3251                           ;main.c: 617:     PORTEbits.RE1 = 1;
  3252  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  3253  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  3254  06E8  1489               	bsf	9,1	;volatile
  3255  06E9                     i1l239:	
  3256  06E9  0008               	return
  3257  06EA                     __end_ofi1_send_cmd:	
  3258                           
  3259                           	psect	text12
  3260  06A9                     __ptext12:	
  3261 ;; *************** function _send_string *****************
  3262 ;; Defined at:
  3263 ;;		line 586 in file "main.c"
  3264 ;; Parameters:    Size  Location     Type
  3265 ;;  str             1    wreg     PTR unsigned char 
  3266 ;;		 -> print_Countdown@secondStr_409(17), print_Countdown@secondStr_407(17), print_Countdown@secondStr(17), print_Count
      +down@firstStr(17), 
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  str             1    6[COMMON] PTR unsigned char 
  3269 ;;		 -> print_Countdown@secondStr_409(17), print_Countdown@secondStr_407(17), print_Countdown@secondStr(17), print_Count
      +down@firstStr(17), 
  3270 ;;  i               2    4[COMMON] int 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      void 
  3273 ;; Registers used:
  3274 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3280 ;;      Params:         0       0       0       0       0
  3281 ;;      Locals:         3       0       0       0       0
  3282 ;;      Temps:          1       0       0       0       0
  3283 ;;      Totals:         4       0       0       0       0
  3284 ;;Total ram usage:        4 bytes
  3285 ;; Hardware stack levels used:    1
  3286 ;; Hardware stack levels required when called:    1
  3287 ;; This function calls:
  3288 ;;		_send_data
  3289 ;; This function is called by:
  3290 ;;		_print_Countdown
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           
  3295                           ;psect for function _send_string
  3296  06A9                     _send_string:	
  3297                           
  3298                           ;incstack = 0
  3299                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3300                           ;send_string@str stored from wreg
  3301  06A9  00F6               	movwf	send_string@str
  3302  06AA                     i1l1349:	
  3303                           
  3304                           ;main.c: 586: void send_string(char *str);main.c: 587: {;main.c: 588:     int i = 0;
  3305  06AA  01F4               	clrf	send_string@i
  3306  06AB  01F5               	clrf	send_string@i+1
  3307                           
  3308                           ;main.c: 589:     while(str[i] != '\0')
  3309  06AC  2EBE               	goto	i1l1355
  3310  06AD                     i1l1351:	
  3311                           
  3312                           ;main.c: 590:     {;main.c: 591:         send_data(str[i]);
  3313  06AD  0874               	movf	send_string@i,w
  3314  06AE  0776               	addwf	send_string@str,w
  3315  06AF  00F3               	movwf	??_send_string
  3316  06B0  0873               	movf	??_send_string,w
  3317  06B1  0084               	movwf	4
  3318  06B2  0800               	movf	0,w
  3319  06B3  120A  118A  26EA  120A  118A  	fcall	_send_data
  3320  06B8                     i1l1353:	
  3321                           
  3322                           ;main.c: 592:         i++;
  3323  06B8  3001               	movlw	1
  3324  06B9  07F4               	addwf	send_string@i,f
  3325  06BA  1803               	skipnc
  3326  06BB  0AF5               	incf	send_string@i+1,f
  3327  06BC  3000               	movlw	0
  3328  06BD  07F5               	addwf	send_string@i+1,f
  3329  06BE                     i1l1355:	
  3330                           
  3331                           ;main.c: 589:     while(str[i] != '\0')
  3332  06BE  0874               	movf	send_string@i,w
  3333  06BF  0776               	addwf	send_string@str,w
  3334  06C0  00F3               	movwf	??_send_string
  3335  06C1  0873               	movf	??_send_string,w
  3336  06C2  0084               	movwf	4
  3337  06C3  1383               	bcf	3,7	;select IRP bank0
  3338  06C4  0800               	movf	0,w
  3339  06C5  1D03               	btfss	3,2
  3340  06C6  2EC8               	goto	u91_21
  3341  06C7  2EC9               	goto	u91_20
  3342  06C8                     u91_21:	
  3343  06C8  2EAD               	goto	i1l1351
  3344  06C9                     u91_20:	
  3345  06C9                     i1l233:	
  3346  06C9  0008               	return
  3347  06CA                     __end_of_send_string:	
  3348                           
  3349                           	psect	text13
  3350  06EA                     __ptext13:	
  3351 ;; *************** function _send_data *****************
  3352 ;; Defined at:
  3353 ;;		line 597 in file "main.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;  data            1    wreg     unsigned char 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  data            1    2[COMMON] unsigned char 
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3367 ;;      Params:         0       0       0       0       0
  3368 ;;      Locals:         1       0       0       0       0
  3369 ;;      Temps:          2       0       0       0       0
  3370 ;;      Totals:         3       0       0       0       0
  3371 ;;Total ram usage:        3 bytes
  3372 ;; Hardware stack levels used:    1
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_send_string
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380                           
  3381                           ;psect for function _send_data
  3382  06EA                     _send_data:	
  3383                           
  3384                           ;incstack = 0
  3385                           ; Regs used in _send_data: [wreg]
  3386                           ;send_data@data stored from wreg
  3387  06EA  00F2               	movwf	send_data@data
  3388  06EB                     i1l1317:	
  3389                           
  3390                           ;main.c: 597: void send_data(char data);main.c: 598: {;main.c: 599:     PORTEbits.RE1 = 
      +                          1;
  3391  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  3392  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  3393  06ED  1489               	bsf	9,1	;volatile
  3394  06EE                     i1l1319:	
  3395                           
  3396                           ;main.c: 600:     PORTD = data;
  3397  06EE  0872               	movf	send_data@data,w
  3398  06EF  0088               	movwf	8	;volatile
  3399  06F0                     i1l1321:	
  3400                           
  3401                           ;main.c: 601:     PORTEbits.RE2 = 1;
  3402  06F0  1509               	bsf	9,2	;volatile
  3403                           
  3404                           ;main.c: 602:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3405  06F1  3020               	movlw	32
  3406  06F2  00F1               	movwf	??_send_data+1
  3407  06F3  3029               	movlw	41
  3408  06F4  00F0               	movwf	??_send_data
  3409  06F5                     u181_27:	
  3410  06F5  0BF0               	decfsz	??_send_data,f
  3411  06F6  2EF5               	goto	u181_27
  3412  06F7  0BF1               	decfsz	??_send_data+1,f
  3413  06F8  2EF5               	goto	u181_27
  3414  06F9  2EFA               	nop2
  3415  06FA                     i1l1323:	
  3416                           
  3417                           ;main.c: 603:     PORTEbits.RE1 = 0;
  3418  06FA  1283               	bcf	3,5	;RP0=0, select bank0
  3419  06FB  1303               	bcf	3,6	;RP1=0, select bank0
  3420  06FC  1089               	bcf	9,1	;volatile
  3421                           
  3422                           ;main.c: 604:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3423  06FD  3020               	movlw	32
  3424  06FE  00F1               	movwf	??_send_data+1
  3425  06FF  3029               	movlw	41
  3426  0700  00F0               	movwf	??_send_data
  3427  0701                     u182_27:	
  3428  0701  0BF0               	decfsz	??_send_data,f
  3429  0702  2F01               	goto	u182_27
  3430  0703  0BF1               	decfsz	??_send_data+1,f
  3431  0704  2F01               	goto	u182_27
  3432  0705  2F06               	nop2
  3433  0706                     i1l1325:	
  3434                           
  3435                           ;main.c: 605:     PORTEbits.RE1 = 1;
  3436  0706  1283               	bcf	3,5	;RP0=0, select bank0
  3437  0707  1303               	bcf	3,6	;RP1=0, select bank0
  3438  0708  1489               	bsf	9,1	;volatile
  3439  0709                     i1l236:	
  3440  0709  0008               	return
  3441  070A                     __end_of_send_data:	
  3442                           
  3443                           	psect	text14
  3444  0531                     __ptext14:	
  3445 ;; *************** function ___awmod *****************
  3446 ;; Defined at:
  3447 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  divisor         2    0[COMMON] int 
  3450 ;;  dividend        2    2[COMMON] int 
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;  sign            1    6[COMMON] unsigned char 
  3453 ;;  counter         1    5[COMMON] unsigned char 
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  2    0[COMMON] int 
  3456 ;; Registers used:
  3457 ;;		wreg, status,2, status,0
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3463 ;;      Params:         4       0       0       0       0
  3464 ;;      Locals:         2       0       0       0       0
  3465 ;;      Temps:          1       0       0       0       0
  3466 ;;      Totals:         7       0       0       0       0
  3467 ;;Total ram usage:        7 bytes
  3468 ;; Hardware stack levels used:    1
  3469 ;; This function calls:
  3470 ;;		Nothing
  3471 ;; This function is called by:
  3472 ;;		_print_Countdown
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           
  3476                           
  3477                           ;psect for function ___awmod
  3478  0531                     ___awmod:	
  3479  0531                     i1l1441:	
  3480                           ;incstack = 0
  3481                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3482                           
  3483  0531  01F6               	clrf	___awmod@sign
  3484  0532                     i1l1443:	
  3485  0532  1FF3               	btfss	___awmod@dividend+1,7
  3486  0533  2D35               	goto	u112_21
  3487  0534  2D36               	goto	u112_20
  3488  0535                     u112_21:	
  3489  0535  2D3D               	goto	i1l1449
  3490  0536                     u112_20:	
  3491  0536                     i1l1445:	
  3492  0536  09F2               	comf	___awmod@dividend,f
  3493  0537  09F3               	comf	___awmod@dividend+1,f
  3494  0538  0AF2               	incf	___awmod@dividend,f
  3495  0539  1903               	skipnz
  3496  053A  0AF3               	incf	___awmod@dividend+1,f
  3497  053B                     i1l1447:	
  3498  053B  01F6               	clrf	___awmod@sign
  3499  053C  0AF6               	incf	___awmod@sign,f
  3500  053D                     i1l1449:	
  3501  053D  1FF1               	btfss	___awmod@divisor+1,7
  3502  053E  2D40               	goto	u113_21
  3503  053F  2D41               	goto	u113_20
  3504  0540                     u113_21:	
  3505  0540  2D46               	goto	i1l1453
  3506  0541                     u113_20:	
  3507  0541                     i1l1451:	
  3508  0541  09F0               	comf	___awmod@divisor,f
  3509  0542  09F1               	comf	___awmod@divisor+1,f
  3510  0543  0AF0               	incf	___awmod@divisor,f
  3511  0544  1903               	skipnz
  3512  0545  0AF1               	incf	___awmod@divisor+1,f
  3513  0546                     i1l1453:	
  3514  0546  0870               	movf	___awmod@divisor,w
  3515  0547  0471               	iorwf	___awmod@divisor+1,w
  3516  0548  1903               	btfsc	3,2
  3517  0549  2D4B               	goto	u114_21
  3518  054A  2D4C               	goto	u114_20
  3519  054B                     u114_21:	
  3520  054B  2D7B               	goto	i1l1471
  3521  054C                     u114_20:	
  3522  054C                     i1l1455:	
  3523  054C  01F5               	clrf	___awmod@counter
  3524  054D  0AF5               	incf	___awmod@counter,f
  3525  054E  2D5A               	goto	i1l1461
  3526  054F                     i1l1457:	
  3527  054F  3001               	movlw	1
  3528  0550                     u115_25:	
  3529  0550  1003               	clrc
  3530  0551  0DF0               	rlf	___awmod@divisor,f
  3531  0552  0DF1               	rlf	___awmod@divisor+1,f
  3532  0553  3EFF               	addlw	-1
  3533  0554  1D03               	skipz
  3534  0555  2D50               	goto	u115_25
  3535  0556                     i1l1459:	
  3536  0556  3001               	movlw	1
  3537  0557  00F4               	movwf	??___awmod
  3538  0558  0874               	movf	??___awmod,w
  3539  0559  07F5               	addwf	___awmod@counter,f
  3540  055A                     i1l1461:	
  3541  055A  1FF1               	btfss	___awmod@divisor+1,7
  3542  055B  2D5D               	goto	u116_21
  3543  055C  2D5E               	goto	u116_20
  3544  055D                     u116_21:	
  3545  055D  2D4F               	goto	i1l1457
  3546  055E                     u116_20:	
  3547  055E                     i1l1463:	
  3548  055E  0871               	movf	___awmod@divisor+1,w
  3549  055F  0273               	subwf	___awmod@dividend+1,w
  3550  0560  1D03               	skipz
  3551  0561  2D64               	goto	u117_25
  3552  0562  0870               	movf	___awmod@divisor,w
  3553  0563  0272               	subwf	___awmod@dividend,w
  3554  0564                     u117_25:	
  3555  0564  1C03               	skipc
  3556  0565  2D67               	goto	u117_21
  3557  0566  2D68               	goto	u117_20
  3558  0567                     u117_21:	
  3559  0567  2D6E               	goto	i1l1467
  3560  0568                     u117_20:	
  3561  0568                     i1l1465:	
  3562  0568  0870               	movf	___awmod@divisor,w
  3563  0569  02F2               	subwf	___awmod@dividend,f
  3564  056A  0871               	movf	___awmod@divisor+1,w
  3565  056B  1C03               	skipc
  3566  056C  03F3               	decf	___awmod@dividend+1,f
  3567  056D  02F3               	subwf	___awmod@dividend+1,f
  3568  056E                     i1l1467:	
  3569  056E  3001               	movlw	1
  3570  056F                     u118_25:	
  3571  056F  1003               	clrc
  3572  0570  0CF1               	rrf	___awmod@divisor+1,f
  3573  0571  0CF0               	rrf	___awmod@divisor,f
  3574  0572  3EFF               	addlw	-1
  3575  0573  1D03               	skipz
  3576  0574  2D6F               	goto	u118_25
  3577  0575                     i1l1469:	
  3578  0575  3001               	movlw	1
  3579  0576  02F5               	subwf	___awmod@counter,f
  3580  0577  1D03               	btfss	3,2
  3581  0578  2D7A               	goto	u119_21
  3582  0579  2D7B               	goto	u119_20
  3583  057A                     u119_21:	
  3584  057A  2D5E               	goto	i1l1463
  3585  057B                     u119_20:	
  3586  057B                     i1l1471:	
  3587  057B  0876               	movf	___awmod@sign,w
  3588  057C  1903               	btfsc	3,2
  3589  057D  2D7F               	goto	u120_21
  3590  057E  2D80               	goto	u120_20
  3591  057F                     u120_21:	
  3592  057F  2D85               	goto	i1l1475
  3593  0580                     u120_20:	
  3594  0580                     i1l1473:	
  3595  0580  09F2               	comf	___awmod@dividend,f
  3596  0581  09F3               	comf	___awmod@dividend+1,f
  3597  0582  0AF2               	incf	___awmod@dividend,f
  3598  0583  1903               	skipnz
  3599  0584  0AF3               	incf	___awmod@dividend+1,f
  3600  0585                     i1l1475:	
  3601  0585  0873               	movf	___awmod@dividend+1,w
  3602  0586  00F1               	movwf	?___awmod+1
  3603  0587  0872               	movf	___awmod@dividend,w
  3604  0588  00F0               	movwf	?___awmod
  3605  0589                     i1l503:	
  3606  0589  0008               	return
  3607  058A                     __end_of___awmod:	
  3608                           
  3609                           	psect	text15
  3610  04CA                     __ptext15:	
  3611 ;; *************** function ___awdiv *****************
  3612 ;; Defined at:
  3613 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  divisor         2    0[COMMON] int 
  3616 ;;  dividend        2    2[COMMON] int 
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;  quotient        2    7[COMMON] int 
  3619 ;;  sign            1    6[COMMON] unsigned char 
  3620 ;;  counter         1    5[COMMON] unsigned char 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;                  2    0[COMMON] int 
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3630 ;;      Params:         4       0       0       0       0
  3631 ;;      Locals:         4       0       0       0       0
  3632 ;;      Temps:          1       0       0       0       0
  3633 ;;      Totals:         9       0       0       0       0
  3634 ;;Total ram usage:        9 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; This function calls:
  3637 ;;		Nothing
  3638 ;; This function is called by:
  3639 ;;		_print_Countdown
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           
  3644                           ;psect for function ___awdiv
  3645  04CA                     ___awdiv:	
  3646  04CA                     i1l1397:	
  3647                           ;incstack = 0
  3648                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3649                           
  3650  04CA  01F6               	clrf	___awdiv@sign
  3651  04CB                     i1l1399:	
  3652  04CB  1FF1               	btfss	___awdiv@divisor+1,7
  3653  04CC  2CCE               	goto	u102_21
  3654  04CD  2CCF               	goto	u102_20
  3655  04CE                     u102_21:	
  3656  04CE  2CD6               	goto	i1l1405
  3657  04CF                     u102_20:	
  3658  04CF                     i1l1401:	
  3659  04CF  09F0               	comf	___awdiv@divisor,f
  3660  04D0  09F1               	comf	___awdiv@divisor+1,f
  3661  04D1  0AF0               	incf	___awdiv@divisor,f
  3662  04D2  1903               	skipnz
  3663  04D3  0AF1               	incf	___awdiv@divisor+1,f
  3664  04D4                     i1l1403:	
  3665  04D4  01F6               	clrf	___awdiv@sign
  3666  04D5  0AF6               	incf	___awdiv@sign,f
  3667  04D6                     i1l1405:	
  3668  04D6  1FF3               	btfss	___awdiv@dividend+1,7
  3669  04D7  2CD9               	goto	u103_21
  3670  04D8  2CDA               	goto	u103_20
  3671  04D9                     u103_21:	
  3672  04D9  2CE3               	goto	i1l1411
  3673  04DA                     u103_20:	
  3674  04DA                     i1l1407:	
  3675  04DA  09F2               	comf	___awdiv@dividend,f
  3676  04DB  09F3               	comf	___awdiv@dividend+1,f
  3677  04DC  0AF2               	incf	___awdiv@dividend,f
  3678  04DD  1903               	skipnz
  3679  04DE  0AF3               	incf	___awdiv@dividend+1,f
  3680  04DF                     i1l1409:	
  3681  04DF  3001               	movlw	1
  3682  04E0  00F4               	movwf	??___awdiv
  3683  04E1  0874               	movf	??___awdiv,w
  3684  04E2  06F6               	xorwf	___awdiv@sign,f
  3685  04E3                     i1l1411:	
  3686  04E3  01F7               	clrf	___awdiv@quotient
  3687  04E4  01F8               	clrf	___awdiv@quotient+1
  3688  04E5                     i1l1413:	
  3689  04E5  0870               	movf	___awdiv@divisor,w
  3690  04E6  0471               	iorwf	___awdiv@divisor+1,w
  3691  04E7  1903               	btfsc	3,2
  3692  04E8  2CEA               	goto	u104_21
  3693  04E9  2CEB               	goto	u104_20
  3694  04EA                     u104_21:	
  3695  04EA  2D22               	goto	i1l1433
  3696  04EB                     u104_20:	
  3697  04EB                     i1l1415:	
  3698  04EB  01F5               	clrf	___awdiv@counter
  3699  04EC  0AF5               	incf	___awdiv@counter,f
  3700  04ED  2CF9               	goto	i1l1421
  3701  04EE                     i1l1417:	
  3702  04EE  3001               	movlw	1
  3703  04EF                     u105_25:	
  3704  04EF  1003               	clrc
  3705  04F0  0DF0               	rlf	___awdiv@divisor,f
  3706  04F1  0DF1               	rlf	___awdiv@divisor+1,f
  3707  04F2  3EFF               	addlw	-1
  3708  04F3  1D03               	skipz
  3709  04F4  2CEF               	goto	u105_25
  3710  04F5                     i1l1419:	
  3711  04F5  3001               	movlw	1
  3712  04F6  00F4               	movwf	??___awdiv
  3713  04F7  0874               	movf	??___awdiv,w
  3714  04F8  07F5               	addwf	___awdiv@counter,f
  3715  04F9                     i1l1421:	
  3716  04F9  1FF1               	btfss	___awdiv@divisor+1,7
  3717  04FA  2CFC               	goto	u106_21
  3718  04FB  2CFD               	goto	u106_20
  3719  04FC                     u106_21:	
  3720  04FC  2CEE               	goto	i1l1417
  3721  04FD                     u106_20:	
  3722  04FD                     i1l1423:	
  3723  04FD  3001               	movlw	1
  3724  04FE                     u107_25:	
  3725  04FE  1003               	clrc
  3726  04FF  0DF7               	rlf	___awdiv@quotient,f
  3727  0500  0DF8               	rlf	___awdiv@quotient+1,f
  3728  0501  3EFF               	addlw	-1
  3729  0502  1D03               	skipz
  3730  0503  2CFE               	goto	u107_25
  3731  0504  0871               	movf	___awdiv@divisor+1,w
  3732  0505  0273               	subwf	___awdiv@dividend+1,w
  3733  0506  1D03               	skipz
  3734  0507  2D0A               	goto	u108_25
  3735  0508  0870               	movf	___awdiv@divisor,w
  3736  0509  0272               	subwf	___awdiv@dividend,w
  3737  050A                     u108_25:	
  3738  050A  1C03               	skipc
  3739  050B  2D0D               	goto	u108_21
  3740  050C  2D0E               	goto	u108_20
  3741  050D                     u108_21:	
  3742  050D  2D15               	goto	i1l1429
  3743  050E                     u108_20:	
  3744  050E                     i1l1425:	
  3745  050E  0870               	movf	___awdiv@divisor,w
  3746  050F  02F2               	subwf	___awdiv@dividend,f
  3747  0510  0871               	movf	___awdiv@divisor+1,w
  3748  0511  1C03               	skipc
  3749  0512  03F3               	decf	___awdiv@dividend+1,f
  3750  0513  02F3               	subwf	___awdiv@dividend+1,f
  3751  0514                     i1l1427:	
  3752  0514  1477               	bsf	___awdiv@quotient,0
  3753  0515                     i1l1429:	
  3754  0515  3001               	movlw	1
  3755  0516                     u109_25:	
  3756  0516  1003               	clrc
  3757  0517  0CF1               	rrf	___awdiv@divisor+1,f
  3758  0518  0CF0               	rrf	___awdiv@divisor,f
  3759  0519  3EFF               	addlw	-1
  3760  051A  1D03               	skipz
  3761  051B  2D16               	goto	u109_25
  3762  051C                     i1l1431:	
  3763  051C  3001               	movlw	1
  3764  051D  02F5               	subwf	___awdiv@counter,f
  3765  051E  1D03               	btfss	3,2
  3766  051F  2D21               	goto	u110_21
  3767  0520  2D22               	goto	u110_20
  3768  0521                     u110_21:	
  3769  0521  2CFD               	goto	i1l1423
  3770  0522                     u110_20:	
  3771  0522                     i1l1433:	
  3772  0522  0876               	movf	___awdiv@sign,w
  3773  0523  1903               	btfsc	3,2
  3774  0524  2D26               	goto	u111_21
  3775  0525  2D27               	goto	u111_20
  3776  0526                     u111_21:	
  3777  0526  2D2C               	goto	i1l1437
  3778  0527                     u111_20:	
  3779  0527                     i1l1435:	
  3780  0527  09F7               	comf	___awdiv@quotient,f
  3781  0528  09F8               	comf	___awdiv@quotient+1,f
  3782  0529  0AF7               	incf	___awdiv@quotient,f
  3783  052A  1903               	skipnz
  3784  052B  0AF8               	incf	___awdiv@quotient+1,f
  3785  052C                     i1l1437:	
  3786  052C  0878               	movf	___awdiv@quotient+1,w
  3787  052D  00F1               	movwf	?___awdiv+1
  3788  052E  0877               	movf	___awdiv@quotient,w
  3789  052F  00F0               	movwf	?___awdiv
  3790  0530                     i1l490:	
  3791  0530  0008               	return
  3792  0531                     __end_of___awdiv:	
  3793  007E                     btemp	set	126	;btemp
  3794  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        75
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     79      80
    BANK1            80     33      67
    BANK3            96      0      68
    BANK2            96      0       0

Pointer List with Targets:

    send_string@str	PTR unsigned char  size(1) Largest target is 17
		 -> print_Countdown@secondStr_409(BANK0[17]), print_Countdown@secondStr_407(BANK0[17]), print_Countdown@secondStr(BANK0[17]), print_Countdown@firstStr(BANK0[17]), 

    Uart_send_string@str	PTR unsigned char  size(1) Largest target is 8
		 -> strToSend(BANK1[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_print_Countdown
    _print_Countdown->___awdiv
    _send_string->_send_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_print_Countdown

Critical Paths under _main in BANK1

    _main->_UART_init
    _messageTransmission->_Uart_send_string
    _Uart_send_string->_UART_TxChar
    _init_lcd->_send_cmd
    _UART_init->___aldiv

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3353
                                             28 BANK1      5     5      0
                          _UART_init
                            _initPic
                           _init_lcd
                _messageTransmission
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _messageTransmission                                  5     2      3    2513
                                             11 BANK1      5     2      3
                   _Uart_send_string
 ---------------------------------------------------------------------------------
 (2) _Uart_send_string                                     3     3      0     145
                                              8 BANK1      3     3      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              7 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             2     2      0      22
                                             10 BANK1      2     2      0
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _send_cmd                                             3     3      0      22
                                              7 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initPic                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            6     4      2     550
                                             22 BANK1      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              7 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  7     7      0    2110
                                              0 BANK1      7     7      0
                    _print_Countdown
 ---------------------------------------------------------------------------------
 (5) _print_Countdown                                     82    79      3    2110
                                              9 COMMON     3     0      3
                                              0 BANK0     79    79      0
                            ___awdiv
                            ___awmod
                        _send_string
                         i1_send_cmd
 ---------------------------------------------------------------------------------
 (6) i1_send_cmd                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _send_string                                          4     4      0     244
                                              3 COMMON     4     4      0
                          _send_data
 ---------------------------------------------------------------------------------
 (7) _send_data                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
   _initPic
   _init_lcd
     _send_cmd
   _messageTransmission
     _Uart_send_string
       _UART_TxChar
   _send_cmd

 _ISR (ROOT)
   _print_Countdown
     ___awdiv
     ___awmod
     _send_string
       _send_data
     i1_send_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      44       9       70.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     21      43       7       83.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E5      12        0.0%
ABS                  0      0      E5       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jul 16 17:02:55 2020

                               _f 00C5                                 pc 0002                       __CFG_CP$OFF 0000  
                    ___awdiv@sign 0076                                fsr 0004      print_Countdown@secondStr_407 0035  
    print_Countdown@secondStr_409 0046               _messageTransmission 0687                       __CFG_LVP$ON 0000  
                             l141 00FD                               l402 0441                               l242 05E0  
                             l250 0742                               l251 0749                               l412 04C9  
                             l245 065E                               l190 0726                               l239 0686  
                             l248 073D                               l176 06A8                               l193 0758  
                    __CFG_CPD$OFF 0000                               _ISR 0311                               u900 0726  
                             u901 0725                               u920 0434                               u921 0433  
                             u930 0445                               u931 0444                               u940 0464  
                             u941 0463                               u960 0478                               u961 0477  
                             u890 0742                               u955 0469                               u891 0741  
                             u980 0493                               u981 0492                               u975 047A  
                             u985 048F                               u995 04A3                               fsr0 0004  
                             indf 0000                      ___awmod@sign 0076                      __CFG_FOSC$HS 0000  
       messageTransmission@codice 00AC                              ?_ISR 0070         messageTransmission@valore 00AD  
                            l1313 073D                              l1331 066B                              l1315 0743  
                            l1501 065C                              l1333 0676                              l1503 065D  
                            l1335 0683                              l1327 0662                              l1511 059B  
                            l1343 070E                              l1361 0434                              l1329 0665  
                            l1521 05C8                              l1513 05A1                              l1505 058A  
                            l1345 071A                              l1337 070D                              l1601 0072  
                            l1371 0464                              l1363 0445                              l1523 05CE  
                            l1515 05B1                              l1507 058E                              l1347 0720  
                            l1531 06A2                              l1611 0085                              l1603 0076  
                            l1381 0493                              l1373 0467                              l1365 0450  
                            l1357 042D                              l1525 05D4                              l1517 05BC  
                            l1509 0598                              l1621 0094                              l1613 0089  
                            l1605 007B                              l1391 04B6                              l1383 04A1  
                            l1375 0474                              l1367 0454                              l1359 0430  
                            l1527 05DA                              l1519 05C2                              l1631 00A0  
                            l1623 0099                              l1615 008A                              l1607 007F  
                            l1393 04C1                              l1385 04A2                              l1377 0478  
                            l1369 045C                              l1529 068A                              l1641 00C2  
                            l1633 00AA                              l1617 008F                              l1609 0080  
                            l1387 04AB                              l1379 0481                              l1491 074D  
                            l1651 00E2                              l1635 00B3                              l1643 00C9  
                            l1619 0093                              l1389 04B1                              l1493 074F  
                            l1645 00CF                              l1653 00E8                              l1637 00B6  
                            l1661 00FF                              l1629 009B                              l1495 0625  
                            l1671 019F                              l1663 0103                              l1655 00EE  
                            l1647 00D8                              l1639 00BD                              l1497 062D  
                            l1489 074A                              l1681 01CB                              l1673 01B2  
                            l1657 00F1                              l1649 00DB                              l1665 0109  
                            l1593 0049                              l1499 065B                              l1683 01CF  
                            l1675 01C2                              l1667 010E                              l1659 00F8  
                            l1595 0064                              l1677 01C5                              l1669 019C  
                            l1597 006A                              l1679 01C6                              l1599 006E  
                            u1000 04B1                              u1001 04B0                              u1010 04B6  
                            u1011 04B5                              u1210 063E                              u1215 0639  
                            u1400 00B3                              u1401 00B2                              u1410 00C2  
                            u1411 00C1                              u1420 00CF                              u1340 007B  
                            u1421 00CE                              u1341 007A                              u1430 00D8  
                            u1350 0085                              u1431 00D7                              u1351 0084  
                            u1440 00E7                              u1360 008F                              u1441 00E6  
                            u1361 008E                              u1450 00EE                              u1370 0099  
                            u1451 00ED                              u1371 0098                              u1460 00FD  
                            u1380 00A0                              u1461 00FC                              u1381 009F  
                            u1470 0109                              u1390 00AA                              u1471 0108  
                            u1391 00A9                              u1480 010E                              u1481 010D  
                            u1490 01CB                              u1491 01CA                              u1737 0594  
                            u1747 05A7                              u1757 05B7                              u1767 0672  
                            u1777 067F                              _RCIF 0065                              _TMR0 0001  
                            _TXIF 0064              ?_messageTransmission 00AB                      __CFG_WRT$OFF 0000  
                            _main 0049                        i1_send_cmd 06CA                              btemp 007E  
                   __CFG_BOREN$ON 0000                              start 0016                     _statoSemafori 00DD  
                           ??_ISR 00A0                   __end_of___aldiv 04CA                             ?_main 0070  
                 __end_of___awdiv 0531                     __CFG_WDTE$OFF 0000                   __end_of___awmod 058A  
                 ___awdiv@divisor 0070                             i1l233 06C9                             i1l161 037A  
                           i1l227 0310                             i1l155 0328                 Uart_send_string@i 00AA  
                           i1l236 0709                             i1l156 0345                             i1l173 041C  
                           i1l157 0366                             i1l503 0589                             i1l239 06E9  
                           i1l159 0376                             i1l490 0530                   ___awdiv@counter 0075  
                           _RCREG 001A                             _SPBRG 0099                             _PORTD 0008  
                           _TRISA 0085                             _TRISB 0086                             _TRISD 0088  
                           _TRISE 0089                             u91_20 06C9                             u91_21 06C8  
                           _TXREG 0019                             _PicId 00E0                     __CFG_PWRTE$ON 0000  
                  _scattoSemafori 00CA                __size_of_UART_init 003A                   __end_of_initPic 0759  
                           _count 00C7                             _stat1 00CF                             _stat2 00CD  
                           _stat3 00CB                             main@i 00C0             ??_messageTransmission 00AE  
                           pclath 000A                print_Countdown@num 0079                             status 0003  
                           wtemp0 007E                   __initialization 0019                      __end_of_main 01D4  
                          ??_main 00BC                            _ADCON0 001F                            _ADCON1 009F  
                          _ADRESH 001E                            _ADRESL 009E                  ___awdiv@dividend 0072  
                          u110_20 0522                            u102_20 04CF                            u110_21 0521  
                          u102_21 04CE                            u111_20 0527                            u103_20 04DA  
                          u111_21 0526                            u103_21 04D9                            i1l1401 04CF  
                          i1l1321 06F0                            i1l1411 04E3                            i1l1403 04D4  
                          i1l1323 06FA                            i1l1421 04F9                            i1l1413 04E5  
                          i1l1405 04D6                            i1l1325 0706                            i1l1317 06EB  
                          i1l1431 051C                            i1l1423 04FD                            i1l1415 04EB  
                          i1l1407 04DA                            i1l1319 06EE                            i1l1351 06AD  
                          u104_20 04EB                            u120_20 0580                            u112_20 0536  
                          i1l1425 050E                            i1l1417 04EE                            i1l1433 0522  
                          u104_21 04EA                            i1l1409 04DF                            u120_21 057F  
                          u112_21 0535                            i1l1441 0531                            i1l1353 06B8  
                          i1l1435 0527                            i1l1427 0514                            i1l1419 04F5  
                          i1l1451 0541                            i1l1443 0532                            i1l1355 06BE  
                          i1l1437 052C                            i1l1429 0515                            i1l1461 055A  
                          i1l1453 0546                            i1l1445 0536                            i1l1349 06AA  
                          i1l1541 01FF                            i1l1533 01D4                            i1l1701 035C  
                          i1l1463 055E                            i1l1455 054C                            i1l1471 057B  
                          i1l1447 053B                            i1l1551 021A                            i1l1543 0206  
                          i1l1535 01EC                            i1l1711 0383                            i1l1703 0370  
                          u113_20 0541                            i1l1473 0580                            i1l1465 0568  
                          i1l1457 054F                            u113_21 0540                            i1l1449 053D  
                          i1l1481 06CE                            i1l1561 0258                            i1l1553 0232  
                          i1l1545 020D                            i1l1537 01F0                            i1l1721 03A6  
                          i1l1713 0387                            i1l1475 0585                            i1l1467 056E  
                          i1l1459 0556                            i1l1483 06D0                            i1l1571 028B  
                          i1l1563 025D                            i1l1555 0243                            i1l1547 0213  
                          i1l1539 01F2                            i1l1731 03E1                            i1l1723 03B3  
                          i1l1715 038D                            i1l1707 037B                            u105_25 04EF  
                          i1l1397 04CA                            i1l1469 0575                            i1l1485 06DA  
                          i1l1581 02CB                            i1l1573 0290                            i1l1565 026B  
                          i1l1557 024B                            i1l1741 0408                            i1l1733 03E8  
                          i1l1725 03BB                            i1l1717 0391                            i1l1709 0381  
                          i1l1399 04CB                            i1l1487 06E6                            i1l1479 06CB  
                          i1l1591 030A                            i1l1583 02D1                            i1l1575 02A8  
                          i1l1567 0271                            i1l1559 0252                            i1l1743 040A  
                          i1l1735 03EE                            i1l1727 03C9                            i1l1719 03A0  
                          u106_20 04FD                            u114_20 054C                            u130_20 02B3  
                          u122_20 01DE                            u106_21 04FC                            u114_21 054B  
                          i1l1585 02D7                            u130_21 02B2                            i1l1577 02AE  
                          i1l1569 027F                            i1l1745 040F                            i1l1737 03FB  
                          i1l1729 03D1                            i1l1587 02EF                            i1l1579 02B3  
                          i1l1747 0414                            i1l1739 0401                            i1l1691 0330  
                          i1l1589 02F5                            i1l1749 0418                            i1l1693 0334  
                          i1l1685 0311                            i1l1695 033B                            i1l1687 0317  
                          u131_20 02BD                            u123_20 01FF                            u123_21 01FE  
                          i1l1697 034F                            i1l1689 031C                            i1l1699 0355  
                          u107_25 04FE                            u115_25 0550                            u123_25 01FB  
                          u108_20 050E                            u116_20 055E                            u132_20 02D7  
                          u124_20 020D                            u108_21 050D                            u116_21 055D  
                          u132_21 02D6                            u124_21 020C                            u108_25 050A  
                          u117_20 0568                            u133_20 02E1                            u125_20 0219  
                          u117_21 0567                            u125_21 0218                            u109_25 0516  
                          u117_25 0564                            u126_20 0251                            u150_20 0317  
                          u126_21 0250                            u150_21 0316                            u118_25 056F  
                          u119_20 057B                            u127_20 027F                            u151_20 031C  
                          u119_21 057A                            u127_21 027E                            u151_21 031B  
                          u127_25 027B                            u128_20 0290                            u160_20 0362  
                          u152_20 0324                            u128_21 028F                            u160_21 0360  
                          u152_21 0322                            u129_20 029A                            u161_20 0363  
                          u153_20 0325                            _INTCON 000B                            u170_20 03FB  
                          u162_20 0376                            u154_20 0334                            u170_21 03FA  
                          u162_21 0375                            u154_21 0333                            u170_25 03F7  
                          u171_20 0408                            u163_20 037A                            u155_20 033B  
                          u171_21 0407                            u163_21 0379                            u155_21 033A  
                          u172_20 040F                            u164_20 0387                            u156_20 0341  
                          u172_21 040E                            u164_21 0386                            u156_21 033F  
                          u180_27 06E1                            u165_20 03A0                            u157_20 0342  
                          u165_21 039F                            u181_27 06F5                            u166_20 03A6  
                          u158_20 0355                            u166_21 03A5                            u158_21 0354  
                          u182_27 0701                            u167_20 03BB                            u159_20 035C  
                    ?_send_string 0070                            u167_21 03BA                            u159_21 035B  
                          u168_20 03D1                            u168_21 03D0                            u169_20 03E8  
                          u169_21 03E7                            u178_27 02FD                            u179_27 06D5  
                     ?i1_send_cmd 0070                    send_string@str 0076                      ?_UART_TxChar 0070  
        __size_of_print_Countdown 013D                         ??___aldiv 00AF                 __end_of_UART_init 065F  
                       ??___awdiv 0074                         ??___awmod 0074                  __end_of_init_lcd 05E1  
                ___awdiv@quotient 0077                   ___awmod@divisor 0070                   ___awmod@counter 0075  
             print_Countdown@F933 01B2               print_Countdown@F935 01A1               print_Countdown@F929 01C3  
             print_Countdown@F937 0190                  __end_of_send_cmd 0687                         ??_initPic 00A7  
                    __pdataCOMMON 007D                            saved_w 007E         __size_of_Uart_send_string 001D  
messageTransmission@tipoMessaggio 00AF           __end_of__initialization 0045                    __pcstackCOMMON 0070  
                    __pidataBANK1 0761                      __pidataBANK3 05E1               __size_ofi1_send_cmd 0020  
                      __pbssBANK0 006F                        __pbssBANK1 00C1       messageTransmission@idStrada 00AB  
                      __pmaintext 0049                        _flagGiallo 00C9                        __pintentry 0004  
              __size_of_send_data 0020                 ??_print_Countdown 0020                        _contCamion 00D0  
             Uart_send_string@str 00A9                 main@semaforoVerde 00BF                         ?_init_lcd 0070  
            __size_of_send_string 0021                         ?_send_cmd 0070              __size_of_UART_TxChar 0010  
                         ___aldiv 042D                           ___awdiv 04CA                           ___awmod 0531  
                         __ptext1 0687                           __ptext2 070A                           __ptext3 073A  
                         __ptext4 058A                           __ptext5 065F                           __ptext6 074A  
                         __ptext7 0625                           __ptext8 042D                           __ptext9 0311  
                    __size_of_ISR 011C                           _oldBtn1 006F                           _oldBtn2 00CE  
                         _oldBtn3 00CC                           _initPic 074A                  ___awmod@dividend 0072  
                ___aldiv@dividend 00AB       __end_of_messageTransmission 06A9                           clrloop0 075A  
                _Uart_send_string 070A              end_of_initialization 0045                 __end_of_send_data 070A  
                      ??_init_lcd 00AA                      ??i1_send_cmd 0070          print_Countdown@secondStr 0024  
                      ??_send_cmd 00A7                         _RCSTAbits 0018                  ___aldiv@quotient 00B2  
        print_Countdown@resultNum 0068                     send_data@data 0072                         _PORTBbits 0006  
                       _UART_init 0625                         _PORTEbits 0009                __end_ofi1_send_cmd 06EA  
                       _TRISCbits 0087                 i1send_cmd@command 0072                   _temporizzazione 007C  
                       _TXSTAbits 0098                  print_Countdown@i 006D                     __pidataCOMMON 0767  
                      ?_UART_init 00B6               start_initialization 0019                       __end_of_ISR 042D  
                 _print_Countdown 01D4                        init_fetch0 0727                       __pdataBANK1 00DD  
                     __pdataBANK3 0190                       __pbssCOMMON 007C                         ___latbits 0002  
                   __pcstackBANK0 0020                     __pcstackBANK1 00A0                       _datoSeriale 00D3  
               __size_of_init_lcd 0057                          ?___aldiv 00A7                 __size_of_send_cmd 0028  
                        ?___awdiv 0070                          ?___awmod 0070          __end_of_Uart_send_string 0727  
                     ??_UART_init 00B8                          ?_initPic 0070                         _countDown 007D  
         __end_of_print_Countdown 0311                     ??_send_string 0073           print_Countdown@firstStr 0057  
                 ___aldiv@divisor 00A7                 interrupt_function 0004                   ___aldiv@counter 00B0  
                       clear_ram0 0759                          _PIE1bits 008C                         _send_data 06EA  
                   ??_UART_TxChar 00A7                          _GO_nDONE 00FA                         _numStrade 00E2  
         print_Countdown@statoSem 007B                        _ADCON0bits 001F                         _strToSend 00D5  
    __size_of_messageTransmission 0022                        ?_send_data 0070                      send_string@i 0074  
             __end_of_send_string 06CA                   UART_TxChar@dato 00A7                  __size_of___aldiv 009D  
             __end_of_UART_TxChar 074A                  __size_of___awdiv 0067                  __size_of___awmod 0059  
                __size_of_initPic 000F                          __ptext10 01D4                          __ptext11 06CA  
                        __ptext12 06A9                          __ptext13 06EA                          __ptext14 0531  
                        __ptext15 04CA                          _contAuto 00D2                          _contMoto 00D1  
                ?_print_Countdown 0079                          _init_lcd 058A                     __size_of_main 018B  
                        _received 00D4                          _send_cmd 065F                          _semafori 00C1  
                      _INTCONbits 000B                          init_ram0 072B                   send_cmd@command 00A9  
                        intlevel1 0000                 UART_init@baudrate 00B6                       _send_string 06A9  
                     ??_send_data 0070                       _UART_TxChar 073A             print_Countdown@length 006B  
               ?_Uart_send_string 0070                ??_Uart_send_string 00A8                        _OPTION_REG 0081  
                    ___aldiv@sign 00B1  
