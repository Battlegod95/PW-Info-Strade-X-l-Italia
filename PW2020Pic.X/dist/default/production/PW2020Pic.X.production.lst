

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jun 22 14:40:11 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.10
    31                           ; Generated 31/07/2019 GMT
    32                           ; 
    33                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184                           
   185                           	psect	idataBANK0
   186  053C                     __pidataBANK0:	
   187                           
   188                           ;initializer for num_converter@F898
   189  053C  3420               	retlw	32
   190  053D  3420               	retlw	32
   191  053E  3420               	retlw	32
   192  053F  3420               	retlw	32
   193                           
   194                           ;initializer for _PicId
   195  0540  34A7               	retlw	167
   196  0541  3400               	retlw	0
   197  0019                     _TXREG	set	25
   198  000B                     _INTCONbits	set	11
   199  0018                     _RCSTAbits	set	24
   200  0008                     _PORTD	set	8
   201  0009                     _PORTEbits	set	9
   202  001E                     _ADRESH	set	30
   203  001F                     _ADCON0bits	set	31
   204  001F                     _ADCON0	set	31
   205  0001                     _TMR0	set	1
   206  000B                     _INTCON	set	11
   207  001A                     _RCREG	set	26
   208  0006                     _PORTBbits	set	6
   209  0064                     _TXIF	set	100
   210  00FA                     _GO_nDONE	set	250
   211  0065                     _RCIF	set	101
   212  008C                     _PIE1bits	set	140
   213  0099                     _SPBRG	set	153
   214  0098                     _TXSTAbits	set	152
   215  0087                     _TRISCbits	set	135
   216  009E                     _ADRESL	set	158
   217  009F                     _ADCON1	set	159
   218  0085                     _TRISA	set	133
   219  0081                     _OPTION_REG	set	129
   220  0089                     _TRISE	set	137
   221  0086                     _TRISB	set	134
   222  0088                     _TRISD	set	136
   223                           
   224                           	psect	strings
   225  0500                     __pstrings:	
   226  0500                     stringtab:	
   227  0500                     __stringtab:	
   228                           
   229                           ;	String table - string pointers are 1 byte each
   230  0500  1BFF               	btfsc	btemp+1,7
   231  0501  2D0A               	ljmp	stringcode
   232  0502  1383               	bcf	3,7
   233  0503  187F               	btfsc	btemp+1,0
   234  0504  1783               	bsf	3,7
   235  0505  0800               	movf	0,w
   236  0506  0A84               	incf	4,f
   237  0507  1903               	skipnz
   238  0508  0AFF               	incf	btemp+1,f
   239  0509  0008               	return
   240  050A                     stringcode:	
   241  050A                     stringdir:	
   242  050A  3005               	movlw	high stringdir
   243  050B  008A               	movwf	10
   244  050C  0804               	movf	4,w
   245  050D  0A84               	incf	4,f
   246  050E  0782               	addwf	2,f
   247  050F                     __stringbase:	
   248  050F  3400               	retlw	0
   249  0510                     __end_of__stringtab:	
   250  0510                     STR_3:	
   251  0510  3432               	retlw	50	;'2'
   252  0511  3430               	retlw	48	;'0'
   253  0512  3430               	retlw	48	;'0'
   254  0513  3400               	retlw	0
   255  0514                     STR_1:	
   256  0514  3432               	retlw	50	;'2'
   257  0515  3400               	retlw	0
   258  0516                     STR_4:	
   259  0516  3434               	retlw	52	;'4'
   260  0517  3400               	retlw	0
   261  0518                     STR_5:	
   262  0518  3452               	retlw	82	;'R'
   263  0519  3400               	retlw	0
   264  0513                     
   265                           ; #config settings
   266  0000                     
   267                           	psect	cinit
   268  000F                     start_initialization:	
   269  000F                     __initialization:	
   270                           
   271                           ; Initialize objects allocated to BANK0
   272  000F  120A  118A  253C  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   273  0014  00E3               	movwf	__pdataBANK0& (0+127)
   274  0015  120A  118A  253D  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   275  001A  00E4               	movwf	(__pdataBANK0+1)& (0+127)
   276  001B  120A  118A  253E  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   277  0020  00E5               	movwf	(__pdataBANK0+2)& (0+127)
   278  0021  120A  118A  253F  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   279  0026  00E6               	movwf	(__pdataBANK0+3)& (0+127)
   280  0027  120A  118A  2540  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   281  002C  00E7               	movwf	(__pdataBANK0+4)& (0+127)
   282  002D  120A  118A  2541  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   283  0032  00E8               	movwf	(__pdataBANK0+5)& (0+127)
   284                           
   285                           ; Clear objects allocated to BANK1
   286  0033  1383               	bcf	3,7	;select IRP bank0
   287  0034  30A0               	movlw	low __pbssBANK1
   288  0035  0084               	movwf	4
   289  0036  30E4               	movlw	low (__pbssBANK1+68)
   290  0037  120A  118A  2534  120A  118A  	fcall	clear_ram0
   291                           
   292                           ; Clear objects allocated to BANK0
   293  003C  3020               	movlw	low __pbssBANK0
   294  003D  0084               	movwf	4
   295  003E  3046               	movlw	low (__pbssBANK0+38)
   296  003F  120A  118A  2534  120A  118A  	fcall	clear_ram0
   297                           
   298                           ; Clear objects allocated to COMMON
   299  0044  01F8               	clrf	__pbssCOMMON& (0+127)
   300  0045  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   301  0046  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   302  0047                     end_of_initialization:	
   303                           ;End of C runtime variable initialization code
   304                           
   305  0047                     __end_of__initialization:	
   306  0047  0183               	clrf	3
   307  0048  120A  118A  284B   	ljmp	_main	;jump to C main() function
   308                           
   309                           	psect	bssCOMMON
   310  0078                     __pbssCOMMON:	
   311  0078                     _oldBtn3:	
   312  0078                     	ds	1
   313  0079                     _oldBtn2:	
   314  0079                     	ds	1
   315  007A                     _oldBtn1:	
   316  007A                     	ds	1
   317                           
   318                           	psect	bssBANK0
   319  0020                     __pbssBANK0:	
   320  0020                     _count:	
   321  0020                     	ds	2
   322  0022                     _stat3:	
   323  0022                     	ds	1
   324  0023                     _stat2:	
   325  0023                     	ds	1
   326  0024                     _stat1:	
   327  0024                     	ds	1
   328  0025                     _contCamion:	
   329  0025                     	ds	1
   330  0026                     _contMoto:	
   331  0026                     	ds	1
   332  0027                     _contAuto:	
   333  0027                     	ds	1
   334  0028                     _datoSeriale:	
   335  0028                     	ds	1
   336  0029                     _received:	
   337  0029                     	ds	1
   338  002A                     _strCtnTrasmissione:	
   339  002A                     	ds	20
   340  003E                     _strControl:	
   341  003E                     	ds	8
   342                           
   343                           	psect	dataBANK0
   344  0063                     __pdataBANK0:	
   345  0063                     num_converter@F898:	
   346  0063                     	ds	4
   347  0067                     _PicId:	
   348  0067                     	ds	2
   349                           
   350                           	psect	bssBANK1
   351  00A0                     __pbssBANK1:	
   352  00A0                     _strToSend:	
   353  00A0                     	ds	48
   354  00D0                     _strHeaderTrasmissione:	
   355  00D0                     	ds	20
   356                           
   357                           	psect	clrtext
   358  0534                     clear_ram0:	
   359                           ;	Called with FSR containing the base address, and
   360                           ;	W with the last address+1
   361                           
   362  0534  0064               	clrwdt	;clear the watchdog before getting into this loop
   363  0535                     clrloop0:	
   364  0535  0180               	clrf	0	;clear RAM location pointed to by FSR
   365  0536  0A84               	incf	4,f	;increment pointer
   366  0537  0604               	xorwf	4,w	;XOR with final address
   367  0538  1903               	btfsc	3,2	;have we reached the end yet?
   368  0539  3400               	retlw	0	;all done for this memory range, return
   369  053A  0604               	xorwf	4,w	;XOR again to restore value
   370  053B  2D35               	goto	clrloop0	;do the next byte
   371                           
   372                           	psect	cstackCOMMON
   373  0070                     __pcstackCOMMON:	
   374  0070                     ?_initPic:	
   375  0070                     ?_init_lcd:	
   376                           ; 1 bytes @ 0x0
   377                           
   378  0070                     ?_send_cmd:	
   379                           ; 1 bytes @ 0x0
   380                           
   381  0070                     ?_Uart_send_string:	
   382                           ; 1 bytes @ 0x0
   383                           
   384  0070                     ?_UART_TxChar:	
   385                           ; 1 bytes @ 0x0
   386                           
   387  0070                     ?_main:	
   388                           ; 1 bytes @ 0x0
   389                           
   390  0070                     ?_ISR:	
   391                           ; 1 bytes @ 0x0
   392                           
   393  0070                     ??_ISR:	
   394                           ; 1 bytes @ 0x0
   395                           
   396                           
   397                           ; 1 bytes @ 0x0
   398  0070                     	ds	3
   399  0073                     ??_initPic:	
   400  0073                     ??_send_cmd:	
   401                           ; 1 bytes @ 0x3
   402                           
   403  0073                     ??_UART_TxChar:	
   404                           ; 1 bytes @ 0x3
   405                           
   406  0073                     ??___aldiv:	
   407                           ; 1 bytes @ 0x3
   408                           
   409  0073                     ?___awdiv:	
   410                           ; 1 bytes @ 0x3
   411                           
   412  0073                     ?___awmod:	
   413                           ; 2 bytes @ 0x3
   414                           
   415  0073                     UART_TxChar@dato:	
   416                           ; 2 bytes @ 0x3
   417                           
   418  0073                     ___awdiv@divisor:	
   419                           ; 1 bytes @ 0x3
   420                           
   421  0073                     ___awmod@divisor:	
   422                           ; 2 bytes @ 0x3
   423                           
   424                           
   425                           ; 2 bytes @ 0x3
   426  0073                     	ds	1
   427  0074                     ??_UART_init:	
   428  0074                     ??_Uart_send_string:	
   429                           ; 1 bytes @ 0x4
   430                           
   431                           
   432                           ; 1 bytes @ 0x4
   433  0074                     	ds	1
   434  0075                     Uart_send_string@i:	
   435  0075                     send_cmd@command:	
   436                           ; 1 bytes @ 0x5
   437                           
   438  0075                     ___awdiv@dividend:	
   439                           ; 1 bytes @ 0x5
   440                           
   441  0075                     ___awmod@dividend:	
   442                           ; 2 bytes @ 0x5
   443                           
   444                           
   445                           ; 2 bytes @ 0x5
   446  0075                     	ds	1
   447  0076                     ??_init_lcd:	
   448  0076                     Uart_send_string@str:	
   449                           ; 1 bytes @ 0x6
   450                           
   451                           
   452                           ; 1 bytes @ 0x6
   453  0076                     	ds	1
   454  0077                     ??___awdiv:	
   455  0077                     ??___awmod:	
   456                           ; 1 bytes @ 0x7
   457                           
   458                           
   459                           ; 1 bytes @ 0x7
   460  0077                     	ds	1
   461                           
   462                           	psect	cstackBANK0
   463  0046                     __pcstackBANK0:	
   464  0046                     ?___aldiv:	
   465  0046                     ___awdiv@counter:	
   466                           ; 4 bytes @ 0x0
   467                           
   468  0046                     ___awmod@counter:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0046                     ___aldiv@divisor:	
   472                           ; 1 bytes @ 0x0
   473                           
   474                           
   475                           ; 4 bytes @ 0x0
   476  0046                     	ds	1
   477  0047                     ___awdiv@sign:	
   478  0047                     ___awmod@sign:	
   479                           ; 1 bytes @ 0x1
   480                           
   481                           
   482                           ; 1 bytes @ 0x1
   483  0047                     	ds	1
   484  0048                     ___awdiv@quotient:	
   485                           
   486                           ; 2 bytes @ 0x2
   487  0048                     	ds	2
   488  004A                     ?_num_converter:	
   489  004A                     num_converter@num:	
   490                           ; 1 bytes @ 0x4
   491                           
   492  004A                     ___aldiv@dividend:	
   493                           ; 2 bytes @ 0x4
   494                           
   495                           
   496                           ; 4 bytes @ 0x4
   497  004A                     	ds	2
   498  004C                     ??_num_converter:	
   499                           
   500                           ; 1 bytes @ 0x6
   501  004C                     	ds	2
   502  004E                     ___aldiv@counter:	
   503                           
   504                           ; 1 bytes @ 0x8
   505  004E                     	ds	1
   506  004F                     ___aldiv@sign:	
   507  004F                     num_converter@result:	
   508                           ; 1 bytes @ 0x9
   509                           
   510                           
   511                           ; 4 bytes @ 0x9
   512  004F                     	ds	1
   513  0050                     ___aldiv@quotient:	
   514                           
   515                           ; 4 bytes @ 0xA
   516  0050                     	ds	3
   517  0053                     num_converter@i:	
   518                           
   519                           ; 1 bytes @ 0xD
   520  0053                     	ds	1
   521  0054                     ?_UART_init:	
   522  0054                     ?_concatenate:	
   523                           ; 1 bytes @ 0xE
   524                           
   525  0054                     concatenate@str1:	
   526                           ; 1 bytes @ 0xE
   527                           
   528  0054                     UART_init@baudrate:	
   529                           ; 2 bytes @ 0xE
   530                           
   531                           
   532                           ; 2 bytes @ 0xE
   533  0054                     	ds	2
   534  0056                     concatenate@str2:	
   535                           
   536                           ; 2 bytes @ 0x10
   537  0056                     	ds	2
   538  0058                     ??_concatenate:	
   539                           
   540                           ; 1 bytes @ 0x12
   541  0058                     	ds	5
   542  005D                     concatenate@j:	
   543                           
   544                           ; 2 bytes @ 0x17
   545  005D                     	ds	2
   546  005F                     concatenate@i:	
   547                           
   548                           ; 2 bytes @ 0x19
   549  005F                     	ds	2
   550  0061                     concatenate@str3:	
   551                           
   552                           ; 1 bytes @ 0x1B
   553  0061                     	ds	1
   554  0062                     ??_main:	
   555                           
   556                           ; 1 bytes @ 0x1C
   557  0062                     	ds	1
   558                           
   559                           	psect	maintext
   560  004B                     __pmaintext:	
   561 ;;
   562 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   563 ;;
   564 ;; *************** function _main *****************
   565 ;; Defined at:
   566 ;;		line 76 in file "main.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;  stringa         1    0        unsigned char 
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   575 ;; Tracked objects:
   576 ;;		On entry : B00/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         0       1       0       0       0
   582 ;;      Temps:          0       1       0       0       0
   583 ;;      Totals:         0       2       0       0       0
   584 ;;Total ram usage:        2 bytes
   585 ;; Hardware stack levels required when called:    3
   586 ;; This function calls:
   587 ;;		_UART_TxChar
   588 ;;		_UART_init
   589 ;;		_Uart_send_string
   590 ;;		_concatenate
   591 ;;		_initPic
   592 ;;		_init_lcd
   593 ;;		_num_converter
   594 ;;		_send_cmd
   595 ;; This function is called by:
   596 ;;		Startup code after reset
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           
   600                           
   601                           ;psect for function _main
   602  004B                     _main:	
   603  004B                     l1549:	
   604                           ;incstack = 0
   605                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   606                           
   607                           
   608                           ;main.c: 78:     initPic();
   609  004B  120A  118A  251A  120A  118A  	fcall	_initPic
   610                           
   611                           ;main.c: 79:     UART_init(9600);
   612  0050  3080               	movlw	128
   613  0051  1283               	bcf	3,5	;RP0=0, select bank0
   614  0052  1303               	bcf	3,6	;RP1=0, select bank0
   615  0053  00D4               	movwf	UART_init@baudrate
   616  0054  3025               	movlw	37
   617  0055  00D5               	movwf	UART_init@baudrate+1
   618  0056  120A  118A  2485  120A  118A  	fcall	_UART_init
   619                           
   620                           ;main.c: 80:     init_lcd();
   621  005B  120A  118A  23E3  120A  118A  	fcall	_init_lcd
   622                           
   623                           ;main.c: 81:     send_cmd(0x01);
   624  0060  3001               	movlw	1
   625  0061  120A  118A  24BF  120A  118A  	fcall	_send_cmd
   626  0066                     l1551:	
   627                           
   628                           ;main.c: 85:     concatenate(strControl,"2","");
   629  0066  3005               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   630  0067  1283               	bcf	3,5	;RP0=0, select bank0
   631  0068  1303               	bcf	3,6	;RP1=0, select bank0
   632  0069  00D4               	movwf	concatenate@str1
   633  006A  3080               	movlw	128
   634  006B  00D5               	movwf	concatenate@str1+1
   635  006C  3004               	movlw	(low (((STR_3+3)-__stringbase)| (0+32768)))& (0+255)
   636  006D  00D6               	movwf	concatenate@str2
   637  006E  3080               	movlw	128
   638  006F  00D7               	movwf	concatenate@str2+1
   639  0070  303E               	movlw	(low (_strControl| 0))& (0+255)
   640  0071  120A  118A  2160  120A  118A  	fcall	_concatenate
   641  0076                     l1553:	
   642                           
   643                           ;main.c: 86:     concatenate(strHeaderTrasmissione,"200",num_converter(PicId));
   644  0076  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   645  0077  1283               	bcf	3,5	;RP0=0, select bank0
   646  0078  1303               	bcf	3,6	;RP1=0, select bank0
   647  0079  00D4               	movwf	concatenate@str1
   648  007A  3080               	movlw	128
   649  007B  00D5               	movwf	concatenate@str1+1
   650  007C  30A7               	movlw	167
   651  007D  00CA               	movwf	num_converter@num
   652  007E  3000               	movlw	0
   653  007F  00CB               	movwf	num_converter@num+1
   654  0080  120A  118A  2436  120A  118A  	fcall	_num_converter
   655  0085  1283               	bcf	3,5	;RP0=0, select bank0
   656  0086  1303               	bcf	3,6	;RP1=0, select bank0
   657  0087  00D6               	movwf	concatenate@str2
   658  0088  3000               	movlw	0
   659  0089  00D7               	movwf	concatenate@str2+1
   660  008A  30D0               	movlw	(low (_strHeaderTrasmissione| 0))& (0+255)
   661  008B  120A  118A  2160  120A  118A  	fcall	_concatenate
   662  0090                     l1555:	
   663                           
   664                           ;main.c: 87:     concatenate(strCtnTrasmissione,"4","R");
   665  0090  3007               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   666  0091  1283               	bcf	3,5	;RP0=0, select bank0
   667  0092  1303               	bcf	3,6	;RP1=0, select bank0
   668  0093  00D4               	movwf	concatenate@str1
   669  0094  3080               	movlw	128
   670  0095  00D5               	movwf	concatenate@str1+1
   671  0096  3009               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   672  0097  00D6               	movwf	concatenate@str2
   673  0098  3080               	movlw	128
   674  0099  00D7               	movwf	concatenate@str2+1
   675  009A  302A               	movlw	(low (_strCtnTrasmissione| 0))& (0+255)
   676  009B  120A  118A  2160  120A  118A  	fcall	_concatenate
   677  00A0                     l1557:	
   678                           
   679                           ;main.c: 89:     concatenate(strToSend,strControl,strHeaderTrasmissione);
   680  00A0  303E               	movlw	(low (_strControl| 0))& (0+255)
   681  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   682  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   683  00A3  00D4               	movwf	concatenate@str1
   684  00A4  3000               	movlw	0
   685  00A5  00D5               	movwf	concatenate@str1+1
   686  00A6  30D0               	movlw	(low (_strHeaderTrasmissione| 0))& (0+255)
   687  00A7  00D6               	movwf	concatenate@str2
   688  00A8  3000               	movlw	0
   689  00A9  00D7               	movwf	concatenate@str2+1
   690  00AA  30A0               	movlw	(low (_strToSend| 0))& (0+255)
   691  00AB  120A  118A  2160  120A  118A  	fcall	_concatenate
   692  00B0                     l1559:	
   693                           
   694                           ;main.c: 90:     concatenate(strToSend,strToSend,strCtnTrasmissione);
   695  00B0  30A0               	movlw	(low (_strToSend| 0))& (0+255)
   696  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   697  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   698  00B3  00D4               	movwf	concatenate@str1
   699  00B4  3000               	movlw	0
   700  00B5  00D5               	movwf	concatenate@str1+1
   701  00B6  302A               	movlw	(low (_strCtnTrasmissione| 0))& (0+255)
   702  00B7  00D6               	movwf	concatenate@str2
   703  00B8  3000               	movlw	0
   704  00B9  00D7               	movwf	concatenate@str2+1
   705  00BA  30A0               	movlw	(low (_strToSend| 0))& (0+255)
   706  00BB  120A  118A  2160  120A  118A  	fcall	_concatenate
   707  00C0                     l1561:	
   708                           
   709                           ;main.c: 91:     Uart_send_string(strToSend);
   710  00C0  30A0               	movlw	(low (_strToSend| 0))& (0+255)
   711  00C1  120A  118A  24DF  120A  118A  	fcall	_Uart_send_string
   712  00C6                     l1563:	
   713                           
   714                           ;main.c: 95:     {;main.c: 98:         if(stat1)
   715  00C6  1283               	bcf	3,5	;RP0=0, select bank0
   716  00C7  1303               	bcf	3,6	;RP1=0, select bank0
   717  00C8  0824               	movf	_stat1,w
   718  00C9  1903               	btfsc	3,2
   719  00CA  28CC               	goto	u1461
   720  00CB  28CD               	goto	u1460
   721  00CC                     u1461:	
   722  00CC  28D8               	goto	l1571
   723  00CD                     u1460:	
   724  00CD                     l1565:	
   725                           
   726                           ;main.c: 99:         {;main.c: 100:             contAuto++;
   727  00CD  3001               	movlw	1
   728  00CE  00E2               	movwf	??_main
   729  00CF  0862               	movf	??_main,w
   730  00D0  07A7               	addwf	_contAuto,f
   731  00D1                     l1567:	
   732                           
   733                           ;main.c: 101:             stat1=0;
   734  00D1  01A4               	clrf	_stat1
   735  00D2                     l1569:	
   736                           
   737                           ;main.c: 102:             UART_TxChar(contAuto);
   738  00D2  0827               	movf	_contAuto,w
   739  00D3  120A  118A  2529  120A  118A  	fcall	_UART_TxChar
   740  00D8                     l1571:	
   741                           
   742                           ;main.c: 104:         if(stat2)
   743  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   744  00D9  1303               	bcf	3,6	;RP1=0, select bank0
   745  00DA  0823               	movf	_stat2,w
   746  00DB  1903               	btfsc	3,2
   747  00DC  28DE               	goto	u1471
   748  00DD  28DF               	goto	u1470
   749  00DE                     u1471:	
   750  00DE  28E4               	goto	l1577
   751  00DF                     u1470:	
   752  00DF                     l1573:	
   753                           
   754                           ;main.c: 105:         {;main.c: 106:             contMoto++;
   755  00DF  3001               	movlw	1
   756  00E0  00E2               	movwf	??_main
   757  00E1  0862               	movf	??_main,w
   758  00E2  07A6               	addwf	_contMoto,f
   759  00E3                     l1575:	
   760                           
   761                           ;main.c: 107:             stat2=0;
   762  00E3  01A3               	clrf	_stat2
   763  00E4                     l1577:	
   764                           
   765                           ;main.c: 109:         if(stat3)
   766  00E4  0822               	movf	_stat3,w
   767  00E5  1903               	btfsc	3,2
   768  00E6  28E8               	goto	u1481
   769  00E7  28E9               	goto	u1480
   770  00E8                     u1481:	
   771  00E8  28EE               	goto	l1583
   772  00E9                     u1480:	
   773  00E9                     l1579:	
   774                           
   775                           ;main.c: 110:         {;main.c: 111:             contCamion++;
   776  00E9  3001               	movlw	1
   777  00EA  00E2               	movwf	??_main
   778  00EB  0862               	movf	??_main,w
   779  00EC  07A5               	addwf	_contCamion,f
   780  00ED                     l1581:	
   781                           
   782                           ;main.c: 112:             stat3=0;
   783  00ED  01A2               	clrf	_stat3
   784  00EE                     l1583:	
   785                           
   786                           ;main.c: 117:         if(received)
   787  00EE  0829               	movf	_received,w
   788  00EF  1903               	btfsc	3,2
   789  00F0  28F2               	goto	u1491
   790  00F1  28F3               	goto	u1490
   791  00F2                     u1491:	
   792  00F2  28C6               	goto	l1563
   793  00F3                     u1490:	
   794  00F3                     l1585:	
   795  00F3                     l1587:	
   796                           
   797                           ;main.c: 121:             send_cmd(0x01);
   798  00F3  3001               	movlw	1
   799  00F4  120A  118A  24BF  120A  118A  	fcall	_send_cmd
   800  00F9                     l1589:	
   801                           
   802                           ;main.c: 123:             concatenate(strControl,"2","");
   803  00F9  3005               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   804  00FA  1283               	bcf	3,5	;RP0=0, select bank0
   805  00FB  1303               	bcf	3,6	;RP1=0, select bank0
   806  00FC  00D4               	movwf	concatenate@str1
   807  00FD  3080               	movlw	128
   808  00FE  00D5               	movwf	concatenate@str1+1
   809  00FF  3004               	movlw	(low (((STR_3+3)-__stringbase)| (0+32768)))& (0+255)
   810  0100  00D6               	movwf	concatenate@str2
   811  0101  3080               	movlw	128
   812  0102  00D7               	movwf	concatenate@str2+1
   813  0103  303E               	movlw	(low (_strControl| 0))& (0+255)
   814  0104  120A  118A  2160  120A  118A  	fcall	_concatenate
   815  0109                     l1591:	
   816                           
   817                           ;main.c: 124:             concatenate(strHeaderTrasmissione,"200",num_converter(PicId));
   818  0109  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   819  010A  1283               	bcf	3,5	;RP0=0, select bank0
   820  010B  1303               	bcf	3,6	;RP1=0, select bank0
   821  010C  00D4               	movwf	concatenate@str1
   822  010D  3080               	movlw	128
   823  010E  00D5               	movwf	concatenate@str1+1
   824  010F  30A7               	movlw	167
   825  0110  00CA               	movwf	num_converter@num
   826  0111  3000               	movlw	0
   827  0112  00CB               	movwf	num_converter@num+1
   828  0113  120A  118A  2436  120A  118A  	fcall	_num_converter
   829  0118  1283               	bcf	3,5	;RP0=0, select bank0
   830  0119  1303               	bcf	3,6	;RP1=0, select bank0
   831  011A  00D6               	movwf	concatenate@str2
   832  011B  3000               	movlw	0
   833  011C  00D7               	movwf	concatenate@str2+1
   834  011D  30D0               	movlw	(low (_strHeaderTrasmissione| 0))& (0+255)
   835  011E  120A  118A  2160  120A  118A  	fcall	_concatenate
   836  0123                     l1593:	
   837                           
   838                           ;main.c: 125:             concatenate(strCtnTrasmissione,"4","R");
   839  0123  3007               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   840  0124  1283               	bcf	3,5	;RP0=0, select bank0
   841  0125  1303               	bcf	3,6	;RP1=0, select bank0
   842  0126  00D4               	movwf	concatenate@str1
   843  0127  3080               	movlw	128
   844  0128  00D5               	movwf	concatenate@str1+1
   845  0129  3009               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   846  012A  00D6               	movwf	concatenate@str2
   847  012B  3080               	movlw	128
   848  012C  00D7               	movwf	concatenate@str2+1
   849  012D  302A               	movlw	(low (_strCtnTrasmissione| 0))& (0+255)
   850  012E  120A  118A  2160  120A  118A  	fcall	_concatenate
   851  0133                     l1595:	
   852                           
   853                           ;main.c: 127:             concatenate(strToSend,strControl,strHeaderTrasmissione);
   854  0133  303E               	movlw	(low (_strControl| 0))& (0+255)
   855  0134  1283               	bcf	3,5	;RP0=0, select bank0
   856  0135  1303               	bcf	3,6	;RP1=0, select bank0
   857  0136  00D4               	movwf	concatenate@str1
   858  0137  3000               	movlw	0
   859  0138  00D5               	movwf	concatenate@str1+1
   860  0139  30D0               	movlw	(low (_strHeaderTrasmissione| 0))& (0+255)
   861  013A  00D6               	movwf	concatenate@str2
   862  013B  3000               	movlw	0
   863  013C  00D7               	movwf	concatenate@str2+1
   864  013D  30A0               	movlw	(low (_strToSend| 0))& (0+255)
   865  013E  120A  118A  2160  120A  118A  	fcall	_concatenate
   866  0143                     l1597:	
   867                           
   868                           ;main.c: 128:             concatenate(strToSend,strToSend,strCtnTrasmissione);
   869  0143  30A0               	movlw	(low (_strToSend| 0))& (0+255)
   870  0144  1283               	bcf	3,5	;RP0=0, select bank0
   871  0145  1303               	bcf	3,6	;RP1=0, select bank0
   872  0146  00D4               	movwf	concatenate@str1
   873  0147  3000               	movlw	0
   874  0148  00D5               	movwf	concatenate@str1+1
   875  0149  302A               	movlw	(low (_strCtnTrasmissione| 0))& (0+255)
   876  014A  00D6               	movwf	concatenate@str2
   877  014B  3000               	movlw	0
   878  014C  00D7               	movwf	concatenate@str2+1
   879  014D  30A0               	movlw	(low (_strToSend| 0))& (0+255)
   880  014E  120A  118A  2160  120A  118A  	fcall	_concatenate
   881  0153                     l1599:	
   882                           
   883                           ;main.c: 129:             Uart_send_string(strToSend);
   884  0153  30A0               	movlw	(low (_strToSend| 0))& (0+255)
   885  0154  120A  118A  24DF  120A  118A  	fcall	_Uart_send_string
   886  0159                     l1601:	
   887                           
   888                           ;main.c: 135:             received=0;
   889  0159  1283               	bcf	3,5	;RP0=0, select bank0
   890  015A  1303               	bcf	3,6	;RP1=0, select bank0
   891  015B  01A9               	clrf	_received
   892  015C  28C6               	goto	l1563
   893  015D  120A  118A  280C   	ljmp	start
   894  0160                     __end_of_main:	
   895                           
   896                           	psect	text1
   897  0436                     __ptext1:	
   898 ;; *************** function _num_converter *****************
   899 ;; Defined at:
   900 ;;		line 192 in file "main.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  num             2    4[BANK0 ] int 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  result          4    9[BANK0 ] unsigned char [4]
   905 ;;  length          2    0        int 
   906 ;;  i               1   13[BANK0 ] unsigned char 
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      PTR unsigned char 
   909 ;; Registers used:
   910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         0       2       0       0       0
   917 ;;      Locals:         0       7       0       0       0
   918 ;;      Temps:          0       1       0       0       0
   919 ;;      Totals:         0      10       0       0       0
   920 ;;Total ram usage:       10 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; Hardware stack levels required when called:    2
   923 ;; This function calls:
   924 ;;		___awdiv
   925 ;;		___awmod
   926 ;; This function is called by:
   927 ;;		_main
   928 ;; This function uses a non-reentrant model
   929 ;;
   930                           
   931                           
   932                           ;psect for function _num_converter
   933  0436                     _num_converter:	
   934  0436                     l1531:	
   935                           ;incstack = 0
   936                           ; Regs used in _num_converter: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   937                           
   938                           
   939                           ;main.c: 195:     char result[4] = "    ", i = 3;
   940  0436  1283               	bcf	3,5	;RP0=0, select bank0
   941  0437  1303               	bcf	3,6	;RP1=0, select bank0
   942  0438  0866               	movf	num_converter@F898+3,w
   943  0439  00D2               	movwf	num_converter@result+3
   944  043A  0865               	movf	num_converter@F898+2,w
   945  043B  00D1               	movwf	num_converter@result+2
   946  043C  0864               	movf	num_converter@F898+1,w
   947  043D  00D0               	movwf	num_converter@result+1
   948  043E  0863               	movf	num_converter@F898,w
   949  043F  00CF               	movwf	num_converter@result
   950  0440  3003               	movlw	3
   951  0441  00CC               	movwf	??_num_converter
   952  0442  084C               	movf	??_num_converter,w
   953  0443  00D3               	movwf	num_converter@i
   954  0444                     l1533:	
   955                           
   956                           ;main.c: 197:     if(num != 0)
   957  0444  084A               	movf	num_converter@num,w
   958  0445  044B               	iorwf	num_converter@num+1,w
   959  0446  1903               	btfsc	3,2
   960  0447  2C49               	goto	u1441
   961  0448  2C4A               	goto	u1440
   962  0449                     u1441:	
   963  0449  2C7F               	goto	l1545
   964  044A                     u1440:	
   965  044A  2C78               	goto	l1543
   966  044B                     l1537:	
   967                           
   968                           ;main.c: 200:         {;main.c: 201:             result[i] = num%10 + '0';
   969  044B  300A               	movlw	10
   970  044C  00F3               	movwf	___awmod@divisor
   971  044D  3000               	movlw	0
   972  044E  00F4               	movwf	___awmod@divisor+1
   973  044F  084B               	movf	num_converter@num+1,w
   974  0450  00F6               	movwf	___awmod@dividend+1
   975  0451  084A               	movf	num_converter@num,w
   976  0452  00F5               	movwf	___awmod@dividend
   977  0453  120A  118A  2388  120A  118A  	fcall	___awmod
   978  0458  0873               	movf	?___awmod,w
   979  0459  3E30               	addlw	48
   980  045A  1283               	bcf	3,5	;RP0=0, select bank0
   981  045B  1303               	bcf	3,6	;RP1=0, select bank0
   982  045C  00CC               	movwf	??_num_converter
   983  045D  0853               	movf	num_converter@i,w
   984  045E  3E4F               	addlw	(low (num_converter@result| 0))& (0+255)
   985  045F  0084               	movwf	4
   986  0460  084C               	movf	??_num_converter,w
   987  0461  1383               	bcf	3,7	;select IRP bank0
   988  0462  0080               	movwf	0
   989  0463                     l1539:	
   990                           
   991                           ;main.c: 202:             num /= 10;
   992  0463  300A               	movlw	10
   993  0464  00F3               	movwf	___awdiv@divisor
   994  0465  3000               	movlw	0
   995  0466  00F4               	movwf	___awdiv@divisor+1
   996  0467  084B               	movf	num_converter@num+1,w
   997  0468  00F6               	movwf	___awdiv@dividend+1
   998  0469  084A               	movf	num_converter@num,w
   999  046A  00F5               	movwf	___awdiv@dividend
  1000  046B  120A  118A  231F  120A  118A  	fcall	___awdiv
  1001  0470  0874               	movf	?___awdiv+1,w
  1002  0471  1283               	bcf	3,5	;RP0=0, select bank0
  1003  0472  1303               	bcf	3,6	;RP1=0, select bank0
  1004  0473  00CB               	movwf	num_converter@num+1
  1005  0474  0873               	movf	?___awdiv,w
  1006  0475  00CA               	movwf	num_converter@num
  1007  0476                     l1541:	
  1008                           
  1009                           ;main.c: 203:             i--;
  1010  0476  3001               	movlw	1
  1011  0477  02D3               	subwf	num_converter@i,f
  1012  0478                     l1543:	
  1013                           
  1014                           ;main.c: 199:         while(num)
  1015  0478  084A               	movf	num_converter@num,w
  1016  0479  044B               	iorwf	num_converter@num+1,w
  1017  047A  1D03               	btfss	3,2
  1018  047B  2C7D               	goto	u1451
  1019  047C  2C7E               	goto	u1450
  1020  047D                     u1451:	
  1021  047D  2C4B               	goto	l1537
  1022  047E                     u1450:	
  1023  047E  2C83               	goto	l141
  1024  047F                     l1545:	
  1025                           
  1026                           ;main.c: 207:     {;main.c: 208:         result[0] = '0';
  1027  047F  3030               	movlw	48
  1028  0480  00CC               	movwf	??_num_converter
  1029  0481  084C               	movf	??_num_converter,w
  1030  0482  00CF               	movwf	num_converter@result
  1031  0483                     l141:	
  1032                           ;main.c: 209:     }
  1033                           
  1034                           
  1035                           ;main.c: 211:     return result;
  1036  0483  304F               	movlw	(low (num_converter@result| 0))& (0+255)
  1037  0484                     l142:	
  1038  0484  0008               	return
  1039  0485                     __end_of_num_converter:	
  1040                           
  1041                           	psect	text2
  1042  0388                     __ptext2:	
  1043 ;; *************** function ___awmod *****************
  1044 ;; Defined at:
  1045 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  1046 ;; Parameters:    Size  Location     Type
  1047 ;;  divisor         2    3[COMMON] int 
  1048 ;;  dividend        2    5[COMMON] int 
  1049 ;; Auto vars:     Size  Location     Type
  1050 ;;  sign            1    1[BANK0 ] unsigned char 
  1051 ;;  counter         1    0[BANK0 ] unsigned char 
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  2    3[COMMON] int 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2, status,0
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1061 ;;      Params:         4       0       0       0       0
  1062 ;;      Locals:         0       2       0       0       0
  1063 ;;      Temps:          1       0       0       0       0
  1064 ;;      Totals:         5       2       0       0       0
  1065 ;;Total ram usage:        7 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    1
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_num_converter
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           
  1076                           ;psect for function ___awmod
  1077  0388                     ___awmod:	
  1078  0388                     l1483:	
  1079                           ;incstack = 0
  1080                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1081                           
  1082  0388  1283               	bcf	3,5	;RP0=0, select bank0
  1083  0389  1303               	bcf	3,6	;RP1=0, select bank0
  1084  038A  01C7               	clrf	___awmod@sign
  1085  038B                     l1485:	
  1086  038B  1FF6               	btfss	___awmod@dividend+1,7
  1087  038C  2B8E               	goto	u1341
  1088  038D  2B8F               	goto	u1340
  1089  038E                     u1341:	
  1090  038E  2B96               	goto	l1491
  1091  038F                     u1340:	
  1092  038F                     l1487:	
  1093  038F  09F5               	comf	___awmod@dividend,f
  1094  0390  09F6               	comf	___awmod@dividend+1,f
  1095  0391  0AF5               	incf	___awmod@dividend,f
  1096  0392  1903               	skipnz
  1097  0393  0AF6               	incf	___awmod@dividend+1,f
  1098  0394                     l1489:	
  1099  0394  01C7               	clrf	___awmod@sign
  1100  0395  0AC7               	incf	___awmod@sign,f
  1101  0396                     l1491:	
  1102  0396  1FF4               	btfss	___awmod@divisor+1,7
  1103  0397  2B99               	goto	u1351
  1104  0398  2B9A               	goto	u1350
  1105  0399                     u1351:	
  1106  0399  2B9F               	goto	l1495
  1107  039A                     u1350:	
  1108  039A                     l1493:	
  1109  039A  09F3               	comf	___awmod@divisor,f
  1110  039B  09F4               	comf	___awmod@divisor+1,f
  1111  039C  0AF3               	incf	___awmod@divisor,f
  1112  039D  1903               	skipnz
  1113  039E  0AF4               	incf	___awmod@divisor+1,f
  1114  039F                     l1495:	
  1115  039F  0873               	movf	___awmod@divisor,w
  1116  03A0  0474               	iorwf	___awmod@divisor+1,w
  1117  03A1  1903               	btfsc	3,2
  1118  03A2  2BA4               	goto	u1361
  1119  03A3  2BA5               	goto	u1360
  1120  03A4                     u1361:	
  1121  03A4  2BD4               	goto	l1513
  1122  03A5                     u1360:	
  1123  03A5                     l1497:	
  1124  03A5  01C6               	clrf	___awmod@counter
  1125  03A6  0AC6               	incf	___awmod@counter,f
  1126  03A7  2BB3               	goto	l1503
  1127  03A8                     l1499:	
  1128  03A8  3001               	movlw	1
  1129  03A9                     u1375:	
  1130  03A9  1003               	clrc
  1131  03AA  0DF3               	rlf	___awmod@divisor,f
  1132  03AB  0DF4               	rlf	___awmod@divisor+1,f
  1133  03AC  3EFF               	addlw	-1
  1134  03AD  1D03               	skipz
  1135  03AE  2BA9               	goto	u1375
  1136  03AF                     l1501:	
  1137  03AF  3001               	movlw	1
  1138  03B0  00F7               	movwf	??___awmod
  1139  03B1  0877               	movf	??___awmod,w
  1140  03B2  07C6               	addwf	___awmod@counter,f
  1141  03B3                     l1503:	
  1142  03B3  1FF4               	btfss	___awmod@divisor+1,7
  1143  03B4  2BB6               	goto	u1381
  1144  03B5  2BB7               	goto	u1380
  1145  03B6                     u1381:	
  1146  03B6  2BA8               	goto	l1499
  1147  03B7                     u1380:	
  1148  03B7                     l1505:	
  1149  03B7  0874               	movf	___awmod@divisor+1,w
  1150  03B8  0276               	subwf	___awmod@dividend+1,w
  1151  03B9  1D03               	skipz
  1152  03BA  2BBD               	goto	u1395
  1153  03BB  0873               	movf	___awmod@divisor,w
  1154  03BC  0275               	subwf	___awmod@dividend,w
  1155  03BD                     u1395:	
  1156  03BD  1C03               	skipc
  1157  03BE  2BC0               	goto	u1391
  1158  03BF  2BC1               	goto	u1390
  1159  03C0                     u1391:	
  1160  03C0  2BC7               	goto	l1509
  1161  03C1                     u1390:	
  1162  03C1                     l1507:	
  1163  03C1  0873               	movf	___awmod@divisor,w
  1164  03C2  02F5               	subwf	___awmod@dividend,f
  1165  03C3  0874               	movf	___awmod@divisor+1,w
  1166  03C4  1C03               	skipc
  1167  03C5  03F6               	decf	___awmod@dividend+1,f
  1168  03C6  02F6               	subwf	___awmod@dividend+1,f
  1169  03C7                     l1509:	
  1170  03C7  3001               	movlw	1
  1171  03C8                     u1405:	
  1172  03C8  1003               	clrc
  1173  03C9  0CF4               	rrf	___awmod@divisor+1,f
  1174  03CA  0CF3               	rrf	___awmod@divisor,f
  1175  03CB  3EFF               	addlw	-1
  1176  03CC  1D03               	skipz
  1177  03CD  2BC8               	goto	u1405
  1178  03CE                     l1511:	
  1179  03CE  3001               	movlw	1
  1180  03CF  02C6               	subwf	___awmod@counter,f
  1181  03D0  1D03               	btfss	3,2
  1182  03D1  2BD3               	goto	u1411
  1183  03D2  2BD4               	goto	u1410
  1184  03D3                     u1411:	
  1185  03D3  2BB7               	goto	l1505
  1186  03D4                     u1410:	
  1187  03D4                     l1513:	
  1188  03D4  0847               	movf	___awmod@sign,w
  1189  03D5  1903               	btfsc	3,2
  1190  03D6  2BD8               	goto	u1421
  1191  03D7  2BD9               	goto	u1420
  1192  03D8                     u1421:	
  1193  03D8  2BDE               	goto	l1517
  1194  03D9                     u1420:	
  1195  03D9                     l1515:	
  1196  03D9  09F5               	comf	___awmod@dividend,f
  1197  03DA  09F6               	comf	___awmod@dividend+1,f
  1198  03DB  0AF5               	incf	___awmod@dividend,f
  1199  03DC  1903               	skipnz
  1200  03DD  0AF6               	incf	___awmod@dividend+1,f
  1201  03DE                     l1517:	
  1202  03DE  0876               	movf	___awmod@dividend+1,w
  1203  03DF  00F4               	movwf	?___awmod+1
  1204  03E0  0875               	movf	___awmod@dividend,w
  1205  03E1  00F3               	movwf	?___awmod
  1206  03E2                     l445:	
  1207  03E2  0008               	return
  1208  03E3                     __end_of___awmod:	
  1209                           
  1210                           	psect	text3
  1211  031F                     __ptext3:	
  1212 ;; *************** function ___awdiv *****************
  1213 ;; Defined at:
  1214 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  divisor         2    3[COMMON] int 
  1217 ;;  dividend        2    5[COMMON] int 
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;  quotient        2    2[BANK0 ] int 
  1220 ;;  sign            1    1[BANK0 ] unsigned char 
  1221 ;;  counter         1    0[BANK0 ] unsigned char 
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  2    3[COMMON] int 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1231 ;;      Params:         4       0       0       0       0
  1232 ;;      Locals:         0       4       0       0       0
  1233 ;;      Temps:          1       0       0       0       0
  1234 ;;      Totals:         5       4       0       0       0
  1235 ;;Total ram usage:        9 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    1
  1238 ;; This function calls:
  1239 ;;		Nothing
  1240 ;; This function is called by:
  1241 ;;		_num_converter
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           
  1245                           
  1246                           ;psect for function ___awdiv
  1247  031F                     ___awdiv:	
  1248  031F                     l1187:	
  1249                           ;incstack = 0
  1250                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1251                           
  1252  031F  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0320  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0321  01C7               	clrf	___awdiv@sign
  1255  0322                     l1189:	
  1256  0322  1FF4               	btfss	___awdiv@divisor+1,7
  1257  0323  2B25               	goto	u751
  1258  0324  2B26               	goto	u750
  1259  0325                     u751:	
  1260  0325  2B2D               	goto	l1195
  1261  0326                     u750:	
  1262  0326                     l1191:	
  1263  0326  09F3               	comf	___awdiv@divisor,f
  1264  0327  09F4               	comf	___awdiv@divisor+1,f
  1265  0328  0AF3               	incf	___awdiv@divisor,f
  1266  0329  1903               	skipnz
  1267  032A  0AF4               	incf	___awdiv@divisor+1,f
  1268  032B                     l1193:	
  1269  032B  01C7               	clrf	___awdiv@sign
  1270  032C  0AC7               	incf	___awdiv@sign,f
  1271  032D                     l1195:	
  1272  032D  1FF6               	btfss	___awdiv@dividend+1,7
  1273  032E  2B30               	goto	u761
  1274  032F  2B31               	goto	u760
  1275  0330                     u761:	
  1276  0330  2B3A               	goto	l1201
  1277  0331                     u760:	
  1278  0331                     l1197:	
  1279  0331  09F5               	comf	___awdiv@dividend,f
  1280  0332  09F6               	comf	___awdiv@dividend+1,f
  1281  0333  0AF5               	incf	___awdiv@dividend,f
  1282  0334  1903               	skipnz
  1283  0335  0AF6               	incf	___awdiv@dividend+1,f
  1284  0336                     l1199:	
  1285  0336  3001               	movlw	1
  1286  0337  00F7               	movwf	??___awdiv
  1287  0338  0877               	movf	??___awdiv,w
  1288  0339  06C7               	xorwf	___awdiv@sign,f
  1289  033A                     l1201:	
  1290  033A  01C8               	clrf	___awdiv@quotient
  1291  033B  01C9               	clrf	___awdiv@quotient+1
  1292  033C                     l1203:	
  1293  033C  0873               	movf	___awdiv@divisor,w
  1294  033D  0474               	iorwf	___awdiv@divisor+1,w
  1295  033E  1903               	btfsc	3,2
  1296  033F  2B41               	goto	u771
  1297  0340  2B42               	goto	u770
  1298  0341                     u771:	
  1299  0341  2B79               	goto	l1223
  1300  0342                     u770:	
  1301  0342                     l1205:	
  1302  0342  01C6               	clrf	___awdiv@counter
  1303  0343  0AC6               	incf	___awdiv@counter,f
  1304  0344  2B50               	goto	l1211
  1305  0345                     l1207:	
  1306  0345  3001               	movlw	1
  1307  0346                     u785:	
  1308  0346  1003               	clrc
  1309  0347  0DF3               	rlf	___awdiv@divisor,f
  1310  0348  0DF4               	rlf	___awdiv@divisor+1,f
  1311  0349  3EFF               	addlw	-1
  1312  034A  1D03               	skipz
  1313  034B  2B46               	goto	u785
  1314  034C                     l1209:	
  1315  034C  3001               	movlw	1
  1316  034D  00F7               	movwf	??___awdiv
  1317  034E  0877               	movf	??___awdiv,w
  1318  034F  07C6               	addwf	___awdiv@counter,f
  1319  0350                     l1211:	
  1320  0350  1FF4               	btfss	___awdiv@divisor+1,7
  1321  0351  2B53               	goto	u791
  1322  0352  2B54               	goto	u790
  1323  0353                     u791:	
  1324  0353  2B45               	goto	l1207
  1325  0354                     u790:	
  1326  0354                     l1213:	
  1327  0354  3001               	movlw	1
  1328  0355                     u805:	
  1329  0355  1003               	clrc
  1330  0356  0DC8               	rlf	___awdiv@quotient,f
  1331  0357  0DC9               	rlf	___awdiv@quotient+1,f
  1332  0358  3EFF               	addlw	-1
  1333  0359  1D03               	skipz
  1334  035A  2B55               	goto	u805
  1335  035B  0874               	movf	___awdiv@divisor+1,w
  1336  035C  0276               	subwf	___awdiv@dividend+1,w
  1337  035D  1D03               	skipz
  1338  035E  2B61               	goto	u815
  1339  035F  0873               	movf	___awdiv@divisor,w
  1340  0360  0275               	subwf	___awdiv@dividend,w
  1341  0361                     u815:	
  1342  0361  1C03               	skipc
  1343  0362  2B64               	goto	u811
  1344  0363  2B65               	goto	u810
  1345  0364                     u811:	
  1346  0364  2B6C               	goto	l1219
  1347  0365                     u810:	
  1348  0365                     l1215:	
  1349  0365  0873               	movf	___awdiv@divisor,w
  1350  0366  02F5               	subwf	___awdiv@dividend,f
  1351  0367  0874               	movf	___awdiv@divisor+1,w
  1352  0368  1C03               	skipc
  1353  0369  03F6               	decf	___awdiv@dividend+1,f
  1354  036A  02F6               	subwf	___awdiv@dividend+1,f
  1355  036B                     l1217:	
  1356  036B  1448               	bsf	___awdiv@quotient,0
  1357  036C                     l1219:	
  1358  036C  3001               	movlw	1
  1359  036D                     u825:	
  1360  036D  1003               	clrc
  1361  036E  0CF4               	rrf	___awdiv@divisor+1,f
  1362  036F  0CF3               	rrf	___awdiv@divisor,f
  1363  0370  3EFF               	addlw	-1
  1364  0371  1D03               	skipz
  1365  0372  2B6D               	goto	u825
  1366  0373                     l1221:	
  1367  0373  3001               	movlw	1
  1368  0374  02C6               	subwf	___awdiv@counter,f
  1369  0375  1D03               	btfss	3,2
  1370  0376  2B78               	goto	u831
  1371  0377  2B79               	goto	u830
  1372  0378                     u831:	
  1373  0378  2B54               	goto	l1213
  1374  0379                     u830:	
  1375  0379                     l1223:	
  1376  0379  0847               	movf	___awdiv@sign,w
  1377  037A  1903               	btfsc	3,2
  1378  037B  2B7D               	goto	u841
  1379  037C  2B7E               	goto	u840
  1380  037D                     u841:	
  1381  037D  2B83               	goto	l1227
  1382  037E                     u840:	
  1383  037E                     l1225:	
  1384  037E  09C8               	comf	___awdiv@quotient,f
  1385  037F  09C9               	comf	___awdiv@quotient+1,f
  1386  0380  0AC8               	incf	___awdiv@quotient,f
  1387  0381  1903               	skipnz
  1388  0382  0AC9               	incf	___awdiv@quotient+1,f
  1389  0383                     l1227:	
  1390  0383  0849               	movf	___awdiv@quotient+1,w
  1391  0384  00F4               	movwf	?___awdiv+1
  1392  0385  0848               	movf	___awdiv@quotient,w
  1393  0386  00F3               	movwf	?___awdiv
  1394  0387                     l432:	
  1395  0387  0008               	return
  1396  0388                     __end_of___awdiv:	
  1397                           
  1398                           	psect	text4
  1399  03E3                     __ptext4:	
  1400 ;; *************** function _init_lcd *****************
  1401 ;; Defined at:
  1402 ;;		line 317 in file "main.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;                  1    wreg      void 
  1409 ;; Registers used:
  1410 ;;		wreg, status,2, status,0, pclath, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1416 ;;      Params:         0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0
  1418 ;;      Temps:          2       0       0       0       0
  1419 ;;      Totals:         2       0       0       0       0
  1420 ;;Total ram usage:        2 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    2
  1423 ;; This function calls:
  1424 ;;		_send_cmd
  1425 ;; This function is called by:
  1426 ;;		_main
  1427 ;; This function uses a non-reentrant model
  1428 ;;
  1429                           
  1430                           
  1431                           ;psect for function _init_lcd
  1432  03E3                     _init_lcd:	
  1433  03E3                     l1285:	
  1434                           ;incstack = 0
  1435                           ; Regs used in _init_lcd: [wreg+status,2+status,0+pclath+cstack]
  1436                           
  1437                           
  1438                           ;main.c: 319:     PORTEbits.RE2 = 0;
  1439  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1440  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1441  03E5  1109               	bcf	9,2	;volatile
  1442                           
  1443                           ;main.c: 320:     PORTEbits.RE1 = 0;
  1444  03E6  1089               	bcf	9,1	;volatile
  1445  03E7                     l1287:	
  1446                           
  1447                           ;main.c: 321:     _delay((unsigned long)((20)*(32000000L/4000.0)));
  1448  03E7  30D0               	movlw	208
  1449  03E8  00F7               	movwf	??_init_lcd+1
  1450  03E9  30C9               	movlw	201
  1451  03EA  00F6               	movwf	??_init_lcd
  1452  03EB                     u1507:	
  1453  03EB  0BF6               	decfsz	??_init_lcd,f
  1454  03EC  2BEB               	goto	u1507
  1455  03ED  0BF7               	decfsz	??_init_lcd+1,f
  1456  03EE  2BEB               	goto	u1507
  1457  03EF  2BF0               	nop2
  1458  03F0                     l1289:	
  1459                           
  1460                           ;main.c: 322:     PORTEbits.RE1 = 1;
  1461  03F0  1283               	bcf	3,5	;RP0=0, select bank0
  1462  03F1  1303               	bcf	3,6	;RP1=0, select bank0
  1463  03F2  1489               	bsf	9,1	;volatile
  1464  03F3                     l1291:	
  1465                           
  1466                           ;main.c: 323:     send_cmd(0x38);
  1467  03F3  3038               	movlw	56
  1468  03F4  120A  118A  24BF  120A  118A  	fcall	_send_cmd
  1469  03F9                     l1293:	
  1470                           
  1471                           ;main.c: 324:     _delay((unsigned long)((5)*(32000000L/4000.0)));
  1472  03F9  3034               	movlw	52
  1473  03FA  00F7               	movwf	??_init_lcd+1
  1474  03FB  30F1               	movlw	241
  1475  03FC  00F6               	movwf	??_init_lcd
  1476  03FD                     u1517:	
  1477  03FD  0BF6               	decfsz	??_init_lcd,f
  1478  03FE  2BFD               	goto	u1517
  1479  03FF  0BF7               	decfsz	??_init_lcd+1,f
  1480  0400  2BFD               	goto	u1517
  1481  0401  2C02               	nop2
  1482                           
  1483                           ;main.c: 325:     send_cmd(0x38);
  1484  0402  3038               	movlw	56
  1485  0403  120A  118A  24BF  120A  118A  	fcall	_send_cmd
  1486  0408                     l1295:	
  1487                           
  1488                           ;main.c: 326:     _delay((unsigned long)((1)*(32000000L/4000.0)));
  1489  0408  300B               	movlw	11
  1490  0409  00F7               	movwf	??_init_lcd+1
  1491  040A  3062               	movlw	98
  1492  040B  00F6               	movwf	??_init_lcd
  1493  040C                     u1527:	
  1494  040C  0BF6               	decfsz	??_init_lcd,f
  1495  040D  2C0C               	goto	u1527
  1496  040E  0BF7               	decfsz	??_init_lcd+1,f
  1497  040F  2C0C               	goto	u1527
  1498  0410  0000               	nop
  1499  0411                     l1297:	
  1500                           
  1501                           ;main.c: 327:     send_cmd(0x38);
  1502  0411  3038               	movlw	56
  1503  0412  120A  118A  24BF  120A  118A  	fcall	_send_cmd
  1504  0417                     l1299:	
  1505                           
  1506                           ;main.c: 328:     send_cmd(0x08);
  1507  0417  3008               	movlw	8
  1508  0418  120A  118A  24BF  120A  118A  	fcall	_send_cmd
  1509  041D                     l1301:	
  1510                           
  1511                           ;main.c: 329:     send_cmd(0x0F);
  1512  041D  300F               	movlw	15
  1513  041E  120A  118A  24BF  120A  118A  	fcall	_send_cmd
  1514  0423                     l1303:	
  1515                           
  1516                           ;main.c: 330:     send_cmd(0x01);
  1517  0423  3001               	movlw	1
  1518  0424  120A  118A  24BF  120A  118A  	fcall	_send_cmd
  1519  0429                     l1305:	
  1520                           
  1521                           ;main.c: 331:     send_cmd(0x0C);
  1522  0429  300C               	movlw	12
  1523  042A  120A  118A  24BF  120A  118A  	fcall	_send_cmd
  1524  042F                     l1307:	
  1525                           
  1526                           ;main.c: 332:     send_cmd(0x80);
  1527  042F  3080               	movlw	128
  1528  0430  120A  118A  24BF  120A  118A  	fcall	_send_cmd
  1529  0435                     l184:	
  1530  0435  0008               	return
  1531  0436                     __end_of_init_lcd:	
  1532                           
  1533                           	psect	text5
  1534  04BF                     __ptext5:	
  1535 ;; *************** function _send_cmd *****************
  1536 ;; Defined at:
  1537 ;;		line 305 in file "main.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  command         1    wreg     unsigned char 
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  command         1    5[COMMON] unsigned char 
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         0       0       0       0       0
  1552 ;;      Locals:         1       0       0       0       0
  1553 ;;      Temps:          2       0       0       0       0
  1554 ;;      Totals:         3       0       0       0       0
  1555 ;;Total ram usage:        3 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; Hardware stack levels required when called:    1
  1558 ;; This function calls:
  1559 ;;		Nothing
  1560 ;; This function is called by:
  1561 ;;		_main
  1562 ;;		_init_lcd
  1563 ;; This function uses a non-reentrant model
  1564 ;;
  1565                           
  1566                           
  1567                           ;psect for function _send_cmd
  1568  04BF                     _send_cmd:	
  1569                           
  1570                           ;incstack = 0
  1571                           ; Regs used in _send_cmd: [wreg]
  1572                           ;send_cmd@command stored from wreg
  1573  04BF  00F5               	movwf	send_cmd@command
  1574  04C0                     l1133:	
  1575                           
  1576                           ;main.c: 305: void send_cmd(char command);main.c: 306: {;main.c: 307:     PORTEbits.RE1 
      +                          = 1;
  1577  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  1578  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  1579  04C2  1489               	bsf	9,1	;volatile
  1580  04C3                     l1135:	
  1581                           
  1582                           ;main.c: 308:     PORTD = command;
  1583  04C3  0875               	movf	send_cmd@command,w
  1584  04C4  0088               	movwf	8	;volatile
  1585  04C5                     l1137:	
  1586                           
  1587                           ;main.c: 309:     PORTEbits.RE2 = 0;
  1588  04C5  1109               	bcf	9,2	;volatile
  1589                           
  1590                           ;main.c: 310:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  1591  04C6  3020               	movlw	32
  1592  04C7  00F4               	movwf	??_send_cmd+1
  1593  04C8  3029               	movlw	41
  1594  04C9  00F3               	movwf	??_send_cmd
  1595  04CA                     u1537:	
  1596  04CA  0BF3               	decfsz	??_send_cmd,f
  1597  04CB  2CCA               	goto	u1537
  1598  04CC  0BF4               	decfsz	??_send_cmd+1,f
  1599  04CD  2CCA               	goto	u1537
  1600  04CE  2CCF               	nop2
  1601  04CF                     l1139:	
  1602                           
  1603                           ;main.c: 311:     PORTEbits.RE1 = 0;
  1604  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  1605  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  1606  04D1  1089               	bcf	9,1	;volatile
  1607                           
  1608                           ;main.c: 312:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  1609  04D2  3020               	movlw	32
  1610  04D3  00F4               	movwf	??_send_cmd+1
  1611  04D4  3029               	movlw	41
  1612  04D5  00F3               	movwf	??_send_cmd
  1613  04D6                     u1547:	
  1614  04D6  0BF3               	decfsz	??_send_cmd,f
  1615  04D7  2CD6               	goto	u1547
  1616  04D8  0BF4               	decfsz	??_send_cmd+1,f
  1617  04D9  2CD6               	goto	u1547
  1618  04DA  2CDB               	nop2
  1619  04DB                     l1141:	
  1620                           
  1621                           ;main.c: 313:     PORTEbits.RE1 = 1;
  1622  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  1623  04DC  1303               	bcf	3,6	;RP1=0, select bank0
  1624  04DD  1489               	bsf	9,1	;volatile
  1625  04DE                     l181:	
  1626  04DE  0008               	return
  1627  04DF                     __end_of_send_cmd:	
  1628                           
  1629                           	psect	text6
  1630  051A                     __ptext6:	
  1631 ;; *************** function _initPic *****************
  1632 ;; Defined at:
  1633 ;;		line 248 in file "main.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         0       0       0       0       0
  1648 ;;      Locals:         0       0       0       0       0
  1649 ;;      Temps:          0       0       0       0       0
  1650 ;;      Totals:         0       0       0       0       0
  1651 ;;Total ram usage:        0 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_main
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function _initPic
  1663  051A                     _initPic:	
  1664  051A                     l1269:	
  1665                           ;incstack = 0
  1666                           ; Regs used in _initPic: [wreg+status,2]
  1667                           
  1668                           
  1669                           ;main.c: 250:     TRISD = 0x00;
  1670  051A  1683               	bsf	3,5	;RP0=1, select bank1
  1671  051B  1303               	bcf	3,6	;RP1=0, select bank1
  1672  051C  0188               	clrf	8	;volatile
  1673  051D                     l1271:	
  1674                           
  1675                           ;main.c: 251:     TRISB = 0xFF;
  1676  051D  30FF               	movlw	255
  1677  051E  0086               	movwf	6	;volatile
  1678  051F                     l1273:	
  1679                           
  1680                           ;main.c: 252:     TRISE = 0x00;
  1681  051F  0189               	clrf	9	;volatile
  1682                           
  1683                           ;main.c: 254:     INTCON = 0xA0;
  1684  0520  30A0               	movlw	160
  1685  0521  008B               	movwf	11	;volatile
  1686                           
  1687                           ;main.c: 255:     OPTION_REG = 0x04;
  1688  0522  3004               	movlw	4
  1689  0523  0081               	movwf	1	;volatile
  1690                           
  1691                           ;main.c: 256:     TMR0 = 6;
  1692  0524  3006               	movlw	6
  1693  0525  1283               	bcf	3,5	;RP0=0, select bank0
  1694  0526  1303               	bcf	3,6	;RP1=0, select bank0
  1695  0527  0081               	movwf	1	;volatile
  1696  0528                     l160:	
  1697  0528  0008               	return
  1698  0529                     __end_of_initPic:	
  1699                           
  1700                           	psect	text7
  1701  0160                     __ptext7:	
  1702 ;; *************** function _concatenate *****************
  1703 ;; Defined at:
  1704 ;;		line 216 in file "main.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  str3            1    wreg     PTR unsigned char 
  1707 ;;		 -> strToSend(48), strCtnTrasmissione(20), strHeaderTrasmissione(20), strControl(8), 
  1708 ;;  str1            2   14[BANK0 ] PTR unsigned char 
  1709 ;;		 -> STR_9(2), STR_8(4), STR_6(2), strToSend(48), 
  1710 ;;		 -> STR_4(2), STR_3(4), STR_1(2), strControl(8), 
  1711 ;;  str2            2   16[BANK0 ] PTR unsigned char 
  1712 ;;		 -> num_converter@result(4), STR_10(2), STR_7(1), STR_5(2), 
  1713 ;;		 -> strCtnTrasmissione(20), strHeaderTrasmissione(20), STR_2(1), 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  str3            1   27[BANK0 ] PTR unsigned char 
  1716 ;;		 -> strToSend(48), strCtnTrasmissione(20), strHeaderTrasmissione(20), strControl(8), 
  1717 ;;  i               2   25[BANK0 ] int 
  1718 ;;  j               2   23[BANK0 ] int 
  1719 ;; Return value:  Size  Location     Type
  1720 ;;                  1    wreg      void 
  1721 ;; Registers used:
  1722 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1723 ;; Tracked objects:
  1724 ;;		On entry : 0/0
  1725 ;;		On exit  : 0/0
  1726 ;;		Unchanged: 0/0
  1727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1728 ;;      Params:         0       4       0       0       0
  1729 ;;      Locals:         0       5       0       0       0
  1730 ;;      Temps:          0       5       0       0       0
  1731 ;;      Totals:         0      14       0       0       0
  1732 ;;Total ram usage:       14 bytes
  1733 ;; Hardware stack levels used:    2
  1734 ;; Hardware stack levels required when called:    1
  1735 ;; This function calls:
  1736 ;;		Nothing
  1737 ;; This function is called by:
  1738 ;;		_main
  1739 ;; This function uses a non-reentrant model
  1740 ;;
  1741                           
  1742                           
  1743                           ;psect for function _concatenate
  1744  0160                     _concatenate:	
  1745                           
  1746                           ;incstack = 0
  1747                           ; Regs used in _concatenate: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1748                           ;concatenate@str3 stored from wreg
  1749  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1750  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1751  0162  00E1               	movwf	concatenate@str3
  1752  0163                     l1309:	
  1753                           
  1754                           ;main.c: 216: void concatenate( char* str3, char* str1, char* str2 );main.c: 217: {;main
      +                          .c: 218:     int i = 0, j = 0;
  1755  0163  01DF               	clrf	concatenate@i
  1756  0164  01E0               	clrf	concatenate@i+1
  1757  0165  01DD               	clrf	concatenate@j
  1758  0166  01DE               	clrf	concatenate@j+1
  1759                           
  1760                           ;main.c: 219:     while (str1[i] != '\0') {
  1761  0167  2994               	goto	l145
  1762  0168                     l1311:	
  1763                           
  1764                           ;main.c: 220:         str3[j] = str1[i];
  1765  0168  085F               	movf	concatenate@i,w
  1766  0169  0754               	addwf	concatenate@str1,w
  1767  016A  00D9               	movwf	??_concatenate+1
  1768  016B  0855               	movf	concatenate@str1+1,w
  1769  016C  00D8               	movwf	??_concatenate
  1770  016D  1803               	skipnc
  1771  016E  0AD8               	incf	??_concatenate,f
  1772  016F  1FDF               	btfss	concatenate@i,7
  1773  0170  2972               	goto	u950
  1774  0171  03D8               	decf	??_concatenate,f
  1775  0172                     u950:	
  1776  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1777  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1778  0174  0858               	movf	??_concatenate,w
  1779  0175  00DA               	movwf	??_concatenate+2
  1780  0176  085A               	movf	??_concatenate+2,w
  1781  0177  00FF               	movwf	btemp+1
  1782  0178  0859               	movf	??_concatenate+1,w
  1783  0179  0084               	movwf	4
  1784  017A  120A  118A  2500  120A  118A  	fcall	stringtab
  1785  017F  00DB               	movwf	??_concatenate+3
  1786  0180  085D               	movf	concatenate@j,w
  1787  0181  0761               	addwf	concatenate@str3,w
  1788  0182  00DC               	movwf	??_concatenate+4
  1789  0183  085C               	movf	??_concatenate+4,w
  1790  0184  0084               	movwf	4
  1791  0185  085B               	movf	??_concatenate+3,w
  1792  0186  1383               	bcf	3,7	;select IRP bank0
  1793  0187  0080               	movwf	0
  1794  0188                     l1313:	
  1795                           
  1796                           ;main.c: 221:         i++;
  1797  0188  3001               	movlw	1
  1798  0189  07DF               	addwf	concatenate@i,f
  1799  018A  1803               	skipnc
  1800  018B  0AE0               	incf	concatenate@i+1,f
  1801  018C  3000               	movlw	0
  1802  018D  07E0               	addwf	concatenate@i+1,f
  1803  018E                     l1315:	
  1804                           
  1805                           ;main.c: 222:         j++;
  1806  018E  3001               	movlw	1
  1807  018F  07DD               	addwf	concatenate@j,f
  1808  0190  1803               	skipnc
  1809  0191  0ADE               	incf	concatenate@j+1,f
  1810  0192  3000               	movlw	0
  1811  0193  07DE               	addwf	concatenate@j+1,f
  1812  0194                     l145:	
  1813                           ;main.c: 223:     }
  1814                           
  1815                           
  1816                           ;main.c: 219:     while (str1[i] != '\0') {
  1817  0194  085F               	movf	concatenate@i,w
  1818  0195  0754               	addwf	concatenate@str1,w
  1819  0196  00D9               	movwf	??_concatenate+1
  1820  0197  0855               	movf	concatenate@str1+1,w
  1821  0198  00D8               	movwf	??_concatenate
  1822  0199  1803               	skipnc
  1823  019A  0AD8               	incf	??_concatenate,f
  1824  019B  1FDF               	btfss	concatenate@i,7
  1825  019C  299E               	goto	u960
  1826  019D  03D8               	decf	??_concatenate,f
  1827  019E                     u960:	
  1828  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1829  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1830  01A0  0858               	movf	??_concatenate,w
  1831  01A1  00DA               	movwf	??_concatenate+2
  1832  01A2  085A               	movf	??_concatenate+2,w
  1833  01A3  00FF               	movwf	btemp+1
  1834  01A4  0859               	movf	??_concatenate+1,w
  1835  01A5  0084               	movwf	4
  1836  01A6  120A  118A  2500  120A  118A  	fcall	stringtab
  1837  01AB  3A00               	xorlw	0
  1838  01AC  1D03               	skipz
  1839  01AD  29AF               	goto	u971
  1840  01AE  29B0               	goto	u970
  1841  01AF                     u971:	
  1842  01AF  2968               	goto	l1311
  1843  01B0                     u970:	
  1844  01B0                     l1317:	
  1845                           
  1846                           ;main.c: 225:     i = 0;
  1847  01B0  01DF               	clrf	concatenate@i
  1848  01B1  01E0               	clrf	concatenate@i+1
  1849                           
  1850                           ;main.c: 226:     while (str2[i] != '\0') {
  1851  01B2  29DF               	goto	l148
  1852  01B3                     l1319:	
  1853                           
  1854                           ;main.c: 227:         str3[j] = str2[i];
  1855  01B3  085F               	movf	concatenate@i,w
  1856  01B4  0756               	addwf	concatenate@str2,w
  1857  01B5  00D9               	movwf	??_concatenate+1
  1858  01B6  0857               	movf	concatenate@str2+1,w
  1859  01B7  00D8               	movwf	??_concatenate
  1860  01B8  1803               	skipnc
  1861  01B9  0AD8               	incf	??_concatenate,f
  1862  01BA  1FDF               	btfss	concatenate@i,7
  1863  01BB  29BD               	goto	u980
  1864  01BC  03D8               	decf	??_concatenate,f
  1865  01BD                     u980:	
  1866  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1867  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1868  01BF  0858               	movf	??_concatenate,w
  1869  01C0  00DA               	movwf	??_concatenate+2
  1870  01C1  085A               	movf	??_concatenate+2,w
  1871  01C2  00FF               	movwf	btemp+1
  1872  01C3  0859               	movf	??_concatenate+1,w
  1873  01C4  0084               	movwf	4
  1874  01C5  120A  118A  2500  120A  118A  	fcall	stringtab
  1875  01CA  00DB               	movwf	??_concatenate+3
  1876  01CB  085D               	movf	concatenate@j,w
  1877  01CC  0761               	addwf	concatenate@str3,w
  1878  01CD  00DC               	movwf	??_concatenate+4
  1879  01CE  085C               	movf	??_concatenate+4,w
  1880  01CF  0084               	movwf	4
  1881  01D0  085B               	movf	??_concatenate+3,w
  1882  01D1  1383               	bcf	3,7	;select IRP bank0
  1883  01D2  0080               	movwf	0
  1884  01D3                     l1321:	
  1885                           
  1886                           ;main.c: 228:         i++;
  1887  01D3  3001               	movlw	1
  1888  01D4  07DF               	addwf	concatenate@i,f
  1889  01D5  1803               	skipnc
  1890  01D6  0AE0               	incf	concatenate@i+1,f
  1891  01D7  3000               	movlw	0
  1892  01D8  07E0               	addwf	concatenate@i+1,f
  1893  01D9                     l1323:	
  1894                           
  1895                           ;main.c: 229:         j++;
  1896  01D9  3001               	movlw	1
  1897  01DA  07DD               	addwf	concatenate@j,f
  1898  01DB  1803               	skipnc
  1899  01DC  0ADE               	incf	concatenate@j+1,f
  1900  01DD  3000               	movlw	0
  1901  01DE  07DE               	addwf	concatenate@j+1,f
  1902  01DF                     l148:	
  1903                           ;main.c: 230:     }
  1904                           
  1905                           
  1906                           ;main.c: 226:     while (str2[i] != '\0') {
  1907  01DF  085F               	movf	concatenate@i,w
  1908  01E0  0756               	addwf	concatenate@str2,w
  1909  01E1  00D9               	movwf	??_concatenate+1
  1910  01E2  0857               	movf	concatenate@str2+1,w
  1911  01E3  00D8               	movwf	??_concatenate
  1912  01E4  1803               	skipnc
  1913  01E5  0AD8               	incf	??_concatenate,f
  1914  01E6  1FDF               	btfss	concatenate@i,7
  1915  01E7  29E9               	goto	u990
  1916  01E8  03D8               	decf	??_concatenate,f
  1917  01E9                     u990:	
  1918  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1919  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1920  01EB  0858               	movf	??_concatenate,w
  1921  01EC  00DA               	movwf	??_concatenate+2
  1922  01ED  085A               	movf	??_concatenate+2,w
  1923  01EE  00FF               	movwf	btemp+1
  1924  01EF  0859               	movf	??_concatenate+1,w
  1925  01F0  0084               	movwf	4
  1926  01F1  120A  118A  2500  120A  118A  	fcall	stringtab
  1927  01F6  3A00               	xorlw	0
  1928  01F7  1D03               	skipz
  1929  01F8  29FA               	goto	u1001
  1930  01F9  29FB               	goto	u1000
  1931  01FA                     u1001:	
  1932  01FA  29B3               	goto	l1319
  1933  01FB                     u1000:	
  1934  01FB                     l1325:	
  1935                           
  1936                           ;main.c: 231:     str3[j] = '\0';
  1937  01FB  085D               	movf	concatenate@j,w
  1938  01FC  0761               	addwf	concatenate@str3,w
  1939  01FD  00D8               	movwf	??_concatenate
  1940  01FE  0858               	movf	??_concatenate,w
  1941  01FF  0084               	movwf	4
  1942  0200  1383               	bcf	3,7	;select IRP bank0
  1943  0201  0180               	clrf	0
  1944  0202                     l151:	
  1945  0202  0008               	return
  1946  0203                     __end_of_concatenate:	
  1947                           
  1948                           	psect	text8
  1949  04DF                     __ptext8:	
  1950 ;; *************** function _Uart_send_string *****************
  1951 ;; Defined at:
  1952 ;;		line 235 in file "main.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  str             1    wreg     PTR unsigned char 
  1955 ;;		 -> strToSend(48), 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  str             1    6[COMMON] PTR unsigned char 
  1958 ;;		 -> strToSend(48), 
  1959 ;;  i               1    5[COMMON] unsigned char 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      void 
  1962 ;; Registers used:
  1963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1969 ;;      Params:         0       0       0       0       0
  1970 ;;      Locals:         2       0       0       0       0
  1971 ;;      Temps:          1       0       0       0       0
  1972 ;;      Totals:         3       0       0       0       0
  1973 ;;Total ram usage:        3 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:    2
  1976 ;; This function calls:
  1977 ;;		_UART_TxChar
  1978 ;; This function is called by:
  1979 ;;		_main
  1980 ;; This function uses a non-reentrant model
  1981 ;;
  1982                           
  1983                           
  1984                           ;psect for function _Uart_send_string
  1985  04DF                     _Uart_send_string:	
  1986                           
  1987                           ;incstack = 0
  1988                           ; Regs used in _Uart_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1989                           ;Uart_send_string@str stored from wreg
  1990  04DF  00F6               	movwf	Uart_send_string@str
  1991  04E0                     l1345:	
  1992                           
  1993                           ;main.c: 235: void Uart_send_string(char *str);main.c: 236: {;main.c: 237:     char i = 
      +                          0;
  1994  04E0  01F5               	clrf	Uart_send_string@i
  1995                           
  1996                           ;main.c: 238:     while(str[i] != '\0')
  1997  04E1  2CF1               	goto	l1351
  1998  04E2                     l1347:	
  1999                           
  2000                           ;main.c: 239:     {;main.c: 240:         UART_TxChar(str[i]);
  2001  04E2  0875               	movf	Uart_send_string@i,w
  2002  04E3  0776               	addwf	Uart_send_string@str,w
  2003  04E4  00F4               	movwf	??_Uart_send_string
  2004  04E5  0874               	movf	??_Uart_send_string,w
  2005  04E6  0084               	movwf	4
  2006  04E7  0800               	movf	0,w
  2007  04E8  120A  118A  2529  120A  118A  	fcall	_UART_TxChar
  2008  04ED                     l1349:	
  2009                           
  2010                           ;main.c: 241:         i++;
  2011  04ED  3001               	movlw	1
  2012  04EE  00F4               	movwf	??_Uart_send_string
  2013  04EF  0874               	movf	??_Uart_send_string,w
  2014  04F0  07F5               	addwf	Uart_send_string@i,f
  2015  04F1                     l1351:	
  2016                           
  2017                           ;main.c: 238:     while(str[i] != '\0')
  2018  04F1  0875               	movf	Uart_send_string@i,w
  2019  04F2  0776               	addwf	Uart_send_string@str,w
  2020  04F3  00F4               	movwf	??_Uart_send_string
  2021  04F4  0874               	movf	??_Uart_send_string,w
  2022  04F5  0084               	movwf	4
  2023  04F6  1383               	bcf	3,7	;select IRP bank0
  2024  04F7  0800               	movf	0,w
  2025  04F8  1D03               	btfss	3,2
  2026  04F9  2CFB               	goto	u1031
  2027  04FA  2CFC               	goto	u1030
  2028  04FB                     u1031:	
  2029  04FB  2CE2               	goto	l1347
  2030  04FC                     u1030:	
  2031  04FC                     l157:	
  2032  04FC  0008               	return
  2033  04FD                     __end_of_Uart_send_string:	
  2034                           
  2035                           	psect	text9
  2036  0529                     __ptext9:	
  2037 ;; *************** function _UART_TxChar *****************
  2038 ;; Defined at:
  2039 ;;		line 350 in file "main.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;  dato            1    wreg     unsigned char 
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  dato            1    3[COMMON] unsigned char 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2053 ;;      Params:         0       0       0       0       0
  2054 ;;      Locals:         1       0       0       0       0
  2055 ;;      Temps:          0       0       0       0       0
  2056 ;;      Totals:         1       0       0       0       0
  2057 ;;Total ram usage:        1 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    1
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_main
  2064 ;;		_Uart_send_string
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068                           
  2069                           ;psect for function _UART_TxChar
  2070  0529                     _UART_TxChar:	
  2071                           
  2072                           ;incstack = 0
  2073                           ; Regs used in _UART_TxChar: [wreg]
  2074                           ;UART_TxChar@dato stored from wreg
  2075  0529  00F3               	movwf	UART_TxChar@dato
  2076  052A                     l1143:	
  2077  052A                     l190:	
  2078                           ;main.c: 350: void UART_TxChar(char dato);main.c: 351: {;main.c: 352:     while (!TXIF);
  2079                           
  2080  052A  1283               	bcf	3,5	;RP0=0, select bank0
  2081  052B  1303               	bcf	3,6	;RP1=0, select bank0
  2082  052C  1E0C               	btfss	12,4	;volatile
  2083  052D  2D2F               	goto	u641
  2084  052E  2D30               	goto	u640
  2085  052F                     u641:	
  2086  052F  2D2A               	goto	l190
  2087  0530                     u640:	
  2088  0530                     l192:	
  2089                           
  2090                           ;main.c: 353:     TXIF = 0;
  2091  0530  120C               	bcf	12,4	;volatile
  2092  0531                     l1145:	
  2093                           
  2094                           ;main.c: 354:     TXREG = dato;
  2095  0531  0873               	movf	UART_TxChar@dato,w
  2096  0532  0099               	movwf	25	;volatile
  2097  0533                     l193:	
  2098  0533  0008               	return
  2099  0534                     __end_of_UART_TxChar:	
  2100                           
  2101                           	psect	text10
  2102  0485                     __ptext10:	
  2103 ;; *************** function _UART_init *****************
  2104 ;; Defined at:
  2105 ;;		line 337 in file "main.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  baudrate        2   14[BANK0 ] int 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;		None
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0, pclath, cstack
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2119 ;;      Params:         0       2       0       0       0
  2120 ;;      Locals:         0       0       0       0       0
  2121 ;;      Temps:          4       0       0       0       0
  2122 ;;      Totals:         4       2       0       0       0
  2123 ;;Total ram usage:        6 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:    2
  2126 ;; This function calls:
  2127 ;;		___aldiv
  2128 ;; This function is called by:
  2129 ;;		_main
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           
  2134                           ;psect for function _UART_init
  2135  0485                     _UART_init:	
  2136  0485                     l1521:	
  2137                           ;incstack = 0
  2138                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  2139                           
  2140                           
  2141                           ;main.c: 337: void UART_init(int baudrate);main.c: 338: {;main.c: 339:     TRISCbits.TRI
      +                          SC6 = 0;
  2142  0485  1683               	bsf	3,5	;RP0=1, select bank1
  2143  0486  1303               	bcf	3,6	;RP1=0, select bank1
  2144  0487  1307               	bcf	7,6	;volatile
  2145                           
  2146                           ;main.c: 340:     TXSTAbits.TXEN = 1;
  2147  0488  1698               	bsf	24,5	;volatile
  2148                           
  2149                           ;main.c: 341:     RCSTAbits.SPEN = 1;
  2150  0489  1283               	bcf	3,5	;RP0=0, select bank0
  2151  048A  1303               	bcf	3,6	;RP1=0, select bank0
  2152  048B  1798               	bsf	24,7	;volatile
  2153                           
  2154                           ;main.c: 342:     RCSTAbits.CREN = 1;
  2155  048C  1618               	bsf	24,4	;volatile
  2156  048D                     l1523:	
  2157                           
  2158                           ;main.c: 343:     SPBRG = (32000000L/(long)(64UL*baudrate))-1;
  2159  048D  0854               	movf	UART_init@baudrate,w
  2160  048E  00F4               	movwf	??_UART_init
  2161  048F  0855               	movf	UART_init@baudrate+1,w
  2162  0490  00F5               	movwf	??_UART_init+1
  2163  0491  3000               	movlw	0
  2164  0492  1BF5               	btfsc	??_UART_init+1,7
  2165  0493  30FF               	movlw	255
  2166  0494  00F6               	movwf	??_UART_init+2
  2167  0495  00F7               	movwf	??_UART_init+3
  2168  0496  3006               	movlw	6
  2169  0497                     u1435:	
  2170  0497  1003               	clrc
  2171  0498  0DF4               	rlf	??_UART_init,f
  2172  0499  0DF5               	rlf	??_UART_init+1,f
  2173  049A  0DF6               	rlf	??_UART_init+2,f
  2174  049B  0DF7               	rlf	??_UART_init+3,f
  2175  049C                     u1430:	
  2176  049C  3EFF               	addlw	-1
  2177  049D  1D03               	skipz
  2178  049E  2C97               	goto	u1435
  2179  049F  0877               	movf	??_UART_init+3,w
  2180  04A0  00C9               	movwf	___aldiv@divisor+3
  2181  04A1  0876               	movf	??_UART_init+2,w
  2182  04A2  00C8               	movwf	___aldiv@divisor+2
  2183  04A3  0875               	movf	??_UART_init+1,w
  2184  04A4  00C7               	movwf	___aldiv@divisor+1
  2185  04A5  0874               	movf	??_UART_init,w
  2186  04A6  00C6               	movwf	___aldiv@divisor
  2187  04A7  3001               	movlw	1
  2188  04A8  00CD               	movwf	___aldiv@dividend+3
  2189  04A9  30E8               	movlw	232
  2190  04AA  00CC               	movwf	___aldiv@dividend+2
  2191  04AB  3048               	movlw	72
  2192  04AC  00CB               	movwf	___aldiv@dividend+1
  2193  04AD  3000               	movlw	0
  2194  04AE  00CA               	movwf	___aldiv@dividend
  2195  04AF  120A  118A  2203  120A  118A  	fcall	___aldiv
  2196  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  2197  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  2198  04B6  0846               	movf	?___aldiv,w
  2199  04B7  3EFF               	addlw	255
  2200  04B8  1683               	bsf	3,5	;RP0=1, select bank1
  2201  04B9  1303               	bcf	3,6	;RP1=0, select bank1
  2202  04BA  0099               	movwf	25	;volatile
  2203  04BB                     l1525:	
  2204                           
  2205                           ;main.c: 344:     INTCONbits.GIE = 1;
  2206  04BB  178B               	bsf	11,7	;volatile
  2207  04BC                     l1527:	
  2208                           
  2209                           ;main.c: 345:     INTCONbits.PEIE = 1;
  2210  04BC  170B               	bsf	11,6	;volatile
  2211  04BD                     l1529:	
  2212                           
  2213                           ;main.c: 346:     PIE1bits.RCIE = 1;
  2214  04BD  168C               	bsf	12,5	;volatile
  2215  04BE                     l187:	
  2216  04BE  0008               	return
  2217  04BF                     __end_of_UART_init:	
  2218                           
  2219                           	psect	text11
  2220  0203                     __ptext11:	
  2221 ;; *************** function ___aldiv *****************
  2222 ;; Defined at:
  2223 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  divisor         4    0[BANK0 ] long 
  2226 ;;  dividend        4    4[BANK0 ] long 
  2227 ;; Auto vars:     Size  Location     Type
  2228 ;;  quotient        4   10[BANK0 ] long 
  2229 ;;  sign            1    9[BANK0 ] unsigned char 
  2230 ;;  counter         1    8[BANK0 ] unsigned char 
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  4    0[BANK0 ] long 
  2233 ;; Registers used:
  2234 ;;		wreg, status,2, status,0
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2240 ;;      Params:         0       8       0       0       0
  2241 ;;      Locals:         0       6       0       0       0
  2242 ;;      Temps:          1       0       0       0       0
  2243 ;;      Totals:         1      14       0       0       0
  2244 ;;Total ram usage:       15 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; Hardware stack levels required when called:    1
  2247 ;; This function calls:
  2248 ;;		Nothing
  2249 ;; This function is called by:
  2250 ;;		_UART_init
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           
  2255                           ;psect for function ___aldiv
  2256  0203                     ___aldiv:	
  2257  0203                     l1443:	
  2258                           ;incstack = 0
  2259                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2260                           
  2261  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0204  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0205  01CF               	clrf	___aldiv@sign
  2264  0206                     l1445:	
  2265  0206  1FC9               	btfss	___aldiv@divisor+3,7
  2266  0207  2A09               	goto	u1241
  2267  0208  2A0A               	goto	u1240
  2268  0209                     u1241:	
  2269  0209  2A17               	goto	l344
  2270  020A                     u1240:	
  2271  020A                     l1447:	
  2272  020A  09C6               	comf	___aldiv@divisor,f
  2273  020B  09C7               	comf	___aldiv@divisor+1,f
  2274  020C  09C8               	comf	___aldiv@divisor+2,f
  2275  020D  09C9               	comf	___aldiv@divisor+3,f
  2276  020E  0AC6               	incf	___aldiv@divisor,f
  2277  020F  1903               	skipnz
  2278  0210  0AC7               	incf	___aldiv@divisor+1,f
  2279  0211  1903               	skipnz
  2280  0212  0AC8               	incf	___aldiv@divisor+2,f
  2281  0213  1903               	skipnz
  2282  0214  0AC9               	incf	___aldiv@divisor+3,f
  2283  0215  01CF               	clrf	___aldiv@sign
  2284  0216  0ACF               	incf	___aldiv@sign,f
  2285  0217                     l344:	
  2286  0217  1FCD               	btfss	___aldiv@dividend+3,7
  2287  0218  2A1A               	goto	u1251
  2288  0219  2A1B               	goto	u1250
  2289  021A                     u1251:	
  2290  021A  2A2A               	goto	l1453
  2291  021B                     u1250:	
  2292  021B                     l1449:	
  2293  021B  09CA               	comf	___aldiv@dividend,f
  2294  021C  09CB               	comf	___aldiv@dividend+1,f
  2295  021D  09CC               	comf	___aldiv@dividend+2,f
  2296  021E  09CD               	comf	___aldiv@dividend+3,f
  2297  021F  0ACA               	incf	___aldiv@dividend,f
  2298  0220  1903               	skipnz
  2299  0221  0ACB               	incf	___aldiv@dividend+1,f
  2300  0222  1903               	skipnz
  2301  0223  0ACC               	incf	___aldiv@dividend+2,f
  2302  0224  1903               	skipnz
  2303  0225  0ACD               	incf	___aldiv@dividend+3,f
  2304  0226                     l1451:	
  2305  0226  3001               	movlw	1
  2306  0227  00F3               	movwf	??___aldiv
  2307  0228  0873               	movf	??___aldiv,w
  2308  0229  06CF               	xorwf	___aldiv@sign,f
  2309  022A                     l1453:	
  2310  022A  3000               	movlw	0
  2311  022B  00D3               	movwf	___aldiv@quotient+3
  2312  022C  3000               	movlw	0
  2313  022D  00D2               	movwf	___aldiv@quotient+2
  2314  022E  3000               	movlw	0
  2315  022F  00D1               	movwf	___aldiv@quotient+1
  2316  0230  3000               	movlw	0
  2317  0231  00D0               	movwf	___aldiv@quotient
  2318  0232                     l1455:	
  2319  0232  0849               	movf	___aldiv@divisor+3,w
  2320  0233  0448               	iorwf	___aldiv@divisor+2,w
  2321  0234  0447               	iorwf	___aldiv@divisor+1,w
  2322  0235  0446               	iorwf	___aldiv@divisor,w
  2323  0236  1903               	skipnz
  2324  0237  2A39               	goto	u1261
  2325  0238  2A3A               	goto	u1260
  2326  0239                     u1261:	
  2327  0239  2A87               	goto	l1475
  2328  023A                     u1260:	
  2329  023A                     l1457:	
  2330  023A  01CE               	clrf	___aldiv@counter
  2331  023B  0ACE               	incf	___aldiv@counter,f
  2332  023C  2A4A               	goto	l1461
  2333  023D                     l1459:	
  2334  023D  3001               	movlw	1
  2335  023E  00F3               	movwf	??___aldiv
  2336  023F                     u1275:	
  2337  023F  1003               	clrc
  2338  0240  0DC6               	rlf	___aldiv@divisor,f
  2339  0241  0DC7               	rlf	___aldiv@divisor+1,f
  2340  0242  0DC8               	rlf	___aldiv@divisor+2,f
  2341  0243  0DC9               	rlf	___aldiv@divisor+3,f
  2342  0244  0BF3               	decfsz	??___aldiv,f
  2343  0245  2A3F               	goto	u1275
  2344  0246  3001               	movlw	1
  2345  0247  00F3               	movwf	??___aldiv
  2346  0248  0873               	movf	??___aldiv,w
  2347  0249  07CE               	addwf	___aldiv@counter,f
  2348  024A                     l1461:	
  2349  024A  1FC9               	btfss	___aldiv@divisor+3,7
  2350  024B  2A4D               	goto	u1281
  2351  024C  2A4E               	goto	u1280
  2352  024D                     u1281:	
  2353  024D  2A3D               	goto	l1459
  2354  024E                     u1280:	
  2355  024E                     l1463:	
  2356  024E  3001               	movlw	1
  2357  024F  00F3               	movwf	??___aldiv
  2358  0250                     u1295:	
  2359  0250  1003               	clrc
  2360  0251  0DD0               	rlf	___aldiv@quotient,f
  2361  0252  0DD1               	rlf	___aldiv@quotient+1,f
  2362  0253  0DD2               	rlf	___aldiv@quotient+2,f
  2363  0254  0DD3               	rlf	___aldiv@quotient+3,f
  2364  0255  0BF3               	decfsz	??___aldiv,f
  2365  0256  2A50               	goto	u1295
  2366  0257                     l1465:	
  2367  0257  0849               	movf	___aldiv@divisor+3,w
  2368  0258  024D               	subwf	___aldiv@dividend+3,w
  2369  0259  1D03               	skipz
  2370  025A  2A65               	goto	u1305
  2371  025B  0848               	movf	___aldiv@divisor+2,w
  2372  025C  024C               	subwf	___aldiv@dividend+2,w
  2373  025D  1D03               	skipz
  2374  025E  2A65               	goto	u1305
  2375  025F  0847               	movf	___aldiv@divisor+1,w
  2376  0260  024B               	subwf	___aldiv@dividend+1,w
  2377  0261  1D03               	skipz
  2378  0262  2A65               	goto	u1305
  2379  0263  0846               	movf	___aldiv@divisor,w
  2380  0264  024A               	subwf	___aldiv@dividend,w
  2381  0265                     u1305:	
  2382  0265  1C03               	skipc
  2383  0266  2A68               	goto	u1301
  2384  0267  2A69               	goto	u1300
  2385  0268                     u1301:	
  2386  0268  2A78               	goto	l1471
  2387  0269                     u1300:	
  2388  0269                     l1467:	
  2389  0269  0846               	movf	___aldiv@divisor,w
  2390  026A  02CA               	subwf	___aldiv@dividend,f
  2391  026B  0847               	movf	___aldiv@divisor+1,w
  2392  026C  1C03               	skipc
  2393  026D  0F47               	incfsz	___aldiv@divisor+1,w
  2394  026E  02CB               	subwf	___aldiv@dividend+1,f
  2395  026F  0848               	movf	___aldiv@divisor+2,w
  2396  0270  1C03               	skipc
  2397  0271  0F48               	incfsz	___aldiv@divisor+2,w
  2398  0272  02CC               	subwf	___aldiv@dividend+2,f
  2399  0273  0849               	movf	___aldiv@divisor+3,w
  2400  0274  1C03               	skipc
  2401  0275  0F49               	incfsz	___aldiv@divisor+3,w
  2402  0276  02CD               	subwf	___aldiv@dividend+3,f
  2403  0277                     l1469:	
  2404  0277  1450               	bsf	___aldiv@quotient,0
  2405  0278                     l1471:	
  2406  0278  3001               	movlw	1
  2407  0279                     u1315:	
  2408  0279  1003               	clrc
  2409  027A  0CC9               	rrf	___aldiv@divisor+3,f
  2410  027B  0CC8               	rrf	___aldiv@divisor+2,f
  2411  027C  0CC7               	rrf	___aldiv@divisor+1,f
  2412  027D  0CC6               	rrf	___aldiv@divisor,f
  2413  027E  3EFF               	addlw	-1
  2414  027F  1D03               	skipz
  2415  0280  2A79               	goto	u1315
  2416  0281                     l1473:	
  2417  0281  3001               	movlw	1
  2418  0282  02CE               	subwf	___aldiv@counter,f
  2419  0283  1D03               	btfss	3,2
  2420  0284  2A86               	goto	u1321
  2421  0285  2A87               	goto	u1320
  2422  0286                     u1321:	
  2423  0286  2A4E               	goto	l1463
  2424  0287                     u1320:	
  2425  0287                     l1475:	
  2426  0287  084F               	movf	___aldiv@sign,w
  2427  0288  1903               	btfsc	3,2
  2428  0289  2A8B               	goto	u1331
  2429  028A  2A8C               	goto	u1330
  2430  028B                     u1331:	
  2431  028B  2A97               	goto	l1479
  2432  028C                     u1330:	
  2433  028C                     l1477:	
  2434  028C  09D0               	comf	___aldiv@quotient,f
  2435  028D  09D1               	comf	___aldiv@quotient+1,f
  2436  028E  09D2               	comf	___aldiv@quotient+2,f
  2437  028F  09D3               	comf	___aldiv@quotient+3,f
  2438  0290  0AD0               	incf	___aldiv@quotient,f
  2439  0291  1903               	skipnz
  2440  0292  0AD1               	incf	___aldiv@quotient+1,f
  2441  0293  1903               	skipnz
  2442  0294  0AD2               	incf	___aldiv@quotient+2,f
  2443  0295  1903               	skipnz
  2444  0296  0AD3               	incf	___aldiv@quotient+3,f
  2445  0297                     l1479:	
  2446  0297  0853               	movf	___aldiv@quotient+3,w
  2447  0298  00C9               	movwf	?___aldiv+3
  2448  0299  0852               	movf	___aldiv@quotient+2,w
  2449  029A  00C8               	movwf	?___aldiv+2
  2450  029B  0851               	movf	___aldiv@quotient+1,w
  2451  029C  00C7               	movwf	?___aldiv+1
  2452  029D  0850               	movf	___aldiv@quotient,w
  2453  029E  00C6               	movwf	?___aldiv
  2454  029F                     l354:	
  2455  029F  0008               	return
  2456  02A0                     __end_of___aldiv:	
  2457                           
  2458                           	psect	text12
  2459  02A0                     __ptext12:	
  2460 ;; *************** function _ISR *****************
  2461 ;; Defined at:
  2462 ;;		line 145 in file "main.c"
  2463 ;; Parameters:    Size  Location     Type
  2464 ;;		None
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;		None
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  1    wreg      void 
  2469 ;; Registers used:
  2470 ;;		wreg, status,2, status,0
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2476 ;;      Params:         0       0       0       0       0
  2477 ;;      Locals:         0       0       0       0       0
  2478 ;;      Temps:          3       0       0       0       0
  2479 ;;      Totals:         3       0       0       0       0
  2480 ;;Total ram usage:        3 bytes
  2481 ;; Hardware stack levels used:    1
  2482 ;; This function calls:
  2483 ;;		Nothing
  2484 ;; This function is called by:
  2485 ;;		Interrupt level 1
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           
  2490                           ;psect for function _ISR
  2491  02A0                     _ISR:	
  2492  02A0                     i1l1407:	
  2493                           
  2494                           ;main.c: 149:     if (!(PORTBbits.RB3)&& (!oldBtn1))
  2495  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  2496  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  2497  02A2  1986               	btfsc	6,3	;volatile
  2498  02A3  2AA5               	goto	u108_21
  2499  02A4  2AA6               	goto	u108_20
  2500  02A5                     u108_21:	
  2501  02A5  2AB5               	goto	i1l123
  2502  02A6                     u108_20:	
  2503  02A6                     i1l1409:	
  2504  02A6  087A               	movf	_oldBtn1,w
  2505  02A7  1D03               	btfss	3,2
  2506  02A8  2AAA               	goto	u109_21
  2507  02A9  2AAB               	goto	u109_20
  2508  02AA                     u109_21:	
  2509  02AA  2AB5               	goto	i1l123
  2510  02AB                     u109_20:	
  2511  02AB                     i1l1411:	
  2512                           
  2513                           ;main.c: 150:     {;main.c: 151:         stat1=!stat1;
  2514  02AB  0824               	movf	_stat1,w
  2515  02AC  1903               	btfsc	3,2
  2516  02AD  2AAF               	goto	u110_21
  2517  02AE  2AB1               	goto	u110_20
  2518  02AF                     u110_21:	
  2519  02AF  3001               	movlw	1
  2520  02B0  2AB2               	goto	u111_20
  2521  02B1                     u110_20:	
  2522  02B1  3000               	movlw	0
  2523  02B2                     u111_20:	
  2524  02B2  00F0               	movwf	??_ISR
  2525  02B3  0870               	movf	??_ISR,w
  2526  02B4  00A4               	movwf	_stat1
  2527  02B5                     i1l123:	
  2528                           ;main.c: 153:     }
  2529                           
  2530                           
  2531                           ;main.c: 154:     oldBtn1 = !PORTBbits.RB3;
  2532  02B5  1003               	clrc
  2533  02B6  1D86               	btfss	6,3	;volatile
  2534  02B7  1403               	setc
  2535  02B8  3000               	movlw	0
  2536  02B9  1803               	btfsc	3,0
  2537  02BA  3001               	movlw	1
  2538  02BB  00FA               	movwf	_oldBtn1
  2539  02BC                     i1l1413:	
  2540                           
  2541                           ;main.c: 156:     if (!(PORTBbits.RB4)&& (!oldBtn2))
  2542  02BC  1A06               	btfsc	6,4	;volatile
  2543  02BD  2ABF               	goto	u112_21
  2544  02BE  2AC0               	goto	u112_20
  2545  02BF                     u112_21:	
  2546  02BF  2ACF               	goto	i1l124
  2547  02C0                     u112_20:	
  2548  02C0                     i1l1415:	
  2549  02C0  0879               	movf	_oldBtn2,w
  2550  02C1  1D03               	btfss	3,2
  2551  02C2  2AC4               	goto	u113_21
  2552  02C3  2AC5               	goto	u113_20
  2553  02C4                     u113_21:	
  2554  02C4  2ACF               	goto	i1l124
  2555  02C5                     u113_20:	
  2556  02C5                     i1l1417:	
  2557                           
  2558                           ;main.c: 157:     {;main.c: 158:         stat2=!stat2;
  2559  02C5  0823               	movf	_stat2,w
  2560  02C6  1903               	btfsc	3,2
  2561  02C7  2AC9               	goto	u114_21
  2562  02C8  2ACB               	goto	u114_20
  2563  02C9                     u114_21:	
  2564  02C9  3001               	movlw	1
  2565  02CA  2ACC               	goto	u115_20
  2566  02CB                     u114_20:	
  2567  02CB  3000               	movlw	0
  2568  02CC                     u115_20:	
  2569  02CC  00F0               	movwf	??_ISR
  2570  02CD  0870               	movf	??_ISR,w
  2571  02CE  00A3               	movwf	_stat2
  2572  02CF                     i1l124:	
  2573                           ;main.c: 160:     }
  2574                           
  2575                           
  2576                           ;main.c: 161:     oldBtn2 = !PORTBbits.RB4;
  2577  02CF  1003               	clrc
  2578  02D0  1E06               	btfss	6,4	;volatile
  2579  02D1  1403               	setc
  2580  02D2  3000               	movlw	0
  2581  02D3  1803               	btfsc	3,0
  2582  02D4  3001               	movlw	1
  2583  02D5  00F9               	movwf	_oldBtn2
  2584  02D6                     i1l1419:	
  2585                           
  2586                           ;main.c: 163:     if (!(PORTBbits.RB5)&& (!oldBtn3))
  2587  02D6  1A86               	btfsc	6,5	;volatile
  2588  02D7  2AD9               	goto	u116_21
  2589  02D8  2ADA               	goto	u116_20
  2590  02D9                     u116_21:	
  2591  02D9  2AE9               	goto	i1l125
  2592  02DA                     u116_20:	
  2593  02DA                     i1l1421:	
  2594  02DA  0878               	movf	_oldBtn3,w
  2595  02DB  1D03               	btfss	3,2
  2596  02DC  2ADE               	goto	u117_21
  2597  02DD  2ADF               	goto	u117_20
  2598  02DE                     u117_21:	
  2599  02DE  2AE9               	goto	i1l125
  2600  02DF                     u117_20:	
  2601  02DF                     i1l1423:	
  2602                           
  2603                           ;main.c: 164:     {;main.c: 165:         stat3=!stat3;
  2604  02DF  0822               	movf	_stat3,w
  2605  02E0  1903               	btfsc	3,2
  2606  02E1  2AE3               	goto	u118_21
  2607  02E2  2AE5               	goto	u118_20
  2608  02E3                     u118_21:	
  2609  02E3  3001               	movlw	1
  2610  02E4  2AE6               	goto	u119_20
  2611  02E5                     u118_20:	
  2612  02E5  3000               	movlw	0
  2613  02E6                     u119_20:	
  2614  02E6  00F0               	movwf	??_ISR
  2615  02E7  0870               	movf	??_ISR,w
  2616  02E8  00A2               	movwf	_stat3
  2617  02E9                     i1l125:	
  2618                           ;main.c: 167:     }
  2619                           
  2620                           
  2621                           ;main.c: 168:     oldBtn3 = !PORTBbits.RB5;
  2622  02E9  1003               	clrc
  2623  02EA  1E86               	btfss	6,5	;volatile
  2624  02EB  1403               	setc
  2625  02EC  3000               	movlw	0
  2626  02ED  1803               	btfsc	3,0
  2627  02EE  3001               	movlw	1
  2628  02EF  00F8               	movwf	_oldBtn3
  2629  02F0                     i1l1425:	
  2630                           
  2631                           ;main.c: 172:    if(RCIF)
  2632  02F0  1E8C               	btfss	12,5	;volatile
  2633  02F1  2AF3               	goto	u120_21
  2634  02F2  2AF4               	goto	u120_20
  2635  02F3                     u120_21:	
  2636  02F3  2AFF               	goto	i1l1433
  2637  02F4                     u120_20:	
  2638  02F4                     i1l127:	
  2639  02F4  1E8C               	btfss	12,5	;volatile
  2640  02F5  2AF7               	goto	u121_21
  2641  02F6  2AF8               	goto	u121_20
  2642  02F7                     u121_21:	
  2643  02F7  2AF4               	goto	i1l127
  2644  02F8                     u121_20:	
  2645  02F8                     i1l129:	
  2646                           
  2647                           ;main.c: 175:         RCIF = 0;
  2648  02F8  128C               	bcf	12,5	;volatile
  2649  02F9                     i1l1429:	
  2650                           
  2651                           ;main.c: 176:         datoSeriale = RCREG;
  2652  02F9  081A               	movf	26,w	;volatile
  2653  02FA  00F0               	movwf	??_ISR
  2654  02FB  0870               	movf	??_ISR,w
  2655  02FC  00A8               	movwf	_datoSeriale
  2656  02FD                     i1l1431:	
  2657                           
  2658                           ;main.c: 177:         received = 1;
  2659  02FD  01A9               	clrf	_received
  2660  02FE  0AA9               	incf	_received,f
  2661  02FF                     i1l1433:	
  2662                           
  2663                           ;main.c: 180:    if (INTCON&0x04)
  2664  02FF  1D0B               	btfss	11,2	;volatile
  2665  0300  2B02               	goto	u122_21
  2666  0301  2B03               	goto	u122_20
  2667  0302                     u122_21:	
  2668  0302  2B18               	goto	i1l132
  2669  0303                     u122_20:	
  2670  0303                     i1l1435:	
  2671                           
  2672                           ;main.c: 181:     {;main.c: 182:         INTCON &= ~0x04;
  2673  0303  30FB               	movlw	251
  2674  0304  00F0               	movwf	??_ISR
  2675  0305  0870               	movf	??_ISR,w
  2676  0306  058B               	andwf	11,f	;volatile
  2677  0307                     i1l1437:	
  2678                           
  2679                           ;main.c: 183:         TMR0 = 6;
  2680  0307  3006               	movlw	6
  2681  0308  0081               	movwf	1	;volatile
  2682  0309                     i1l1439:	
  2683                           
  2684                           ;main.c: 184:         count++;
  2685  0309  3001               	movlw	1
  2686  030A  07A0               	addwf	_count,f
  2687  030B  1803               	skipnc
  2688  030C  0AA1               	incf	_count+1,f
  2689  030D  3000               	movlw	0
  2690  030E  07A1               	addwf	_count+1,f
  2691                           
  2692                           ;main.c: 185:         if (count == 100)
  2693  030F  3064               	movlw	100
  2694  0310  0620               	xorwf	_count,w
  2695  0311  0421               	iorwf	_count+1,w
  2696  0312  1D03               	btfss	3,2
  2697  0313  2B15               	goto	u123_21
  2698  0314  2B16               	goto	u123_20
  2699  0315                     u123_21:	
  2700  0315  2B18               	goto	i1l132
  2701  0316                     u123_20:	
  2702  0316                     i1l1441:	
  2703                           
  2704                           ;main.c: 186:         {;main.c: 188:             count = 0;
  2705  0316  01A0               	clrf	_count
  2706  0317  01A1               	clrf	_count+1
  2707  0318                     i1l132:	
  2708  0318  0872               	movf	??_ISR+2,w
  2709  0319  008A               	movwf	10
  2710  031A  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
  2711  031B  0083               	movwf	3
  2712  031C  0EFE               	swapf	btemp,f
  2713  031D  0E7E               	swapf	btemp,w
  2714  031E  0009               	retfie
  2715  031F                     __end_of_ISR:	
  2716  007E                     btemp	set	126	;btemp
  2717  007E                     wtemp0	set	126
  2718                           
  2719                           	psect	intentry
  2720  0004                     __pintentry:	
  2721                           ;incstack = 0
  2722                           ; Regs used in _ISR: [wreg+status,2+status,0]
  2723                           
  2724  0004                     interrupt_function:	
  2725  007E                     saved_w	set	btemp
  2726  0004  00FE               	movwf	btemp
  2727  0005  0E03               	swapf	3,w
  2728  0006  00F1               	movwf	??_ISR+1
  2729  0007  080A               	movf	10,w
  2730  0008  00F2               	movwf	??_ISR+2
  2731  0009  120A  118A  2AA0   	ljmp	_ISR


Data Sizes:
    Strings     10
    Constant    0
    Data        6
    BSS         109
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     30      74
    BANK1            80      0      68
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Uart_send_string@str	PTR unsigned char  size(1) Largest target is 48
		 -> strToSend(BANK1[48]), 

    concatenate@str2	PTR unsigned char  size(2) Largest target is 20
		 -> num_converter@result(BANK0[4]), STR_10(CODE[2]), STR_7(CODE[1]), STR_5(CODE[2]), 
		 -> strCtnTrasmissione(BANK0[20]), strHeaderTrasmissione(BANK1[20]), STR_2(CODE[1]), 

    concatenate@str1	PTR unsigned char  size(2) Largest target is 48
		 -> STR_9(CODE[2]), STR_8(CODE[4]), STR_6(CODE[2]), strToSend(BANK1[48]), 
		 -> STR_4(CODE[2]), STR_3(CODE[4]), STR_1(CODE[2]), strControl(BANK0[8]), 

    concatenate@str3	PTR unsigned char  size(1) Largest target is 48
		 -> strToSend(BANK1[48]), strCtnTrasmissione(BANK0[20]), strHeaderTrasmissione(BANK1[20]), strControl(BANK0[8]), 

    sp__num_converter	PTR unsigned char  size(1) Largest target is 4
		 -> num_converter@result(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->_UART_init
    _main->_init_lcd
    _num_converter->___awdiv
    _num_converter->___awmod
    _init_lcd->_send_cmd
    _Uart_send_string->_UART_TxChar
    _UART_init->___aldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_concatenate
    _num_converter->___awdiv
    _concatenate->_num_converter
    _UART_init->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4650
                                             28 BANK0      2     2      0
                        _UART_TxChar
                          _UART_init
                   _Uart_send_string
                        _concatenate
                            _initPic
                           _init_lcd
                      _num_converter
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _num_converter                                       10     8      2    1492
                                              4 BANK0     10     8      2
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     613
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     452
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             2     2      0      22
                                              6 COMMON     2     2      0
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _send_cmd                                             3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initPic                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _concatenate                                         14    10      4    2165
                                             14 BANK0     14    10      4
                      _num_converter (ARG)
 ---------------------------------------------------------------------------------
 (1) _Uart_send_string                                     3     3      0     178
                                              4 COMMON     3     3      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            6     4      2     746
                                              4 COMMON     4     4      0
                                             14 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_TxChar
   _UART_init
     ___aldiv
   _Uart_send_string
     _UART_TxChar
   _concatenate
     _num_converter (ARG)
       ___awdiv
       ___awmod
   _initPic
   _init_lcd
     _send_cmd
   _num_converter
     ___awdiv
     ___awmod
   _send_cmd

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      44       7       85.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1E      4A       5       92.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      99      12        0.0%
ABS                  0      0      99       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jun 22 14:40:11 2020

                        pc 0002                __CFG_CP$OFF 0000               ___awdiv@sign 0047  
                       fsr 0004                __CFG_LVP$ON 0000                        l141 0483  
                      l142 0484                        l151 0202                        l160 0528  
                      l145 0194                        l148 01DF                        l157 04FC  
                      l181 04DE                        l190 052A                        l344 0217  
                      l192 0530                        l184 0435                        l432 0387  
                      l193 0533                        l354 029F                        l187 04BE  
                      l445 03E2               __CFG_CPD$OFF 0000                        _ISR 02A0  
                      u640 0530                        u641 052F                        u810 0365  
                      u811 0364                        u805 0355                        u830 0379  
                      u750 0326                        u831 0378                        u815 0361  
                      u751 0325                        u840 037E                        u760 0331  
                      u841 037D                        u825 036D                        u761 0330  
                      u770 0342                        u771 0341                        u950 0172  
                      u790 0354                        u791 0353                        u960 019E  
                      u785 0346                        u970 01B0                        u971 01AF  
                      u980 01BD                        u990 01E9                        fsr0 0004  
                      indf 0000               ___awmod@sign 0047               __CFG_FOSC$HS 0000  
             concatenate@i 005F               concatenate@j 005D                       ?_ISR 0070  
                     l1201 033A                       l1211 0350                       l1203 033C  
                     l1141 04DB                       l1133 04C0                       l1301 041D  
                     l1221 0373                       l1213 0354                       l1205 0342  
                     l1143 052A                       l1311 0168                       l1135 04C3  
                     l1303 0423                       l1215 0365                       l1207 0345  
                     l1223 0379                       l1145 0531                       l1321 01D3  
                     l1313 0188                       l1137 04C5                       l1305 0429  
                     l1225 037E                       l1217 036B                       l1209 034C  
                     l1323 01D9                       l1315 018E                       l1139 04CF  
                     l1307 042F                       l1227 0383                       l1219 036C  
                     l1325 01FB                       l1317 01B0                       l1309 0163  
                     l1501 03AF                       l1351 04F1                       l1319 01B3  
                     l1271 051D                       l1191 0326                       l1511 03CE  
                     l1503 03B3                       l1521 0485                       l1345 04E0  
                     l1273 051F                       l1193 032B                       l1505 03B7  
                     l1513 03D4                       l1601 0159                       l1451 0226  
                     l1443 0203                       l1523 048D                       l1347 04E2  
                     l1291 03F3                       l1195 032D                       l1187 031F  
                     l1515 03D9                       l1507 03C1                       l1531 0436  
                     l1461 024A                       l1453 022A                       l1445 0206  
                     l1525 04BB                       l1349 04ED                       l1269 051A  
                     l1293 03F9                       l1285 03E3                       l1197 0331  
                     l1189 0322                       l1517 03DE                       l1509 03C7  
                     l1541 0476                       l1533 0444                       l1471 0278  
                     l1463 024E                       l1455 0232                       l1447 020A  
                     l1527 04BC                       l1295 0408                       l1287 03E7  
                     l1199 0336                       l1543 0478                       l1551 0066  
                     l1473 0281                       l1465 0257                       l1457 023A  
                     l1449 021B                       l1529 04BD                       l1297 0411  
                     l1289 03F0                       l1537 044B                       l1545 047F  
                     l1561 00C0                       l1553 0076                       l1467 0269  
                     l1459 023D                       l1475 0287                       l1299 0417  
                     l1491 0396                       l1483 0388                       l1539 0463  
                     l1571 00D8                       l1563 00C6                       l1555 0090  
                     l1477 028C                       l1469 0277                       l1493 039A  
                     l1485 038B                       l1581 00ED                       l1573 00DF  
                     l1565 00CD                       l1557 00A0                       l1549 004B  
                     l1479 0297                       l1495 039F                       l1487 038F  
                     l1591 0109                       l1583 00EE                       l1575 00E3  
                     l1567 00D1                       l1559 00B0                       l1497 03A5  
                     l1489 0394                       l1593 0123                       l1585 00F3  
                     l1577 00E4                       l1569 00D2                       l1499 03A8  
                     l1595 0133                       l1587 00F3                       l1579 00E9  
                     l1597 0143                       l1589 00F9                       l1599 0153  
                     STR_1 0514                       STR_2 0513                       STR_3 0510  
                     STR_4 0516                       STR_5 0518                       STR_6 0514  
                     STR_7 0513                       STR_8 0510                       STR_9 0516  
                     u1000 01FB                       u1001 01FA                       u1030 04FC  
                     u1031 04FB                       u1300 0269                       u1301 0268  
                     u1320 0287                       u1240 020A                       u1321 0286  
                     u1305 0265                       u1241 0209                       u1330 028C  
                     u1250 021B                       u1410 03D4                       u1331 028B  
                     u1315 0279                       u1251 021A                       u1411 03D3  
                     u1260 023A                       u1420 03D9                       u1340 038F  
                     u1261 0239                       u1421 03D8                       u1405 03C8  
                     u1341 038E                       u1430 049C                       u1350 039A  
                     u1351 0399                       u1280 024E                       u1360 03A5  
                     u1440 044A                       u1281 024D                       u1361 03A4  
                     u1441 0449                       u1450 047E                       u1275 023F  
                     u1435 0497                       u1507 03EB                       u1451 047D  
                     u1380 03B7                       u1460 00CD                       u1517 03FD  
                     u1381 03B6                       u1461 00CC                       u1390 03C1  
                     u1470 00DF                       u1295 0250                       u1527 040C  
                     u1391 03C0                       u1375 03A9                       u1471 00DE  
                     u1480 00E9                       u1537 04CA                       u1481 00E8  
                     u1490 00F3                       u1547 04D6                       u1395 03BD  
                     u1491 00F2                       _RCIF 0065                       _TMR0 0001  
                     _TXIF 0064               __CFG_WRT$OFF 0000                       _main 004B  
                     btemp 007E              __CFG_BOREN$ON 0000                       start 000C  
                    ??_ISR 0070            __end_of___aldiv 02A0                      ?_main 0070  
          __end_of___awdiv 0388                      STR_10 0518              __CFG_WDTE$OFF 0000  
          __end_of___awmod 03E3            ___awdiv@divisor 0073                      i1l123 02B5  
                    i1l132 0318                      i1l124 02CF                      i1l125 02E9  
                    i1l127 02F4                      i1l129 02F8          Uart_send_string@i 0075  
          ___awdiv@counter 0046                      _RCREG 001A                      _SPBRG 0099  
                    _PORTD 0008                      _TRISA 0085                      _TRISB 0086  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
                    _PicId 0067              __CFG_PWRTE$ON 0000         __size_of_UART_init 003A  
          __end_of_initPic 0529                      _count 0020                      _stat1 0024  
                    _stat2 0023                      _stat3 0022                      pclath 000A  
                    status 0003                      wtemp0 007E         _strCtnTrasmissione 002A  
          __initialization 000F               __end_of_main 0160                     ??_main 0062  
         num_converter@num 004A                     _ADCON0 001F                     _ADCON1 009F  
                   _ADRESH 001E                     _ADRESL 009E           ___awdiv@dividend 0075  
                   u110_20 02B1                     u110_21 02AF                     u111_20 02B2  
                   i1l1411 02AB                     i1l1421 02DA                     i1l1413 02BC  
                   i1l1431 02FD                     i1l1423 02DF                     i1l1415 02C0  
                   i1l1407 02A0                     u120_20 02F4                     u112_20 02C0  
                   i1l1441 0316                     i1l1433 02FF                     u120_21 02F3  
                   i1l1425 02F0                     i1l1417 02C5                     u112_21 02BF  
                   i1l1409 02A6                     i1l1435 0303                     i1l1419 02D6  
                   i1l1437 0307                     i1l1429 02F9                     i1l1439 0309  
                   u121_20 02F8                     u113_20 02C5                     u121_21 02F7  
                   u113_21 02C4                     u122_20 0303                     u114_20 02CB  
                   u122_21 0302                     u114_21 02C9                     u123_20 0316  
                   u115_20 02CC                     u123_21 0315                     u116_20 02DA  
                   u108_20 02A6                     u116_21 02D9                     u108_21 02A5  
                   u117_20 02DF                     u109_20 02AB                     u117_21 02DE  
                   u109_21 02AA                     u118_20 02E5                     u118_21 02E3  
                   u119_20 02E6                     _INTCON 000B      _strHeaderTrasmissione 00D0  
             ?_UART_TxChar 0070       __size_of_concatenate 00A3                  ??___aldiv 0073  
        __end_of_UART_init 04BF                  ??___awdiv 0077                  ??___awmod 0077  
         __end_of_init_lcd 0436           ___awdiv@quotient 0048            ___awmod@divisor 0073  
          ___awmod@counter 0046           __end_of_send_cmd 04DF                  ??_initPic 0073  
      num_converter@result 004F                     saved_w 007E  __size_of_Uart_send_string 001E  
  __end_of__initialization 0047             __pcstackCOMMON 0070               __pidataBANK0 053C  
          concatenate@str1 0054            concatenate@str2 0056            concatenate@str3 0061  
        num_converter@F898 0063                 __pbssBANK0 0020                 __pbssBANK1 00A0  
               __pmaintext 004B      __end_of_num_converter 0485                 __pintentry 0004  
               _contCamion 0025        Uart_send_string@str 0076                 __stringtab 0500  
                ?_init_lcd 0070                  ?_send_cmd 0070       __size_of_UART_TxChar 000B  
                  ___aldiv 0203                    ___awdiv 031F                    ___awmod 0388  
                  __ptext1 0436                    __ptext2 0388                    __ptext3 031F  
                  __ptext4 03E3                    __ptext5 04BF                    __ptext6 051A  
                  __ptext7 0160                    __ptext8 04DF                    __ptext9 0529  
             __size_of_ISR 007F                    _oldBtn1 007A                    _oldBtn2 0079  
                  _oldBtn3 0078                    _initPic 051A           ___awmod@dividend 0075  
         ___aldiv@dividend 004A                    clrloop0 0535           _Uart_send_string 04DF  
     end_of_initialization 0047                 ??_init_lcd 0076                 ??_send_cmd 0073  
                _RCSTAbits 0018           ___aldiv@quotient 0050                  _PORTBbits 0006  
                _UART_init 0485                  _PORTEbits 0009                  _TRISCbits 0087  
               _strControl 003E                  _TXSTAbits 0098              ??_concatenate 0058  
               ?_UART_init 0054        start_initialization 000F                __end_of_ISR 031F  
      __end_of_concatenate 0203                __pdataBANK0 0063                __pbssCOMMON 0078  
                ___latbits 0002              __pcstackBANK0 0046                _datoSeriale 0028  
        __size_of_init_lcd 0053                   ?___aldiv 0046          __size_of_send_cmd 0020  
                 ?___awdiv 0073                   ?___awmod 0073   __end_of_Uart_send_string 04FD  
                __pstrings 0500                ??_UART_init 0074                   ?_initPic 0070  
   __size_of_num_converter 004F            ___aldiv@divisor 0046          interrupt_function 0004  
          ___aldiv@counter 004E                  clear_ram0 0534                   _PIE1bits 008C  
              _concatenate 0160              ??_UART_TxChar 0073                   _GO_nDONE 00FA  
               _ADCON0bits 001F                __stringbase 050F                  _strToSend 00A0  
           num_converter@i 0053            UART_TxChar@dato 0073           __size_of___aldiv 009D  
      __end_of_UART_TxChar 0534           __size_of___awdiv 0069           __size_of___awmod 005B  
            _num_converter 0436         __end_of__stringtab 0510           __size_of_initPic 000F  
                 __ptext10 0485                   __ptext11 0203                   __ptext12 02A0  
                 _contAuto 0027                   _contMoto 0026                   _init_lcd 03E3  
            __size_of_main 0115                   _received 0029                   _send_cmd 04BF  
           ?_num_converter 004A                 _INTCONbits 000B            send_cmd@command 0075  
                 intlevel1 0000          UART_init@baudrate 0054                  stringcode 050A  
              _UART_TxChar 0529          ?_Uart_send_string 0070         ??_Uart_send_string 0074  
               _OPTION_REG 0081                   stringdir 050A                   stringtab 0500  
             ___aldiv@sign 004F               ?_concatenate 0054            ??_num_converter 004C  
