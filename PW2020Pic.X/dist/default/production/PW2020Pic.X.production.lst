

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Jun 22 15:31:14 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     
    24                           ; Version 2.10
    25                           ; Generated 31/07/2019 GMT
    26                           ; 
    27                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F877A Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0008                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0088                     	;# 
    98  0089                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0098                     	;# 
   107  0099                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  018C                     	;# 
   117  018D                     	;# 
   118  0000                     	;# 
   119  0001                     	;# 
   120  0002                     	;# 
   121  0003                     	;# 
   122  0004                     	;# 
   123  0005                     	;# 
   124  0006                     	;# 
   125  0007                     	;# 
   126  0008                     	;# 
   127  0009                     	;# 
   128  000A                     	;# 
   129  000B                     	;# 
   130  000C                     	;# 
   131  000D                     	;# 
   132  000E                     	;# 
   133  000E                     	;# 
   134  000F                     	;# 
   135  0010                     	;# 
   136  0011                     	;# 
   137  0012                     	;# 
   138  0013                     	;# 
   139  0014                     	;# 
   140  0015                     	;# 
   141  0015                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  001A                     	;# 
   147  001B                     	;# 
   148  001B                     	;# 
   149  001C                     	;# 
   150  001D                     	;# 
   151  001E                     	;# 
   152  001F                     	;# 
   153  0081                     	;# 
   154  0085                     	;# 
   155  0086                     	;# 
   156  0087                     	;# 
   157  0088                     	;# 
   158  0089                     	;# 
   159  008C                     	;# 
   160  008D                     	;# 
   161  008E                     	;# 
   162  0091                     	;# 
   163  0092                     	;# 
   164  0093                     	;# 
   165  0094                     	;# 
   166  0098                     	;# 
   167  0099                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  009F                     	;# 
   172  010C                     	;# 
   173  010D                     	;# 
   174  010E                     	;# 
   175  010F                     	;# 
   176  018C                     	;# 
   177  018D                     	;# 
   178                           
   179                           	psect	idataBANK0
   180  02B6                     __pidataBANK0:	
   181                           
   182                           ;initializer for num_converter@F895
   183  02B6  3420               	retlw	32
   184  02B7  3420               	retlw	32
   185  02B8  3420               	retlw	32
   186  02B9  3420               	retlw	32
   187                           
   188                           ;initializer for _PicId
   189  02BA  34A7               	retlw	167
   190  02BB  3400               	retlw	0
   191  0019                     _TXREG	set	25
   192  000B                     _INTCONbits	set	11
   193  0018                     _RCSTAbits	set	24
   194  0008                     _PORTD	set	8
   195  0009                     _PORTEbits	set	9
   196  001E                     _ADRESH	set	30
   197  001F                     _ADCON0bits	set	31
   198  001F                     _ADCON0	set	31
   199  0001                     _TMR0	set	1
   200  000B                     _INTCON	set	11
   201  001A                     _RCREG	set	26
   202  0006                     _PORTBbits	set	6
   203  0064                     _TXIF	set	100
   204  00FA                     _GO_nDONE	set	250
   205  0065                     _RCIF	set	101
   206  008C                     _PIE1bits	set	140
   207  0099                     _SPBRG	set	153
   208  0098                     _TXSTAbits	set	152
   209  0087                     _TRISCbits	set	135
   210  009E                     _ADRESL	set	158
   211  009F                     _ADCON1	set	159
   212  0085                     _TRISA	set	133
   213  0081                     _OPTION_REG	set	129
   214  0089                     _TRISE	set	137
   215  0086                     _TRISB	set	134
   216  0088                     _TRISD	set	136
   217                           
   218                           ; #config settings
   219  0000                     
   220                           	psect	cinit
   221  000F                     start_initialization:	
   222  000F                     __initialization:	
   223                           
   224                           ; Initialize objects allocated to BANK0
   225  000F  120A  118A  22B6  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   226  0014  00C3               	movwf	__pdataBANK0& (0+127)
   227  0015  120A  118A  22B7  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   228  001A  00C4               	movwf	(__pdataBANK0+1)& (0+127)
   229  001B  120A  118A  22B8  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   230  0020  00C5               	movwf	(__pdataBANK0+2)& (0+127)
   231  0021  120A  118A  22B9  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   232  0026  00C6               	movwf	(__pdataBANK0+3)& (0+127)
   233  0027  120A  118A  22BA  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   234  002C  00C7               	movwf	(__pdataBANK0+4)& (0+127)
   235  002D  120A  118A  22BB  120A  118A  	fcall	__pidataBANK0+5	;fetch initializer
   236  0032  00C8               	movwf	(__pdataBANK0+5)& (0+127)
   237                           
   238                           ; Clear objects allocated to BANK0
   239  0033  1383               	bcf	3,7	;select IRP bank0
   240  0034  3020               	movlw	low __pbssBANK0
   241  0035  0084               	movwf	4
   242  0036  3032               	movlw	low (__pbssBANK0+18)
   243  0037  120A  118A  22AE  120A  118A  	fcall	clear_ram0
   244                           
   245                           ; Clear objects allocated to COMMON
   246  003C  01F8               	clrf	__pbssCOMMON& (0+127)
   247  003D  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   248  003E  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   249  003F                     end_of_initialization:	
   250                           ;End of C runtime variable initialization code
   251                           
   252  003F                     __end_of__initialization:	
   253  003F  0183               	clrf	3
   254  0040  120A  118A  295F   	ljmp	_main	;jump to C main() function
   255                           
   256                           	psect	bssCOMMON
   257  0078                     __pbssCOMMON:	
   258  0078                     _oldBtn3:	
   259  0078                     	ds	1
   260  0079                     _oldBtn2:	
   261  0079                     	ds	1
   262  007A                     _oldBtn1:	
   263  007A                     	ds	1
   264                           
   265                           	psect	bssBANK0
   266  0020                     __pbssBANK0:	
   267  0020                     _count:	
   268  0020                     	ds	2
   269  0022                     _stat3:	
   270  0022                     	ds	1
   271  0023                     _stat2:	
   272  0023                     	ds	1
   273  0024                     _stat1:	
   274  0024                     	ds	1
   275  0025                     _contCamion:	
   276  0025                     	ds	1
   277  0026                     _contMoto:	
   278  0026                     	ds	1
   279  0027                     _contAuto:	
   280  0027                     	ds	1
   281  0028                     _datoSeriale:	
   282  0028                     	ds	1
   283  0029                     _received:	
   284  0029                     	ds	1
   285  002A                     _strToSend:	
   286  002A                     	ds	8
   287                           
   288                           	psect	dataBANK0
   289  0043                     __pdataBANK0:	
   290  0043                     num_converter@F895:	
   291  0043                     	ds	4
   292  0047                     _PicId:	
   293  0047                     	ds	2
   294                           
   295                           	psect	clrtext
   296  02AE                     clear_ram0:	
   297                           ;	Called with FSR containing the base address, and
   298                           ;	W with the last address+1
   299                           
   300  02AE  0064               	clrwdt	;clear the watchdog before getting into this loop
   301  02AF                     clrloop0:	
   302  02AF  0180               	clrf	0	;clear RAM location pointed to by FSR
   303  02B0  0A84               	incf	4,f	;increment pointer
   304  02B1  0604               	xorwf	4,w	;XOR with final address
   305  02B2  1903               	btfsc	3,2	;have we reached the end yet?
   306  02B3  3400               	retlw	0	;all done for this memory range, return
   307  02B4  0604               	xorwf	4,w	;XOR again to restore value
   308  02B5  2AAF               	goto	clrloop0	;do the next byte
   309                           
   310                           	psect	cstackCOMMON
   311  0070                     __pcstackCOMMON:	
   312  0070                     ?_initPic:	
   313  0070                     ?_init_lcd:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ?_send_cmd:	
   317                           ; 1 bytes @ 0x0
   318                           
   319  0070                     ?_Uart_send_string:	
   320                           ; 1 bytes @ 0x0
   321                           
   322  0070                     ?_UART_TxChar:	
   323                           ; 1 bytes @ 0x0
   324                           
   325  0070                     ?_main:	
   326                           ; 1 bytes @ 0x0
   327                           
   328  0070                     ?_ISR:	
   329                           ; 1 bytes @ 0x0
   330                           
   331  0070                     ??_ISR:	
   332                           ; 1 bytes @ 0x0
   333                           
   334                           
   335                           ; 1 bytes @ 0x0
   336  0070                     	ds	3
   337  0073                     ??_initPic:	
   338  0073                     ??_send_cmd:	
   339                           ; 1 bytes @ 0x3
   340                           
   341  0073                     ??_UART_TxChar:	
   342                           ; 1 bytes @ 0x3
   343                           
   344  0073                     ??___aldiv:	
   345                           ; 1 bytes @ 0x3
   346                           
   347  0073                     UART_TxChar@dato:	
   348                           ; 1 bytes @ 0x3
   349                           
   350                           
   351                           ; 1 bytes @ 0x3
   352  0073                     	ds	1
   353  0074                     ??_UART_init:	
   354  0074                     ??_Uart_send_string:	
   355                           ; 1 bytes @ 0x4
   356                           
   357                           
   358                           ; 1 bytes @ 0x4
   359  0074                     	ds	1
   360  0075                     Uart_send_string@str:	
   361  0075                     send_cmd@command:	
   362                           ; 1 bytes @ 0x5
   363                           
   364                           
   365                           ; 1 bytes @ 0x5
   366  0075                     	ds	1
   367  0076                     ??_init_lcd:	
   368  0076                     Uart_send_string@i:	
   369                           ; 1 bytes @ 0x6
   370                           
   371                           
   372                           ; 1 bytes @ 0x6
   373  0076                     	ds	2
   374                           
   375                           	psect	cstackBANK0
   376  0032                     __pcstackBANK0:	
   377  0032                     ?___aldiv:	
   378  0032                     ___aldiv@divisor:	
   379                           ; 4 bytes @ 0x0
   380                           
   381                           
   382                           ; 4 bytes @ 0x0
   383  0032                     	ds	4
   384  0036                     ___aldiv@dividend:	
   385                           
   386                           ; 4 bytes @ 0x4
   387  0036                     	ds	4
   388  003A                     ___aldiv@counter:	
   389                           
   390                           ; 1 bytes @ 0x8
   391  003A                     	ds	1
   392  003B                     ___aldiv@sign:	
   393                           
   394                           ; 1 bytes @ 0x9
   395  003B                     	ds	1
   396  003C                     ___aldiv@quotient:	
   397                           
   398                           ; 4 bytes @ 0xA
   399  003C                     	ds	4
   400  0040                     ?_UART_init:	
   401  0040                     UART_init@baudrate:	
   402                           ; 1 bytes @ 0xE
   403                           
   404                           
   405                           ; 2 bytes @ 0xE
   406  0040                     	ds	2
   407  0042                     ??_main:	
   408                           
   409                           ; 1 bytes @ 0x10
   410  0042                     	ds	1
   411                           
   412                           	psect	maintext
   413  015F                     __pmaintext:	
   414 ;;
   415 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   416 ;;
   417 ;; *************** function _main *****************
   418 ;; Defined at:
   419 ;;		line 97 in file "main.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;  stringa         1    0        unsigned char 
   424 ;; Return value:  Size  Location     Type
   425 ;;                  1    wreg      void 
   426 ;; Registers used:
   427 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   428 ;; Tracked objects:
   429 ;;		On entry : B00/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   433 ;;      Params:         0       0       0       0       0
   434 ;;      Locals:         0       1       0       0       0
   435 ;;      Temps:          0       1       0       0       0
   436 ;;      Totals:         0       2       0       0       0
   437 ;;Total ram usage:        2 bytes
   438 ;; Hardware stack levels required when called:    3
   439 ;; This function calls:
   440 ;;		_UART_TxChar
   441 ;;		_UART_init
   442 ;;		_Uart_send_string
   443 ;;		_initPic
   444 ;;		_init_lcd
   445 ;;		_send_cmd
   446 ;; This function is called by:
   447 ;;		Startup code after reset
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451                           
   452                           ;psect for function _main
   453  015F                     _main:	
   454  015F                     l1360:	
   455                           ;incstack = 0
   456                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   457                           
   458                           
   459                           ;main.c: 99:     initPic();
   460  015F  120A  118A  2294  120A  118A  	fcall	_initPic
   461                           
   462                           ;main.c: 100:     UART_init(9600);
   463  0164  3080               	movlw	128
   464  0165  1283               	bcf	3,5	;RP0=0, select bank0
   465  0166  1303               	bcf	3,6	;RP1=0, select bank0
   466  0167  00C0               	movwf	UART_init@baudrate
   467  0168  3025               	movlw	37
   468  0169  00C1               	movwf	UART_init@baudrate+1
   469  016A  120A  118A  2221  120A  118A  	fcall	_UART_init
   470                           
   471                           ;main.c: 101:     init_lcd();
   472  016F  120A  118A  21CE  120A  118A  	fcall	_init_lcd
   473                           
   474                           ;main.c: 102:     send_cmd(0x01);
   475  0174  3001               	movlw	1
   476  0175  120A  118A  225B  120A  118A  	fcall	_send_cmd
   477  017A                     l1362:	
   478                           
   479                           ;main.c: 107:     strToSend[0]=2;
   480  017A  3002               	movlw	2
   481  017B  1283               	bcf	3,5	;RP0=0, select bank0
   482  017C  1303               	bcf	3,6	;RP1=0, select bank0
   483  017D  00C2               	movwf	??_main
   484  017E  0842               	movf	??_main,w
   485  017F  00AA               	movwf	_strToSend
   486  0180                     l1364:	
   487                           
   488                           ;main.c: 108:     strToSend[1]=200;
   489  0180  30C8               	movlw	200
   490  0181  00C2               	movwf	??_main
   491  0182  0842               	movf	??_main,w
   492  0183  00AB               	movwf	_strToSend+1
   493  0184                     l1366:	
   494                           
   495                           ;main.c: 109:     strToSend[2]=5;
   496  0184  3005               	movlw	5
   497  0185  00C2               	movwf	??_main
   498  0186  0842               	movf	??_main,w
   499  0187  00AC               	movwf	_strToSend+2
   500  0188                     l1368:	
   501                           
   502                           ;main.c: 110:     strToSend[3]=0;
   503  0188  01AD               	clrf	_strToSend+3
   504  0189                     l1370:	
   505                           
   506                           ;main.c: 111:     strToSend[4]=0;
   507  0189  01AE               	clrf	_strToSend+4
   508  018A                     l1372:	
   509                           
   510                           ;main.c: 112:     strToSend[5]=35;
   511  018A  3023               	movlw	35
   512  018B  00C2               	movwf	??_main
   513  018C  0842               	movf	??_main,w
   514  018D  00AF               	movwf	_strToSend+5
   515  018E                     l1374:	
   516                           
   517                           ;main.c: 113:     Uart_send_string(strToSend);
   518  018E  302A               	movlw	(low (_strToSend| 0))& (0+255)
   519  018F  120A  118A  227B  120A  118A  	fcall	_Uart_send_string
   520  0194                     l1376:	
   521                           
   522                           ;main.c: 117:     {;main.c: 120:         if(stat1)
   523  0194  1283               	bcf	3,5	;RP0=0, select bank0
   524  0195  1303               	bcf	3,6	;RP1=0, select bank0
   525  0196  0824               	movf	_stat1,w
   526  0197  1903               	btfsc	3,2
   527  0198  299A               	goto	u1061
   528  0199  299B               	goto	u1060
   529  019A                     u1061:	
   530  019A  29A6               	goto	l1384
   531  019B                     u1060:	
   532  019B                     l1378:	
   533                           
   534                           ;main.c: 121:         {;main.c: 122:             contAuto++;
   535  019B  3001               	movlw	1
   536  019C  00C2               	movwf	??_main
   537  019D  0842               	movf	??_main,w
   538  019E  07A7               	addwf	_contAuto,f
   539  019F                     l1380:	
   540                           
   541                           ;main.c: 123:             stat1=0;
   542  019F  01A4               	clrf	_stat1
   543  01A0                     l1382:	
   544                           
   545                           ;main.c: 124:             UART_TxChar(contAuto);
   546  01A0  0827               	movf	_contAuto,w
   547  01A1  120A  118A  22A3  120A  118A  	fcall	_UART_TxChar
   548  01A6                     l1384:	
   549                           
   550                           ;main.c: 126:         if(stat2)
   551  01A6  1283               	bcf	3,5	;RP0=0, select bank0
   552  01A7  1303               	bcf	3,6	;RP1=0, select bank0
   553  01A8  0823               	movf	_stat2,w
   554  01A9  1903               	btfsc	3,2
   555  01AA  29AC               	goto	u1071
   556  01AB  29AD               	goto	u1070
   557  01AC                     u1071:	
   558  01AC  29B2               	goto	l1390
   559  01AD                     u1070:	
   560  01AD                     l1386:	
   561                           
   562                           ;main.c: 127:         {;main.c: 128:             contMoto++;
   563  01AD  3001               	movlw	1
   564  01AE  00C2               	movwf	??_main
   565  01AF  0842               	movf	??_main,w
   566  01B0  07A6               	addwf	_contMoto,f
   567  01B1                     l1388:	
   568                           
   569                           ;main.c: 129:             stat2=0;
   570  01B1  01A3               	clrf	_stat2
   571  01B2                     l1390:	
   572                           
   573                           ;main.c: 131:         if(stat3)
   574  01B2  0822               	movf	_stat3,w
   575  01B3  1903               	btfsc	3,2
   576  01B4  29B6               	goto	u1081
   577  01B5  29B7               	goto	u1080
   578  01B6                     u1081:	
   579  01B6  29BC               	goto	l1396
   580  01B7                     u1080:	
   581  01B7                     l1392:	
   582                           
   583                           ;main.c: 132:         {;main.c: 133:             contCamion++;
   584  01B7  3001               	movlw	1
   585  01B8  00C2               	movwf	??_main
   586  01B9  0842               	movf	??_main,w
   587  01BA  07A5               	addwf	_contCamion,f
   588  01BB                     l1394:	
   589                           
   590                           ;main.c: 134:             stat3=0;
   591  01BB  01A2               	clrf	_stat3
   592  01BC                     l1396:	
   593                           
   594                           ;main.c: 139:         if(received)
   595  01BC  0829               	movf	_received,w
   596  01BD  1903               	btfsc	3,2
   597  01BE  29C0               	goto	u1091
   598  01BF  29C1               	goto	u1090
   599  01C0                     u1091:	
   600  01C0  2994               	goto	l1376
   601  01C1                     u1090:	
   602  01C1                     l1398:	
   603  01C1                     l1400:	
   604                           
   605                           ;main.c: 143:             send_cmd(0x01);
   606  01C1  3001               	movlw	1
   607  01C2  120A  118A  225B  120A  118A  	fcall	_send_cmd
   608  01C7                     l1402:	
   609                           
   610                           ;main.c: 147:             received=0;
   611  01C7  1283               	bcf	3,5	;RP0=0, select bank0
   612  01C8  1303               	bcf	3,6	;RP1=0, select bank0
   613  01C9  01A9               	clrf	_received
   614  01CA  2994               	goto	l1376
   615  01CB  120A  118A  280C   	ljmp	start
   616  01CE                     __end_of_main:	
   617                           
   618                           	psect	text1
   619  01CE                     __ptext1:	
   620 ;; *************** function _init_lcd *****************
   621 ;; Defined at:
   622 ;;		line 329 in file "main.c"
   623 ;; Parameters:    Size  Location     Type
   624 ;;		None
   625 ;; Auto vars:     Size  Location     Type
   626 ;;		None
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg, status,2, status,0, pclath, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : 0/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   636 ;;      Params:         0       0       0       0       0
   637 ;;      Locals:         0       0       0       0       0
   638 ;;      Temps:          2       0       0       0       0
   639 ;;      Totals:         2       0       0       0       0
   640 ;;Total ram usage:        2 bytes
   641 ;; Hardware stack levels used:    1
   642 ;; Hardware stack levels required when called:    2
   643 ;; This function calls:
   644 ;;		_send_cmd
   645 ;; This function is called by:
   646 ;;		_main
   647 ;; This function uses a non-reentrant model
   648 ;;
   649                           
   650                           
   651                           ;psect for function _init_lcd
   652  01CE                     _init_lcd:	
   653  01CE                     l1096:	
   654                           ;incstack = 0
   655                           ; Regs used in _init_lcd: [wreg+status,2+status,0+pclath+cstack]
   656                           
   657                           
   658                           ;main.c: 331:     PORTEbits.RE2 = 0;
   659  01CE  1283               	bcf	3,5	;RP0=0, select bank0
   660  01CF  1303               	bcf	3,6	;RP1=0, select bank0
   661  01D0  1109               	bcf	9,2	;volatile
   662                           
   663                           ;main.c: 332:     PORTEbits.RE1 = 0;
   664  01D1  1089               	bcf	9,1	;volatile
   665  01D2                     l1098:	
   666                           
   667                           ;main.c: 333:     _delay((unsigned long)((20)*(32000000L/4000.0)));
   668  01D2  30D0               	movlw	208
   669  01D3  00F7               	movwf	??_init_lcd+1
   670  01D4  30C9               	movlw	201
   671  01D5  00F6               	movwf	??_init_lcd
   672  01D6                     u1107:	
   673  01D6  0BF6               	decfsz	??_init_lcd,f
   674  01D7  29D6               	goto	u1107
   675  01D8  0BF7               	decfsz	??_init_lcd+1,f
   676  01D9  29D6               	goto	u1107
   677  01DA  29DB               	nop2
   678  01DB                     l1100:	
   679                           
   680                           ;main.c: 334:     PORTEbits.RE1 = 1;
   681  01DB  1283               	bcf	3,5	;RP0=0, select bank0
   682  01DC  1303               	bcf	3,6	;RP1=0, select bank0
   683  01DD  1489               	bsf	9,1	;volatile
   684  01DE                     l1102:	
   685                           
   686                           ;main.c: 335:     send_cmd(0x38);
   687  01DE  3038               	movlw	56
   688  01DF  120A  118A  225B  120A  118A  	fcall	_send_cmd
   689  01E4                     l1104:	
   690                           
   691                           ;main.c: 336:     _delay((unsigned long)((5)*(32000000L/4000.0)));
   692  01E4  3034               	movlw	52
   693  01E5  00F7               	movwf	??_init_lcd+1
   694  01E6  30F1               	movlw	241
   695  01E7  00F6               	movwf	??_init_lcd
   696  01E8                     u1117:	
   697  01E8  0BF6               	decfsz	??_init_lcd,f
   698  01E9  29E8               	goto	u1117
   699  01EA  0BF7               	decfsz	??_init_lcd+1,f
   700  01EB  29E8               	goto	u1117
   701  01EC  29ED               	nop2
   702                           
   703                           ;main.c: 337:     send_cmd(0x38);
   704  01ED  3038               	movlw	56
   705  01EE  120A  118A  225B  120A  118A  	fcall	_send_cmd
   706  01F3                     l1106:	
   707                           
   708                           ;main.c: 338:     _delay((unsigned long)((1)*(32000000L/4000.0)));
   709  01F3  300B               	movlw	11
   710  01F4  00F7               	movwf	??_init_lcd+1
   711  01F5  3062               	movlw	98
   712  01F6  00F6               	movwf	??_init_lcd
   713  01F7                     u1127:	
   714  01F7  0BF6               	decfsz	??_init_lcd,f
   715  01F8  29F7               	goto	u1127
   716  01F9  0BF7               	decfsz	??_init_lcd+1,f
   717  01FA  29F7               	goto	u1127
   718  01FB  0000               	nop
   719  01FC                     l1108:	
   720                           
   721                           ;main.c: 339:     send_cmd(0x38);
   722  01FC  3038               	movlw	56
   723  01FD  120A  118A  225B  120A  118A  	fcall	_send_cmd
   724  0202                     l1110:	
   725                           
   726                           ;main.c: 340:     send_cmd(0x08);
   727  0202  3008               	movlw	8
   728  0203  120A  118A  225B  120A  118A  	fcall	_send_cmd
   729  0208                     l1112:	
   730                           
   731                           ;main.c: 341:     send_cmd(0x0F);
   732  0208  300F               	movlw	15
   733  0209  120A  118A  225B  120A  118A  	fcall	_send_cmd
   734  020E                     l1114:	
   735                           
   736                           ;main.c: 342:     send_cmd(0x01);
   737  020E  3001               	movlw	1
   738  020F  120A  118A  225B  120A  118A  	fcall	_send_cmd
   739  0214                     l1116:	
   740                           
   741                           ;main.c: 343:     send_cmd(0x0C);
   742  0214  300C               	movlw	12
   743  0215  120A  118A  225B  120A  118A  	fcall	_send_cmd
   744  021A                     l1118:	
   745                           
   746                           ;main.c: 344:     send_cmd(0x80);
   747  021A  3080               	movlw	128
   748  021B  120A  118A  225B  120A  118A  	fcall	_send_cmd
   749  0220                     l173:	
   750  0220  0008               	return
   751  0221                     __end_of_init_lcd:	
   752                           
   753                           	psect	text2
   754  025B                     __ptext2:	
   755 ;; *************** function _send_cmd *****************
   756 ;; Defined at:
   757 ;;		line 317 in file "main.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;  command         1    wreg     unsigned char 
   760 ;; Auto vars:     Size  Location     Type
   761 ;;  command         1    5[COMMON] unsigned char 
   762 ;; Return value:  Size  Location     Type
   763 ;;                  1    wreg      void 
   764 ;; Registers used:
   765 ;;		wreg
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   771 ;;      Params:         0       0       0       0       0
   772 ;;      Locals:         1       0       0       0       0
   773 ;;      Temps:          2       0       0       0       0
   774 ;;      Totals:         3       0       0       0       0
   775 ;;Total ram usage:        3 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; Hardware stack levels required when called:    1
   778 ;; This function calls:
   779 ;;		Nothing
   780 ;; This function is called by:
   781 ;;		_main
   782 ;;		_init_lcd
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           
   787                           ;psect for function _send_cmd
   788  025B                     _send_cmd:	
   789                           
   790                           ;incstack = 0
   791                           ; Regs used in _send_cmd: [wreg]
   792                           ;send_cmd@command stored from wreg
   793  025B  00F5               	movwf	send_cmd@command
   794  025C                     l1026:	
   795                           
   796                           ;main.c: 317: void send_cmd(char command);main.c: 318: {;main.c: 319:     PORTEbits.RE1 
      +                          = 1;
   797  025C  1283               	bcf	3,5	;RP0=0, select bank0
   798  025D  1303               	bcf	3,6	;RP1=0, select bank0
   799  025E  1489               	bsf	9,1	;volatile
   800  025F                     l1028:	
   801                           
   802                           ;main.c: 320:     PORTD = command;
   803  025F  0875               	movf	send_cmd@command,w
   804  0260  0088               	movwf	8	;volatile
   805  0261                     l1030:	
   806                           
   807                           ;main.c: 321:     PORTEbits.RE2 = 0;
   808  0261  1109               	bcf	9,2	;volatile
   809                           
   810                           ;main.c: 322:     _delay((unsigned long)((3)*(32000000L/4000.0)));
   811  0262  3020               	movlw	32
   812  0263  00F4               	movwf	??_send_cmd+1
   813  0264  3029               	movlw	41
   814  0265  00F3               	movwf	??_send_cmd
   815  0266                     u1137:	
   816  0266  0BF3               	decfsz	??_send_cmd,f
   817  0267  2A66               	goto	u1137
   818  0268  0BF4               	decfsz	??_send_cmd+1,f
   819  0269  2A66               	goto	u1137
   820  026A  2A6B               	nop2
   821  026B                     l1032:	
   822                           
   823                           ;main.c: 323:     PORTEbits.RE1 = 0;
   824  026B  1283               	bcf	3,5	;RP0=0, select bank0
   825  026C  1303               	bcf	3,6	;RP1=0, select bank0
   826  026D  1089               	bcf	9,1	;volatile
   827                           
   828                           ;main.c: 324:     _delay((unsigned long)((3)*(32000000L/4000.0)));
   829  026E  3020               	movlw	32
   830  026F  00F4               	movwf	??_send_cmd+1
   831  0270  3029               	movlw	41
   832  0271  00F3               	movwf	??_send_cmd
   833  0272                     u1147:	
   834  0272  0BF3               	decfsz	??_send_cmd,f
   835  0273  2A72               	goto	u1147
   836  0274  0BF4               	decfsz	??_send_cmd+1,f
   837  0275  2A72               	goto	u1147
   838  0276  2A77               	nop2
   839  0277                     l1034:	
   840                           
   841                           ;main.c: 325:     PORTEbits.RE1 = 1;
   842  0277  1283               	bcf	3,5	;RP0=0, select bank0
   843  0278  1303               	bcf	3,6	;RP1=0, select bank0
   844  0279  1489               	bsf	9,1	;volatile
   845  027A                     l170:	
   846  027A  0008               	return
   847  027B                     __end_of_send_cmd:	
   848                           
   849                           	psect	text3
   850  0294                     __ptext3:	
   851 ;; *************** function _initPic *****************
   852 ;; Defined at:
   853 ;;		line 260 in file "main.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, status,2
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   867 ;;      Params:         0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0
   869 ;;      Temps:          0       0       0       0       0
   870 ;;      Totals:         0       0       0       0       0
   871 ;;Total ram usage:        0 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    1
   874 ;; This function calls:
   875 ;;		Nothing
   876 ;; This function is called by:
   877 ;;		_main
   878 ;; This function uses a non-reentrant model
   879 ;;
   880                           
   881                           
   882                           ;psect for function _initPic
   883  0294                     _initPic:	
   884  0294                     l1080:	
   885                           ;incstack = 0
   886                           ; Regs used in _initPic: [wreg+status,2]
   887                           
   888                           
   889                           ;main.c: 262:     TRISD = 0x00;
   890  0294  1683               	bsf	3,5	;RP0=1, select bank1
   891  0295  1303               	bcf	3,6	;RP1=0, select bank1
   892  0296  0188               	clrf	8	;volatile
   893  0297                     l1082:	
   894                           
   895                           ;main.c: 263:     TRISB = 0xFF;
   896  0297  30FF               	movlw	255
   897  0298  0086               	movwf	6	;volatile
   898  0299                     l1084:	
   899                           
   900                           ;main.c: 264:     TRISE = 0x00;
   901  0299  0189               	clrf	9	;volatile
   902                           
   903                           ;main.c: 266:     INTCON = 0xA0;
   904  029A  30A0               	movlw	160
   905  029B  008B               	movwf	11	;volatile
   906                           
   907                           ;main.c: 267:     OPTION_REG = 0x04;
   908  029C  3004               	movlw	4
   909  029D  0081               	movwf	1	;volatile
   910                           
   911                           ;main.c: 268:     TMR0 = 6;
   912  029E  3006               	movlw	6
   913  029F  1283               	bcf	3,5	;RP0=0, select bank0
   914  02A0  1303               	bcf	3,6	;RP1=0, select bank0
   915  02A1  0081               	movwf	1	;volatile
   916  02A2                     l149:	
   917  02A2  0008               	return
   918  02A3                     __end_of_initPic:	
   919                           
   920                           	psect	text4
   921  027B                     __ptext4:	
   922 ;; *************** function _Uart_send_string *****************
   923 ;; Defined at:
   924 ;;		line 248 in file "main.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  str             1    wreg     PTR unsigned char 
   927 ;;		 -> strToSend(8), 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  str             1    5[COMMON] PTR unsigned char 
   930 ;;		 -> strToSend(8), 
   931 ;;  i               1    6[COMMON] unsigned char 
   932 ;; Return value:  Size  Location     Type
   933 ;;                  1    wreg      void 
   934 ;; Registers used:
   935 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   936 ;; Tracked objects:
   937 ;;		On entry : 0/0
   938 ;;		On exit  : 0/0
   939 ;;		Unchanged: 0/0
   940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   941 ;;      Params:         0       0       0       0       0
   942 ;;      Locals:         2       0       0       0       0
   943 ;;      Temps:          1       0       0       0       0
   944 ;;      Totals:         3       0       0       0       0
   945 ;;Total ram usage:        3 bytes
   946 ;; Hardware stack levels used:    1
   947 ;; Hardware stack levels required when called:    2
   948 ;; This function calls:
   949 ;;		_UART_TxChar
   950 ;; This function is called by:
   951 ;;		_main
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           
   956                           ;psect for function _Uart_send_string
   957  027B                     _Uart_send_string:	
   958                           
   959                           ;incstack = 0
   960                           ; Regs used in _Uart_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   961                           ;Uart_send_string@str stored from wreg
   962  027B  00F5               	movwf	Uart_send_string@str
   963  027C                     l1120:	
   964                           
   965                           ;main.c: 248: void Uart_send_string(char *str);main.c: 249: {;main.c: 250:     char i;;m
      +                          ain.c: 251:     for(i=0;i<6;i++)
   966  027C  01F6               	clrf	Uart_send_string@i
   967  027D                     l1126:	
   968                           
   969                           ;main.c: 252:     {;main.c: 253:         UART_TxChar(*(str+i));
   970  027D  0876               	movf	Uart_send_string@i,w
   971  027E  0775               	addwf	Uart_send_string@str,w
   972  027F  00F4               	movwf	??_Uart_send_string
   973  0280  0874               	movf	??_Uart_send_string,w
   974  0281  0084               	movwf	4
   975  0282  1383               	bcf	3,7	;select IRP bank0
   976  0283  0800               	movf	0,w
   977  0284  120A  118A  22A3  120A  118A  	fcall	_UART_TxChar
   978  0289                     l1128:	
   979                           
   980                           ;main.c: 254:     }
   981  0289  3001               	movlw	1
   982  028A  00F4               	movwf	??_Uart_send_string
   983  028B  0874               	movf	??_Uart_send_string,w
   984  028C  07F6               	addwf	Uart_send_string@i,f
   985  028D                     l1130:	
   986  028D  3006               	movlw	6
   987  028E  0276               	subwf	Uart_send_string@i,w
   988  028F  1C03               	skipc
   989  0290  2A92               	goto	u531
   990  0291  2A93               	goto	u530
   991  0292                     u531:	
   992  0292  2A7D               	goto	l1126
   993  0293                     u530:	
   994  0293                     l146:	
   995  0293  0008               	return
   996  0294                     __end_of_Uart_send_string:	
   997                           
   998                           	psect	text5
   999  02A3                     __ptext5:	
  1000 ;; *************** function _UART_TxChar *****************
  1001 ;; Defined at:
  1002 ;;		line 362 in file "main.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  dato            1    wreg     unsigned char 
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;  dato            1    3[COMMON] unsigned char 
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1016 ;;      Params:         0       0       0       0       0
  1017 ;;      Locals:         1       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0
  1019 ;;      Totals:         1       0       0       0       0
  1020 ;;Total ram usage:        1 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    1
  1023 ;; This function calls:
  1024 ;;		Nothing
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;;		_Uart_send_string
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function _UART_TxChar
  1033  02A3                     _UART_TxChar:	
  1034                           
  1035                           ;incstack = 0
  1036                           ; Regs used in _UART_TxChar: [wreg]
  1037                           ;UART_TxChar@dato stored from wreg
  1038  02A3  00F3               	movwf	UART_TxChar@dato
  1039  02A4                     l1036:	
  1040  02A4                     l179:	
  1041                           ;main.c: 362: void UART_TxChar(char dato);main.c: 363: {;main.c: 364:     while (!TXIF);
  1042                           
  1043  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1044  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  1045  02A6  1E0C               	btfss	12,4	;volatile
  1046  02A7  2AA9               	goto	u411
  1047  02A8  2AAA               	goto	u410
  1048  02A9                     u411:	
  1049  02A9  2AA4               	goto	l179
  1050  02AA                     u410:	
  1051  02AA                     l181:	
  1052                           
  1053                           ;main.c: 365:     TXIF = 0;
  1054  02AA  120C               	bcf	12,4	;volatile
  1055  02AB                     l1038:	
  1056                           
  1057                           ;main.c: 366:     TXREG = dato;
  1058  02AB  0873               	movf	UART_TxChar@dato,w
  1059  02AC  0099               	movwf	25	;volatile
  1060  02AD                     l182:	
  1061  02AD  0008               	return
  1062  02AE                     __end_of_UART_TxChar:	
  1063                           
  1064                           	psect	text6
  1065  0221                     __ptext6:	
  1066 ;; *************** function _UART_init *****************
  1067 ;; Defined at:
  1068 ;;		line 349 in file "main.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  baudrate        2   14[BANK0 ] int 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;		None
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg, status,2, status,0, pclath, cstack
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1082 ;;      Params:         0       2       0       0       0
  1083 ;;      Locals:         0       0       0       0       0
  1084 ;;      Temps:          4       0       0       0       0
  1085 ;;      Totals:         4       2       0       0       0
  1086 ;;Total ram usage:        6 bytes
  1087 ;; Hardware stack levels used:    1
  1088 ;; Hardware stack levels required when called:    2
  1089 ;; This function calls:
  1090 ;;		___aldiv
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           
  1097                           ;psect for function _UART_init
  1098  0221                     _UART_init:	
  1099  0221                     l1350:	
  1100                           ;incstack = 0
  1101                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  1102                           
  1103                           
  1104                           ;main.c: 349: void UART_init(int baudrate);main.c: 350: {;main.c: 351:     TRISCbits.TRI
      +                          SC6 = 0;
  1105  0221  1683               	bsf	3,5	;RP0=1, select bank1
  1106  0222  1303               	bcf	3,6	;RP1=0, select bank1
  1107  0223  1307               	bcf	7,6	;volatile
  1108                           
  1109                           ;main.c: 352:     TXSTAbits.TXEN = 1;
  1110  0224  1698               	bsf	24,5	;volatile
  1111                           
  1112                           ;main.c: 353:     RCSTAbits.SPEN = 1;
  1113  0225  1283               	bcf	3,5	;RP0=0, select bank0
  1114  0226  1303               	bcf	3,6	;RP1=0, select bank0
  1115  0227  1798               	bsf	24,7	;volatile
  1116                           
  1117                           ;main.c: 354:     RCSTAbits.CREN = 1;
  1118  0228  1618               	bsf	24,4	;volatile
  1119  0229                     l1352:	
  1120                           
  1121                           ;main.c: 355:     SPBRG = (32000000L/(long)(64UL*baudrate))-1;
  1122  0229  0840               	movf	UART_init@baudrate,w
  1123  022A  00F4               	movwf	??_UART_init
  1124  022B  0841               	movf	UART_init@baudrate+1,w
  1125  022C  00F5               	movwf	??_UART_init+1
  1126  022D  3000               	movlw	0
  1127  022E  1BF5               	btfsc	??_UART_init+1,7
  1128  022F  30FF               	movlw	255
  1129  0230  00F6               	movwf	??_UART_init+2
  1130  0231  00F7               	movwf	??_UART_init+3
  1131  0232  3006               	movlw	6
  1132  0233                     u1055:	
  1133  0233  1003               	clrc
  1134  0234  0DF4               	rlf	??_UART_init,f
  1135  0235  0DF5               	rlf	??_UART_init+1,f
  1136  0236  0DF6               	rlf	??_UART_init+2,f
  1137  0237  0DF7               	rlf	??_UART_init+3,f
  1138  0238                     u1050:	
  1139  0238  3EFF               	addlw	-1
  1140  0239  1D03               	skipz
  1141  023A  2A33               	goto	u1055
  1142  023B  0877               	movf	??_UART_init+3,w
  1143  023C  00B5               	movwf	___aldiv@divisor+3
  1144  023D  0876               	movf	??_UART_init+2,w
  1145  023E  00B4               	movwf	___aldiv@divisor+2
  1146  023F  0875               	movf	??_UART_init+1,w
  1147  0240  00B3               	movwf	___aldiv@divisor+1
  1148  0241  0874               	movf	??_UART_init,w
  1149  0242  00B2               	movwf	___aldiv@divisor
  1150  0243  3001               	movlw	1
  1151  0244  00B9               	movwf	___aldiv@dividend+3
  1152  0245  30E8               	movlw	232
  1153  0246  00B8               	movwf	___aldiv@dividend+2
  1154  0247  3048               	movlw	72
  1155  0248  00B7               	movwf	___aldiv@dividend+1
  1156  0249  3000               	movlw	0
  1157  024A  00B6               	movwf	___aldiv@dividend
  1158  024B  120A  118A  2043  120A  118A  	fcall	___aldiv
  1159  0250  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0251  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0252  0832               	movf	?___aldiv,w
  1162  0253  3EFF               	addlw	255
  1163  0254  1683               	bsf	3,5	;RP0=1, select bank1
  1164  0255  1303               	bcf	3,6	;RP1=0, select bank1
  1165  0256  0099               	movwf	25	;volatile
  1166  0257                     l1354:	
  1167                           
  1168                           ;main.c: 356:     INTCONbits.GIE = 1;
  1169  0257  178B               	bsf	11,7	;volatile
  1170  0258                     l1356:	
  1171                           
  1172                           ;main.c: 357:     INTCONbits.PEIE = 1;
  1173  0258  170B               	bsf	11,6	;volatile
  1174  0259                     l1358:	
  1175                           
  1176                           ;main.c: 358:     PIE1bits.RCIE = 1;
  1177  0259  168C               	bsf	12,5	;volatile
  1178  025A                     l176:	
  1179  025A  0008               	return
  1180  025B                     __end_of_UART_init:	
  1181                           
  1182                           	psect	text7
  1183  0043                     __ptext7:	
  1184 ;; *************** function ___aldiv *****************
  1185 ;; Defined at:
  1186 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;  divisor         4    0[BANK0 ] long 
  1189 ;;  dividend        4    4[BANK0 ] long 
  1190 ;; Auto vars:     Size  Location     Type
  1191 ;;  quotient        4   10[BANK0 ] long 
  1192 ;;  sign            1    9[BANK0 ] unsigned char 
  1193 ;;  counter         1    8[BANK0 ] unsigned char 
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  4    0[BANK0 ] long 
  1196 ;; Registers used:
  1197 ;;		wreg, status,2, status,0
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1203 ;;      Params:         0       8       0       0       0
  1204 ;;      Locals:         0       6       0       0       0
  1205 ;;      Temps:          1       0       0       0       0
  1206 ;;      Totals:         1      14       0       0       0
  1207 ;;Total ram usage:       15 bytes
  1208 ;; Hardware stack levels used:    1
  1209 ;; Hardware stack levels required when called:    1
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_UART_init
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           
  1218                           ;psect for function ___aldiv
  1219  0043                     ___aldiv:	
  1220  0043                     l1310:	
  1221                           ;incstack = 0
  1222                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1223                           
  1224  0043  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0044  1303               	bcf	3,6	;RP1=0, select bank0
  1226  0045  01BB               	clrf	___aldiv@sign
  1227  0046                     l1312:	
  1228  0046  1FB5               	btfss	___aldiv@divisor+3,7
  1229  0047  2849               	goto	u951
  1230  0048  284A               	goto	u950
  1231  0049                     u951:	
  1232  0049  2857               	goto	l333
  1233  004A                     u950:	
  1234  004A                     l1314:	
  1235  004A  09B2               	comf	___aldiv@divisor,f
  1236  004B  09B3               	comf	___aldiv@divisor+1,f
  1237  004C  09B4               	comf	___aldiv@divisor+2,f
  1238  004D  09B5               	comf	___aldiv@divisor+3,f
  1239  004E  0AB2               	incf	___aldiv@divisor,f
  1240  004F  1903               	skipnz
  1241  0050  0AB3               	incf	___aldiv@divisor+1,f
  1242  0051  1903               	skipnz
  1243  0052  0AB4               	incf	___aldiv@divisor+2,f
  1244  0053  1903               	skipnz
  1245  0054  0AB5               	incf	___aldiv@divisor+3,f
  1246  0055  01BB               	clrf	___aldiv@sign
  1247  0056  0ABB               	incf	___aldiv@sign,f
  1248  0057                     l333:	
  1249  0057  1FB9               	btfss	___aldiv@dividend+3,7
  1250  0058  285A               	goto	u961
  1251  0059  285B               	goto	u960
  1252  005A                     u961:	
  1253  005A  286A               	goto	l1320
  1254  005B                     u960:	
  1255  005B                     l1316:	
  1256  005B  09B6               	comf	___aldiv@dividend,f
  1257  005C  09B7               	comf	___aldiv@dividend+1,f
  1258  005D  09B8               	comf	___aldiv@dividend+2,f
  1259  005E  09B9               	comf	___aldiv@dividend+3,f
  1260  005F  0AB6               	incf	___aldiv@dividend,f
  1261  0060  1903               	skipnz
  1262  0061  0AB7               	incf	___aldiv@dividend+1,f
  1263  0062  1903               	skipnz
  1264  0063  0AB8               	incf	___aldiv@dividend+2,f
  1265  0064  1903               	skipnz
  1266  0065  0AB9               	incf	___aldiv@dividend+3,f
  1267  0066                     l1318:	
  1268  0066  3001               	movlw	1
  1269  0067  00F3               	movwf	??___aldiv
  1270  0068  0873               	movf	??___aldiv,w
  1271  0069  06BB               	xorwf	___aldiv@sign,f
  1272  006A                     l1320:	
  1273  006A  3000               	movlw	0
  1274  006B  00BF               	movwf	___aldiv@quotient+3
  1275  006C  3000               	movlw	0
  1276  006D  00BE               	movwf	___aldiv@quotient+2
  1277  006E  3000               	movlw	0
  1278  006F  00BD               	movwf	___aldiv@quotient+1
  1279  0070  3000               	movlw	0
  1280  0071  00BC               	movwf	___aldiv@quotient
  1281  0072                     l1322:	
  1282  0072  0835               	movf	___aldiv@divisor+3,w
  1283  0073  0434               	iorwf	___aldiv@divisor+2,w
  1284  0074  0433               	iorwf	___aldiv@divisor+1,w
  1285  0075  0432               	iorwf	___aldiv@divisor,w
  1286  0076  1903               	skipnz
  1287  0077  2879               	goto	u971
  1288  0078  287A               	goto	u970
  1289  0079                     u971:	
  1290  0079  28C7               	goto	l1342
  1291  007A                     u970:	
  1292  007A                     l1324:	
  1293  007A  01BA               	clrf	___aldiv@counter
  1294  007B  0ABA               	incf	___aldiv@counter,f
  1295  007C  288A               	goto	l1328
  1296  007D                     l1326:	
  1297  007D  3001               	movlw	1
  1298  007E  00F3               	movwf	??___aldiv
  1299  007F                     u985:	
  1300  007F  1003               	clrc
  1301  0080  0DB2               	rlf	___aldiv@divisor,f
  1302  0081  0DB3               	rlf	___aldiv@divisor+1,f
  1303  0082  0DB4               	rlf	___aldiv@divisor+2,f
  1304  0083  0DB5               	rlf	___aldiv@divisor+3,f
  1305  0084  0BF3               	decfsz	??___aldiv,f
  1306  0085  287F               	goto	u985
  1307  0086  3001               	movlw	1
  1308  0087  00F3               	movwf	??___aldiv
  1309  0088  0873               	movf	??___aldiv,w
  1310  0089  07BA               	addwf	___aldiv@counter,f
  1311  008A                     l1328:	
  1312  008A  1FB5               	btfss	___aldiv@divisor+3,7
  1313  008B  288D               	goto	u991
  1314  008C  288E               	goto	u990
  1315  008D                     u991:	
  1316  008D  287D               	goto	l1326
  1317  008E                     u990:	
  1318  008E                     l1330:	
  1319  008E  3001               	movlw	1
  1320  008F  00F3               	movwf	??___aldiv
  1321  0090                     u1005:	
  1322  0090  1003               	clrc
  1323  0091  0DBC               	rlf	___aldiv@quotient,f
  1324  0092  0DBD               	rlf	___aldiv@quotient+1,f
  1325  0093  0DBE               	rlf	___aldiv@quotient+2,f
  1326  0094  0DBF               	rlf	___aldiv@quotient+3,f
  1327  0095  0BF3               	decfsz	??___aldiv,f
  1328  0096  2890               	goto	u1005
  1329  0097                     l1332:	
  1330  0097  0835               	movf	___aldiv@divisor+3,w
  1331  0098  0239               	subwf	___aldiv@dividend+3,w
  1332  0099  1D03               	skipz
  1333  009A  28A5               	goto	u1015
  1334  009B  0834               	movf	___aldiv@divisor+2,w
  1335  009C  0238               	subwf	___aldiv@dividend+2,w
  1336  009D  1D03               	skipz
  1337  009E  28A5               	goto	u1015
  1338  009F  0833               	movf	___aldiv@divisor+1,w
  1339  00A0  0237               	subwf	___aldiv@dividend+1,w
  1340  00A1  1D03               	skipz
  1341  00A2  28A5               	goto	u1015
  1342  00A3  0832               	movf	___aldiv@divisor,w
  1343  00A4  0236               	subwf	___aldiv@dividend,w
  1344  00A5                     u1015:	
  1345  00A5  1C03               	skipc
  1346  00A6  28A8               	goto	u1011
  1347  00A7  28A9               	goto	u1010
  1348  00A8                     u1011:	
  1349  00A8  28B8               	goto	l1338
  1350  00A9                     u1010:	
  1351  00A9                     l1334:	
  1352  00A9  0832               	movf	___aldiv@divisor,w
  1353  00AA  02B6               	subwf	___aldiv@dividend,f
  1354  00AB  0833               	movf	___aldiv@divisor+1,w
  1355  00AC  1C03               	skipc
  1356  00AD  0F33               	incfsz	___aldiv@divisor+1,w
  1357  00AE  02B7               	subwf	___aldiv@dividend+1,f
  1358  00AF  0834               	movf	___aldiv@divisor+2,w
  1359  00B0  1C03               	skipc
  1360  00B1  0F34               	incfsz	___aldiv@divisor+2,w
  1361  00B2  02B8               	subwf	___aldiv@dividend+2,f
  1362  00B3  0835               	movf	___aldiv@divisor+3,w
  1363  00B4  1C03               	skipc
  1364  00B5  0F35               	incfsz	___aldiv@divisor+3,w
  1365  00B6  02B9               	subwf	___aldiv@dividend+3,f
  1366  00B7                     l1336:	
  1367  00B7  143C               	bsf	___aldiv@quotient,0
  1368  00B8                     l1338:	
  1369  00B8  3001               	movlw	1
  1370  00B9                     u1025:	
  1371  00B9  1003               	clrc
  1372  00BA  0CB5               	rrf	___aldiv@divisor+3,f
  1373  00BB  0CB4               	rrf	___aldiv@divisor+2,f
  1374  00BC  0CB3               	rrf	___aldiv@divisor+1,f
  1375  00BD  0CB2               	rrf	___aldiv@divisor,f
  1376  00BE  3EFF               	addlw	-1
  1377  00BF  1D03               	skipz
  1378  00C0  28B9               	goto	u1025
  1379  00C1                     l1340:	
  1380  00C1  3001               	movlw	1
  1381  00C2  02BA               	subwf	___aldiv@counter,f
  1382  00C3  1D03               	btfss	3,2
  1383  00C4  28C6               	goto	u1031
  1384  00C5  28C7               	goto	u1030
  1385  00C6                     u1031:	
  1386  00C6  288E               	goto	l1330
  1387  00C7                     u1030:	
  1388  00C7                     l1342:	
  1389  00C7  083B               	movf	___aldiv@sign,w
  1390  00C8  1903               	btfsc	3,2
  1391  00C9  28CB               	goto	u1041
  1392  00CA  28CC               	goto	u1040
  1393  00CB                     u1041:	
  1394  00CB  28D7               	goto	l1346
  1395  00CC                     u1040:	
  1396  00CC                     l1344:	
  1397  00CC  09BC               	comf	___aldiv@quotient,f
  1398  00CD  09BD               	comf	___aldiv@quotient+1,f
  1399  00CE  09BE               	comf	___aldiv@quotient+2,f
  1400  00CF  09BF               	comf	___aldiv@quotient+3,f
  1401  00D0  0ABC               	incf	___aldiv@quotient,f
  1402  00D1  1903               	skipnz
  1403  00D2  0ABD               	incf	___aldiv@quotient+1,f
  1404  00D3  1903               	skipnz
  1405  00D4  0ABE               	incf	___aldiv@quotient+2,f
  1406  00D5  1903               	skipnz
  1407  00D6  0ABF               	incf	___aldiv@quotient+3,f
  1408  00D7                     l1346:	
  1409  00D7  083F               	movf	___aldiv@quotient+3,w
  1410  00D8  00B5               	movwf	?___aldiv+3
  1411  00D9  083E               	movf	___aldiv@quotient+2,w
  1412  00DA  00B4               	movwf	?___aldiv+2
  1413  00DB  083D               	movf	___aldiv@quotient+1,w
  1414  00DC  00B3               	movwf	?___aldiv+1
  1415  00DD  083C               	movf	___aldiv@quotient,w
  1416  00DE  00B2               	movwf	?___aldiv
  1417  00DF                     l343:	
  1418  00DF  0008               	return
  1419  00E0                     __end_of___aldiv:	
  1420                           
  1421                           	psect	text8
  1422  00E0                     __ptext8:	
  1423 ;; *************** function _ISR *****************
  1424 ;; Defined at:
  1425 ;;		line 157 in file "main.c"
  1426 ;; Parameters:    Size  Location     Type
  1427 ;;		None
  1428 ;; Auto vars:     Size  Location     Type
  1429 ;;		None
  1430 ;; Return value:  Size  Location     Type
  1431 ;;                  1    wreg      void 
  1432 ;; Registers used:
  1433 ;;		wreg, status,2, status,0
  1434 ;; Tracked objects:
  1435 ;;		On entry : 0/0
  1436 ;;		On exit  : 0/0
  1437 ;;		Unchanged: 0/0
  1438 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1439 ;;      Params:         0       0       0       0       0
  1440 ;;      Locals:         0       0       0       0       0
  1441 ;;      Temps:          3       0       0       0       0
  1442 ;;      Totals:         3       0       0       0       0
  1443 ;;Total ram usage:        3 bytes
  1444 ;; Hardware stack levels used:    1
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		Interrupt level 1
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           
  1453                           ;psect for function _ISR
  1454  00E0                     _ISR:	
  1455  00E0                     i1l1176:	
  1456                           
  1457                           ;main.c: 161:     if (!(PORTBbits.RB3)&& (!oldBtn1))
  1458  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1459  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1460  00E2  1986               	btfsc	6,3	;volatile
  1461  00E3  28E5               	goto	u58_21
  1462  00E4  28E6               	goto	u58_20
  1463  00E5                     u58_21:	
  1464  00E5  28F5               	goto	i1l113
  1465  00E6                     u58_20:	
  1466  00E6                     i1l1178:	
  1467  00E6  087A               	movf	_oldBtn1,w
  1468  00E7  1D03               	btfss	3,2
  1469  00E8  28EA               	goto	u59_21
  1470  00E9  28EB               	goto	u59_20
  1471  00EA                     u59_21:	
  1472  00EA  28F5               	goto	i1l113
  1473  00EB                     u59_20:	
  1474  00EB                     i1l1180:	
  1475                           
  1476                           ;main.c: 162:     {;main.c: 163:         stat1=!stat1;
  1477  00EB  0824               	movf	_stat1,w
  1478  00EC  1903               	btfsc	3,2
  1479  00ED  28EF               	goto	u60_21
  1480  00EE  28F1               	goto	u60_20
  1481  00EF                     u60_21:	
  1482  00EF  3001               	movlw	1
  1483  00F0  28F2               	goto	u61_20
  1484  00F1                     u60_20:	
  1485  00F1  3000               	movlw	0
  1486  00F2                     u61_20:	
  1487  00F2  00F0               	movwf	??_ISR
  1488  00F3  0870               	movf	??_ISR,w
  1489  00F4  00A4               	movwf	_stat1
  1490  00F5                     i1l113:	
  1491                           ;main.c: 165:     }
  1492                           
  1493                           
  1494                           ;main.c: 166:     oldBtn1 = !PORTBbits.RB3;
  1495  00F5  1003               	clrc
  1496  00F6  1D86               	btfss	6,3	;volatile
  1497  00F7  1403               	setc
  1498  00F8  3000               	movlw	0
  1499  00F9  1803               	btfsc	3,0
  1500  00FA  3001               	movlw	1
  1501  00FB  00FA               	movwf	_oldBtn1
  1502  00FC                     i1l1182:	
  1503                           
  1504                           ;main.c: 168:     if (!(PORTBbits.RB4)&& (!oldBtn2))
  1505  00FC  1A06               	btfsc	6,4	;volatile
  1506  00FD  28FF               	goto	u62_21
  1507  00FE  2900               	goto	u62_20
  1508  00FF                     u62_21:	
  1509  00FF  290F               	goto	i1l114
  1510  0100                     u62_20:	
  1511  0100                     i1l1184:	
  1512  0100  0879               	movf	_oldBtn2,w
  1513  0101  1D03               	btfss	3,2
  1514  0102  2904               	goto	u63_21
  1515  0103  2905               	goto	u63_20
  1516  0104                     u63_21:	
  1517  0104  290F               	goto	i1l114
  1518  0105                     u63_20:	
  1519  0105                     i1l1186:	
  1520                           
  1521                           ;main.c: 169:     {;main.c: 170:         stat2=!stat2;
  1522  0105  0823               	movf	_stat2,w
  1523  0106  1903               	btfsc	3,2
  1524  0107  2909               	goto	u64_21
  1525  0108  290B               	goto	u64_20
  1526  0109                     u64_21:	
  1527  0109  3001               	movlw	1
  1528  010A  290C               	goto	u65_20
  1529  010B                     u64_20:	
  1530  010B  3000               	movlw	0
  1531  010C                     u65_20:	
  1532  010C  00F0               	movwf	??_ISR
  1533  010D  0870               	movf	??_ISR,w
  1534  010E  00A3               	movwf	_stat2
  1535  010F                     i1l114:	
  1536                           ;main.c: 172:     }
  1537                           
  1538                           
  1539                           ;main.c: 173:     oldBtn2 = !PORTBbits.RB4;
  1540  010F  1003               	clrc
  1541  0110  1E06               	btfss	6,4	;volatile
  1542  0111  1403               	setc
  1543  0112  3000               	movlw	0
  1544  0113  1803               	btfsc	3,0
  1545  0114  3001               	movlw	1
  1546  0115  00F9               	movwf	_oldBtn2
  1547  0116                     i1l1188:	
  1548                           
  1549                           ;main.c: 175:     if (!(PORTBbits.RB5)&& (!oldBtn3))
  1550  0116  1A86               	btfsc	6,5	;volatile
  1551  0117  2919               	goto	u66_21
  1552  0118  291A               	goto	u66_20
  1553  0119                     u66_21:	
  1554  0119  2929               	goto	i1l115
  1555  011A                     u66_20:	
  1556  011A                     i1l1190:	
  1557  011A  0878               	movf	_oldBtn3,w
  1558  011B  1D03               	btfss	3,2
  1559  011C  291E               	goto	u67_21
  1560  011D  291F               	goto	u67_20
  1561  011E                     u67_21:	
  1562  011E  2929               	goto	i1l115
  1563  011F                     u67_20:	
  1564  011F                     i1l1192:	
  1565                           
  1566                           ;main.c: 176:     {;main.c: 177:         stat3=!stat3;
  1567  011F  0822               	movf	_stat3,w
  1568  0120  1903               	btfsc	3,2
  1569  0121  2923               	goto	u68_21
  1570  0122  2925               	goto	u68_20
  1571  0123                     u68_21:	
  1572  0123  3001               	movlw	1
  1573  0124  2926               	goto	u69_20
  1574  0125                     u68_20:	
  1575  0125  3000               	movlw	0
  1576  0126                     u69_20:	
  1577  0126  00F0               	movwf	??_ISR
  1578  0127  0870               	movf	??_ISR,w
  1579  0128  00A2               	movwf	_stat3
  1580  0129                     i1l115:	
  1581                           ;main.c: 179:     }
  1582                           
  1583                           
  1584                           ;main.c: 180:     oldBtn3 = !PORTBbits.RB5;
  1585  0129  1003               	clrc
  1586  012A  1E86               	btfss	6,5	;volatile
  1587  012B  1403               	setc
  1588  012C  3000               	movlw	0
  1589  012D  1803               	btfsc	3,0
  1590  012E  3001               	movlw	1
  1591  012F  00F8               	movwf	_oldBtn3
  1592  0130                     i1l1194:	
  1593                           
  1594                           ;main.c: 184:    if(RCIF)
  1595  0130  1E8C               	btfss	12,5	;volatile
  1596  0131  2933               	goto	u70_21
  1597  0132  2934               	goto	u70_20
  1598  0133                     u70_21:	
  1599  0133  293F               	goto	i1l1202
  1600  0134                     u70_20:	
  1601  0134                     i1l117:	
  1602  0134  1E8C               	btfss	12,5	;volatile
  1603  0135  2937               	goto	u71_21
  1604  0136  2938               	goto	u71_20
  1605  0137                     u71_21:	
  1606  0137  2934               	goto	i1l117
  1607  0138                     u71_20:	
  1608  0138                     i1l119:	
  1609                           
  1610                           ;main.c: 187:         RCIF = 0;
  1611  0138  128C               	bcf	12,5	;volatile
  1612  0139                     i1l1198:	
  1613                           
  1614                           ;main.c: 188:         datoSeriale = RCREG;
  1615  0139  081A               	movf	26,w	;volatile
  1616  013A  00F0               	movwf	??_ISR
  1617  013B  0870               	movf	??_ISR,w
  1618  013C  00A8               	movwf	_datoSeriale
  1619  013D                     i1l1200:	
  1620                           
  1621                           ;main.c: 189:         received = 1;
  1622  013D  01A9               	clrf	_received
  1623  013E  0AA9               	incf	_received,f
  1624  013F                     i1l1202:	
  1625                           
  1626                           ;main.c: 192:    if (INTCON&0x04)
  1627  013F  1D0B               	btfss	11,2	;volatile
  1628  0140  2942               	goto	u72_21
  1629  0141  2943               	goto	u72_20
  1630  0142                     u72_21:	
  1631  0142  2958               	goto	i1l122
  1632  0143                     u72_20:	
  1633  0143                     i1l1204:	
  1634                           
  1635                           ;main.c: 193:     {;main.c: 194:         INTCON &= ~0x04;
  1636  0143  30FB               	movlw	251
  1637  0144  00F0               	movwf	??_ISR
  1638  0145  0870               	movf	??_ISR,w
  1639  0146  058B               	andwf	11,f	;volatile
  1640  0147                     i1l1206:	
  1641                           
  1642                           ;main.c: 195:         TMR0 = 6;
  1643  0147  3006               	movlw	6
  1644  0148  0081               	movwf	1	;volatile
  1645  0149                     i1l1208:	
  1646                           
  1647                           ;main.c: 196:         count++;
  1648  0149  3001               	movlw	1
  1649  014A  07A0               	addwf	_count,f
  1650  014B  1803               	skipnc
  1651  014C  0AA1               	incf	_count+1,f
  1652  014D  3000               	movlw	0
  1653  014E  07A1               	addwf	_count+1,f
  1654                           
  1655                           ;main.c: 197:         if (count == 100)
  1656  014F  3064               	movlw	100
  1657  0150  0620               	xorwf	_count,w
  1658  0151  0421               	iorwf	_count+1,w
  1659  0152  1D03               	btfss	3,2
  1660  0153  2955               	goto	u73_21
  1661  0154  2956               	goto	u73_20
  1662  0155                     u73_21:	
  1663  0155  2958               	goto	i1l122
  1664  0156                     u73_20:	
  1665  0156                     i1l1210:	
  1666                           
  1667                           ;main.c: 198:         {;main.c: 200:             count = 0;
  1668  0156  01A0               	clrf	_count
  1669  0157  01A1               	clrf	_count+1
  1670  0158                     i1l122:	
  1671  0158  0872               	movf	??_ISR+2,w
  1672  0159  008A               	movwf	10
  1673  015A  0E71               	swapf	(??_ISR+1)^(0+4294967168),w
  1674  015B  0083               	movwf	3
  1675  015C  0EFE               	swapf	btemp,f
  1676  015D  0E7E               	swapf	btemp,w
  1677  015E  0009               	retfie
  1678  015F                     __end_of_ISR:	
  1679  007E                     btemp	set	126	;btemp
  1680  007E                     wtemp0	set	126
  1681                           
  1682                           	psect	intentry
  1683  0004                     __pintentry:	
  1684                           ;incstack = 0
  1685                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1686                           
  1687  0004                     interrupt_function:	
  1688  007E                     saved_w	set	btemp
  1689  0004  00FE               	movwf	btemp
  1690  0005  0E03               	swapf	3,w
  1691  0006  00F1               	movwf	??_ISR+1
  1692  0007  080A               	movf	10,w
  1693  0008  00F2               	movwf	??_ISR+2
  1694  0009  120A  118A  28E0   	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        6
    BSS         21
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     18      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Uart_send_string@str	PTR unsigned char  size(1) Largest target is 8
		 -> strToSend(BANK0[8]), 

    sp__num_converter	PTR unsigned char  size(1) Largest target is 4
		 -> num_converter@result(COMMON[4]), 


Critical Paths under _main in COMMON

    _main->_UART_init
    _main->_init_lcd
    _init_lcd->_send_cmd
    _Uart_send_string->_UART_TxChar
    _UART_init->___aldiv

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_UART_init
    _UART_init->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     960
                                             16 BANK0      2     2      0
                        _UART_TxChar
                          _UART_init
                   _Uart_send_string
                            _initPic
                           _init_lcd
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             2     2      0      22
                                              6 COMMON     2     2      0
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _send_cmd                                             3     3      0      22
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _initPic                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Uart_send_string                                     3     3      0     145
                                              4 COMMON     3     3      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (2) _UART_TxChar                                          1     1      0      22
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            6     4      2     746
                                              4 COMMON     4     4      0
                                             14 BANK0      2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     625
                                              3 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_TxChar
   _UART_init
     ___aldiv
   _Uart_send_string
     _UART_TxChar
   _initPic
   _init_lcd
     _send_cmd
   _send_cmd

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     12      2A       5       52.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Jun 22 15:31:14 2020

              __CFG_CP$OFF 0000                         fsr 0004                __CFG_LVP$ON 0000  
                      l146 0293                        l170 027A                        l333 0057  
                      l181 02AA                        l149 02A2                        l173 0220  
                      l182 02AD                        l343 00DF                        l176 025A  
                      l179 02A4                        u410 02AA                        u411 02A9  
                      u530 0293               __CFG_CPD$OFF 0000                        u531 0292  
                      _ISR 00E0                        u950 004A                        u951 0049  
                      u960 005B                        u961 005A                        u970 007A  
                      u971 0079                        u990 008E                        u991 008D  
                      u985 007F                        fsr0 0004                        indf 0000  
             __CFG_FOSC$HS 0000                       ?_ISR 0070                       l1100 01DB  
                     l1030 0261                       l1110 0202                       l1102 01DE  
                     l1120 027C                       l1032 026B                       l1112 0208  
                     l1104 01E4                       l1130 028D                       l1034 0277  
                     l1026 025C                       l1114 020E                       l1106 01F3  
                     l1036 02A4                       l1028 025F                       l1116 0214  
                     l1108 01FC                       l1310 0043                       l1038 02AB  
                     l1126 027D                       l1118 021A                       l1320 006A  
                     l1312 0046                       l1128 0289                       l1080 0294  
                     l1400 01C1                       l1330 008E                       l1322 0072  
                     l1314 004A                       l1082 0297                       l1402 01C7  
                     l1340 00C1                       l1332 0097                       l1324 007A  
                     l1316 005B                       l1084 0299                       l1334 00A9  
                     l1326 007D                       l1342 00C7                       l1318 0066  
                     l1350 0221                       l1344 00CC                       l1336 00B7  
                     l1328 008A                       l1352 0229                       l1096 01CE  
                     l1360 015F                       l1346 00D7                       l1338 00B8  
                     l1354 0257                       l1098 01D2                       l1370 0189  
                     l1362 017A                       l1356 0258                       l1380 019F  
                     l1372 018A                       l1364 0180                       l1358 0259  
                     l1390 01B2                       l1382 01A0                       l1374 018E  
                     l1366 0184                       l1392 01B7                       l1384 01A6  
                     l1376 0194                       l1368 0188                       l1394 01BB  
                     l1386 01AD                       l1378 019B                       l1396 01BC  
                     l1388 01B1                       l1398 01C1                       u1010 00A9  
                     u1011 00A8                       u1005 0090                       u1030 00C7  
                     u1031 00C6                       u1015 00A5                       u1040 00CC  
                     u1041 00CB                       u1025 00B9                       u1050 0238  
                     u1107 01D6                       u1060 019B                       u1117 01E8  
                     u1061 019A                       u1070 01AD                       u1055 0233  
                     u1127 01F7                       u1071 01AC                       u1080 01B7  
                     u1137 0266                       u1081 01B6                       u1090 01C1  
                     u1147 0272                       u1091 01C0                       _RCIF 0065  
                     _TMR0 0001                       _TXIF 0064               __CFG_WRT$OFF 0000  
                     _main 015F                       btemp 007E              __CFG_BOREN$ON 0000  
                     start 000C                      ??_ISR 0070            __end_of___aldiv 00E0  
                    ?_main 0070              __CFG_WDTE$OFF 0000                      i1l113 00F5  
                    i1l122 0158                      i1l114 010F                      i1l115 0129  
                    i1l117 0134                      i1l119 0138          Uart_send_string@i 0076  
                    _RCREG 001A                      _SPBRG 0099                      _PORTD 0008  
                    u60_20 00F1                      u60_21 00EF                      u61_20 00F2  
                    u70_20 0134                      u62_20 0100                      u70_21 0133  
                    u62_21 00FF                      u71_20 0138                      u63_20 0105  
                    u71_21 0137                      u63_21 0104                      u72_20 0143  
                    u64_20 010B                      u72_21 0142                      u64_21 0109  
                    u73_20 0156                      u65_20 010C                      u73_21 0155  
                    _TRISA 0085                      _TRISB 0086                      _TRISD 0088  
                    _TRISE 0089                      u66_20 011A                      u58_20 00E6  
                    u66_21 0119                      u58_21 00E5                      u67_20 011F  
                    u59_20 00EB                      u67_21 011E                      u59_21 00EA  
                    u68_20 0125                      u68_21 0123                      u69_20 0126  
                    _TXREG 0019                      _PicId 0047              __CFG_PWRTE$ON 0000  
       __size_of_UART_init 003A            __end_of_initPic 02A3                      _count 0020  
                    _stat1 0024                      _stat2 0023                      _stat3 0022  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __initialization 000F               __end_of_main 01CE                     ??_main 0042  
                   _ADCON0 001F                     _ADCON1 009F                     _ADRESH 001E  
                   _ADRESL 009E                     i1l1200 013D                     i1l1210 0156  
                   i1l1202 013F                     i1l1204 0143                     i1l1206 0147  
                   i1l1208 0149                     i1l1180 00EB                     i1l1190 011A  
                   i1l1182 00FC                     i1l1192 011F                     i1l1184 0100  
                   i1l1176 00E0                     i1l1194 0130                     i1l1186 0105  
                   i1l1178 00E6                     i1l1188 0116                     i1l1198 0139  
                   _INTCON 000B               ?_UART_TxChar 0070                  ??___aldiv 0073  
        __end_of_UART_init 025B           __end_of_init_lcd 0221           __end_of_send_cmd 027B  
                ??_initPic 0073                     saved_w 007E  __size_of_Uart_send_string 0019  
  __end_of__initialization 003F             __pcstackCOMMON 0070               __pidataBANK0 02B6  
        num_converter@F895 0043                 __pbssBANK0 0020                 __pmaintext 015F  
               __pintentry 0004                 _contCamion 0025        Uart_send_string@str 0075  
                ?_init_lcd 0070                  ?_send_cmd 0070       __size_of_UART_TxChar 000B  
                  ___aldiv 0043                    __ptext1 01CE                    __ptext2 025B  
                  __ptext3 0294                    __ptext4 027B                    __ptext5 02A3  
                  __ptext6 0221                    __ptext7 0043                    __ptext8 00E0  
             __size_of_ISR 007F                    _oldBtn1 007A                    _oldBtn2 0079  
                  _oldBtn3 0078                    _initPic 0294           ___aldiv@dividend 0036  
                  clrloop0 02AF           _Uart_send_string 027B       end_of_initialization 003F  
               ??_init_lcd 0076                 ??_send_cmd 0073                  _RCSTAbits 0018  
         ___aldiv@quotient 003C                  _PORTBbits 0006                  _UART_init 0221  
                _PORTEbits 0009                  _TRISCbits 0087                  _TXSTAbits 0098  
               ?_UART_init 0040        start_initialization 000F                __end_of_ISR 015F  
              __pdataBANK0 0043                __pbssCOMMON 0078                  ___latbits 0002  
            __pcstackBANK0 0032                _datoSeriale 0028          __size_of_init_lcd 0053  
                 ?___aldiv 0032          __size_of_send_cmd 0020   __end_of_Uart_send_string 0294  
              ??_UART_init 0074                   ?_initPic 0070            ___aldiv@divisor 0032  
        interrupt_function 0004            ___aldiv@counter 003A                  clear_ram0 02AE  
                 _PIE1bits 008C              ??_UART_TxChar 0073                   _GO_nDONE 00FA  
               _ADCON0bits 001F                  _strToSend 002A            UART_TxChar@dato 0073  
         __size_of___aldiv 009D        __end_of_UART_TxChar 02AE           __size_of_initPic 000F  
                 _contAuto 0027                   _contMoto 0026                   _init_lcd 01CE  
            __size_of_main 006F                   _received 0029                   _send_cmd 025B  
               _INTCONbits 000B            send_cmd@command 0075                   intlevel1 0000  
        UART_init@baudrate 0040                _UART_TxChar 02A3          ?_Uart_send_string 0070  
       ??_Uart_send_string 0074                 _OPTION_REG 0081               ___aldiv@sign 003B  
