

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jul 16 16:50:34 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.10
    39                           ; Generated 31/07/2019 GMT
    40                           ; 
    41                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192                           
   193                           	psect	idataCOMMON
   194  0760                     __pidataCOMMON:	
   195                           
   196                           ;initializer for _countDown
   197  0760  3405               	retlw	5
   198                           
   199                           	psect	idataBANK1
   200  075A                     __pidataBANK1:	
   201                           
   202                           ;initializer for _statoSemafori
   203  075A  3400               	retlw	0
   204  075B  3401               	retlw	1
   205  075C  3402               	retlw	2
   206                           
   207                           ;initializer for _PicId
   208  075D  34A7               	retlw	167
   209  075E  3400               	retlw	0
   210                           
   211                           ;initializer for _numStrade
   212  075F  3404               	retlw	4
   213                           
   214                           	psect	idataBANK3
   215  05DA                     __pidataBANK3:	
   216                           
   217                           ;initializer for print_Countdown@F937
   218  05DA  3453               	retlw	83
   219  05DB  3465               	retlw	101
   220  05DC  346D               	retlw	109
   221  05DD  3420               	retlw	32
   222  05DE  3430               	retlw	48
   223  05DF  343A               	retlw	58
   224  05E0  3420               	retlw	32
   225  05E1  3420               	retlw	32
   226  05E2  3420               	retlw	32
   227  05E3  3420               	retlw	32
   228  05E4  3420               	retlw	32
   229  05E5  3452               	retlw	82
   230  05E6  346F               	retlw	111
   231  05E7  3473               	retlw	115
   232  05E8  3473               	retlw	115
   233  05E9  346F               	retlw	111
   234  05EA  3400               	retlw	0
   235                           
   236                           ;initializer for print_Countdown@F935
   237  05EB  3453               	retlw	83
   238  05EC  3465               	retlw	101
   239  05ED  346D               	retlw	109
   240  05EE  3420               	retlw	32
   241  05EF  3430               	retlw	48
   242  05F0  343A               	retlw	58
   243  05F1  3420               	retlw	32
   244  05F2  3420               	retlw	32
   245  05F3  3420               	retlw	32
   246  05F4  3420               	retlw	32
   247  05F5  3447               	retlw	71
   248  05F6  3469               	retlw	105
   249  05F7  3461               	retlw	97
   250  05F8  346C               	retlw	108
   251  05F9  346C               	retlw	108
   252  05FA  346F               	retlw	111
   253  05FB  3400               	retlw	0
   254                           
   255                           ;initializer for print_Countdown@F933
   256  05FC  3453               	retlw	83
   257  05FD  3465               	retlw	101
   258  05FE  346D               	retlw	109
   259  05FF  3420               	retlw	32
   260  0600  3430               	retlw	48
   261  0601  343A               	retlw	58
   262  0602  3420               	retlw	32
   263  0603  3420               	retlw	32
   264  0604  3420               	retlw	32
   265  0605  3420               	retlw	32
   266  0606  3420               	retlw	32
   267  0607  3456               	retlw	86
   268  0608  3465               	retlw	101
   269  0609  3472               	retlw	114
   270  060A  3464               	retlw	100
   271  060B  3465               	retlw	101
   272  060C  3400               	retlw	0
   273                           
   274                           ;initializer for print_Countdown@F929
   275  060D  3454               	retlw	84
   276  060E  3465               	retlw	101
   277  060F  346D               	retlw	109
   278  0610  3470               	retlw	112
   279  0611  346F               	retlw	111
   280  0612  343A               	retlw	58
   281  0613  3420               	retlw	32
   282  0614  3420               	retlw	32
   283  0615  3420               	retlw	32
   284  0616  3420               	retlw	32
   285  0617  3420               	retlw	32
   286  0618  3420               	retlw	32
   287  0619  3420               	retlw	32
   288  061A  3420               	retlw	32
   289  061B  3420               	retlw	32
   290  061C  3420               	retlw	32
   291  061D  3400               	retlw	0
   292  0019                     _TXREG	set	25
   293  000B                     _INTCONbits	set	11
   294  0018                     _RCSTAbits	set	24
   295  0008                     _PORTD	set	8
   296  0009                     _PORTEbits	set	9
   297  001E                     _ADRESH	set	30
   298  001F                     _ADCON0bits	set	31
   299  001F                     _ADCON0	set	31
   300  0001                     _TMR0	set	1
   301  000B                     _INTCON	set	11
   302  001A                     _RCREG	set	26
   303  0006                     _PORTBbits	set	6
   304  0064                     _TXIF	set	100
   305  00FA                     _GO_nDONE	set	250
   306  0065                     _RCIF	set	101
   307  008C                     _PIE1bits	set	140
   308  0099                     _SPBRG	set	153
   309  0098                     _TXSTAbits	set	152
   310  0087                     _TRISCbits	set	135
   311  009E                     _ADRESL	set	158
   312  009F                     _ADCON1	set	159
   313  0085                     _TRISA	set	133
   314  0081                     _OPTION_REG	set	129
   315  0089                     _TRISE	set	137
   316  0086                     _TRISB	set	134
   317  0088                     _TRISD	set	136
   318                           
   319                           ; #config settings
   320  0000                     
   321                           	psect	cinit
   322  0019                     start_initialization:	
   323  0019                     __initialization:	
   324                           
   325                           ; Initialize objects allocated to BANK3
   326  0019  1783               	bsf	3,7	;select IRP bank2
   327  001A  30D4               	movlw	low (__pdataBANK3+68)
   328  001B  00FD               	movwf	btemp+-1
   329  001C  3005               	movlw	high __pidataBANK3
   330  001D  00FE               	movwf	btemp
   331  001E  30DA               	movlw	low __pidataBANK3
   332  001F  00FF               	movwf	btemp+1
   333  0020  3090               	movlw	low __pdataBANK3
   334  0021  0084               	movwf	4
   335  0022  120A  118A  2724  120A  118A  	fcall	init_ram0
   336                           
   337                           ; Initialize objects allocated to BANK1
   338  0027  1383               	bcf	3,7	;select IRP bank0
   339  0028  30E3               	movlw	low (__pdataBANK1+6)
   340  0029  00FD               	movwf	btemp+-1
   341  002A  3007               	movlw	high __pidataBANK1
   342  002B  00FE               	movwf	btemp
   343  002C  305A               	movlw	low __pidataBANK1
   344  002D  00FF               	movwf	btemp+1
   345  002E  30DD               	movlw	low __pdataBANK1
   346  002F  0084               	movwf	4
   347  0030  120A  118A  2724  120A  118A  	fcall	init_ram0
   348                           
   349                           ; Initialize objects allocated to COMMON
   350  0035  120A  118A  2760  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   351  003A  00FD               	movwf	__pdataCOMMON& (0+127)
   352                           
   353                           ; Clear objects allocated to BANK1
   354  003B  30C1               	movlw	low __pbssBANK1
   355  003C  0084               	movwf	4
   356  003D  30DD               	movlw	low (__pbssBANK1+28)
   357  003E  120A  118A  2752  120A  118A  	fcall	clear_ram0
   358                           
   359                           ; Clear objects allocated to BANK0
   360  0043  01EF               	clrf	__pbssBANK0& (0+127)
   361                           
   362                           ; Clear objects allocated to COMMON
   363  0044  01FC               	clrf	__pbssCOMMON& (0+127)
   364  0045                     end_of_initialization:	
   365                           ;End of C runtime variable initialization code
   366                           
   367  0045                     __end_of__initialization:	
   368  0045  0183               	clrf	3
   369  0046  120A  118A  2849   	ljmp	_main	;jump to C main() function
   370                           
   371                           	psect	bssCOMMON
   372  007C                     __pbssCOMMON:	
   373  007C                     _temporizzazione:	
   374  007C                     	ds	1
   375                           
   376                           	psect	dataCOMMON
   377  007D                     __pdataCOMMON:	
   378  007D                     _countDown:	
   379  007D                     	ds	1
   380                           
   381                           	psect	bssBANK0
   382  006F                     __pbssBANK0:	
   383  006F                     _oldBtn1:	
   384  006F                     	ds	1
   385                           
   386                           	psect	bssBANK1
   387  00C1                     __pbssBANK1:	
   388  00C1                     _semafori:	
   389  00C1                     	ds	4
   390  00C5                     _f:	
   391  00C5                     	ds	2
   392  00C7                     _count:	
   393  00C7                     	ds	2
   394  00C9                     _flagGiallo:	
   395  00C9                     	ds	1
   396  00CA                     _scattoSemafori:	
   397  00CA                     	ds	1
   398  00CB                     _stat3:	
   399  00CB                     	ds	1
   400  00CC                     _oldBtn3:	
   401  00CC                     	ds	1
   402  00CD                     _stat2:	
   403  00CD                     	ds	1
   404  00CE                     _oldBtn2:	
   405  00CE                     	ds	1
   406  00CF                     _stat1:	
   407  00CF                     	ds	1
   408  00D0                     _contCamion:	
   409  00D0                     	ds	1
   410  00D1                     _contMoto:	
   411  00D1                     	ds	1
   412  00D2                     _contAuto:	
   413  00D2                     	ds	1
   414  00D3                     _datoSeriale:	
   415  00D3                     	ds	1
   416  00D4                     _received:	
   417  00D4                     	ds	1
   418  00D5                     _strToSend:	
   419  00D5                     	ds	8
   420                           
   421                           	psect	dataBANK1
   422  00DD                     __pdataBANK1:	
   423  00DD                     _statoSemafori:	
   424  00DD                     	ds	3
   425  00E0                     _PicId:	
   426  00E0                     	ds	2
   427  00E2                     _numStrade:	
   428  00E2                     	ds	1
   429                           
   430                           	psect	dataBANK3
   431  0190                     __pdataBANK3:	
   432  0190                     print_Countdown@F937:	
   433  0190                     	ds	17
   434  01A1                     print_Countdown@F935:	
   435  01A1                     	ds	17
   436  01B2                     print_Countdown@F933:	
   437  01B2                     	ds	17
   438  01C3                     print_Countdown@F929:	
   439  01C3                     	ds	17
   440                           
   441                           	psect	inittext
   442  0720                     init_fetch0:	
   443                           ;	Called with low address in FSR and high address in W
   444                           
   445  0720  087E               	movf	btemp,w
   446  0721  008A               	movwf	10
   447  0722  087F               	movf	btemp+1,w
   448  0723  0082               	movwf	2
   449  0724                     init_ram0:	
   450                           ;Called with:
   451                           ;	high address of idata address in btemp 
   452                           ;	low address of idata address in btemp+1 
   453                           ;	low address of data in FSR
   454                           ;	high address + 1 of data in btemp-1
   455                           
   456  0724  120A  118A  2720  120A  118A  	fcall	init_fetch0
   457  0729  0080               	movwf	0
   458  072A  0A84               	incf	4,f
   459  072B  0804               	movf	4,w
   460  072C  067D               	xorwf	btemp+-1,w
   461  072D  1903               	btfsc	3,2
   462  072E  3400               	retlw	0
   463  072F  0AFF               	incf	btemp+1,f
   464  0730  1903               	btfsc	3,2
   465  0731  0AFE               	incf	btemp,f
   466  0732  2F24               	goto	init_ram0
   467                           
   468                           	psect	clrtext
   469  0752                     clear_ram0:	
   470                           ;	Called with FSR containing the base address, and
   471                           ;	W with the last address+1
   472                           
   473  0752  0064               	clrwdt	;clear the watchdog before getting into this loop
   474  0753                     clrloop0:	
   475  0753  0180               	clrf	0	;clear RAM location pointed to by FSR
   476  0754  0A84               	incf	4,f	;increment pointer
   477  0755  0604               	xorwf	4,w	;XOR with final address
   478  0756  1903               	btfsc	3,2	;have we reached the end yet?
   479  0757  3400               	retlw	0	;all done for this memory range, return
   480  0758  0604               	xorwf	4,w	;XOR again to restore value
   481  0759  2F53               	goto	clrloop0	;do the next byte
   482                           
   483                           	psect	cstackBANK1
   484  00A0                     __pcstackBANK1:	
   485  00A0                     ??_ISR:	
   486                           
   487                           ; 1 bytes @ 0x0
   488  00A0                     	ds	7
   489  00A7                     ??_initPic:	
   490  00A7                     ??_send_cmd:	
   491                           ; 1 bytes @ 0x7
   492                           
   493  00A7                     ??_UART_TxChar:	
   494                           ; 1 bytes @ 0x7
   495                           
   496  00A7                     ?___aldiv:	
   497                           ; 1 bytes @ 0x7
   498                           
   499  00A7                     UART_TxChar@dato:	
   500                           ; 4 bytes @ 0x7
   501                           
   502  00A7                     ___aldiv@divisor:	
   503                           ; 1 bytes @ 0x7
   504                           
   505                           
   506                           ; 4 bytes @ 0x7
   507  00A7                     	ds	1
   508  00A8                     ??_Uart_send_string:	
   509                           
   510                           ; 1 bytes @ 0x8
   511  00A8                     	ds	1
   512  00A9                     Uart_send_string@str:	
   513  00A9                     send_cmd@command:	
   514                           ; 1 bytes @ 0x9
   515                           
   516                           
   517                           ; 1 bytes @ 0x9
   518  00A9                     	ds	1
   519  00AA                     ??_init_lcd:	
   520  00AA                     Uart_send_string@i:	
   521                           ; 1 bytes @ 0xA
   522                           
   523                           
   524                           ; 1 bytes @ 0xA
   525  00AA                     	ds	1
   526  00AB                     ?_messageTransmission:	
   527  00AB                     messageTransmission@idStrada:	
   528                           ; 1 bytes @ 0xB
   529                           
   530  00AB                     ___aldiv@dividend:	
   531                           ; 1 bytes @ 0xB
   532                           
   533                           
   534                           ; 4 bytes @ 0xB
   535  00AB                     	ds	1
   536  00AC                     messageTransmission@codice:	
   537                           
   538                           ; 1 bytes @ 0xC
   539  00AC                     	ds	1
   540  00AD                     messageTransmission@valore:	
   541                           
   542                           ; 1 bytes @ 0xD
   543  00AD                     	ds	1
   544  00AE                     ??_messageTransmission:	
   545                           
   546                           ; 1 bytes @ 0xE
   547  00AE                     	ds	1
   548  00AF                     ??___aldiv:	
   549  00AF                     messageTransmission@tipoMessaggio:	
   550                           ; 1 bytes @ 0xF
   551                           
   552                           
   553                           ; 1 bytes @ 0xF
   554  00AF                     	ds	1
   555  00B0                     ___aldiv@counter:	
   556                           
   557                           ; 1 bytes @ 0x10
   558  00B0                     	ds	1
   559  00B1                     ___aldiv@sign:	
   560                           
   561                           ; 1 bytes @ 0x11
   562  00B1                     	ds	1
   563  00B2                     ___aldiv@quotient:	
   564                           
   565                           ; 4 bytes @ 0x12
   566  00B2                     	ds	4
   567  00B6                     ?_UART_init:	
   568  00B6                     UART_init@baudrate:	
   569                           ; 1 bytes @ 0x16
   570                           
   571                           
   572                           ; 2 bytes @ 0x16
   573  00B6                     	ds	2
   574  00B8                     ??_UART_init:	
   575                           
   576                           ; 1 bytes @ 0x18
   577  00B8                     	ds	4
   578  00BC                     ??_main:	
   579                           
   580                           ; 1 bytes @ 0x1C
   581  00BC                     	ds	3
   582  00BF                     main@semaforoVerde:	
   583                           
   584                           ; 1 bytes @ 0x1F
   585  00BF                     	ds	1
   586  00C0                     main@i:	
   587                           
   588                           ; 1 bytes @ 0x20
   589  00C0                     	ds	1
   590                           
   591                           	psect	cstackCOMMON
   592  0070                     __pcstackCOMMON:	
   593  0070                     ?_initPic:	
   594  0070                     ?_init_lcd:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_send_cmd:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_Uart_send_string:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_UART_TxChar:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_send_string:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_send_data:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ??_send_data:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_main:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_ISR:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ?i1_send_cmd:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ??i1_send_cmd:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?___awdiv:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?___awmod:	
   631                           ; 2 bytes @ 0x0
   632                           
   633  0070                     ___awdiv@divisor:	
   634                           ; 2 bytes @ 0x0
   635                           
   636  0070                     ___awmod@divisor:	
   637                           ; 2 bytes @ 0x0
   638                           
   639                           
   640                           ; 2 bytes @ 0x0
   641  0070                     	ds	2
   642  0072                     send_data@data:	
   643  0072                     i1send_cmd@command:	
   644                           ; 1 bytes @ 0x2
   645                           
   646  0072                     ___awdiv@dividend:	
   647                           ; 1 bytes @ 0x2
   648                           
   649  0072                     ___awmod@dividend:	
   650                           ; 2 bytes @ 0x2
   651                           
   652                           
   653                           ; 2 bytes @ 0x2
   654  0072                     	ds	1
   655  0073                     ??_send_string:	
   656                           
   657                           ; 1 bytes @ 0x3
   658  0073                     	ds	1
   659  0074                     ??___awdiv:	
   660  0074                     ??___awmod:	
   661                           ; 1 bytes @ 0x4
   662                           
   663  0074                     send_string@i:	
   664                           ; 1 bytes @ 0x4
   665                           
   666                           
   667                           ; 2 bytes @ 0x4
   668  0074                     	ds	1
   669  0075                     ___awdiv@counter:	
   670  0075                     ___awmod@counter:	
   671                           ; 1 bytes @ 0x5
   672                           
   673                           
   674                           ; 1 bytes @ 0x5
   675  0075                     	ds	1
   676  0076                     send_string@str:	
   677  0076                     ___awdiv@sign:	
   678                           ; 1 bytes @ 0x6
   679                           
   680  0076                     ___awmod@sign:	
   681                           ; 1 bytes @ 0x6
   682                           
   683                           
   684                           ; 1 bytes @ 0x6
   685  0076                     	ds	1
   686  0077                     ___awdiv@quotient:	
   687                           
   688                           ; 2 bytes @ 0x7
   689  0077                     	ds	2
   690  0079                     ?_print_Countdown:	
   691  0079                     print_Countdown@num:	
   692                           ; 1 bytes @ 0x9
   693                           
   694                           
   695                           ; 2 bytes @ 0x9
   696  0079                     	ds	2
   697  007B                     print_Countdown@statoSem:	
   698                           
   699                           ; 1 bytes @ 0xB
   700  007B                     	ds	1
   701                           
   702                           	psect	cstackBANK0
   703  0020                     __pcstackBANK0:	
   704  0020                     ??_print_Countdown:	
   705                           
   706                           ; 1 bytes @ 0x0
   707  0020                     	ds	4
   708  0024                     print_Countdown@secondStr:	
   709                           
   710                           ; 17 bytes @ 0x4
   711  0024                     	ds	17
   712  0035                     print_Countdown@secondStr_407:	
   713                           
   714                           ; 17 bytes @ 0x15
   715  0035                     	ds	17
   716  0046                     print_Countdown@secondStr_409:	
   717                           
   718                           ; 17 bytes @ 0x26
   719  0046                     	ds	17
   720  0057                     print_Countdown@firstStr:	
   721                           
   722                           ; 17 bytes @ 0x37
   723  0057                     	ds	17
   724  0068                     print_Countdown@resultNum:	
   725                           
   726                           ; 3 bytes @ 0x48
   727  0068                     	ds	3
   728  006B                     print_Countdown@length:	
   729                           
   730                           ; 2 bytes @ 0x4B
   731  006B                     	ds	2
   732  006D                     print_Countdown@i:	
   733                           
   734                           ; 2 bytes @ 0x4D
   735  006D                     	ds	2
   736                           
   737                           	psect	maintext
   738  0049                     __pmaintext:	
   739 ;;
   740 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   741 ;;
   742 ;; *************** function _main *****************
   743 ;; Defined at:
   744 ;;		line 113 in file "main.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  semaforoVerd    1   31[BANK1 ] unsigned char 
   749 ;;  i               1   32[BANK1 ] unsigned char 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : B00/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   759 ;;      Params:         0       0       0       0       0
   760 ;;      Locals:         0       0       2       0       0
   761 ;;      Temps:          0       0       3       0       0
   762 ;;      Totals:         0       0       5       0       0
   763 ;;Total ram usage:        5 bytes
   764 ;; Hardware stack levels required when called:    7
   765 ;; This function calls:
   766 ;;		_UART_init
   767 ;;		_initPic
   768 ;;		_init_lcd
   769 ;;		_messageTransmission
   770 ;;		_send_cmd
   771 ;; This function is called by:
   772 ;;		Startup code after reset
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           
   777                           ;psect for function _main
   778  0049                     _main:	
   779  0049                     l1593:	
   780                           ;incstack = 0
   781                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   782                           
   783                           
   784                           ;main.c: 115:     initPic();
   785  0049  120A  118A  2743  120A  118A  	fcall	_initPic
   786                           
   787                           ;main.c: 116:     UART_init(9600);
   788  004E  3080               	movlw	128
   789  004F  1683               	bsf	3,5	;RP0=1, select bank1
   790  0050  1303               	bcf	3,6	;RP1=0, select bank1
   791  0051  00B6               	movwf	UART_init@baudrate^(0+128)
   792  0052  3025               	movlw	37
   793  0053  00B7               	movwf	(UART_init@baudrate^(0+128)+1)
   794  0054  120A  118A  261E  120A  118A  	fcall	_UART_init
   795                           
   796                           ;main.c: 117:     init_lcd();
   797  0059  120A  118A  2583  120A  118A  	fcall	_init_lcd
   798                           
   799                           ;main.c: 118:     send_cmd(0x01);
   800  005E  3001               	movlw	1
   801  005F  120A  118A  2658  120A  118A  	fcall	_send_cmd
   802  0064                     l1595:	
   803                           
   804                           ;main.c: 190:     char i;;main.c: 193:     semafori[1]=statoSemafori[2];
   805  0064  1683               	bsf	3,5	;RP0=1, select bank1
   806  0065  1303               	bcf	3,6	;RP1=0, select bank1
   807  0066  085F               	movf	(_statoSemafori^(0+128)+2),w
   808  0067  00BC               	movwf	??_main^(0+128)
   809  0068  083C               	movf	??_main^(0+128),w
   810  0069  00C2               	movwf	(_semafori^(0+128)+1)
   811  006A                     l1597:	
   812                           
   813                           ;main.c: 194:     semafori[2]=statoSemafori[2];
   814  006A  085F               	movf	(_statoSemafori^(0+128)+2),w
   815  006B  00BC               	movwf	??_main^(0+128)
   816  006C  083C               	movf	??_main^(0+128),w
   817  006D  00C3               	movwf	(_semafori^(0+128)+2)
   818  006E                     l1599:	
   819                           
   820                           ;main.c: 195:     semafori[3]=statoSemafori[2];
   821  006E  085F               	movf	(_statoSemafori^(0+128)+2),w
   822  006F  00BC               	movwf	??_main^(0+128)
   823  0070  083C               	movf	??_main^(0+128),w
   824  0071  00C4               	movwf	(_semafori^(0+128)+3)
   825  0072                     l1601:	
   826                           
   827                           ;main.c: 196:     semafori[0]=statoSemafori[0];
   828  0072  085D               	movf	_statoSemafori^(0+128),w
   829  0073  00BC               	movwf	??_main^(0+128)
   830  0074  083C               	movf	??_main^(0+128),w
   831  0075  00C1               	movwf	_semafori^(0+128)
   832  0076                     l1603:	
   833                           
   834                           ;main.c: 200:     {;main.c: 204:         if(stat1)
   835  0076  084F               	movf	_stat1^(0+128),w
   836  0077  1903               	btfsc	3,2
   837  0078  287A               	goto	u1341
   838  0079  287B               	goto	u1340
   839  007A                     u1341:	
   840  007A  2880               	goto	l1609
   841  007B                     u1340:	
   842  007B                     l1605:	
   843                           
   844                           ;main.c: 205:         {;main.c: 206:             contAuto++;
   845  007B  3001               	movlw	1
   846  007C  00BC               	movwf	??_main^(0+128)
   847  007D  083C               	movf	??_main^(0+128),w
   848  007E  07D2               	addwf	_contAuto^(0+128),f
   849  007F                     l1607:	
   850                           
   851                           ;main.c: 207:             stat1=0;
   852  007F  01CF               	clrf	_stat1^(0+128)
   853  0080                     l1609:	
   854                           
   855                           ;main.c: 210:         if(stat2)
   856  0080  084D               	movf	_stat2^(0+128),w
   857  0081  1903               	btfsc	3,2
   858  0082  2884               	goto	u1351
   859  0083  2885               	goto	u1350
   860  0084                     u1351:	
   861  0084  288A               	goto	l1615
   862  0085                     u1350:	
   863  0085                     l1611:	
   864                           
   865                           ;main.c: 211:         {;main.c: 212:             contMoto++;
   866  0085  3001               	movlw	1
   867  0086  00BC               	movwf	??_main^(0+128)
   868  0087  083C               	movf	??_main^(0+128),w
   869  0088  07D1               	addwf	_contMoto^(0+128),f
   870  0089                     l1613:	
   871                           
   872                           ;main.c: 213:             stat2=0;
   873  0089  01CD               	clrf	_stat2^(0+128)
   874  008A                     l1615:	
   875                           
   876                           ;main.c: 215:         if(stat3)
   877  008A  084B               	movf	_stat3^(0+128),w
   878  008B  1903               	btfsc	3,2
   879  008C  288E               	goto	u1361
   880  008D  288F               	goto	u1360
   881  008E                     u1361:	
   882  008E  2894               	goto	l1621
   883  008F                     u1360:	
   884  008F                     l1617:	
   885                           
   886                           ;main.c: 216:         {;main.c: 217:             contCamion++;
   887  008F  3001               	movlw	1
   888  0090  00BC               	movwf	??_main^(0+128)
   889  0091  083C               	movf	??_main^(0+128),w
   890  0092  07D0               	addwf	_contCamion^(0+128),f
   891  0093                     l1619:	
   892                           
   893                           ;main.c: 218:             stat3=0;
   894  0093  01CB               	clrf	_stat3^(0+128)
   895  0094                     l1621:	
   896                           
   897                           ;main.c: 222:         if(scattoSemafori==1)
   898  0094  034A               	decf	_scattoSemafori^(0+128),w
   899  0095  1D03               	btfss	3,2
   900  0096  2898               	goto	u1371
   901  0097  2899               	goto	u1370
   902  0098                     u1371:	
   903  0098  2909               	goto	l1665
   904  0099                     u1370:	
   905  0099                     l1623:	
   906                           
   907                           ;main.c: 223:         {;main.c: 226:             char semaforoVerde=0;
   908  0099  01BF               	clrf	main@semaforoVerde^(0+128)
   909                           
   910                           ;main.c: 227:             for(i=0;i<4;i++)
   911  009A  01C0               	clrf	main@i^(0+128)
   912  009B                     l1629:	
   913                           
   914                           ;main.c: 228:             {;main.c: 230:                 if(semaforoVerde==0)
   915  009B  083F               	movf	main@semaforoVerde^(0+128),w
   916  009C  1D03               	btfss	3,2
   917  009D  289F               	goto	u1381
   918  009E  28A0               	goto	u1380
   919  009F                     u1381:	
   920  009F  28FF               	goto	l1661
   921  00A0                     u1380:	
   922  00A0                     l1631:	
   923                           
   924                           ;main.c: 231:                 {;main.c: 232:                     if(semafori[i]==statoSe
      +                          mafori[0])
   925  00A0  0840               	movf	main@i^(0+128),w
   926  00A1  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   927  00A2  0084               	movwf	4
   928  00A3  1383               	bcf	3,7	;select IRP bank1
   929  00A4  0800               	movf	0,w
   930  00A5  065D               	xorwf	_statoSemafori^(0+128),w
   931  00A6  1D03               	skipz
   932  00A7  28A9               	goto	u1391
   933  00A8  28AA               	goto	u1390
   934  00A9                     u1391:	
   935  00A9  28FF               	goto	l1661
   936  00AA                     u1390:	
   937  00AA                     l1633:	
   938                           
   939                           ;main.c: 233:                     {;main.c: 235:                          if(semafori[i]
      +                          ==statoSemafori[0])
   940  00AA  0840               	movf	main@i^(0+128),w
   941  00AB  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   942  00AC  0084               	movwf	4
   943  00AD  0800               	movf	0,w
   944  00AE  065D               	xorwf	_statoSemafori^(0+128),w
   945  00AF  1D03               	skipz
   946  00B0  28B2               	goto	u1401
   947  00B1  28B3               	goto	u1400
   948  00B2                     u1401:	
   949  00B2  28C9               	goto	l1643
   950  00B3                     u1400:	
   951  00B3                     l1635:	
   952                           
   953                           ;main.c: 236:                         {;main.c: 237:                             flagGia
      +                          llo=1;
   954  00B3  01C9               	clrf	_flagGiallo^(0+128)
   955  00B4  0AC9               	incf	_flagGiallo^(0+128),f
   956                           
   957                           ;main.c: 238:                             while(flagGiallo==1)
   958  00B5  28BD               	goto	l1639
   959  00B6                     l1637:	
   960                           
   961                           ;main.c: 239:                                 semafori[i]=statoSemafori[1];
   962  00B6  085E               	movf	(_statoSemafori^(0+128)+1),w
   963  00B7  00BC               	movwf	??_main^(0+128)
   964  00B8  0840               	movf	main@i^(0+128),w
   965  00B9  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   966  00BA  0084               	movwf	4
   967  00BB  083C               	movf	??_main^(0+128),w
   968  00BC  0080               	movwf	0
   969  00BD                     l1639:	
   970                           
   971                           ;main.c: 238:                             while(flagGiallo==1)
   972  00BD  0349               	decf	_flagGiallo^(0+128),w
   973  00BE  1903               	btfsc	3,2
   974  00BF  28C1               	goto	u1411
   975  00C0  28C2               	goto	u1410
   976  00C1                     u1411:	
   977  00C1  28B6               	goto	l1637
   978  00C2                     u1410:	
   979  00C2                     l1641:	
   980                           
   981                           ;main.c: 241:                             semafori[i]=statoSemafori[2];
   982  00C2  085F               	movf	(_statoSemafori^(0+128)+2),w
   983  00C3  00BC               	movwf	??_main^(0+128)
   984  00C4  0840               	movf	main@i^(0+128),w
   985  00C5  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   986  00C6  0084               	movwf	4
   987  00C7  083C               	movf	??_main^(0+128),w
   988  00C8  0080               	movwf	0
   989  00C9                     l1643:	
   990                           
   991                           ;main.c: 246:                         if(i<3)
   992  00C9  3003               	movlw	3
   993  00CA  0240               	subwf	main@i^(0+128),w
   994  00CB  1803               	skipnc
   995  00CC  28CE               	goto	u1421
   996  00CD  28CF               	goto	u1420
   997  00CE                     u1421:	
   998  00CE  28E8               	goto	l1653
   999  00CF                     u1420:	
  1000  00CF                     l1645:	
  1001                           
  1002                           ;main.c: 247:                         {;main.c: 250:                             if(sema
      +                          fori[i+1]==statoSemafori[2])
  1003  00CF  0840               	movf	main@i^(0+128),w
  1004  00D0  3EC2               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1005  00D1  0084               	movwf	4
  1006  00D2  0800               	movf	0,w
  1007  00D3  065F               	xorwf	(_statoSemafori^(0+128)+2),w
  1008  00D4  1D03               	skipz
  1009  00D5  28D7               	goto	u1431
  1010  00D6  28D8               	goto	u1430
  1011  00D7                     u1431:	
  1012  00D7  28FD               	goto	l141
  1013  00D8                     u1430:	
  1014  00D8                     l1647:	
  1015                           
  1016                           ;main.c: 251:                             {;main.c: 252:                                
      +                           flagGiallo=1;
  1017  00D8  01C9               	clrf	_flagGiallo^(0+128)
  1018  00D9  0AC9               	incf	_flagGiallo^(0+128),f
  1019                           
  1020                           ;main.c: 253:                                 while(flagGiallo==1)
  1021  00DA  28E2               	goto	l1651
  1022  00DB                     l1649:	
  1023                           
  1024                           ;main.c: 254:                                     semafori[i+1]=statoSemafori[1];
  1025  00DB  085E               	movf	(_statoSemafori^(0+128)+1),w
  1026  00DC  00BC               	movwf	??_main^(0+128)
  1027  00DD  0840               	movf	main@i^(0+128),w
  1028  00DE  3EC2               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1029  00DF  0084               	movwf	4
  1030  00E0  083C               	movf	??_main^(0+128),w
  1031  00E1  0080               	movwf	0
  1032  00E2                     l1651:	
  1033                           
  1034                           ;main.c: 253:                                 while(flagGiallo==1)
  1035  00E2  0349               	decf	_flagGiallo^(0+128),w
  1036  00E3  1903               	btfsc	3,2
  1037  00E4  28E6               	goto	u1441
  1038  00E5  28E7               	goto	u1440
  1039  00E6                     u1441:	
  1040  00E6  28DB               	goto	l1649
  1041  00E7                     u1440:	
  1042  00E7  28FD               	goto	l141
  1043  00E8                     l1653:	
  1044                           
  1045                           ;main.c: 262:                         {;main.c: 263:                             if(sema
      +                          fori[0]==statoSemafori[2])
  1046  00E8  085F               	movf	(_statoSemafori^(0+128)+2),w
  1047  00E9  0641               	xorwf	_semafori^(0+128),w
  1048  00EA  1D03               	skipz
  1049  00EB  28ED               	goto	u1451
  1050  00EC  28EE               	goto	u1450
  1051  00ED                     u1451:	
  1052  00ED  28FD               	goto	l141
  1053  00EE                     u1450:	
  1054  00EE                     l1655:	
  1055                           
  1056                           ;main.c: 264:                             {;main.c: 265:                                
      +                           flagGiallo=1;
  1057  00EE  01C9               	clrf	_flagGiallo^(0+128)
  1058  00EF  0AC9               	incf	_flagGiallo^(0+128),f
  1059                           
  1060                           ;main.c: 266:                                 while(flagGiallo==1)
  1061  00F0  28F8               	goto	l1659
  1062  00F1                     l1657:	
  1063                           
  1064                           ;main.c: 267:                                     semafori[i+1]=statoSemafori[1];
  1065  00F1  085E               	movf	(_statoSemafori^(0+128)+1),w
  1066  00F2  00BC               	movwf	??_main^(0+128)
  1067  00F3  0840               	movf	main@i^(0+128),w
  1068  00F4  3EC2               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1069  00F5  0084               	movwf	4
  1070  00F6  083C               	movf	??_main^(0+128),w
  1071  00F7  0080               	movwf	0
  1072  00F8                     l1659:	
  1073                           
  1074                           ;main.c: 266:                                 while(flagGiallo==1)
  1075  00F8  0349               	decf	_flagGiallo^(0+128),w
  1076  00F9  1903               	btfsc	3,2
  1077  00FA  28FC               	goto	u1461
  1078  00FB  28FD               	goto	u1460
  1079  00FC                     u1461:	
  1080  00FC  28F1               	goto	l1657
  1081  00FD                     u1460:	
  1082  00FD                     l141:	
  1083                           ;main.c: 272:                         }
  1084                           
  1085                           
  1086                           ;main.c: 274:                         semaforoVerde=1;
  1087  00FD  01BF               	clrf	main@semaforoVerde^(0+128)
  1088  00FE  0ABF               	incf	main@semaforoVerde^(0+128),f
  1089  00FF                     l1661:	
  1090                           
  1091                           ;main.c: 278:             }
  1092  00FF  3001               	movlw	1
  1093  0100  00BC               	movwf	??_main^(0+128)
  1094  0101  083C               	movf	??_main^(0+128),w
  1095  0102  07C0               	addwf	main@i^(0+128),f
  1096  0103                     l1663:	
  1097  0103  3004               	movlw	4
  1098  0104  0240               	subwf	main@i^(0+128),w
  1099  0105  1C03               	skipc
  1100  0106  2908               	goto	u1471
  1101  0107  2909               	goto	u1470
  1102  0108                     u1471:	
  1103  0108  289B               	goto	l1629
  1104  0109                     u1470:	
  1105  0109                     l1665:	
  1106                           
  1107                           ;main.c: 309:         if(scattoSemafori==1)
  1108  0109  034A               	decf	_scattoSemafori^(0+128),w
  1109  010A  1D03               	btfss	3,2
  1110  010B  290D               	goto	u1481
  1111  010C  290E               	goto	u1480
  1112  010D                     u1481:	
  1113  010D  29BF               	goto	l1679
  1114  010E                     u1480:	
  1115  010E                     l1667:	
  1116                           
  1117                           ;main.c: 310:         {;main.c: 312:             messageTransmission(1, 1, 0, 0);
  1118  010E  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1119  010F  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1120  0110  01AC               	clrf	messageTransmission@codice^(0+128)
  1121  0111  01AD               	clrf	messageTransmission@valore^(0+128)
  1122  0112  3001               	movlw	1
  1123  0113  120A  118A  2680  120A  118A  	fcall	_messageTransmission
  1124                           
  1125                           ;main.c: 313:             messageTransmission(1, 2, 1, 0);
  1126  0118  3002               	movlw	2
  1127  0119  1683               	bsf	3,5	;RP0=1, select bank1
  1128  011A  1303               	bcf	3,6	;RP1=0, select bank1
  1129  011B  00BC               	movwf	??_main^(0+128)
  1130  011C  083C               	movf	??_main^(0+128),w
  1131  011D  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1132  011E  01AC               	clrf	messageTransmission@codice^(0+128)
  1133  011F  0AAC               	incf	messageTransmission@codice^(0+128),f
  1134  0120  01AD               	clrf	messageTransmission@valore^(0+128)
  1135  0121  3001               	movlw	1
  1136  0122  120A  118A  2680  120A  118A  	fcall	_messageTransmission
  1137                           
  1138                           ;main.c: 314:             messageTransmission(1, 4, 2, 0);
  1139  0127  3004               	movlw	4
  1140  0128  1683               	bsf	3,5	;RP0=1, select bank1
  1141  0129  1303               	bcf	3,6	;RP1=0, select bank1
  1142  012A  00BC               	movwf	??_main^(0+128)
  1143  012B  083C               	movf	??_main^(0+128),w
  1144  012C  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1145  012D  3002               	movlw	2
  1146  012E  00BD               	movwf	(??_main+1)^(0+128)
  1147  012F  083D               	movf	(??_main+1)^(0+128),w
  1148  0130  00AC               	movwf	messageTransmission@codice^(0+128)
  1149  0131  01AD               	clrf	messageTransmission@valore^(0+128)
  1150  0132  3001               	movlw	1
  1151  0133  120A  118A  2680  120A  118A  	fcall	_messageTransmission
  1152                           
  1153                           ;main.c: 316:             messageTransmission(2, 0, 3, semafori[0]);
  1154  0138  1683               	bsf	3,5	;RP0=1, select bank1
  1155  0139  1303               	bcf	3,6	;RP1=0, select bank1
  1156  013A  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1157  013B  3003               	movlw	3
  1158  013C  00BC               	movwf	??_main^(0+128)
  1159  013D  083C               	movf	??_main^(0+128),w
  1160  013E  00AC               	movwf	messageTransmission@codice^(0+128)
  1161  013F  0841               	movf	_semafori^(0+128),w
  1162  0140  00BD               	movwf	(??_main+1)^(0+128)
  1163  0141  083D               	movf	(??_main+1)^(0+128),w
  1164  0142  00AD               	movwf	messageTransmission@valore^(0+128)
  1165  0143  3002               	movlw	2
  1166  0144  120A  118A  2680  120A  118A  	fcall	_messageTransmission
  1167                           
  1168                           ;main.c: 317:             messageTransmission(2, 1, 3, semafori[1]);
  1169  0149  1683               	bsf	3,5	;RP0=1, select bank1
  1170  014A  1303               	bcf	3,6	;RP1=0, select bank1
  1171  014B  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1172  014C  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1173  014D  3003               	movlw	3
  1174  014E  00BC               	movwf	??_main^(0+128)
  1175  014F  083C               	movf	??_main^(0+128),w
  1176  0150  00AC               	movwf	messageTransmission@codice^(0+128)
  1177  0151  0842               	movf	(_semafori^(0+128)+1),w
  1178  0152  00BD               	movwf	(??_main+1)^(0+128)
  1179  0153  083D               	movf	(??_main+1)^(0+128),w
  1180  0154  00AD               	movwf	messageTransmission@valore^(0+128)
  1181  0155  3002               	movlw	2
  1182  0156  120A  118A  2680  120A  118A  	fcall	_messageTransmission
  1183                           
  1184                           ;main.c: 318:             messageTransmission(2, 2, 3, semafori[2]);
  1185  015B  3002               	movlw	2
  1186  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1187  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1188  015E  00BC               	movwf	??_main^(0+128)
  1189  015F  083C               	movf	??_main^(0+128),w
  1190  0160  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1191  0161  3003               	movlw	3
  1192  0162  00BD               	movwf	(??_main+1)^(0+128)
  1193  0163  083D               	movf	(??_main+1)^(0+128),w
  1194  0164  00AC               	movwf	messageTransmission@codice^(0+128)
  1195  0165  0843               	movf	(_semafori^(0+128)+2),w
  1196  0166  00BE               	movwf	(??_main+2)^(0+128)
  1197  0167  083E               	movf	(??_main+2)^(0+128),w
  1198  0168  00AD               	movwf	messageTransmission@valore^(0+128)
  1199  0169  3002               	movlw	2
  1200  016A  120A  118A  2680  120A  118A  	fcall	_messageTransmission
  1201                           
  1202                           ;main.c: 319:             messageTransmission(2, 3, 3, semafori[3]);
  1203  016F  3003               	movlw	3
  1204  0170  1683               	bsf	3,5	;RP0=1, select bank1
  1205  0171  1303               	bcf	3,6	;RP1=0, select bank1
  1206  0172  00BC               	movwf	??_main^(0+128)
  1207  0173  083C               	movf	??_main^(0+128),w
  1208  0174  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1209  0175  3003               	movlw	3
  1210  0176  00BD               	movwf	(??_main+1)^(0+128)
  1211  0177  083D               	movf	(??_main+1)^(0+128),w
  1212  0178  00AC               	movwf	messageTransmission@codice^(0+128)
  1213  0179  0844               	movf	(_semafori^(0+128)+3),w
  1214  017A  00BE               	movwf	(??_main+2)^(0+128)
  1215  017B  083E               	movf	(??_main+2)^(0+128),w
  1216  017C  00AD               	movwf	messageTransmission@valore^(0+128)
  1217  017D  3002               	movlw	2
  1218  017E  120A  118A  2680  120A  118A  	fcall	_messageTransmission
  1219                           
  1220                           ;main.c: 321:             messageTransmission(2, 1, 4, contMoto);
  1221  0183  1683               	bsf	3,5	;RP0=1, select bank1
  1222  0184  1303               	bcf	3,6	;RP1=0, select bank1
  1223  0185  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1224  0186  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1225  0187  3004               	movlw	4
  1226  0188  00BC               	movwf	??_main^(0+128)
  1227  0189  083C               	movf	??_main^(0+128),w
  1228  018A  00AC               	movwf	messageTransmission@codice^(0+128)
  1229  018B  0851               	movf	_contMoto^(0+128),w
  1230  018C  00BD               	movwf	(??_main+1)^(0+128)
  1231  018D  083D               	movf	(??_main+1)^(0+128),w
  1232  018E  00AD               	movwf	messageTransmission@valore^(0+128)
  1233  018F  3002               	movlw	2
  1234  0190  120A  118A  2680  120A  118A  	fcall	_messageTransmission
  1235  0195                     l1669:	
  1236                           
  1237                           ;main.c: 322:             contMoto=0;
  1238  0195  1683               	bsf	3,5	;RP0=1, select bank1
  1239  0196  1303               	bcf	3,6	;RP1=0, select bank1
  1240  0197  01D1               	clrf	_contMoto^(0+128)
  1241  0198                     l1671:	
  1242                           
  1243                           ;main.c: 323:             messageTransmission(2, 1, 5, contAuto);
  1244  0198  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1245  0199  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1246  019A  3005               	movlw	5
  1247  019B  00BC               	movwf	??_main^(0+128)
  1248  019C  083C               	movf	??_main^(0+128),w
  1249  019D  00AC               	movwf	messageTransmission@codice^(0+128)
  1250  019E  0852               	movf	_contAuto^(0+128),w
  1251  019F  00BD               	movwf	(??_main+1)^(0+128)
  1252  01A0  083D               	movf	(??_main+1)^(0+128),w
  1253  01A1  00AD               	movwf	messageTransmission@valore^(0+128)
  1254  01A2  3002               	movlw	2
  1255  01A3  120A  118A  2680  120A  118A  	fcall	_messageTransmission
  1256                           
  1257                           ;main.c: 324:             contAuto=0;
  1258  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  1259  01A9  1303               	bcf	3,6	;RP1=0, select bank1
  1260  01AA  01D2               	clrf	_contAuto^(0+128)
  1261  01AB                     l1673:	
  1262                           
  1263                           ;main.c: 325:             messageTransmission(2, 1, 6, contCamion);
  1264  01AB  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1265  01AC  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1266  01AD  3006               	movlw	6
  1267  01AE  00BC               	movwf	??_main^(0+128)
  1268  01AF  083C               	movf	??_main^(0+128),w
  1269  01B0  00AC               	movwf	messageTransmission@codice^(0+128)
  1270  01B1  0850               	movf	_contCamion^(0+128),w
  1271  01B2  00BD               	movwf	(??_main+1)^(0+128)
  1272  01B3  083D               	movf	(??_main+1)^(0+128),w
  1273  01B4  00AD               	movwf	messageTransmission@valore^(0+128)
  1274  01B5  3002               	movlw	2
  1275  01B6  120A  118A  2680  120A  118A  	fcall	_messageTransmission
  1276  01BB                     l1675:	
  1277                           
  1278                           ;main.c: 326:             contCamion=0;
  1279  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1280  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  1281  01BD  01D0               	clrf	_contCamion^(0+128)
  1282  01BE                     l1677:	
  1283                           
  1284                           ;main.c: 327:             scattoSemafori=0;
  1285  01BE  01CA               	clrf	_scattoSemafori^(0+128)
  1286  01BF                     l1679:	
  1287                           
  1288                           ;main.c: 332:         if(received)
  1289  01BF  0854               	movf	_received^(0+128),w
  1290  01C0  1903               	btfsc	3,2
  1291  01C1  29C3               	goto	u1491
  1292  01C2  29C4               	goto	u1490
  1293  01C3                     u1491:	
  1294  01C3  2876               	goto	l1603
  1295  01C4                     u1490:	
  1296  01C4                     l1681:	
  1297                           
  1298                           ;main.c: 333:         {;main.c: 335:             temporizzazione=datoSeriale;
  1299  01C4  0853               	movf	_datoSeriale^(0+128),w
  1300  01C5  00BC               	movwf	??_main^(0+128)
  1301  01C6  083C               	movf	??_main^(0+128),w
  1302  01C7  00FC               	movwf	_temporizzazione
  1303  01C8                     l1683:	
  1304                           
  1305                           ;main.c: 339:             received=0;
  1306  01C8  01D4               	clrf	_received^(0+128)
  1307  01C9  2876               	goto	l1603
  1308  01CA  120A  118A  2816   	ljmp	start
  1309  01CD                     __end_of_main:	
  1310                           
  1311                           	psect	text1
  1312  0680                     __ptext1:	
  1313 ;; *************** function _messageTransmission *****************
  1314 ;; Defined at:
  1315 ;;		line 449 in file "main.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;  tipoMessaggi    1    wreg     unsigned char 
  1318 ;;  idStrada        1   11[BANK1 ] unsigned char 
  1319 ;;  codice          1   12[BANK1 ] unsigned char 
  1320 ;;  valore          1   13[BANK1 ] unsigned char 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  tipoMessaggi    1   15[BANK1 ] unsigned char 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      void 
  1325 ;; Registers used:
  1326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1332 ;;      Params:         0       0       3       0       0
  1333 ;;      Locals:         0       0       1       0       0
  1334 ;;      Temps:          0       0       1       0       0
  1335 ;;      Totals:         0       0       5       0       0
  1336 ;;Total ram usage:        5 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; Hardware stack levels required when called:    6
  1339 ;; This function calls:
  1340 ;;		_Uart_send_string
  1341 ;; This function is called by:
  1342 ;;		_main
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           
  1347                           ;psect for function _messageTransmission
  1348  0680                     _messageTransmission:	
  1349                           
  1350                           ;incstack = 0
  1351                           ; Regs used in _messageTransmission: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1352                           ;messageTransmission@tipoMessaggio stored from wreg
  1353  0680  1683               	bsf	3,5	;RP0=1, select bank1
  1354  0681  1303               	bcf	3,6	;RP1=0, select bank1
  1355  0682  00AF               	movwf	messageTransmission@tipoMessaggio^(0+128)
  1356  0683                     l1529:	
  1357                           
  1358                           ;main.c: 449: void messageTransmission(char tipoMessaggio, char idStrada, char codice, c
      +                          har valore);main.c: 450: {;main.c: 451:     strToSend[0]=tipoMessaggio;
  1359  0683  082F               	movf	messageTransmission@tipoMessaggio^(0+128),w
  1360  0684  00AE               	movwf	??_messageTransmission^(0+128)
  1361  0685  082E               	movf	??_messageTransmission^(0+128),w
  1362  0686  00D5               	movwf	_strToSend^(0+128)
  1363                           
  1364                           ;main.c: 452:     strToSend[1]=200;
  1365  0687  30C8               	movlw	200
  1366  0688  00AE               	movwf	??_messageTransmission^(0+128)
  1367  0689  082E               	movf	??_messageTransmission^(0+128),w
  1368  068A  00D6               	movwf	(_strToSend^(0+128)+1)
  1369                           
  1370                           ;main.c: 453:     strToSend[2]=4;
  1371  068B  3004               	movlw	4
  1372  068C  00AE               	movwf	??_messageTransmission^(0+128)
  1373  068D  082E               	movf	??_messageTransmission^(0+128),w
  1374  068E  00D7               	movwf	(_strToSend^(0+128)+2)
  1375                           
  1376                           ;main.c: 454:     strToSend[3]=idStrada;
  1377  068F  082B               	movf	messageTransmission@idStrada^(0+128),w
  1378  0690  00AE               	movwf	??_messageTransmission^(0+128)
  1379  0691  082E               	movf	??_messageTransmission^(0+128),w
  1380  0692  00D8               	movwf	(_strToSend^(0+128)+3)
  1381                           
  1382                           ;main.c: 455:     strToSend[4]=codice;
  1383  0693  082C               	movf	messageTransmission@codice^(0+128),w
  1384  0694  00AE               	movwf	??_messageTransmission^(0+128)
  1385  0695  082E               	movf	??_messageTransmission^(0+128),w
  1386  0696  00D9               	movwf	(_strToSend^(0+128)+4)
  1387                           
  1388                           ;main.c: 456:     strToSend[5]=valore;
  1389  0697  082D               	movf	messageTransmission@valore^(0+128),w
  1390  0698  00AE               	movwf	??_messageTransmission^(0+128)
  1391  0699  082E               	movf	??_messageTransmission^(0+128),w
  1392  069A  00DA               	movwf	(_strToSend^(0+128)+5)
  1393  069B                     l1531:	
  1394                           
  1395                           ;main.c: 457:     Uart_send_string(strToSend);
  1396  069B  30D5               	movlw	(low (_strToSend| 0))& (0+255)
  1397  069C  120A  118A  2703  120A  118A  	fcall	_Uart_send_string
  1398  06A1                     l176:	
  1399  06A1  0008               	return
  1400  06A2                     __end_of_messageTransmission:	
  1401                           
  1402                           	psect	text2
  1403  0703                     __ptext2:	
  1404 ;; *************** function _Uart_send_string *****************
  1405 ;; Defined at:
  1406 ;;		line 483 in file "main.c"
  1407 ;; Parameters:    Size  Location     Type
  1408 ;;  str             1    wreg     PTR unsigned char 
  1409 ;;		 -> strToSend(8), 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  str             1    9[BANK1 ] PTR unsigned char 
  1412 ;;		 -> strToSend(8), 
  1413 ;;  i               1   10[BANK1 ] unsigned char 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  1    wreg      void 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1423 ;;      Params:         0       0       0       0       0
  1424 ;;      Locals:         0       0       2       0       0
  1425 ;;      Temps:          0       0       1       0       0
  1426 ;;      Totals:         0       0       3       0       0
  1427 ;;Total ram usage:        3 bytes
  1428 ;; Hardware stack levels used:    1
  1429 ;; Hardware stack levels required when called:    5
  1430 ;; This function calls:
  1431 ;;		_UART_TxChar
  1432 ;; This function is called by:
  1433 ;;		_messageTransmission
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           
  1438                           ;psect for function _Uart_send_string
  1439  0703                     _Uart_send_string:	
  1440                           
  1441                           ;incstack = 0
  1442                           ; Regs used in _Uart_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1443                           ;Uart_send_string@str stored from wreg
  1444  0703  1683               	bsf	3,5	;RP0=1, select bank1
  1445  0704  1303               	bcf	3,6	;RP1=0, select bank1
  1446  0705  00A9               	movwf	Uart_send_string@str^(0+128)
  1447  0706                     l1337:	
  1448                           
  1449                           ;main.c: 483: void Uart_send_string(char *str);main.c: 484: {;main.c: 485:     char i;;m
      +                          ain.c: 486:     for(i=0;i<6;i++)
  1450  0706  01AA               	clrf	Uart_send_string@i^(0+128)
  1451  0707                     l1343:	
  1452                           
  1453                           ;main.c: 487:     {;main.c: 488:         UART_TxChar(*(str+i));
  1454  0707  082A               	movf	Uart_send_string@i^(0+128),w
  1455  0708  0729               	addwf	Uart_send_string@str^(0+128),w
  1456  0709  00A8               	movwf	??_Uart_send_string^(0+128)
  1457  070A  0828               	movf	??_Uart_send_string^(0+128),w
  1458  070B  0084               	movwf	4
  1459  070C  1383               	bcf	3,7	;select IRP bank0
  1460  070D  0800               	movf	0,w
  1461  070E  120A  118A  2733  120A  118A  	fcall	_UART_TxChar
  1462  0713                     l1345:	
  1463                           
  1464                           ;main.c: 489:     }
  1465  0713  3001               	movlw	1
  1466  0714  1683               	bsf	3,5	;RP0=1, select bank1
  1467  0715  1303               	bcf	3,6	;RP1=0, select bank1
  1468  0716  00A8               	movwf	??_Uart_send_string^(0+128)
  1469  0717  0828               	movf	??_Uart_send_string^(0+128),w
  1470  0718  07AA               	addwf	Uart_send_string@i^(0+128),f
  1471  0719                     l1347:	
  1472  0719  3006               	movlw	6
  1473  071A  022A               	subwf	Uart_send_string@i^(0+128),w
  1474  071B  1C03               	skipc
  1475  071C  2F1E               	goto	u901
  1476  071D  2F1F               	goto	u900
  1477  071E                     u901:	
  1478  071E  2F07               	goto	l1343
  1479  071F                     u900:	
  1480  071F                     l190:	
  1481  071F  0008               	return
  1482  0720                     __end_of_Uart_send_string:	
  1483                           
  1484                           	psect	text3
  1485  0733                     __ptext3:	
  1486 ;; *************** function _UART_TxChar *****************
  1487 ;; Defined at:
  1488 ;;		line 654 in file "main.c"
  1489 ;; Parameters:    Size  Location     Type
  1490 ;;  dato            1    wreg     unsigned char 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  dato            1    7[BANK1 ] unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  1    wreg      void 
  1495 ;; Registers used:
  1496 ;;		wreg
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1502 ;;      Params:         0       0       0       0       0
  1503 ;;      Locals:         0       0       1       0       0
  1504 ;;      Temps:          0       0       0       0       0
  1505 ;;      Totals:         0       0       1       0       0
  1506 ;;Total ram usage:        1 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; Hardware stack levels required when called:    4
  1509 ;; This function calls:
  1510 ;;		Nothing
  1511 ;; This function is called by:
  1512 ;;		_Uart_send_string
  1513 ;; This function uses a non-reentrant model
  1514 ;;
  1515                           
  1516                           
  1517                           ;psect for function _UART_TxChar
  1518  0733                     _UART_TxChar:	
  1519                           
  1520                           ;incstack = 0
  1521                           ; Regs used in _UART_TxChar: [wreg]
  1522                           ;UART_TxChar@dato stored from wreg
  1523  0733  1683               	bsf	3,5	;RP0=1, select bank1
  1524  0734  1303               	bcf	3,6	;RP1=0, select bank1
  1525  0735  00A7               	movwf	UART_TxChar@dato^(0+128)
  1526  0736                     l1313:	
  1527  0736                     l248:	
  1528                           ;main.c: 654: void UART_TxChar(char dato);main.c: 655: {;main.c: 656:     while (!TXIF);
  1529                           
  1530  0736  1283               	bcf	3,5	;RP0=0, select bank0
  1531  0737  1E0C               	btfss	12,4	;volatile
  1532  0738  2F3A               	goto	u891
  1533  0739  2F3B               	goto	u890
  1534  073A                     u891:	
  1535  073A  2F36               	goto	l248
  1536  073B                     u890:	
  1537  073B                     l250:	
  1538                           
  1539                           ;main.c: 657:     TXIF = 0;
  1540  073B  120C               	bcf	12,4	;volatile
  1541  073C                     l1315:	
  1542                           
  1543                           ;main.c: 658:     TXREG = dato;
  1544  073C  1683               	bsf	3,5	;RP0=1, select bank1
  1545  073D  1303               	bcf	3,6	;RP1=0, select bank1
  1546  073E  0827               	movf	UART_TxChar@dato^(0+128),w
  1547  073F  1283               	bcf	3,5	;RP0=0, select bank0
  1548  0740  1303               	bcf	3,6	;RP1=0, select bank0
  1549  0741  0099               	movwf	25	;volatile
  1550  0742                     l251:	
  1551  0742  0008               	return
  1552  0743                     __end_of_UART_TxChar:	
  1553                           
  1554                           	psect	text4
  1555  0583                     __ptext4:	
  1556 ;; *************** function _init_lcd *****************
  1557 ;; Defined at:
  1558 ;;		line 621 in file "main.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;		None
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;		None
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, status,2, status,0, pclath, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1572 ;;      Params:         0       0       0       0       0
  1573 ;;      Locals:         0       0       0       0       0
  1574 ;;      Temps:          0       0       2       0       0
  1575 ;;      Totals:         0       0       2       0       0
  1576 ;;Total ram usage:        2 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    5
  1579 ;; This function calls:
  1580 ;;		_send_cmd
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           
  1587                           ;psect for function _init_lcd
  1588  0583                     _init_lcd:	
  1589  0583                     l1505:	
  1590                           ;incstack = 0
  1591                           ; Regs used in _init_lcd: [wreg+status,2+status,0+pclath+cstack]
  1592                           
  1593                           
  1594                           ;main.c: 623:     PORTEbits.RE2 = 0;
  1595  0583  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0584  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0585  1109               	bcf	9,2	;volatile
  1598                           
  1599                           ;main.c: 624:     PORTEbits.RE1 = 0;
  1600  0586  1089               	bcf	9,1	;volatile
  1601  0587                     l1507:	
  1602                           
  1603                           ;main.c: 625:     _delay((unsigned long)((20)*(32000000L/4000.0)));
  1604  0587  30D0               	movlw	208
  1605  0588  1683               	bsf	3,5	;RP0=1, select bank1
  1606  0589  1303               	bcf	3,6	;RP1=0, select bank1
  1607  058A  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1608  058B  30C9               	movlw	201
  1609  058C  00AA               	movwf	??_init_lcd^(0+128)
  1610  058D                     u1737:	
  1611  058D  0BAA               	decfsz	??_init_lcd^(0+128),f
  1612  058E  2D8D               	goto	u1737
  1613  058F  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1614  0590  2D8D               	goto	u1737
  1615  0591                     l1509:	
  1616                           
  1617                           ;main.c: 626:     PORTEbits.RE1 = 1;
  1618  0591  1283               	bcf	3,5	;RP0=0, select bank0
  1619  0592  1303               	bcf	3,6	;RP1=0, select bank0
  1620  0593  1489               	bsf	9,1	;volatile
  1621  0594                     l1511:	
  1622                           
  1623                           ;main.c: 627:     send_cmd(0x38);
  1624  0594  3038               	movlw	56
  1625  0595  120A  118A  2658  120A  118A  	fcall	_send_cmd
  1626  059A                     l1513:	
  1627                           
  1628                           ;main.c: 628:     _delay((unsigned long)((5)*(32000000L/4000.0)));
  1629  059A  3034               	movlw	52
  1630  059B  1683               	bsf	3,5	;RP0=1, select bank1
  1631  059C  1303               	bcf	3,6	;RP1=0, select bank1
  1632  059D  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1633  059E  30F1               	movlw	241
  1634  059F  00AA               	movwf	??_init_lcd^(0+128)
  1635  05A0                     u1747:	
  1636  05A0  0BAA               	decfsz	??_init_lcd^(0+128),f
  1637  05A1  2DA0               	goto	u1747
  1638  05A2  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1639  05A3  2DA0               	goto	u1747
  1640                           
  1641                           ;main.c: 629:     send_cmd(0x38);
  1642  05A4  3038               	movlw	56
  1643  05A5  120A  118A  2658  120A  118A  	fcall	_send_cmd
  1644  05AA                     l1515:	
  1645                           
  1646                           ;main.c: 630:     _delay((unsigned long)((1)*(32000000L/4000.0)));
  1647  05AA  300B               	movlw	11
  1648  05AB  1683               	bsf	3,5	;RP0=1, select bank1
  1649  05AC  1303               	bcf	3,6	;RP1=0, select bank1
  1650  05AD  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1651  05AE  3061               	movlw	97
  1652  05AF  00AA               	movwf	??_init_lcd^(0+128)
  1653  05B0                     u1757:	
  1654  05B0  0BAA               	decfsz	??_init_lcd^(0+128),f
  1655  05B1  2DB0               	goto	u1757
  1656  05B2  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1657  05B3  2DB0               	goto	u1757
  1658  05B4  2DB5               	nop2
  1659  05B5                     l1517:	
  1660                           
  1661                           ;main.c: 631:     send_cmd(0x38);
  1662  05B5  3038               	movlw	56
  1663  05B6  120A  118A  2658  120A  118A  	fcall	_send_cmd
  1664  05BB                     l1519:	
  1665                           
  1666                           ;main.c: 632:     send_cmd(0x08);
  1667  05BB  3008               	movlw	8
  1668  05BC  120A  118A  2658  120A  118A  	fcall	_send_cmd
  1669  05C1                     l1521:	
  1670                           
  1671                           ;main.c: 633:     send_cmd(0x0F);
  1672  05C1  300F               	movlw	15
  1673  05C2  120A  118A  2658  120A  118A  	fcall	_send_cmd
  1674  05C7                     l1523:	
  1675                           
  1676                           ;main.c: 634:     send_cmd(0x01);
  1677  05C7  3001               	movlw	1
  1678  05C8  120A  118A  2658  120A  118A  	fcall	_send_cmd
  1679  05CD                     l1525:	
  1680                           
  1681                           ;main.c: 635:     send_cmd(0x0C);
  1682  05CD  300C               	movlw	12
  1683  05CE  120A  118A  2658  120A  118A  	fcall	_send_cmd
  1684  05D3                     l1527:	
  1685                           
  1686                           ;main.c: 636:     send_cmd(0x80);
  1687  05D3  3080               	movlw	128
  1688  05D4  120A  118A  2658  120A  118A  	fcall	_send_cmd
  1689  05D9                     l242:	
  1690  05D9  0008               	return
  1691  05DA                     __end_of_init_lcd:	
  1692                           
  1693                           	psect	text5
  1694  0658                     __ptext5:	
  1695 ;; *************** function _send_cmd *****************
  1696 ;; Defined at:
  1697 ;;		line 609 in file "main.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;  command         1    wreg     unsigned char 
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;  command         1    9[BANK1 ] unsigned char 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1711 ;;      Params:         0       0       0       0       0
  1712 ;;      Locals:         0       0       1       0       0
  1713 ;;      Temps:          0       0       2       0       0
  1714 ;;      Totals:         0       0       3       0       0
  1715 ;;Total ram usage:        3 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    4
  1718 ;; This function calls:
  1719 ;;		Nothing
  1720 ;; This function is called by:
  1721 ;;		_main
  1722 ;;		_init_lcd
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           
  1727                           ;psect for function _send_cmd
  1728  0658                     _send_cmd:	
  1729                           
  1730                           ;incstack = 0
  1731                           ; Regs used in _send_cmd: [wreg]
  1732                           ;send_cmd@command stored from wreg
  1733  0658  1683               	bsf	3,5	;RP0=1, select bank1
  1734  0659  1303               	bcf	3,6	;RP1=0, select bank1
  1735  065A  00A9               	movwf	send_cmd@command^(0+128)
  1736  065B                     l1327:	
  1737                           
  1738                           ;main.c: 609: void send_cmd(char command);main.c: 610: {;main.c: 611:     PORTEbits.RE1 
      +                          = 1;
  1739  065B  1283               	bcf	3,5	;RP0=0, select bank0
  1740  065C  1303               	bcf	3,6	;RP1=0, select bank0
  1741  065D  1489               	bsf	9,1	;volatile
  1742  065E                     l1329:	
  1743                           
  1744                           ;main.c: 612:     PORTD = command;
  1745  065E  1683               	bsf	3,5	;RP0=1, select bank1
  1746  065F  1303               	bcf	3,6	;RP1=0, select bank1
  1747  0660  0829               	movf	send_cmd@command^(0+128),w
  1748  0661  1283               	bcf	3,5	;RP0=0, select bank0
  1749  0662  1303               	bcf	3,6	;RP1=0, select bank0
  1750  0663  0088               	movwf	8	;volatile
  1751  0664                     l1331:	
  1752                           
  1753                           ;main.c: 613:     PORTEbits.RE2 = 0;
  1754  0664  1109               	bcf	9,2	;volatile
  1755                           
  1756                           ;main.c: 614:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  1757  0665  3020               	movlw	32
  1758  0666  1683               	bsf	3,5	;RP0=1, select bank1
  1759  0667  1303               	bcf	3,6	;RP1=0, select bank1
  1760  0668  00A8               	movwf	(??_send_cmd^(0+128)+1)
  1761  0669  3029               	movlw	41
  1762  066A  00A7               	movwf	??_send_cmd^(0+128)
  1763  066B                     u1767:	
  1764  066B  0BA7               	decfsz	??_send_cmd^(0+128),f
  1765  066C  2E6B               	goto	u1767
  1766  066D  0BA8               	decfsz	(??_send_cmd^(0+128)+1),f
  1767  066E  2E6B               	goto	u1767
  1768  066F                     l1333:	
  1769                           
  1770                           ;main.c: 615:     PORTEbits.RE1 = 0;
  1771  066F  1283               	bcf	3,5	;RP0=0, select bank0
  1772  0670  1303               	bcf	3,6	;RP1=0, select bank0
  1773  0671  1089               	bcf	9,1	;volatile
  1774                           
  1775                           ;main.c: 616:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  1776  0672  3020               	movlw	32
  1777  0673  1683               	bsf	3,5	;RP0=1, select bank1
  1778  0674  1303               	bcf	3,6	;RP1=0, select bank1
  1779  0675  00A8               	movwf	(??_send_cmd^(0+128)+1)
  1780  0676  3029               	movlw	41
  1781  0677  00A7               	movwf	??_send_cmd^(0+128)
  1782  0678                     u1777:	
  1783  0678  0BA7               	decfsz	??_send_cmd^(0+128),f
  1784  0679  2E78               	goto	u1777
  1785  067A  0BA8               	decfsz	(??_send_cmd^(0+128)+1),f
  1786  067B  2E78               	goto	u1777
  1787  067C                     l1335:	
  1788                           
  1789                           ;main.c: 617:     PORTEbits.RE1 = 1;
  1790  067C  1283               	bcf	3,5	;RP0=0, select bank0
  1791  067D  1303               	bcf	3,6	;RP1=0, select bank0
  1792  067E  1489               	bsf	9,1	;volatile
  1793  067F                     l239:	
  1794  067F  0008               	return
  1795  0680                     __end_of_send_cmd:	
  1796                           
  1797                           	psect	text6
  1798  0743                     __ptext6:	
  1799 ;; *************** function _initPic *****************
  1800 ;; Defined at:
  1801 ;;		line 495 in file "main.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		wreg, status,2
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1815 ;;      Params:         0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0
  1818 ;;      Totals:         0       0       0       0       0
  1819 ;;Total ram usage:        0 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    4
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           
  1830                           ;psect for function _initPic
  1831  0743                     _initPic:	
  1832  0743                     l1489:	
  1833                           ;incstack = 0
  1834                           ; Regs used in _initPic: [wreg+status,2]
  1835                           
  1836                           
  1837                           ;main.c: 497:     TRISD = 0x00;
  1838  0743  1683               	bsf	3,5	;RP0=1, select bank1
  1839  0744  1303               	bcf	3,6	;RP1=0, select bank1
  1840  0745  0188               	clrf	8	;volatile
  1841  0746                     l1491:	
  1842                           
  1843                           ;main.c: 498:     TRISB = 0xFF;
  1844  0746  30FF               	movlw	255
  1845  0747  0086               	movwf	6	;volatile
  1846  0748                     l1493:	
  1847                           
  1848                           ;main.c: 499:     TRISE = 0x00;
  1849  0748  0189               	clrf	9	;volatile
  1850                           
  1851                           ;main.c: 501:     INTCON = 0xA0;
  1852  0749  30A0               	movlw	160
  1853  074A  008B               	movwf	11	;volatile
  1854                           
  1855                           ;main.c: 502:     OPTION_REG = 0x07;
  1856  074B  3007               	movlw	7
  1857  074C  0081               	movwf	1	;volatile
  1858                           
  1859                           ;main.c: 503:     TMR0 = 6;
  1860  074D  3006               	movlw	6
  1861  074E  1283               	bcf	3,5	;RP0=0, select bank0
  1862  074F  1303               	bcf	3,6	;RP1=0, select bank0
  1863  0750  0081               	movwf	1	;volatile
  1864  0751                     l193:	
  1865  0751  0008               	return
  1866  0752                     __end_of_initPic:	
  1867                           
  1868                           	psect	text7
  1869  061E                     __ptext7:	
  1870 ;; *************** function _UART_init *****************
  1871 ;; Defined at:
  1872 ;;		line 641 in file "main.c"
  1873 ;; Parameters:    Size  Location     Type
  1874 ;;  baudrate        2   22[BANK1 ] int 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;		None
  1877 ;; Return value:  Size  Location     Type
  1878 ;;                  1    wreg      void 
  1879 ;; Registers used:
  1880 ;;		wreg, status,2, status,0, pclath, cstack
  1881 ;; Tracked objects:
  1882 ;;		On entry : 0/0
  1883 ;;		On exit  : 0/0
  1884 ;;		Unchanged: 0/0
  1885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1886 ;;      Params:         0       0       2       0       0
  1887 ;;      Locals:         0       0       0       0       0
  1888 ;;      Temps:          0       0       4       0       0
  1889 ;;      Totals:         0       0       6       0       0
  1890 ;;Total ram usage:        6 bytes
  1891 ;; Hardware stack levels used:    1
  1892 ;; Hardware stack levels required when called:    5
  1893 ;; This function calls:
  1894 ;;		___aldiv
  1895 ;; This function is called by:
  1896 ;;		_main
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function _UART_init
  1902  061E                     _UART_init:	
  1903  061E                     l1495:	
  1904                           ;incstack = 0
  1905                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  1906                           
  1907                           
  1908                           ;main.c: 641: void UART_init(int baudrate);main.c: 642: {;main.c: 643:     TRISCbits.TRI
      +                          SC6 = 0;
  1909  061E  1683               	bsf	3,5	;RP0=1, select bank1
  1910  061F  1303               	bcf	3,6	;RP1=0, select bank1
  1911  0620  1307               	bcf	7,6	;volatile
  1912                           
  1913                           ;main.c: 644:     TXSTAbits.TXEN = 1;
  1914  0621  1698               	bsf	24,5	;volatile
  1915                           
  1916                           ;main.c: 645:     RCSTAbits.SPEN = 1;
  1917  0622  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0623  1303               	bcf	3,6	;RP1=0, select bank0
  1919  0624  1798               	bsf	24,7	;volatile
  1920                           
  1921                           ;main.c: 646:     RCSTAbits.CREN = 1;
  1922  0625  1618               	bsf	24,4	;volatile
  1923  0626                     l1497:	
  1924                           
  1925                           ;main.c: 647:     SPBRG = (32000000L/(long)(64UL*baudrate))-1;
  1926  0626  1683               	bsf	3,5	;RP0=1, select bank1
  1927  0627  1303               	bcf	3,6	;RP1=0, select bank1
  1928  0628  0836               	movf	UART_init@baudrate^(0+128),w
  1929  0629  00B8               	movwf	??_UART_init^(0+128)
  1930  062A  0837               	movf	(UART_init@baudrate+1)^(0+128),w
  1931  062B  00B9               	movwf	(??_UART_init^(0+128)+1)
  1932  062C  3000               	movlw	0
  1933  062D  1BB9               	btfsc	(??_UART_init^(0+128)+1),7
  1934  062E  30FF               	movlw	255
  1935  062F  00BA               	movwf	(??_UART_init^(0+128)+2)
  1936  0630  00BB               	movwf	(??_UART_init^(0+128)+3)
  1937  0631  3006               	movlw	6
  1938  0632                     u1215:	
  1939  0632  1003               	clrc
  1940  0633  0DB8               	rlf	??_UART_init^(0+128),f
  1941  0634  0DB9               	rlf	(??_UART_init^(0+128)+1),f
  1942  0635  0DBA               	rlf	(??_UART_init^(0+128)+2),f
  1943  0636  0DBB               	rlf	(??_UART_init^(0+128)+3),f
  1944  0637                     u1210:	
  1945  0637  3EFF               	addlw	-1
  1946  0638  1D03               	skipz
  1947  0639  2E32               	goto	u1215
  1948  063A  083B               	movf	(??_UART_init+3)^(0+128),w
  1949  063B  00AA               	movwf	(___aldiv@divisor+3)^(0+128)
  1950  063C  083A               	movf	(??_UART_init+2)^(0+128),w
  1951  063D  00A9               	movwf	(___aldiv@divisor+2)^(0+128)
  1952  063E  0839               	movf	(??_UART_init+1)^(0+128),w
  1953  063F  00A8               	movwf	(___aldiv@divisor+1)^(0+128)
  1954  0640  0838               	movf	??_UART_init^(0+128),w
  1955  0641  00A7               	movwf	___aldiv@divisor^(0+128)
  1956  0642  3001               	movlw	1
  1957  0643  00AE               	movwf	(___aldiv@dividend+3)^(0+128)
  1958  0644  30E8               	movlw	232
  1959  0645  00AD               	movwf	(___aldiv@dividend+2)^(0+128)
  1960  0646  3048               	movlw	72
  1961  0647  00AC               	movwf	(___aldiv@dividend+1)^(0+128)
  1962  0648  3000               	movlw	0
  1963  0649  00AB               	movwf	___aldiv@dividend^(0+128)
  1964  064A  120A  118A  2426  120A  118A  	fcall	___aldiv
  1965  064F  1683               	bsf	3,5	;RP0=1, select bank1
  1966  0650  1303               	bcf	3,6	;RP1=0, select bank1
  1967  0651  0827               	movf	?___aldiv^(0+128),w
  1968  0652  3EFF               	addlw	255
  1969  0653  0099               	movwf	25	;volatile
  1970  0654                     l1499:	
  1971                           
  1972                           ;main.c: 648:     INTCONbits.GIE = 1;
  1973  0654  178B               	bsf	11,7	;volatile
  1974  0655                     l1501:	
  1975                           
  1976                           ;main.c: 649:     INTCONbits.PEIE = 1;
  1977  0655  170B               	bsf	11,6	;volatile
  1978  0656                     l1503:	
  1979                           
  1980                           ;main.c: 650:     PIE1bits.RCIE = 1;
  1981  0656  168C               	bsf	12,5	;volatile
  1982  0657                     l245:	
  1983  0657  0008               	return
  1984  0658                     __end_of_UART_init:	
  1985                           
  1986                           	psect	text8
  1987  0426                     __ptext8:	
  1988 ;; *************** function ___aldiv *****************
  1989 ;; Defined at:
  1990 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1991 ;; Parameters:    Size  Location     Type
  1992 ;;  divisor         4    7[BANK1 ] long 
  1993 ;;  dividend        4   11[BANK1 ] long 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  quotient        4   18[BANK1 ] long 
  1996 ;;  sign            1   17[BANK1 ] unsigned char 
  1997 ;;  counter         1   16[BANK1 ] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  4    7[BANK1 ] long 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2007 ;;      Params:         0       0       8       0       0
  2008 ;;      Locals:         0       0       6       0       0
  2009 ;;      Temps:          0       0       1       0       0
  2010 ;;      Totals:         0       0      15       0       0
  2011 ;;Total ram usage:       15 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    4
  2014 ;; This function calls:
  2015 ;;		Nothing
  2016 ;; This function is called by:
  2017 ;;		_UART_init
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           
  2022                           ;psect for function ___aldiv
  2023  0426                     ___aldiv:	
  2024  0426                     l1357:	
  2025                           ;incstack = 0
  2026                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2027                           
  2028  0426  1683               	bsf	3,5	;RP0=1, select bank1
  2029  0427  1303               	bcf	3,6	;RP1=0, select bank1
  2030  0428  01B1               	clrf	___aldiv@sign^(0+128)
  2031  0429                     l1359:	
  2032  0429  1FAA               	btfss	(___aldiv@divisor+3)^(0+128),7
  2033  042A  2C2C               	goto	u921
  2034  042B  2C2D               	goto	u920
  2035  042C                     u921:	
  2036  042C  2C3A               	goto	l402
  2037  042D                     u920:	
  2038  042D                     l1361:	
  2039  042D  09A7               	comf	___aldiv@divisor^(0+128),f
  2040  042E  09A8               	comf	(___aldiv@divisor+1)^(0+128),f
  2041  042F  09A9               	comf	(___aldiv@divisor+2)^(0+128),f
  2042  0430  09AA               	comf	(___aldiv@divisor+3)^(0+128),f
  2043  0431  0AA7               	incf	___aldiv@divisor^(0+128),f
  2044  0432  1903               	skipnz
  2045  0433  0AA8               	incf	(___aldiv@divisor+1)^(0+128),f
  2046  0434  1903               	skipnz
  2047  0435  0AA9               	incf	(___aldiv@divisor+2)^(0+128),f
  2048  0436  1903               	skipnz
  2049  0437  0AAA               	incf	(___aldiv@divisor+3)^(0+128),f
  2050  0438  01B1               	clrf	___aldiv@sign^(0+128)
  2051  0439  0AB1               	incf	___aldiv@sign^(0+128),f
  2052  043A                     l402:	
  2053  043A  1FAE               	btfss	(___aldiv@dividend+3)^(0+128),7
  2054  043B  2C3D               	goto	u931
  2055  043C  2C3E               	goto	u930
  2056  043D                     u931:	
  2057  043D  2C4D               	goto	l1367
  2058  043E                     u930:	
  2059  043E                     l1363:	
  2060  043E  09AB               	comf	___aldiv@dividend^(0+128),f
  2061  043F  09AC               	comf	(___aldiv@dividend+1)^(0+128),f
  2062  0440  09AD               	comf	(___aldiv@dividend+2)^(0+128),f
  2063  0441  09AE               	comf	(___aldiv@dividend+3)^(0+128),f
  2064  0442  0AAB               	incf	___aldiv@dividend^(0+128),f
  2065  0443  1903               	skipnz
  2066  0444  0AAC               	incf	(___aldiv@dividend+1)^(0+128),f
  2067  0445  1903               	skipnz
  2068  0446  0AAD               	incf	(___aldiv@dividend+2)^(0+128),f
  2069  0447  1903               	skipnz
  2070  0448  0AAE               	incf	(___aldiv@dividend+3)^(0+128),f
  2071  0449                     l1365:	
  2072  0449  3001               	movlw	1
  2073  044A  00AF               	movwf	??___aldiv^(0+128)
  2074  044B  082F               	movf	??___aldiv^(0+128),w
  2075  044C  06B1               	xorwf	___aldiv@sign^(0+128),f
  2076  044D                     l1367:	
  2077  044D  3000               	movlw	0
  2078  044E  00B5               	movwf	(___aldiv@quotient+3)^(0+128)
  2079  044F  3000               	movlw	0
  2080  0450  00B4               	movwf	(___aldiv@quotient+2)^(0+128)
  2081  0451  3000               	movlw	0
  2082  0452  00B3               	movwf	(___aldiv@quotient+1)^(0+128)
  2083  0453  3000               	movlw	0
  2084  0454  00B2               	movwf	___aldiv@quotient^(0+128)
  2085  0455                     l1369:	
  2086  0455  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2087  0456  0429               	iorwf	(___aldiv@divisor+2)^(0+128),w
  2088  0457  0428               	iorwf	(___aldiv@divisor+1)^(0+128),w
  2089  0458  0427               	iorwf	___aldiv@divisor^(0+128),w
  2090  0459  1903               	skipnz
  2091  045A  2C5C               	goto	u941
  2092  045B  2C5D               	goto	u940
  2093  045C                     u941:	
  2094  045C  2CAA               	goto	l1389
  2095  045D                     u940:	
  2096  045D                     l1371:	
  2097  045D  01B0               	clrf	___aldiv@counter^(0+128)
  2098  045E  0AB0               	incf	___aldiv@counter^(0+128),f
  2099  045F  2C6D               	goto	l1375
  2100  0460                     l1373:	
  2101  0460  3001               	movlw	1
  2102  0461  00AF               	movwf	??___aldiv^(0+128)
  2103  0462                     u955:	
  2104  0462  1003               	clrc
  2105  0463  0DA7               	rlf	___aldiv@divisor^(0+128),f
  2106  0464  0DA8               	rlf	(___aldiv@divisor+1)^(0+128),f
  2107  0465  0DA9               	rlf	(___aldiv@divisor+2)^(0+128),f
  2108  0466  0DAA               	rlf	(___aldiv@divisor+3)^(0+128),f
  2109  0467  0BAF               	decfsz	??___aldiv^(0+128),f
  2110  0468  2C62               	goto	u955
  2111  0469  3001               	movlw	1
  2112  046A  00AF               	movwf	??___aldiv^(0+128)
  2113  046B  082F               	movf	??___aldiv^(0+128),w
  2114  046C  07B0               	addwf	___aldiv@counter^(0+128),f
  2115  046D                     l1375:	
  2116  046D  1FAA               	btfss	(___aldiv@divisor+3)^(0+128),7
  2117  046E  2C70               	goto	u961
  2118  046F  2C71               	goto	u960
  2119  0470                     u961:	
  2120  0470  2C60               	goto	l1373
  2121  0471                     u960:	
  2122  0471                     l1377:	
  2123  0471  3001               	movlw	1
  2124  0472  00AF               	movwf	??___aldiv^(0+128)
  2125  0473                     u975:	
  2126  0473  1003               	clrc
  2127  0474  0DB2               	rlf	___aldiv@quotient^(0+128),f
  2128  0475  0DB3               	rlf	(___aldiv@quotient+1)^(0+128),f
  2129  0476  0DB4               	rlf	(___aldiv@quotient+2)^(0+128),f
  2130  0477  0DB5               	rlf	(___aldiv@quotient+3)^(0+128),f
  2131  0478  0BAF               	decfsz	??___aldiv^(0+128),f
  2132  0479  2C73               	goto	u975
  2133  047A                     l1379:	
  2134  047A  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2135  047B  022E               	subwf	(___aldiv@dividend+3)^(0+128),w
  2136  047C  1D03               	skipz
  2137  047D  2C88               	goto	u985
  2138  047E  0829               	movf	(___aldiv@divisor+2)^(0+128),w
  2139  047F  022D               	subwf	(___aldiv@dividend+2)^(0+128),w
  2140  0480  1D03               	skipz
  2141  0481  2C88               	goto	u985
  2142  0482  0828               	movf	(___aldiv@divisor+1)^(0+128),w
  2143  0483  022C               	subwf	(___aldiv@dividend+1)^(0+128),w
  2144  0484  1D03               	skipz
  2145  0485  2C88               	goto	u985
  2146  0486  0827               	movf	___aldiv@divisor^(0+128),w
  2147  0487  022B               	subwf	___aldiv@dividend^(0+128),w
  2148  0488                     u985:	
  2149  0488  1C03               	skipc
  2150  0489  2C8B               	goto	u981
  2151  048A  2C8C               	goto	u980
  2152  048B                     u981:	
  2153  048B  2C9B               	goto	l1385
  2154  048C                     u980:	
  2155  048C                     l1381:	
  2156  048C  0827               	movf	___aldiv@divisor^(0+128),w
  2157  048D  02AB               	subwf	___aldiv@dividend^(0+128),f
  2158  048E  0828               	movf	(___aldiv@divisor+1)^(0+128),w
  2159  048F  1C03               	skipc
  2160  0490  0F28               	incfsz	(___aldiv@divisor+1)^(0+128),w
  2161  0491  02AC               	subwf	(___aldiv@dividend+1)^(0+128),f
  2162  0492  0829               	movf	(___aldiv@divisor+2)^(0+128),w
  2163  0493  1C03               	skipc
  2164  0494  0F29               	incfsz	(___aldiv@divisor+2)^(0+128),w
  2165  0495  02AD               	subwf	(___aldiv@dividend+2)^(0+128),f
  2166  0496  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2167  0497  1C03               	skipc
  2168  0498  0F2A               	incfsz	(___aldiv@divisor+3)^(0+128),w
  2169  0499  02AE               	subwf	(___aldiv@dividend+3)^(0+128),f
  2170  049A                     l1383:	
  2171  049A  1432               	bsf	___aldiv@quotient^(0+128),0
  2172  049B                     l1385:	
  2173  049B  3001               	movlw	1
  2174  049C                     u995:	
  2175  049C  1003               	clrc
  2176  049D  0CAA               	rrf	(___aldiv@divisor+3)^(0+128),f
  2177  049E  0CA9               	rrf	(___aldiv@divisor+2)^(0+128),f
  2178  049F  0CA8               	rrf	(___aldiv@divisor+1)^(0+128),f
  2179  04A0  0CA7               	rrf	___aldiv@divisor^(0+128),f
  2180  04A1  3EFF               	addlw	-1
  2181  04A2  1D03               	skipz
  2182  04A3  2C9C               	goto	u995
  2183  04A4                     l1387:	
  2184  04A4  3001               	movlw	1
  2185  04A5  02B0               	subwf	___aldiv@counter^(0+128),f
  2186  04A6  1D03               	btfss	3,2
  2187  04A7  2CA9               	goto	u1001
  2188  04A8  2CAA               	goto	u1000
  2189  04A9                     u1001:	
  2190  04A9  2C71               	goto	l1377
  2191  04AA                     u1000:	
  2192  04AA                     l1389:	
  2193  04AA  0831               	movf	___aldiv@sign^(0+128),w
  2194  04AB  1903               	btfsc	3,2
  2195  04AC  2CAE               	goto	u1011
  2196  04AD  2CAF               	goto	u1010
  2197  04AE                     u1011:	
  2198  04AE  2CBA               	goto	l1393
  2199  04AF                     u1010:	
  2200  04AF                     l1391:	
  2201  04AF  09B2               	comf	___aldiv@quotient^(0+128),f
  2202  04B0  09B3               	comf	(___aldiv@quotient+1)^(0+128),f
  2203  04B1  09B4               	comf	(___aldiv@quotient+2)^(0+128),f
  2204  04B2  09B5               	comf	(___aldiv@quotient+3)^(0+128),f
  2205  04B3  0AB2               	incf	___aldiv@quotient^(0+128),f
  2206  04B4  1903               	skipnz
  2207  04B5  0AB3               	incf	(___aldiv@quotient+1)^(0+128),f
  2208  04B6  1903               	skipnz
  2209  04B7  0AB4               	incf	(___aldiv@quotient+2)^(0+128),f
  2210  04B8  1903               	skipnz
  2211  04B9  0AB5               	incf	(___aldiv@quotient+3)^(0+128),f
  2212  04BA                     l1393:	
  2213  04BA  0835               	movf	(___aldiv@quotient+3)^(0+128),w
  2214  04BB  00AA               	movwf	(?___aldiv+3)^(0+128)
  2215  04BC  0834               	movf	(___aldiv@quotient+2)^(0+128),w
  2216  04BD  00A9               	movwf	(?___aldiv+2)^(0+128)
  2217  04BE  0833               	movf	(___aldiv@quotient+1)^(0+128),w
  2218  04BF  00A8               	movwf	(?___aldiv+1)^(0+128)
  2219  04C0  0832               	movf	___aldiv@quotient^(0+128),w
  2220  04C1  00A7               	movwf	?___aldiv^(0+128)
  2221  04C2                     l412:	
  2222  04C2  0008               	return
  2223  04C3                     __end_of___aldiv:	
  2224                           
  2225                           	psect	text9
  2226  030A                     __ptext9:	
  2227 ;; *************** function _ISR *****************
  2228 ;; Defined at:
  2229 ;;		line 349 in file "main.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2243 ;;      Params:         0       0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0
  2245 ;;      Temps:          0       0       7       0       0
  2246 ;;      Totals:         0       0       7       0       0
  2247 ;;Total ram usage:        7 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    3
  2250 ;; This function calls:
  2251 ;;		_print_Countdown
  2252 ;; This function is called by:
  2253 ;;		Interrupt level 1
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           
  2258                           ;psect for function _ISR
  2259  030A                     _ISR:	
  2260  030A                     i1l1685:	
  2261                           
  2262                           ;main.c: 353:     if (!(PORTBbits.RB3)&& (!oldBtn1))
  2263  030A  1283               	bcf	3,5	;RP0=0, select bank0
  2264  030B  1303               	bcf	3,6	;RP1=0, select bank0
  2265  030C  1986               	btfsc	6,3	;volatile
  2266  030D  2B0F               	goto	u150_21
  2267  030E  2B10               	goto	u150_20
  2268  030F                     u150_21:	
  2269  030F  2B21               	goto	i1l155
  2270  0310                     u150_20:	
  2271  0310                     i1l1687:	
  2272  0310  086F               	movf	_oldBtn1,w
  2273  0311  1D03               	btfss	3,2
  2274  0312  2B14               	goto	u151_21
  2275  0313  2B15               	goto	u151_20
  2276  0314                     u151_21:	
  2277  0314  2B21               	goto	i1l155
  2278  0315                     u151_20:	
  2279  0315                     i1l1689:	
  2280                           
  2281                           ;main.c: 354:     {;main.c: 355:         stat1=!stat1;
  2282  0315  1683               	bsf	3,5	;RP0=1, select bank1
  2283  0316  1303               	bcf	3,6	;RP1=0, select bank1
  2284  0317  084F               	movf	_stat1^(0+128),w
  2285  0318  1903               	btfsc	3,2
  2286  0319  2B1B               	goto	u152_21
  2287  031A  2B1D               	goto	u152_20
  2288  031B                     u152_21:	
  2289  031B  3001               	movlw	1
  2290  031C  2B1E               	goto	u153_20
  2291  031D                     u152_20:	
  2292  031D  3000               	movlw	0
  2293  031E                     u153_20:	
  2294  031E  00A0               	movwf	??_ISR^(0+128)
  2295  031F  0820               	movf	??_ISR^(0+128),w
  2296  0320  00CF               	movwf	_stat1^(0+128)
  2297  0321                     i1l155:	
  2298                           ;main.c: 357:     }
  2299                           
  2300                           
  2301                           ;main.c: 358:     oldBtn1 = !PORTBbits.RB3;
  2302  0321  1003               	clrc
  2303  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2304  0323  1D86               	btfss	6,3	;volatile
  2305  0324  1403               	setc
  2306  0325  3000               	movlw	0
  2307  0326  1803               	btfsc	3,0
  2308  0327  3001               	movlw	1
  2309  0328  00EF               	movwf	_oldBtn1
  2310  0329                     i1l1691:	
  2311                           
  2312                           ;main.c: 360:     if (!(PORTBbits.RB4)&& (!oldBtn2))
  2313  0329  1A06               	btfsc	6,4	;volatile
  2314  032A  2B2C               	goto	u154_21
  2315  032B  2B2D               	goto	u154_20
  2316  032C                     u154_21:	
  2317  032C  2B3E               	goto	i1l156
  2318  032D                     u154_20:	
  2319  032D                     i1l1693:	
  2320  032D  1683               	bsf	3,5	;RP0=1, select bank1
  2321  032E  1303               	bcf	3,6	;RP1=0, select bank1
  2322  032F  084E               	movf	_oldBtn2^(0+128),w
  2323  0330  1D03               	btfss	3,2
  2324  0331  2B33               	goto	u155_21
  2325  0332  2B34               	goto	u155_20
  2326  0333                     u155_21:	
  2327  0333  2B3E               	goto	i1l156
  2328  0334                     u155_20:	
  2329  0334                     i1l1695:	
  2330                           
  2331                           ;main.c: 361:     {;main.c: 362:         stat2=!stat2;
  2332  0334  084D               	movf	_stat2^(0+128),w
  2333  0335  1903               	btfsc	3,2
  2334  0336  2B38               	goto	u156_21
  2335  0337  2B3A               	goto	u156_20
  2336  0338                     u156_21:	
  2337  0338  3001               	movlw	1
  2338  0339  2B3B               	goto	u157_20
  2339  033A                     u156_20:	
  2340  033A  3000               	movlw	0
  2341  033B                     u157_20:	
  2342  033B  00A0               	movwf	??_ISR^(0+128)
  2343  033C  0820               	movf	??_ISR^(0+128),w
  2344  033D  00CD               	movwf	_stat2^(0+128)
  2345  033E                     i1l156:	
  2346                           ;main.c: 364:     }
  2347                           
  2348                           
  2349                           ;main.c: 365:     oldBtn2 = !PORTBbits.RB4;
  2350  033E  1003               	clrc
  2351  033F  1283               	bcf	3,5	;RP0=0, select bank0
  2352  0340  1E06               	btfss	6,4	;volatile
  2353  0341  1403               	setc
  2354  0342  3000               	movlw	0
  2355  0343  1803               	btfsc	3,0
  2356  0344  3001               	movlw	1
  2357  0345  1683               	bsf	3,5	;RP0=1, select bank1
  2358  0346  1303               	bcf	3,6	;RP1=0, select bank1
  2359  0347  00CE               	movwf	_oldBtn2^(0+128)
  2360  0348                     i1l1697:	
  2361                           
  2362                           ;main.c: 367:     if (!(PORTBbits.RB5)&& (!oldBtn3))
  2363  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2364  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2365  034A  1A86               	btfsc	6,5	;volatile
  2366  034B  2B4D               	goto	u158_21
  2367  034C  2B4E               	goto	u158_20
  2368  034D                     u158_21:	
  2369  034D  2B5F               	goto	i1l157
  2370  034E                     u158_20:	
  2371  034E                     i1l1699:	
  2372  034E  1683               	bsf	3,5	;RP0=1, select bank1
  2373  034F  1303               	bcf	3,6	;RP1=0, select bank1
  2374  0350  084C               	movf	_oldBtn3^(0+128),w
  2375  0351  1D03               	btfss	3,2
  2376  0352  2B54               	goto	u159_21
  2377  0353  2B55               	goto	u159_20
  2378  0354                     u159_21:	
  2379  0354  2B5F               	goto	i1l157
  2380  0355                     u159_20:	
  2381  0355                     i1l1701:	
  2382                           
  2383                           ;main.c: 368:     {;main.c: 369:         stat3=!stat3;
  2384  0355  084B               	movf	_stat3^(0+128),w
  2385  0356  1903               	btfsc	3,2
  2386  0357  2B59               	goto	u160_21
  2387  0358  2B5B               	goto	u160_20
  2388  0359                     u160_21:	
  2389  0359  3001               	movlw	1
  2390  035A  2B5C               	goto	u161_20
  2391  035B                     u160_20:	
  2392  035B  3000               	movlw	0
  2393  035C                     u161_20:	
  2394  035C  00A0               	movwf	??_ISR^(0+128)
  2395  035D  0820               	movf	??_ISR^(0+128),w
  2396  035E  00CB               	movwf	_stat3^(0+128)
  2397  035F                     i1l157:	
  2398                           ;main.c: 371:     }
  2399                           
  2400                           
  2401                           ;main.c: 372:     oldBtn3 = !PORTBbits.RB5;
  2402  035F  1003               	clrc
  2403  0360  1283               	bcf	3,5	;RP0=0, select bank0
  2404  0361  1E86               	btfss	6,5	;volatile
  2405  0362  1403               	setc
  2406  0363  3000               	movlw	0
  2407  0364  1803               	btfsc	3,0
  2408  0365  3001               	movlw	1
  2409  0366  1683               	bsf	3,5	;RP0=1, select bank1
  2410  0367  1303               	bcf	3,6	;RP1=0, select bank1
  2411  0368  00CC               	movwf	_oldBtn3^(0+128)
  2412  0369                     i1l1703:	
  2413                           
  2414                           ;main.c: 376:    if(RCIF)
  2415  0369  1283               	bcf	3,5	;RP0=0, select bank0
  2416  036A  1303               	bcf	3,6	;RP1=0, select bank0
  2417  036B  1E8C               	btfss	12,5	;volatile
  2418  036C  2B6E               	goto	u162_21
  2419  036D  2B6F               	goto	u162_20
  2420  036E                     u162_21:	
  2421  036E  2B7C               	goto	i1l1711
  2422  036F                     u162_20:	
  2423  036F                     i1l159:	
  2424  036F  1E8C               	btfss	12,5	;volatile
  2425  0370  2B72               	goto	u163_21
  2426  0371  2B73               	goto	u163_20
  2427  0372                     u163_21:	
  2428  0372  2B6F               	goto	i1l159
  2429  0373                     u163_20:	
  2430  0373                     i1l161:	
  2431                           
  2432                           ;main.c: 379:         RCIF = 0;
  2433  0373  128C               	bcf	12,5	;volatile
  2434  0374                     i1l1707:	
  2435                           
  2436                           ;main.c: 380:         datoSeriale = RCREG;
  2437  0374  081A               	movf	26,w	;volatile
  2438  0375  1683               	bsf	3,5	;RP0=1, select bank1
  2439  0376  1303               	bcf	3,6	;RP1=0, select bank1
  2440  0377  00A0               	movwf	??_ISR^(0+128)
  2441  0378  0820               	movf	??_ISR^(0+128),w
  2442  0379  00D3               	movwf	_datoSeriale^(0+128)
  2443  037A                     i1l1709:	
  2444                           
  2445                           ;main.c: 381:         received = 1;
  2446  037A  01D4               	clrf	_received^(0+128)
  2447  037B  0AD4               	incf	_received^(0+128),f
  2448  037C                     i1l1711:	
  2449                           
  2450                           ;main.c: 384:    if (INTCON&0x04)
  2451  037C  1D0B               	btfss	11,2	;volatile
  2452  037D  2B7F               	goto	u164_21
  2453  037E  2B80               	goto	u164_20
  2454  037F                     u164_21:	
  2455  037F  2C15               	goto	i1l173
  2456  0380                     u164_20:	
  2457  0380                     i1l1713:	
  2458                           
  2459                           ;main.c: 385:     {;main.c: 386:         INTCON &= ~0x04;
  2460  0380  30FB               	movlw	251
  2461  0381  1683               	bsf	3,5	;RP0=1, select bank1
  2462  0382  1303               	bcf	3,6	;RP1=0, select bank1
  2463  0383  00A0               	movwf	??_ISR^(0+128)
  2464  0384  0820               	movf	??_ISR^(0+128),w
  2465  0385  058B               	andwf	11,f	;volatile
  2466  0386                     i1l1715:	
  2467                           
  2468                           ;main.c: 387:         TMR0 = 6;
  2469  0386  3006               	movlw	6
  2470  0387  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0388  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0389  0081               	movwf	1	;volatile
  2473  038A                     i1l1717:	
  2474                           
  2475                           ;main.c: 388:         count++;
  2476  038A  3001               	movlw	1
  2477  038B  1683               	bsf	3,5	;RP0=1, select bank1
  2478  038C  1303               	bcf	3,6	;RP1=0, select bank1
  2479  038D  07C7               	addwf	_count^(0+128),f
  2480  038E  1803               	skipnc
  2481  038F  0AC8               	incf	(_count+1)^(0+128),f
  2482  0390  3000               	movlw	0
  2483  0391  07C8               	addwf	(_count+1)^(0+128),f
  2484                           
  2485                           ;main.c: 389:         if (count == 125)
  2486  0392  307D               	movlw	125
  2487  0393  0647               	xorwf	_count^(0+128),w
  2488  0394  0448               	iorwf	(_count+1)^(0+128),w
  2489  0395  1D03               	btfss	3,2
  2490  0396  2B98               	goto	u165_21
  2491  0397  2B99               	goto	u165_20
  2492  0398                     u165_21:	
  2493  0398  2C15               	goto	i1l173
  2494  0399                     u165_20:	
  2495  0399                     i1l1719:	
  2496                           
  2497                           ;main.c: 390:         {;main.c: 392:             if(semafori[0]==statoSemafori[0])
  2498  0399  0841               	movf	_semafori^(0+128),w
  2499  039A  065D               	xorwf	_statoSemafori^(0+128),w
  2500  039B  1D03               	skipz
  2501  039C  2B9E               	goto	u166_21
  2502  039D  2B9F               	goto	u166_20
  2503  039E                     u166_21:	
  2504  039E  2BAC               	goto	i1l1723
  2505  039F                     u166_20:	
  2506  039F                     i1l1721:	
  2507                           
  2508                           ;main.c: 393:                 print_Countdown(countDown, 0);
  2509  039F  087D               	movf	_countDown,w
  2510  03A0  00A0               	movwf	??_ISR^(0+128)
  2511  03A1  01A1               	clrf	(??_ISR^(0+128)+1)
  2512  03A2  0820               	movf	??_ISR^(0+128),w
  2513  03A3  00F9               	movwf	print_Countdown@num
  2514  03A4  0821               	movf	(??_ISR+1)^(0+128),w
  2515  03A5  00FA               	movwf	print_Countdown@num+1
  2516  03A6  01FB               	clrf	print_Countdown@statoSem
  2517  03A7  120A  118A  21CD  120A  118A  	fcall	_print_Countdown
  2518  03AC                     i1l1723:	
  2519                           
  2520                           ;main.c: 394:             if(semafori[0]==statoSemafori[1])
  2521  03AC  1683               	bsf	3,5	;RP0=1, select bank1
  2522  03AD  1303               	bcf	3,6	;RP1=0, select bank1
  2523  03AE  085E               	movf	(_statoSemafori^(0+128)+1),w
  2524  03AF  0641               	xorwf	_semafori^(0+128),w
  2525  03B0  1D03               	skipz
  2526  03B1  2BB3               	goto	u167_21
  2527  03B2  2BB4               	goto	u167_20
  2528  03B3                     u167_21:	
  2529  03B3  2BC2               	goto	i1l1727
  2530  03B4                     u167_20:	
  2531  03B4                     i1l1725:	
  2532                           
  2533                           ;main.c: 395:                 print_Countdown(countDown, 1);
  2534  03B4  087D               	movf	_countDown,w
  2535  03B5  00A0               	movwf	??_ISR^(0+128)
  2536  03B6  01A1               	clrf	(??_ISR^(0+128)+1)
  2537  03B7  0820               	movf	??_ISR^(0+128),w
  2538  03B8  00F9               	movwf	print_Countdown@num
  2539  03B9  0821               	movf	(??_ISR+1)^(0+128),w
  2540  03BA  00FA               	movwf	print_Countdown@num+1
  2541  03BB  01FB               	clrf	print_Countdown@statoSem
  2542  03BC  0AFB               	incf	print_Countdown@statoSem,f
  2543  03BD  120A  118A  21CD  120A  118A  	fcall	_print_Countdown
  2544  03C2                     i1l1727:	
  2545                           
  2546                           ;main.c: 396:             if(semafori[0]==statoSemafori[2])
  2547  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  2548  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  2549  03C4  085F               	movf	(_statoSemafori^(0+128)+2),w
  2550  03C5  0641               	xorwf	_semafori^(0+128),w
  2551  03C6  1D03               	skipz
  2552  03C7  2BC9               	goto	u168_21
  2553  03C8  2BCA               	goto	u168_20
  2554  03C9                     u168_21:	
  2555  03C9  2BDA               	goto	i1l1731
  2556  03CA                     u168_20:	
  2557  03CA                     i1l1729:	
  2558                           
  2559                           ;main.c: 397:                 print_Countdown(countDown, 2);
  2560  03CA  087D               	movf	_countDown,w
  2561  03CB  00A0               	movwf	??_ISR^(0+128)
  2562  03CC  01A1               	clrf	(??_ISR^(0+128)+1)
  2563  03CD  0820               	movf	??_ISR^(0+128),w
  2564  03CE  00F9               	movwf	print_Countdown@num
  2565  03CF  0821               	movf	(??_ISR+1)^(0+128),w
  2566  03D0  00FA               	movwf	print_Countdown@num+1
  2567  03D1  3002               	movlw	2
  2568  03D2  00A2               	movwf	(??_ISR+2)^(0+128)
  2569  03D3  0822               	movf	(??_ISR+2)^(0+128),w
  2570  03D4  00FB               	movwf	print_Countdown@statoSem
  2571  03D5  120A  118A  21CD  120A  118A  	fcall	_print_Countdown
  2572  03DA                     i1l1731:	
  2573                           
  2574                           ;main.c: 399:             if(flagGiallo==1)
  2575  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2576  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  2577  03DC  0349               	decf	_flagGiallo^(0+128),w
  2578  03DD  1D03               	btfss	3,2
  2579  03DE  2BE0               	goto	u169_21
  2580  03DF  2BE1               	goto	u169_20
  2581  03E0                     u169_21:	
  2582  03E0  2BFA               	goto	i1l1739
  2583  03E1                     u169_20:	
  2584  03E1                     i1l1733:	
  2585                           
  2586                           ;main.c: 400:             {;main.c: 401:                 f++;
  2587  03E1  3001               	movlw	1
  2588  03E2  07C5               	addwf	_f^(0+128),f
  2589  03E3  1803               	skipnc
  2590  03E4  0AC6               	incf	(_f+1)^(0+128),f
  2591  03E5  3000               	movlw	0
  2592  03E6  07C6               	addwf	(_f+1)^(0+128),f
  2593  03E7                     i1l1735:	
  2594                           
  2595                           ;main.c: 402:                 if(f>=3)
  2596  03E7  0846               	movf	(_f+1)^(0+128),w
  2597  03E8  3A80               	xorlw	128
  2598  03E9  00FF               	movwf	btemp+1
  2599  03EA  3080               	movlw	128
  2600  03EB  027F               	subwf	btemp+1,w
  2601  03EC  1D03               	skipz
  2602  03ED  2BF0               	goto	u170_25
  2603  03EE  3003               	movlw	3
  2604  03EF  0245               	subwf	_f^(0+128),w
  2605  03F0                     u170_25:	
  2606  03F0  1C03               	skipc
  2607  03F1  2BF3               	goto	u170_21
  2608  03F2  2BF4               	goto	u170_20
  2609  03F3                     u170_21:	
  2610  03F3  2C11               	goto	i1l1749
  2611  03F4                     u170_20:	
  2612  03F4                     i1l1737:	
  2613                           
  2614                           ;main.c: 403:                 {;main.c: 404:                     flagGiallo=0;
  2615  03F4  1683               	bsf	3,5	;RP0=1, select bank1
  2616  03F5  1303               	bcf	3,6	;RP1=0, select bank1
  2617  03F6  01C9               	clrf	_flagGiallo^(0+128)
  2618                           
  2619                           ;main.c: 405:                     f=0;
  2620  03F7  01C5               	clrf	_f^(0+128)
  2621  03F8  01C6               	clrf	(_f+1)^(0+128)
  2622  03F9  2C11               	goto	i1l1749
  2623  03FA                     i1l1739:	
  2624                           
  2625                           ;main.c: 409:             {;main.c: 410:                 countDown--;
  2626  03FA  3001               	movlw	1
  2627  03FB  02FD               	subwf	_countDown,f
  2628                           
  2629                           ;main.c: 411:                 if(countDown==0)
  2630  03FC  087D               	movf	_countDown,w
  2631  03FD  1D03               	btfss	3,2
  2632  03FE  2C00               	goto	u171_21
  2633  03FF  2C01               	goto	u171_20
  2634  0400                     u171_21:	
  2635  0400  2C11               	goto	i1l1749
  2636  0401                     u171_20:	
  2637  0401                     i1l1741:	
  2638                           
  2639                           ;main.c: 412:                 {;main.c: 413:                     scattoSemafori=1;
  2640  0401  01CA               	clrf	_scattoSemafori^(0+128)
  2641  0402  0ACA               	incf	_scattoSemafori^(0+128),f
  2642  0403                     i1l1743:	
  2643                           
  2644                           ;main.c: 414:                     if(temporizzazione!=0)
  2645  0403  087C               	movf	_temporizzazione,w
  2646  0404  1903               	btfsc	3,2
  2647  0405  2C07               	goto	u172_21
  2648  0406  2C08               	goto	u172_20
  2649  0407                     u172_21:	
  2650  0407  2C0D               	goto	i1l1747
  2651  0408                     u172_20:	
  2652  0408                     i1l1745:	
  2653                           
  2654                           ;main.c: 415:                         countDown=temporizzazione;
  2655  0408  087C               	movf	_temporizzazione,w
  2656  0409  00A0               	movwf	??_ISR^(0+128)
  2657  040A  0820               	movf	??_ISR^(0+128),w
  2658  040B  00FD               	movwf	_countDown
  2659  040C  2C11               	goto	i1l1749
  2660  040D                     i1l1747:	
  2661                           
  2662                           ;main.c: 417:                         countDown=5;
  2663  040D  3005               	movlw	5
  2664  040E  00A0               	movwf	??_ISR^(0+128)
  2665  040F  0820               	movf	??_ISR^(0+128),w
  2666  0410  00FD               	movwf	_countDown
  2667  0411                     i1l1749:	
  2668                           
  2669                           ;main.c: 426:             count = 0;
  2670  0411  1683               	bsf	3,5	;RP0=1, select bank1
  2671  0412  1303               	bcf	3,6	;RP1=0, select bank1
  2672  0413  01C7               	clrf	_count^(0+128)
  2673  0414  01C8               	clrf	(_count+1)^(0+128)
  2674  0415                     i1l173:	
  2675  0415  1683               	bsf	3,5	;RP0=1, select bank1
  2676  0416  1303               	bcf	3,6	;RP1=0, select bank1
  2677  0417  0826               	movf	(??_ISR+6)^(0+128),w
  2678  0418  1283               	bcf	3,5	;RP0=0, select bank0
  2679  0419  1303               	bcf	3,6	;RP1=0, select bank0
  2680  041A  00FF               	movwf	btemp+1
  2681  041B  1683               	bsf	3,5	;RP0=1, select bank1
  2682  041C  1303               	bcf	3,6	;RP1=0, select bank1
  2683  041D  0825               	movf	(??_ISR+5)^(0+128),w
  2684  041E  008A               	movwf	10
  2685  041F  0824               	movf	(??_ISR+4)^(0+128),w
  2686  0420  0084               	movwf	4
  2687  0421  0E23               	swapf	(??_ISR+3)^(0+128),w
  2688  0422  0083               	movwf	3
  2689  0423  0EFE               	swapf	btemp,f
  2690  0424  0E7E               	swapf	btemp,w
  2691  0425  0009               	retfie
  2692  0426                     __end_of_ISR:	
  2693                           
  2694                           	psect	intentry
  2695  0004                     __pintentry:	
  2696                           ;incstack = 0
  2697                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2698                           
  2699  0004                     interrupt_function:	
  2700  007E                     saved_w	set	btemp
  2701  0004  00FE               	movwf	btemp
  2702  0005  0E03               	swapf	3,w
  2703  0006  1683               	bsf	3,5	;RP0=1, select bank1
  2704  0007  1303               	bcf	3,6	;RP1=0, select bank1
  2705  0008  00A3               	movwf	(??_ISR+3)^(0+128)
  2706  0009  0804               	movf	4,w
  2707  000A  00A4               	movwf	(??_ISR+4)^(0+128)
  2708  000B  080A               	movf	10,w
  2709  000C  00A5               	movwf	(??_ISR+5)^(0+128)
  2710  000D  1283               	bcf	3,5	;RP0=0, select bank0
  2711  000E  1303               	bcf	3,6	;RP1=0, select bank0
  2712  000F  087F               	movf	btemp+1,w
  2713  0010  1683               	bsf	3,5	;RP0=1, select bank1
  2714  0011  1303               	bcf	3,6	;RP1=0, select bank1
  2715  0012  00A6               	movwf	(??_ISR+6)^(0+128)
  2716  0013  120A  118A  2B0A   	ljmp	_ISR
  2717                           
  2718                           	psect	text10
  2719  01CD                     __ptext10:	
  2720 ;; *************** function _print_Countdown *****************
  2721 ;; Defined at:
  2722 ;;		line 528 in file "main.c"
  2723 ;; Parameters:    Size  Location     Type
  2724 ;;  num             2    9[COMMON] int 
  2725 ;;  statoSem        1   11[COMMON] unsigned char 
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;  secondStr      17   38[BANK0 ] unsigned char [17]
  2728 ;;  secondStr      17   21[BANK0 ] unsigned char [17]
  2729 ;;  secondStr      17    4[BANK0 ] unsigned char [17]
  2730 ;;  firstStr       17   55[BANK0 ] unsigned char [17]
  2731 ;;  resultNum       3   72[BANK0 ] unsigned char [3]
  2732 ;;  i               2   77[BANK0 ] int 
  2733 ;;  length          2   75[BANK0 ] int 
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2743 ;;      Params:         3       0       0       0       0
  2744 ;;      Locals:         0      75       0       0       0
  2745 ;;      Temps:          0       4       0       0       0
  2746 ;;      Totals:         3      79       0       0       0
  2747 ;;Total ram usage:       82 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    2
  2750 ;; This function calls:
  2751 ;;		___awdiv
  2752 ;;		___awmod
  2753 ;;		_send_string
  2754 ;;		i1_send_cmd
  2755 ;; This function is called by:
  2756 ;;		_ISR
  2757 ;; This function uses a non-reentrant model
  2758 ;;
  2759                           
  2760                           
  2761                           ;psect for function _print_Countdown
  2762  01CD                     _print_Countdown:	
  2763  01CD                     i1l1533:	
  2764                           ;incstack = 0
  2765                           ; Regs used in _print_Countdown: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2766                           
  2767                           
  2768                           ;main.c: 528: void print_Countdown(int num, char statoSem);main.c: 529: {;main.c: 530:  
      +                             char resultNum[3], firstStr[17] = "Tempo:          ";
  2769  01CD  3057               	movlw	print_Countdown@firstStr& (0+255)
  2770  01CE  0084               	movwf	4
  2771  01CF  30C3               	movlw	low print_Countdown@F929
  2772  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2773  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2774  01D2  00A0               	movwf	??_print_Countdown
  2775  01D3  0804               	movf	4,w
  2776  01D4  00A1               	movwf	??_print_Countdown+1
  2777  01D5  3011               	movlw	17
  2778  01D6  00A2               	movwf	??_print_Countdown+2
  2779  01D7                     u122_20:	
  2780  01D7  0820               	movf	??_print_Countdown,w
  2781  01D8  0084               	movwf	4
  2782  01D9  1783               	bsf	3,7	;select IRP bank3
  2783  01DA  0800               	movf	0,w
  2784  01DB  00A3               	movwf	??_print_Countdown+3
  2785  01DC  0AA0               	incf	??_print_Countdown,f
  2786  01DD  0821               	movf	??_print_Countdown+1,w
  2787  01DE  0084               	movwf	4
  2788  01DF  1383               	bcf	3,7	;select IRP bank0
  2789  01E0  0823               	movf	??_print_Countdown+3,w
  2790  01E1  0080               	movwf	0
  2791  01E2  0AA1               	incf	??_print_Countdown+1,f
  2792  01E3  0BA2               	decfsz	??_print_Countdown+2,f
  2793  01E4  29D7               	goto	u122_20
  2794  01E5                     i1l1535:	
  2795                           
  2796                           ;main.c: 531:     int length = 2, i = 0;
  2797  01E5  3002               	movlw	2
  2798  01E6  00EB               	movwf	print_Countdown@length
  2799  01E7  3000               	movlw	0
  2800  01E8  00EC               	movwf	print_Countdown@length+1
  2801  01E9                     i1l1537:	
  2802  01E9  01ED               	clrf	print_Countdown@i
  2803  01EA  01EE               	clrf	print_Countdown@i+1
  2804  01EB                     i1l1539:	
  2805                           
  2806                           ;main.c: 533:     if(num < 10)
  2807  01EB  087A               	movf	print_Countdown@num+1,w
  2808  01EC  3A80               	xorlw	128
  2809  01ED  00FF               	movwf	btemp+1
  2810  01EE  3080               	movlw	128
  2811  01EF  027F               	subwf	btemp+1,w
  2812  01F0  1D03               	skipz
  2813  01F1  29F4               	goto	u123_25
  2814  01F2  300A               	movlw	10
  2815  01F3  0279               	subwf	print_Countdown@num,w
  2816  01F4                     u123_25:	
  2817  01F4  1803               	skipnc
  2818  01F5  29F7               	goto	u123_21
  2819  01F6  29F8               	goto	u123_20
  2820  01F7                     u123_21:	
  2821  01F7  29FF               	goto	i1l1543
  2822  01F8                     u123_20:	
  2823  01F8                     i1l1541:	
  2824                           
  2825                           ;main.c: 534:         length = 1;
  2826  01F8  3001               	movlw	1
  2827  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  2828  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  2829  01FB  00EB               	movwf	print_Countdown@length
  2830  01FC  3000               	movlw	0
  2831  01FD  00EC               	movwf	print_Countdown@length+1
  2832  01FE  2A0C               	goto	i1l1547
  2833  01FF                     i1l1543:	
  2834  01FF  3064               	movlw	100
  2835  0200  0679               	xorwf	print_Countdown@num,w
  2836  0201  047A               	iorwf	print_Countdown@num+1,w
  2837  0202  1D03               	btfss	3,2
  2838  0203  2A05               	goto	u124_21
  2839  0204  2A06               	goto	u124_20
  2840  0205                     u124_21:	
  2841  0205  2A0C               	goto	i1l1547
  2842  0206                     u124_20:	
  2843  0206                     i1l1545:	
  2844                           
  2845                           ;main.c: 536:         length = 3;
  2846  0206  3003               	movlw	3
  2847  0207  1283               	bcf	3,5	;RP0=0, select bank0
  2848  0208  1303               	bcf	3,6	;RP1=0, select bank0
  2849  0209  00EB               	movwf	print_Countdown@length
  2850  020A  3000               	movlw	0
  2851  020B  00EC               	movwf	print_Countdown@length+1
  2852  020C                     i1l1547:	
  2853                           
  2854                           ;main.c: 538:     if(num != 0)
  2855  020C  0879               	movf	print_Countdown@num,w
  2856  020D  047A               	iorwf	print_Countdown@num+1,w
  2857  020E  1903               	btfsc	3,2
  2858  020F  2A11               	goto	u125_21
  2859  0210  2A12               	goto	u125_20
  2860  0211                     u125_21:	
  2861  0211  2A4B               	goto	i1l1559
  2862  0212                     u125_20:	
  2863  0212  2A44               	goto	i1l1557
  2864  0213                     i1l1551:	
  2865                           
  2866                           ;main.c: 541:         {;main.c: 542:             resultNum[i] = num%10 + '0';
  2867  0213  300A               	movlw	10
  2868  0214  00F0               	movwf	___awmod@divisor
  2869  0215  3000               	movlw	0
  2870  0216  00F1               	movwf	___awmod@divisor+1
  2871  0217  087A               	movf	print_Countdown@num+1,w
  2872  0218  00F3               	movwf	___awmod@dividend+1
  2873  0219  0879               	movf	print_Countdown@num,w
  2874  021A  00F2               	movwf	___awmod@dividend
  2875  021B  120A  118A  252A  120A  118A  	fcall	___awmod
  2876  0220  0870               	movf	?___awmod,w
  2877  0221  3E30               	addlw	48
  2878  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2879  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2880  0224  00A0               	movwf	??_print_Countdown
  2881  0225  086D               	movf	print_Countdown@i,w
  2882  0226  3E68               	addlw	(low (print_Countdown@resultNum| 0))& (0+255)
  2883  0227  0084               	movwf	4
  2884  0228  0820               	movf	??_print_Countdown,w
  2885  0229  1383               	bcf	3,7	;select IRP bank0
  2886  022A  0080               	movwf	0
  2887  022B                     i1l1553:	
  2888                           
  2889                           ;main.c: 543:             num /= 10;
  2890  022B  300A               	movlw	10
  2891  022C  00F0               	movwf	___awdiv@divisor
  2892  022D  3000               	movlw	0
  2893  022E  00F1               	movwf	___awdiv@divisor+1
  2894  022F  087A               	movf	print_Countdown@num+1,w
  2895  0230  00F3               	movwf	___awdiv@dividend+1
  2896  0231  0879               	movf	print_Countdown@num,w
  2897  0232  00F2               	movwf	___awdiv@dividend
  2898  0233  120A  118A  24C3  120A  118A  	fcall	___awdiv
  2899  0238  0871               	movf	?___awdiv+1,w
  2900  0239  00FA               	movwf	print_Countdown@num+1
  2901  023A  0870               	movf	?___awdiv,w
  2902  023B  00F9               	movwf	print_Countdown@num
  2903  023C                     i1l1555:	
  2904                           
  2905                           ;main.c: 544:             i++;
  2906  023C  3001               	movlw	1
  2907  023D  1283               	bcf	3,5	;RP0=0, select bank0
  2908  023E  1303               	bcf	3,6	;RP1=0, select bank0
  2909  023F  07ED               	addwf	print_Countdown@i,f
  2910  0240  1803               	skipnc
  2911  0241  0AEE               	incf	print_Countdown@i+1,f
  2912  0242  3000               	movlw	0
  2913  0243  07EE               	addwf	print_Countdown@i+1,f
  2914  0244                     i1l1557:	
  2915                           
  2916                           ;main.c: 540:         while(num)
  2917  0244  0879               	movf	print_Countdown@num,w
  2918  0245  047A               	iorwf	print_Countdown@num+1,w
  2919  0246  1D03               	btfss	3,2
  2920  0247  2A49               	goto	u126_21
  2921  0248  2A4A               	goto	u126_20
  2922  0249                     u126_21:	
  2923  0249  2A13               	goto	i1l1551
  2924  024A                     u126_20:	
  2925  024A  2A51               	goto	i1l1561
  2926  024B                     i1l1559:	
  2927                           
  2928                           ;main.c: 548:     {;main.c: 549:         resultNum[0] = '0';
  2929  024B  3030               	movlw	48
  2930  024C  1283               	bcf	3,5	;RP0=0, select bank0
  2931  024D  1303               	bcf	3,6	;RP1=0, select bank0
  2932  024E  00A0               	movwf	??_print_Countdown
  2933  024F  0820               	movf	??_print_Countdown,w
  2934  0250  00E8               	movwf	print_Countdown@resultNum
  2935  0251                     i1l1561:	
  2936                           
  2937                           ;main.c: 552:     for(i=0; i<length; i++)
  2938  0251  1283               	bcf	3,5	;RP0=0, select bank0
  2939  0252  1303               	bcf	3,6	;RP1=0, select bank0
  2940  0253  01ED               	clrf	print_Countdown@i
  2941  0254  01EE               	clrf	print_Countdown@i+1
  2942  0255  2A6A               	goto	i1l1567
  2943  0256                     i1l1563:	
  2944                           
  2945                           ;main.c: 553:     {;main.c: 554:         firstStr[13-i] = resultNum[i];
  2946  0256  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0257  1303               	bcf	3,6	;RP1=0, select bank0
  2948  0258  086D               	movf	print_Countdown@i,w
  2949  0259  3E68               	addlw	(low (print_Countdown@resultNum| 0))& (0+255)
  2950  025A  0084               	movwf	4
  2951  025B  1383               	bcf	3,7	;select IRP bank0
  2952  025C  0800               	movf	0,w
  2953  025D  00A0               	movwf	??_print_Countdown
  2954  025E  086D               	movf	print_Countdown@i,w
  2955  025F  3C0D               	sublw	13
  2956  0260  3E57               	addlw	(low (print_Countdown@firstStr| 0))& (0+255)
  2957  0261  0084               	movwf	4
  2958  0262  0820               	movf	??_print_Countdown,w
  2959  0263  0080               	movwf	0
  2960  0264                     i1l1565:	
  2961                           
  2962                           ;main.c: 555:     }
  2963  0264  3001               	movlw	1
  2964  0265  07ED               	addwf	print_Countdown@i,f
  2965  0266  1803               	skipnc
  2966  0267  0AEE               	incf	print_Countdown@i+1,f
  2967  0268  3000               	movlw	0
  2968  0269  07EE               	addwf	print_Countdown@i+1,f
  2969  026A                     i1l1567:	
  2970  026A  086E               	movf	print_Countdown@i+1,w
  2971  026B  3A80               	xorlw	128
  2972  026C  00A0               	movwf	??_print_Countdown
  2973  026D  086C               	movf	print_Countdown@length+1,w
  2974  026E  3A80               	xorlw	128
  2975  026F  0220               	subwf	??_print_Countdown,w
  2976  0270  1D03               	skipz
  2977  0271  2A74               	goto	u127_25
  2978  0272  086B               	movf	print_Countdown@length,w
  2979  0273  026D               	subwf	print_Countdown@i,w
  2980  0274                     u127_25:	
  2981  0274  1C03               	skipc
  2982  0275  2A77               	goto	u127_21
  2983  0276  2A78               	goto	u127_20
  2984  0277                     u127_21:	
  2985  0277  2A56               	goto	i1l1563
  2986  0278                     u127_20:	
  2987  0278                     i1l1569:	
  2988                           
  2989                           ;main.c: 557:     send_cmd(0x01);
  2990  0278  3001               	movlw	1
  2991  0279  120A  118A  26C3  120A  118A  	fcall	i1_send_cmd
  2992                           
  2993                           ;main.c: 558:     send_cmd(0xC0);
  2994  027E  30C0               	movlw	192
  2995  027F  120A  118A  26C3  120A  118A  	fcall	i1_send_cmd
  2996  0284                     i1l1571:	
  2997                           
  2998                           ;main.c: 559:     if(statoSem==0)
  2999  0284  087B               	movf	print_Countdown@statoSem,w
  3000  0285  1D03               	btfss	3,2
  3001  0286  2A88               	goto	u128_21
  3002  0287  2A89               	goto	u128_20
  3003  0288                     u128_21:	
  3004  0288  2AA7               	goto	i1l1577
  3005  0289                     u128_20:	
  3006  0289                     i1l1573:	
  3007                           
  3008                           ;main.c: 560:     {;main.c: 561:        char secondStr[17] = "Sem 0:     Verde";
  3009  0289  3024               	movlw	print_Countdown@secondStr& (0+255)
  3010  028A  0084               	movwf	4
  3011  028B  30B2               	movlw	low print_Countdown@F933
  3012  028C  1283               	bcf	3,5	;RP0=0, select bank0
  3013  028D  1303               	bcf	3,6	;RP1=0, select bank0
  3014  028E  00A0               	movwf	??_print_Countdown
  3015  028F  0804               	movf	4,w
  3016  0290  00A1               	movwf	??_print_Countdown+1
  3017  0291  3011               	movlw	17
  3018  0292  00A2               	movwf	??_print_Countdown+2
  3019  0293                     u129_20:	
  3020  0293  0820               	movf	??_print_Countdown,w
  3021  0294  0084               	movwf	4
  3022  0295  1783               	bsf	3,7	;select IRP bank3
  3023  0296  0800               	movf	0,w
  3024  0297  00A3               	movwf	??_print_Countdown+3
  3025  0298  0AA0               	incf	??_print_Countdown,f
  3026  0299  0821               	movf	??_print_Countdown+1,w
  3027  029A  0084               	movwf	4
  3028  029B  1383               	bcf	3,7	;select IRP bank0
  3029  029C  0823               	movf	??_print_Countdown+3,w
  3030  029D  0080               	movwf	0
  3031  029E  0AA1               	incf	??_print_Countdown+1,f
  3032  029F  0BA2               	decfsz	??_print_Countdown+2,f
  3033  02A0  2A93               	goto	u129_20
  3034  02A1                     i1l1575:	
  3035                           
  3036                           ;main.c: 562:        send_string(secondStr);
  3037  02A1  3024               	movlw	(low (print_Countdown@secondStr| 0))& (0+255)
  3038  02A2  120A  118A  26A2  120A  118A  	fcall	_send_string
  3039  02A7                     i1l1577:	
  3040                           
  3041                           ;main.c: 564:     if(statoSem==1)
  3042  02A7  037B               	decf	print_Countdown@statoSem,w
  3043  02A8  1D03               	btfss	3,2
  3044  02A9  2AAB               	goto	u130_21
  3045  02AA  2AAC               	goto	u130_20
  3046  02AB                     u130_21:	
  3047  02AB  2ACA               	goto	i1l1583
  3048  02AC                     u130_20:	
  3049  02AC                     i1l1579:	
  3050                           
  3051                           ;main.c: 565:     {;main.c: 566:        char secondStr[17] = "Sem 0:    Giallo";
  3052  02AC  3035               	movlw	print_Countdown@secondStr_407& (0+255)
  3053  02AD  0084               	movwf	4
  3054  02AE  30A1               	movlw	low print_Countdown@F935
  3055  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  3056  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  3057  02B1  00A0               	movwf	??_print_Countdown
  3058  02B2  0804               	movf	4,w
  3059  02B3  00A1               	movwf	??_print_Countdown+1
  3060  02B4  3011               	movlw	17
  3061  02B5  00A2               	movwf	??_print_Countdown+2
  3062  02B6                     u131_20:	
  3063  02B6  0820               	movf	??_print_Countdown,w
  3064  02B7  0084               	movwf	4
  3065  02B8  1783               	bsf	3,7	;select IRP bank3
  3066  02B9  0800               	movf	0,w
  3067  02BA  00A3               	movwf	??_print_Countdown+3
  3068  02BB  0AA0               	incf	??_print_Countdown,f
  3069  02BC  0821               	movf	??_print_Countdown+1,w
  3070  02BD  0084               	movwf	4
  3071  02BE  1383               	bcf	3,7	;select IRP bank0
  3072  02BF  0823               	movf	??_print_Countdown+3,w
  3073  02C0  0080               	movwf	0
  3074  02C1  0AA1               	incf	??_print_Countdown+1,f
  3075  02C2  0BA2               	decfsz	??_print_Countdown+2,f
  3076  02C3  2AB6               	goto	u131_20
  3077  02C4                     i1l1581:	
  3078                           
  3079                           ;main.c: 567:        send_string(secondStr);
  3080  02C4  3035               	movlw	(low (print_Countdown@secondStr_407| 0))& (0+255)
  3081  02C5  120A  118A  26A2  120A  118A  	fcall	_send_string
  3082  02CA                     i1l1583:	
  3083                           
  3084                           ;main.c: 569:     if(statoSem==2)
  3085  02CA  3002               	movlw	2
  3086  02CB  067B               	xorwf	print_Countdown@statoSem,w
  3087  02CC  1D03               	btfss	3,2
  3088  02CD  2ACF               	goto	u132_21
  3089  02CE  2AD0               	goto	u132_20
  3090  02CF                     u132_21:	
  3091  02CF  2AEE               	goto	i1l1589
  3092  02D0                     u132_20:	
  3093  02D0                     i1l1585:	
  3094                           
  3095                           ;main.c: 570:     {;main.c: 571:        char secondStr[17] = "Sem 0:     Rosso";
  3096  02D0  3046               	movlw	print_Countdown@secondStr_409& (0+255)
  3097  02D1  0084               	movwf	4
  3098  02D2  3090               	movlw	low print_Countdown@F937
  3099  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  3100  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  3101  02D5  00A0               	movwf	??_print_Countdown
  3102  02D6  0804               	movf	4,w
  3103  02D7  00A1               	movwf	??_print_Countdown+1
  3104  02D8  3011               	movlw	17
  3105  02D9  00A2               	movwf	??_print_Countdown+2
  3106  02DA                     u133_20:	
  3107  02DA  0820               	movf	??_print_Countdown,w
  3108  02DB  0084               	movwf	4
  3109  02DC  1783               	bsf	3,7	;select IRP bank3
  3110  02DD  0800               	movf	0,w
  3111  02DE  00A3               	movwf	??_print_Countdown+3
  3112  02DF  0AA0               	incf	??_print_Countdown,f
  3113  02E0  0821               	movf	??_print_Countdown+1,w
  3114  02E1  0084               	movwf	4
  3115  02E2  1383               	bcf	3,7	;select IRP bank0
  3116  02E3  0823               	movf	??_print_Countdown+3,w
  3117  02E4  0080               	movwf	0
  3118  02E5  0AA1               	incf	??_print_Countdown+1,f
  3119  02E6  0BA2               	decfsz	??_print_Countdown+2,f
  3120  02E7  2ADA               	goto	u133_20
  3121  02E8                     i1l1587:	
  3122                           
  3123                           ;main.c: 572:        send_string(secondStr);
  3124  02E8  3046               	movlw	(low (print_Countdown@secondStr_409| 0))& (0+255)
  3125  02E9  120A  118A  26A2  120A  118A  	fcall	_send_string
  3126  02EE                     i1l1589:	
  3127                           
  3128                           ;main.c: 576:     _delay((unsigned long)((100)*(32000000L/4000.0)));
  3129  02EE  3005               	movlw	5
  3130  02EF  1283               	bcf	3,5	;RP0=0, select bank0
  3131  02F0  1303               	bcf	3,6	;RP1=0, select bank0
  3132  02F1  00A2               	movwf	??_print_Countdown+2
  3133  02F2  300F               	movlw	15
  3134  02F3  00A1               	movwf	??_print_Countdown+1
  3135  02F4  30F0               	movlw	240
  3136  02F5  00A0               	movwf	??_print_Countdown
  3137  02F6                     u178_27:	
  3138  02F6  0BA0               	decfsz	??_print_Countdown,f
  3139  02F7  2AF6               	goto	u178_27
  3140  02F8  0BA1               	decfsz	??_print_Countdown+1,f
  3141  02F9  2AF6               	goto	u178_27
  3142  02FA  0BA2               	decfsz	??_print_Countdown+2,f
  3143  02FB  2AF6               	goto	u178_27
  3144  02FC  0000               	nop
  3145                           
  3146                           ;main.c: 578:     send_cmd(0x80);
  3147  02FD  3080               	movlw	128
  3148  02FE  120A  118A  26C3  120A  118A  	fcall	i1_send_cmd
  3149  0303                     i1l1591:	
  3150                           
  3151                           ;main.c: 579:     send_string(firstStr);
  3152  0303  3057               	movlw	(low (print_Countdown@firstStr| 0))& (0+255)
  3153  0304  120A  118A  26A2  120A  118A  	fcall	_send_string
  3154  0309                     i1l227:	
  3155  0309  0008               	return
  3156  030A                     __end_of_print_Countdown:	
  3157                           
  3158                           	psect	text11
  3159  06C3                     __ptext11:	
  3160 ;; *************** function i1_send_cmd *****************
  3161 ;; Defined at:
  3162 ;;		line 609 in file "main.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  command         1    wreg     unsigned char 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  command         1    2[COMMON] unsigned char 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3176 ;;      Params:         0       0       0       0       0
  3177 ;;      Locals:         1       0       0       0       0
  3178 ;;      Temps:          2       0       0       0       0
  3179 ;;      Totals:         3       0       0       0       0
  3180 ;;Total ram usage:        3 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; This function calls:
  3183 ;;		Nothing
  3184 ;; This function is called by:
  3185 ;;		_print_Countdown
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           
  3190                           ;psect for function i1_send_cmd
  3191  06C3                     i1_send_cmd:	
  3192                           
  3193                           ;incstack = 0
  3194                           ; Regs used in i1_send_cmd: [wreg]
  3195                           ;i1send_cmd@command stored from wreg
  3196  06C3  00F2               	movwf	i1send_cmd@command
  3197  06C4                     i1l1479:	
  3198                           
  3199                           ;main.c: 609: void send_cmd(char command);main.c: 610: {;main.c: 611:     PORTEbits.RE1 
      +                          = 1;
  3200  06C4  1283               	bcf	3,5	;RP0=0, select bank0
  3201  06C5  1303               	bcf	3,6	;RP1=0, select bank0
  3202  06C6  1489               	bsf	9,1	;volatile
  3203  06C7                     i1l1481:	
  3204                           
  3205                           ;main.c: 612:     PORTD = command;
  3206  06C7  0872               	movf	i1send_cmd@command,w
  3207  06C8  0088               	movwf	8	;volatile
  3208  06C9                     i1l1483:	
  3209                           
  3210                           ;main.c: 613:     PORTEbits.RE2 = 0;
  3211  06C9  1109               	bcf	9,2	;volatile
  3212                           
  3213                           ;main.c: 614:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3214  06CA  3020               	movlw	32
  3215  06CB  00F1               	movwf	??i1_send_cmd+1
  3216  06CC  3029               	movlw	41
  3217  06CD  00F0               	movwf	??i1_send_cmd
  3218  06CE                     u179_27:	
  3219  06CE  0BF0               	decfsz	??i1_send_cmd,f
  3220  06CF  2ECE               	goto	u179_27
  3221  06D0  0BF1               	decfsz	??i1_send_cmd+1,f
  3222  06D1  2ECE               	goto	u179_27
  3223  06D2  2ED3               	nop2
  3224  06D3                     i1l1485:	
  3225                           
  3226                           ;main.c: 615:     PORTEbits.RE1 = 0;
  3227  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  3228  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  3229  06D5  1089               	bcf	9,1	;volatile
  3230                           
  3231                           ;main.c: 616:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3232  06D6  3020               	movlw	32
  3233  06D7  00F1               	movwf	??i1_send_cmd+1
  3234  06D8  3029               	movlw	41
  3235  06D9  00F0               	movwf	??i1_send_cmd
  3236  06DA                     u180_27:	
  3237  06DA  0BF0               	decfsz	??i1_send_cmd,f
  3238  06DB  2EDA               	goto	u180_27
  3239  06DC  0BF1               	decfsz	??i1_send_cmd+1,f
  3240  06DD  2EDA               	goto	u180_27
  3241  06DE  2EDF               	nop2
  3242  06DF                     i1l1487:	
  3243                           
  3244                           ;main.c: 617:     PORTEbits.RE1 = 1;
  3245  06DF  1283               	bcf	3,5	;RP0=0, select bank0
  3246  06E0  1303               	bcf	3,6	;RP1=0, select bank0
  3247  06E1  1489               	bsf	9,1	;volatile
  3248  06E2                     i1l239:	
  3249  06E2  0008               	return
  3250  06E3                     __end_ofi1_send_cmd:	
  3251                           
  3252                           	psect	text12
  3253  06A2                     __ptext12:	
  3254 ;; *************** function _send_string *****************
  3255 ;; Defined at:
  3256 ;;		line 586 in file "main.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  str             1    wreg     PTR unsigned char 
  3259 ;;		 -> print_Countdown@secondStr_409(17), print_Countdown@secondStr_407(17), print_Countdown@secondStr(17), print_Count
      +down@firstStr(17), 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;  str             1    6[COMMON] PTR unsigned char 
  3262 ;;		 -> print_Countdown@secondStr_409(17), print_Countdown@secondStr_407(17), print_Countdown@secondStr(17), print_Count
      +down@firstStr(17), 
  3263 ;;  i               2    4[COMMON] int 
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3273 ;;      Params:         0       0       0       0       0
  3274 ;;      Locals:         3       0       0       0       0
  3275 ;;      Temps:          1       0       0       0       0
  3276 ;;      Totals:         4       0       0       0       0
  3277 ;;Total ram usage:        4 bytes
  3278 ;; Hardware stack levels used:    1
  3279 ;; Hardware stack levels required when called:    1
  3280 ;; This function calls:
  3281 ;;		_send_data
  3282 ;; This function is called by:
  3283 ;;		_print_Countdown
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287                           
  3288                           ;psect for function _send_string
  3289  06A2                     _send_string:	
  3290                           
  3291                           ;incstack = 0
  3292                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3293                           ;send_string@str stored from wreg
  3294  06A2  00F6               	movwf	send_string@str
  3295  06A3                     i1l1349:	
  3296                           
  3297                           ;main.c: 586: void send_string(char *str);main.c: 587: {;main.c: 588:     int i = 0;
  3298  06A3  01F4               	clrf	send_string@i
  3299  06A4  01F5               	clrf	send_string@i+1
  3300                           
  3301                           ;main.c: 589:     while(str[i] != '\0')
  3302  06A5  2EB7               	goto	i1l1355
  3303  06A6                     i1l1351:	
  3304                           
  3305                           ;main.c: 590:     {;main.c: 591:         send_data(str[i]);
  3306  06A6  0874               	movf	send_string@i,w
  3307  06A7  0776               	addwf	send_string@str,w
  3308  06A8  00F3               	movwf	??_send_string
  3309  06A9  0873               	movf	??_send_string,w
  3310  06AA  0084               	movwf	4
  3311  06AB  0800               	movf	0,w
  3312  06AC  120A  118A  26E3  120A  118A  	fcall	_send_data
  3313  06B1                     i1l1353:	
  3314                           
  3315                           ;main.c: 592:         i++;
  3316  06B1  3001               	movlw	1
  3317  06B2  07F4               	addwf	send_string@i,f
  3318  06B3  1803               	skipnc
  3319  06B4  0AF5               	incf	send_string@i+1,f
  3320  06B5  3000               	movlw	0
  3321  06B6  07F5               	addwf	send_string@i+1,f
  3322  06B7                     i1l1355:	
  3323                           
  3324                           ;main.c: 589:     while(str[i] != '\0')
  3325  06B7  0874               	movf	send_string@i,w
  3326  06B8  0776               	addwf	send_string@str,w
  3327  06B9  00F3               	movwf	??_send_string
  3328  06BA  0873               	movf	??_send_string,w
  3329  06BB  0084               	movwf	4
  3330  06BC  1383               	bcf	3,7	;select IRP bank0
  3331  06BD  0800               	movf	0,w
  3332  06BE  1D03               	btfss	3,2
  3333  06BF  2EC1               	goto	u91_21
  3334  06C0  2EC2               	goto	u91_20
  3335  06C1                     u91_21:	
  3336  06C1  2EA6               	goto	i1l1351
  3337  06C2                     u91_20:	
  3338  06C2                     i1l233:	
  3339  06C2  0008               	return
  3340  06C3                     __end_of_send_string:	
  3341                           
  3342                           	psect	text13
  3343  06E3                     __ptext13:	
  3344 ;; *************** function _send_data *****************
  3345 ;; Defined at:
  3346 ;;		line 597 in file "main.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;  data            1    wreg     unsigned char 
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;  data            1    2[COMMON] unsigned char 
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3360 ;;      Params:         0       0       0       0       0
  3361 ;;      Locals:         1       0       0       0       0
  3362 ;;      Temps:          2       0       0       0       0
  3363 ;;      Totals:         3       0       0       0       0
  3364 ;;Total ram usage:        3 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_send_string
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           
  3374                           ;psect for function _send_data
  3375  06E3                     _send_data:	
  3376                           
  3377                           ;incstack = 0
  3378                           ; Regs used in _send_data: [wreg]
  3379                           ;send_data@data stored from wreg
  3380  06E3  00F2               	movwf	send_data@data
  3381  06E4                     i1l1317:	
  3382                           
  3383                           ;main.c: 597: void send_data(char data);main.c: 598: {;main.c: 599:     PORTEbits.RE1 = 
      +                          1;
  3384  06E4  1283               	bcf	3,5	;RP0=0, select bank0
  3385  06E5  1303               	bcf	3,6	;RP1=0, select bank0
  3386  06E6  1489               	bsf	9,1	;volatile
  3387  06E7                     i1l1319:	
  3388                           
  3389                           ;main.c: 600:     PORTD = data;
  3390  06E7  0872               	movf	send_data@data,w
  3391  06E8  0088               	movwf	8	;volatile
  3392  06E9                     i1l1321:	
  3393                           
  3394                           ;main.c: 601:     PORTEbits.RE2 = 1;
  3395  06E9  1509               	bsf	9,2	;volatile
  3396                           
  3397                           ;main.c: 602:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3398  06EA  3020               	movlw	32
  3399  06EB  00F1               	movwf	??_send_data+1
  3400  06EC  3029               	movlw	41
  3401  06ED  00F0               	movwf	??_send_data
  3402  06EE                     u181_27:	
  3403  06EE  0BF0               	decfsz	??_send_data,f
  3404  06EF  2EEE               	goto	u181_27
  3405  06F0  0BF1               	decfsz	??_send_data+1,f
  3406  06F1  2EEE               	goto	u181_27
  3407  06F2  2EF3               	nop2
  3408  06F3                     i1l1323:	
  3409                           
  3410                           ;main.c: 603:     PORTEbits.RE1 = 0;
  3411  06F3  1283               	bcf	3,5	;RP0=0, select bank0
  3412  06F4  1303               	bcf	3,6	;RP1=0, select bank0
  3413  06F5  1089               	bcf	9,1	;volatile
  3414                           
  3415                           ;main.c: 604:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3416  06F6  3020               	movlw	32
  3417  06F7  00F1               	movwf	??_send_data+1
  3418  06F8  3029               	movlw	41
  3419  06F9  00F0               	movwf	??_send_data
  3420  06FA                     u182_27:	
  3421  06FA  0BF0               	decfsz	??_send_data,f
  3422  06FB  2EFA               	goto	u182_27
  3423  06FC  0BF1               	decfsz	??_send_data+1,f
  3424  06FD  2EFA               	goto	u182_27
  3425  06FE  2EFF               	nop2
  3426  06FF                     i1l1325:	
  3427                           
  3428                           ;main.c: 605:     PORTEbits.RE1 = 1;
  3429  06FF  1283               	bcf	3,5	;RP0=0, select bank0
  3430  0700  1303               	bcf	3,6	;RP1=0, select bank0
  3431  0701  1489               	bsf	9,1	;volatile
  3432  0702                     i1l236:	
  3433  0702  0008               	return
  3434  0703                     __end_of_send_data:	
  3435                           
  3436                           	psect	text14
  3437  052A                     __ptext14:	
  3438 ;; *************** function ___awmod *****************
  3439 ;; Defined at:
  3440 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;  divisor         2    0[COMMON] int 
  3443 ;;  dividend        2    2[COMMON] int 
  3444 ;; Auto vars:     Size  Location     Type
  3445 ;;  sign            1    6[COMMON] unsigned char 
  3446 ;;  counter         1    5[COMMON] unsigned char 
  3447 ;; Return value:  Size  Location     Type
  3448 ;;                  2    0[COMMON] int 
  3449 ;; Registers used:
  3450 ;;		wreg, status,2, status,0
  3451 ;; Tracked objects:
  3452 ;;		On entry : 0/0
  3453 ;;		On exit  : 0/0
  3454 ;;		Unchanged: 0/0
  3455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3456 ;;      Params:         4       0       0       0       0
  3457 ;;      Locals:         2       0       0       0       0
  3458 ;;      Temps:          1       0       0       0       0
  3459 ;;      Totals:         7       0       0       0       0
  3460 ;;Total ram usage:        7 bytes
  3461 ;; Hardware stack levels used:    1
  3462 ;; This function calls:
  3463 ;;		Nothing
  3464 ;; This function is called by:
  3465 ;;		_print_Countdown
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469                           
  3470                           ;psect for function ___awmod
  3471  052A                     ___awmod:	
  3472  052A                     i1l1441:	
  3473                           ;incstack = 0
  3474                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3475                           
  3476  052A  01F6               	clrf	___awmod@sign
  3477  052B                     i1l1443:	
  3478  052B  1FF3               	btfss	___awmod@dividend+1,7
  3479  052C  2D2E               	goto	u112_21
  3480  052D  2D2F               	goto	u112_20
  3481  052E                     u112_21:	
  3482  052E  2D36               	goto	i1l1449
  3483  052F                     u112_20:	
  3484  052F                     i1l1445:	
  3485  052F  09F2               	comf	___awmod@dividend,f
  3486  0530  09F3               	comf	___awmod@dividend+1,f
  3487  0531  0AF2               	incf	___awmod@dividend,f
  3488  0532  1903               	skipnz
  3489  0533  0AF3               	incf	___awmod@dividend+1,f
  3490  0534                     i1l1447:	
  3491  0534  01F6               	clrf	___awmod@sign
  3492  0535  0AF6               	incf	___awmod@sign,f
  3493  0536                     i1l1449:	
  3494  0536  1FF1               	btfss	___awmod@divisor+1,7
  3495  0537  2D39               	goto	u113_21
  3496  0538  2D3A               	goto	u113_20
  3497  0539                     u113_21:	
  3498  0539  2D3F               	goto	i1l1453
  3499  053A                     u113_20:	
  3500  053A                     i1l1451:	
  3501  053A  09F0               	comf	___awmod@divisor,f
  3502  053B  09F1               	comf	___awmod@divisor+1,f
  3503  053C  0AF0               	incf	___awmod@divisor,f
  3504  053D  1903               	skipnz
  3505  053E  0AF1               	incf	___awmod@divisor+1,f
  3506  053F                     i1l1453:	
  3507  053F  0870               	movf	___awmod@divisor,w
  3508  0540  0471               	iorwf	___awmod@divisor+1,w
  3509  0541  1903               	btfsc	3,2
  3510  0542  2D44               	goto	u114_21
  3511  0543  2D45               	goto	u114_20
  3512  0544                     u114_21:	
  3513  0544  2D74               	goto	i1l1471
  3514  0545                     u114_20:	
  3515  0545                     i1l1455:	
  3516  0545  01F5               	clrf	___awmod@counter
  3517  0546  0AF5               	incf	___awmod@counter,f
  3518  0547  2D53               	goto	i1l1461
  3519  0548                     i1l1457:	
  3520  0548  3001               	movlw	1
  3521  0549                     u115_25:	
  3522  0549  1003               	clrc
  3523  054A  0DF0               	rlf	___awmod@divisor,f
  3524  054B  0DF1               	rlf	___awmod@divisor+1,f
  3525  054C  3EFF               	addlw	-1
  3526  054D  1D03               	skipz
  3527  054E  2D49               	goto	u115_25
  3528  054F                     i1l1459:	
  3529  054F  3001               	movlw	1
  3530  0550  00F4               	movwf	??___awmod
  3531  0551  0874               	movf	??___awmod,w
  3532  0552  07F5               	addwf	___awmod@counter,f
  3533  0553                     i1l1461:	
  3534  0553  1FF1               	btfss	___awmod@divisor+1,7
  3535  0554  2D56               	goto	u116_21
  3536  0555  2D57               	goto	u116_20
  3537  0556                     u116_21:	
  3538  0556  2D48               	goto	i1l1457
  3539  0557                     u116_20:	
  3540  0557                     i1l1463:	
  3541  0557  0871               	movf	___awmod@divisor+1,w
  3542  0558  0273               	subwf	___awmod@dividend+1,w
  3543  0559  1D03               	skipz
  3544  055A  2D5D               	goto	u117_25
  3545  055B  0870               	movf	___awmod@divisor,w
  3546  055C  0272               	subwf	___awmod@dividend,w
  3547  055D                     u117_25:	
  3548  055D  1C03               	skipc
  3549  055E  2D60               	goto	u117_21
  3550  055F  2D61               	goto	u117_20
  3551  0560                     u117_21:	
  3552  0560  2D67               	goto	i1l1467
  3553  0561                     u117_20:	
  3554  0561                     i1l1465:	
  3555  0561  0870               	movf	___awmod@divisor,w
  3556  0562  02F2               	subwf	___awmod@dividend,f
  3557  0563  0871               	movf	___awmod@divisor+1,w
  3558  0564  1C03               	skipc
  3559  0565  03F3               	decf	___awmod@dividend+1,f
  3560  0566  02F3               	subwf	___awmod@dividend+1,f
  3561  0567                     i1l1467:	
  3562  0567  3001               	movlw	1
  3563  0568                     u118_25:	
  3564  0568  1003               	clrc
  3565  0569  0CF1               	rrf	___awmod@divisor+1,f
  3566  056A  0CF0               	rrf	___awmod@divisor,f
  3567  056B  3EFF               	addlw	-1
  3568  056C  1D03               	skipz
  3569  056D  2D68               	goto	u118_25
  3570  056E                     i1l1469:	
  3571  056E  3001               	movlw	1
  3572  056F  02F5               	subwf	___awmod@counter,f
  3573  0570  1D03               	btfss	3,2
  3574  0571  2D73               	goto	u119_21
  3575  0572  2D74               	goto	u119_20
  3576  0573                     u119_21:	
  3577  0573  2D57               	goto	i1l1463
  3578  0574                     u119_20:	
  3579  0574                     i1l1471:	
  3580  0574  0876               	movf	___awmod@sign,w
  3581  0575  1903               	btfsc	3,2
  3582  0576  2D78               	goto	u120_21
  3583  0577  2D79               	goto	u120_20
  3584  0578                     u120_21:	
  3585  0578  2D7E               	goto	i1l1475
  3586  0579                     u120_20:	
  3587  0579                     i1l1473:	
  3588  0579  09F2               	comf	___awmod@dividend,f
  3589  057A  09F3               	comf	___awmod@dividend+1,f
  3590  057B  0AF2               	incf	___awmod@dividend,f
  3591  057C  1903               	skipnz
  3592  057D  0AF3               	incf	___awmod@dividend+1,f
  3593  057E                     i1l1475:	
  3594  057E  0873               	movf	___awmod@dividend+1,w
  3595  057F  00F1               	movwf	?___awmod+1
  3596  0580  0872               	movf	___awmod@dividend,w
  3597  0581  00F0               	movwf	?___awmod
  3598  0582                     i1l503:	
  3599  0582  0008               	return
  3600  0583                     __end_of___awmod:	
  3601                           
  3602                           	psect	text15
  3603  04C3                     __ptext15:	
  3604 ;; *************** function ___awdiv *****************
  3605 ;; Defined at:
  3606 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3607 ;; Parameters:    Size  Location     Type
  3608 ;;  divisor         2    0[COMMON] int 
  3609 ;;  dividend        2    2[COMMON] int 
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  quotient        2    7[COMMON] int 
  3612 ;;  sign            1    6[COMMON] unsigned char 
  3613 ;;  counter         1    5[COMMON] unsigned char 
  3614 ;; Return value:  Size  Location     Type
  3615 ;;                  2    0[COMMON] int 
  3616 ;; Registers used:
  3617 ;;		wreg, status,2, status,0
  3618 ;; Tracked objects:
  3619 ;;		On entry : 0/0
  3620 ;;		On exit  : 0/0
  3621 ;;		Unchanged: 0/0
  3622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3623 ;;      Params:         4       0       0       0       0
  3624 ;;      Locals:         4       0       0       0       0
  3625 ;;      Temps:          1       0       0       0       0
  3626 ;;      Totals:         9       0       0       0       0
  3627 ;;Total ram usage:        9 bytes
  3628 ;; Hardware stack levels used:    1
  3629 ;; This function calls:
  3630 ;;		Nothing
  3631 ;; This function is called by:
  3632 ;;		_print_Countdown
  3633 ;; This function uses a non-reentrant model
  3634 ;;
  3635                           
  3636                           
  3637                           ;psect for function ___awdiv
  3638  04C3                     ___awdiv:	
  3639  04C3                     i1l1397:	
  3640                           ;incstack = 0
  3641                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3642                           
  3643  04C3  01F6               	clrf	___awdiv@sign
  3644  04C4                     i1l1399:	
  3645  04C4  1FF1               	btfss	___awdiv@divisor+1,7
  3646  04C5  2CC7               	goto	u102_21
  3647  04C6  2CC8               	goto	u102_20
  3648  04C7                     u102_21:	
  3649  04C7  2CCF               	goto	i1l1405
  3650  04C8                     u102_20:	
  3651  04C8                     i1l1401:	
  3652  04C8  09F0               	comf	___awdiv@divisor,f
  3653  04C9  09F1               	comf	___awdiv@divisor+1,f
  3654  04CA  0AF0               	incf	___awdiv@divisor,f
  3655  04CB  1903               	skipnz
  3656  04CC  0AF1               	incf	___awdiv@divisor+1,f
  3657  04CD                     i1l1403:	
  3658  04CD  01F6               	clrf	___awdiv@sign
  3659  04CE  0AF6               	incf	___awdiv@sign,f
  3660  04CF                     i1l1405:	
  3661  04CF  1FF3               	btfss	___awdiv@dividend+1,7
  3662  04D0  2CD2               	goto	u103_21
  3663  04D1  2CD3               	goto	u103_20
  3664  04D2                     u103_21:	
  3665  04D2  2CDC               	goto	i1l1411
  3666  04D3                     u103_20:	
  3667  04D3                     i1l1407:	
  3668  04D3  09F2               	comf	___awdiv@dividend,f
  3669  04D4  09F3               	comf	___awdiv@dividend+1,f
  3670  04D5  0AF2               	incf	___awdiv@dividend,f
  3671  04D6  1903               	skipnz
  3672  04D7  0AF3               	incf	___awdiv@dividend+1,f
  3673  04D8                     i1l1409:	
  3674  04D8  3001               	movlw	1
  3675  04D9  00F4               	movwf	??___awdiv
  3676  04DA  0874               	movf	??___awdiv,w
  3677  04DB  06F6               	xorwf	___awdiv@sign,f
  3678  04DC                     i1l1411:	
  3679  04DC  01F7               	clrf	___awdiv@quotient
  3680  04DD  01F8               	clrf	___awdiv@quotient+1
  3681  04DE                     i1l1413:	
  3682  04DE  0870               	movf	___awdiv@divisor,w
  3683  04DF  0471               	iorwf	___awdiv@divisor+1,w
  3684  04E0  1903               	btfsc	3,2
  3685  04E1  2CE3               	goto	u104_21
  3686  04E2  2CE4               	goto	u104_20
  3687  04E3                     u104_21:	
  3688  04E3  2D1B               	goto	i1l1433
  3689  04E4                     u104_20:	
  3690  04E4                     i1l1415:	
  3691  04E4  01F5               	clrf	___awdiv@counter
  3692  04E5  0AF5               	incf	___awdiv@counter,f
  3693  04E6  2CF2               	goto	i1l1421
  3694  04E7                     i1l1417:	
  3695  04E7  3001               	movlw	1
  3696  04E8                     u105_25:	
  3697  04E8  1003               	clrc
  3698  04E9  0DF0               	rlf	___awdiv@divisor,f
  3699  04EA  0DF1               	rlf	___awdiv@divisor+1,f
  3700  04EB  3EFF               	addlw	-1
  3701  04EC  1D03               	skipz
  3702  04ED  2CE8               	goto	u105_25
  3703  04EE                     i1l1419:	
  3704  04EE  3001               	movlw	1
  3705  04EF  00F4               	movwf	??___awdiv
  3706  04F0  0874               	movf	??___awdiv,w
  3707  04F1  07F5               	addwf	___awdiv@counter,f
  3708  04F2                     i1l1421:	
  3709  04F2  1FF1               	btfss	___awdiv@divisor+1,7
  3710  04F3  2CF5               	goto	u106_21
  3711  04F4  2CF6               	goto	u106_20
  3712  04F5                     u106_21:	
  3713  04F5  2CE7               	goto	i1l1417
  3714  04F6                     u106_20:	
  3715  04F6                     i1l1423:	
  3716  04F6  3001               	movlw	1
  3717  04F7                     u107_25:	
  3718  04F7  1003               	clrc
  3719  04F8  0DF7               	rlf	___awdiv@quotient,f
  3720  04F9  0DF8               	rlf	___awdiv@quotient+1,f
  3721  04FA  3EFF               	addlw	-1
  3722  04FB  1D03               	skipz
  3723  04FC  2CF7               	goto	u107_25
  3724  04FD  0871               	movf	___awdiv@divisor+1,w
  3725  04FE  0273               	subwf	___awdiv@dividend+1,w
  3726  04FF  1D03               	skipz
  3727  0500  2D03               	goto	u108_25
  3728  0501  0870               	movf	___awdiv@divisor,w
  3729  0502  0272               	subwf	___awdiv@dividend,w
  3730  0503                     u108_25:	
  3731  0503  1C03               	skipc
  3732  0504  2D06               	goto	u108_21
  3733  0505  2D07               	goto	u108_20
  3734  0506                     u108_21:	
  3735  0506  2D0E               	goto	i1l1429
  3736  0507                     u108_20:	
  3737  0507                     i1l1425:	
  3738  0507  0870               	movf	___awdiv@divisor,w
  3739  0508  02F2               	subwf	___awdiv@dividend,f
  3740  0509  0871               	movf	___awdiv@divisor+1,w
  3741  050A  1C03               	skipc
  3742  050B  03F3               	decf	___awdiv@dividend+1,f
  3743  050C  02F3               	subwf	___awdiv@dividend+1,f
  3744  050D                     i1l1427:	
  3745  050D  1477               	bsf	___awdiv@quotient,0
  3746  050E                     i1l1429:	
  3747  050E  3001               	movlw	1
  3748  050F                     u109_25:	
  3749  050F  1003               	clrc
  3750  0510  0CF1               	rrf	___awdiv@divisor+1,f
  3751  0511  0CF0               	rrf	___awdiv@divisor,f
  3752  0512  3EFF               	addlw	-1
  3753  0513  1D03               	skipz
  3754  0514  2D0F               	goto	u109_25
  3755  0515                     i1l1431:	
  3756  0515  3001               	movlw	1
  3757  0516  02F5               	subwf	___awdiv@counter,f
  3758  0517  1D03               	btfss	3,2
  3759  0518  2D1A               	goto	u110_21
  3760  0519  2D1B               	goto	u110_20
  3761  051A                     u110_21:	
  3762  051A  2CF6               	goto	i1l1423
  3763  051B                     u110_20:	
  3764  051B                     i1l1433:	
  3765  051B  0876               	movf	___awdiv@sign,w
  3766  051C  1903               	btfsc	3,2
  3767  051D  2D1F               	goto	u111_21
  3768  051E  2D20               	goto	u111_20
  3769  051F                     u111_21:	
  3770  051F  2D25               	goto	i1l1437
  3771  0520                     u111_20:	
  3772  0520                     i1l1435:	
  3773  0520  09F7               	comf	___awdiv@quotient,f
  3774  0521  09F8               	comf	___awdiv@quotient+1,f
  3775  0522  0AF7               	incf	___awdiv@quotient,f
  3776  0523  1903               	skipnz
  3777  0524  0AF8               	incf	___awdiv@quotient+1,f
  3778  0525                     i1l1437:	
  3779  0525  0878               	movf	___awdiv@quotient+1,w
  3780  0526  00F1               	movwf	?___awdiv+1
  3781  0527  0877               	movf	___awdiv@quotient,w
  3782  0528  00F0               	movwf	?___awdiv
  3783  0529                     i1l490:	
  3784  0529  0008               	return
  3785  052A                     __end_of___awdiv:	
  3786  007E                     btemp	set	126	;btemp
  3787  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        75
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     79      80
    BANK1            80     33      67
    BANK3            96      0      68
    BANK2            96      0       0

Pointer List with Targets:

    send_string@str	PTR unsigned char  size(1) Largest target is 17
		 -> print_Countdown@secondStr_409(BANK0[17]), print_Countdown@secondStr_407(BANK0[17]), print_Countdown@secondStr(BANK0[17]), print_Countdown@firstStr(BANK0[17]), 

    Uart_send_string@str	PTR unsigned char  size(1) Largest target is 8
		 -> strToSend(BANK1[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_print_Countdown
    _print_Countdown->___awdiv
    _send_string->_send_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_print_Countdown

Critical Paths under _main in BANK1

    _main->_UART_init
    _messageTransmission->_Uart_send_string
    _Uart_send_string->_UART_TxChar
    _init_lcd->_send_cmd
    _UART_init->___aldiv

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3353
                                             28 BANK1      5     5      0
                          _UART_init
                            _initPic
                           _init_lcd
                _messageTransmission
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _messageTransmission                                  5     2      3    2513
                                             11 BANK1      5     2      3
                   _Uart_send_string
 ---------------------------------------------------------------------------------
 (2) _Uart_send_string                                     3     3      0     145
                                              8 BANK1      3     3      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              7 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             2     2      0      22
                                             10 BANK1      2     2      0
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _send_cmd                                             3     3      0      22
                                              7 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initPic                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            6     4      2     550
                                             22 BANK1      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              7 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  7     7      0    2110
                                              0 BANK1      7     7      0
                    _print_Countdown
 ---------------------------------------------------------------------------------
 (5) _print_Countdown                                     82    79      3    2110
                                              9 COMMON     3     0      3
                                              0 BANK0     79    79      0
                            ___awdiv
                            ___awmod
                        _send_string
                         i1_send_cmd
 ---------------------------------------------------------------------------------
 (6) i1_send_cmd                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _send_string                                          4     4      0     244
                                              3 COMMON     4     4      0
                          _send_data
 ---------------------------------------------------------------------------------
 (7) _send_data                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
   _initPic
   _init_lcd
     _send_cmd
   _messageTransmission
     _Uart_send_string
       _UART_TxChar
   _send_cmd

 _ISR (ROOT)
   _print_Countdown
     ___awdiv
     ___awmod
     _send_string
       _send_data
     i1_send_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      44       9       70.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     21      43       7       83.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E5      12        0.0%
ABS                  0      0      E5       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jul 16 16:50:34 2020

                               _f 00C5                                 pc 0002                       __CFG_CP$OFF 0000  
                    ___awdiv@sign 0076                                fsr 0004      print_Countdown@secondStr_407 0035  
    print_Countdown@secondStr_409 0046               _messageTransmission 0680                       __CFG_LVP$ON 0000  
                             l141 00FD                               l402 043A                               l242 05D9  
                             l250 073B                               l251 0742                               l412 04C2  
                             l245 0657                               l190 071F                               l239 067F  
                             l248 0736                               l176 06A1                               l193 0751  
                    __CFG_CPD$OFF 0000                               _ISR 030A                               u900 071F  
                             u901 071E                               u920 042D                               u921 042C  
                             u930 043E                               u931 043D                               u940 045D  
                             u941 045C                               u960 0471                               u961 0470  
                             u890 073B                               u955 0462                               u891 073A  
                             u980 048C                               u981 048B                               u975 0473  
                             u985 0488                               u995 049C                               fsr0 0004  
                             indf 0000                      ___awmod@sign 0076                      __CFG_FOSC$HS 0000  
       messageTransmission@codice 00AC                              ?_ISR 0070         messageTransmission@valore 00AD  
                            l1313 0736                              l1331 0664                              l1315 073C  
                            l1501 0655                              l1333 066F                              l1503 0656  
                            l1335 067C                              l1327 065B                              l1511 0594  
                            l1343 0707                              l1361 042D                              l1329 065E  
                            l1521 05C1                              l1513 059A                              l1505 0583  
                            l1345 0713                              l1337 0706                              l1601 0072  
                            l1371 045D                              l1363 043E                              l1523 05C7  
                            l1515 05AA                              l1507 0587                              l1347 0719  
                            l1531 069B                              l1611 0085                              l1603 0076  
                            l1381 048C                              l1373 0460                              l1365 0449  
                            l1357 0426                              l1525 05CD                              l1517 05B5  
                            l1509 0591                              l1621 0094                              l1613 0089  
                            l1605 007B                              l1391 04AF                              l1383 049A  
                            l1375 046D                              l1367 044D                              l1359 0429  
                            l1527 05D3                              l1519 05BB                              l1631 00A0  
                            l1623 0099                              l1615 008A                              l1607 007F  
                            l1393 04BA                              l1385 049B                              l1377 0471  
                            l1369 0455                              l1529 0683                              l1641 00C2  
                            l1633 00AA                              l1617 008F                              l1609 0080  
                            l1387 04A4                              l1379 047A                              l1491 0746  
                            l1651 00E2                              l1635 00B3                              l1643 00C9  
                            l1619 0093                              l1389 04AA                              l1493 0748  
                            l1645 00CF                              l1653 00E8                              l1637 00B6  
                            l1661 00FF                              l1629 009B                              l1495 061E  
                            l1671 0198                              l1663 0103                              l1655 00EE  
                            l1647 00D8                              l1639 00BD                              l1497 0626  
                            l1489 0743                              l1681 01C4                              l1673 01AB  
                            l1657 00F1                              l1649 00DB                              l1665 0109  
                            l1593 0049                              l1499 0654                              l1683 01C8  
                            l1675 01BB                              l1667 010E                              l1659 00F8  
                            l1595 0064                              l1677 01BE                              l1669 0195  
                            l1597 006A                              l1679 01BF                              l1599 006E  
                            u1000 04AA                              u1001 04A9                              u1010 04AF  
                            u1011 04AE                              u1210 0637                              u1215 0632  
                            u1400 00B3                              u1401 00B2                              u1410 00C2  
                            u1411 00C1                              u1420 00CF                              u1340 007B  
                            u1421 00CE                              u1341 007A                              u1430 00D8  
                            u1350 0085                              u1431 00D7                              u1351 0084  
                            u1440 00E7                              u1360 008F                              u1441 00E6  
                            u1361 008E                              u1450 00EE                              u1370 0099  
                            u1451 00ED                              u1371 0098                              u1460 00FD  
                            u1380 00A0                              u1461 00FC                              u1381 009F  
                            u1470 0109                              u1390 00AA                              u1471 0108  
                            u1391 00A9                              u1480 010E                              u1481 010D  
                            u1490 01C4                              u1491 01C3                              u1737 058D  
                            u1747 05A0                              u1757 05B0                              u1767 066B  
                            u1777 0678                              _RCIF 0065                              _TMR0 0001  
                            _TXIF 0064              ?_messageTransmission 00AB                      __CFG_WRT$OFF 0000  
                            _main 0049                        i1_send_cmd 06C3                              btemp 007E  
                   __CFG_BOREN$ON 0000                              start 0016                     _statoSemafori 00DD  
                           ??_ISR 00A0                   __end_of___aldiv 04C3                             ?_main 0070  
                 __end_of___awdiv 052A                     __CFG_WDTE$OFF 0000                   __end_of___awmod 0583  
                 ___awdiv@divisor 0070                             i1l233 06C2                             i1l161 0373  
                           i1l227 0309                             i1l155 0321                 Uart_send_string@i 00AA  
                           i1l236 0702                             i1l156 033E                             i1l173 0415  
                           i1l157 035F                             i1l503 0582                             i1l239 06E2  
                           i1l159 036F                             i1l490 0529                   ___awdiv@counter 0075  
                           _RCREG 001A                             _SPBRG 0099                             _PORTD 0008  
                           _TRISA 0085                             _TRISB 0086                             _TRISD 0088  
                           _TRISE 0089                             u91_20 06C2                             u91_21 06C1  
                           _TXREG 0019                             _PicId 00E0                     __CFG_PWRTE$ON 0000  
                  _scattoSemafori 00CA                __size_of_UART_init 003A                   __end_of_initPic 0752  
                           _count 00C7                             _stat1 00CF                             _stat2 00CD  
                           _stat3 00CB                             main@i 00C0             ??_messageTransmission 00AE  
                           pclath 000A                print_Countdown@num 0079                             status 0003  
                           wtemp0 007E                   __initialization 0019                      __end_of_main 01CD  
                          ??_main 00BC                            _ADCON0 001F                            _ADCON1 009F  
                          _ADRESH 001E                            _ADRESL 009E                  ___awdiv@dividend 0072  
                          u110_20 051B                            u102_20 04C8                            u110_21 051A  
                          u102_21 04C7                            u111_20 0520                            u103_20 04D3  
                          u111_21 051F                            u103_21 04D2                            i1l1401 04C8  
                          i1l1321 06E9                            i1l1411 04DC                            i1l1403 04CD  
                          i1l1323 06F3                            i1l1421 04F2                            i1l1413 04DE  
                          i1l1405 04CF                            i1l1325 06FF                            i1l1317 06E4  
                          i1l1431 0515                            i1l1423 04F6                            i1l1415 04E4  
                          i1l1407 04D3                            i1l1319 06E7                            i1l1351 06A6  
                          u104_20 04E4                            u120_20 0579                            u112_20 052F  
                          i1l1425 0507                            i1l1417 04E7                            i1l1433 051B  
                          u104_21 04E3                            i1l1409 04D8                            u120_21 0578  
                          u112_21 052E                            i1l1441 052A                            i1l1353 06B1  
                          i1l1435 0520                            i1l1427 050D                            i1l1419 04EE  
                          i1l1451 053A                            i1l1443 052B                            i1l1355 06B7  
                          i1l1437 0525                            i1l1429 050E                            i1l1461 0553  
                          i1l1453 053F                            i1l1445 052F                            i1l1349 06A3  
                          i1l1541 01F8                            i1l1533 01CD                            i1l1701 0355  
                          i1l1463 0557                            i1l1455 0545                            i1l1471 0574  
                          i1l1447 0534                            i1l1551 0213                            i1l1543 01FF  
                          i1l1535 01E5                            i1l1711 037C                            i1l1703 0369  
                          u113_20 053A                            i1l1473 0579                            i1l1465 0561  
                          i1l1457 0548                            u113_21 0539                            i1l1449 0536  
                          i1l1481 06C7                            i1l1561 0251                            i1l1553 022B  
                          i1l1545 0206                            i1l1537 01E9                            i1l1721 039F  
                          i1l1713 0380                            i1l1475 057E                            i1l1467 0567  
                          i1l1459 054F                            i1l1483 06C9                            i1l1571 0284  
                          i1l1563 0256                            i1l1555 023C                            i1l1547 020C  
                          i1l1539 01EB                            i1l1731 03DA                            i1l1723 03AC  
                          i1l1715 0386                            i1l1707 0374                            u105_25 04E8  
                          i1l1397 04C3                            i1l1469 056E                            i1l1485 06D3  
                          i1l1581 02C4                            i1l1573 0289                            i1l1565 0264  
                          i1l1557 0244                            i1l1741 0401                            i1l1733 03E1  
                          i1l1725 03B4                            i1l1717 038A                            i1l1709 037A  
                          i1l1399 04C4                            i1l1487 06DF                            i1l1479 06C4  
                          i1l1591 0303                            i1l1583 02CA                            i1l1575 02A1  
                          i1l1567 026A                            i1l1559 024B                            i1l1743 0403  
                          i1l1735 03E7                            i1l1727 03C2                            i1l1719 0399  
                          u106_20 04F6                            u114_20 0545                            u130_20 02AC  
                          u122_20 01D7                            u106_21 04F5                            u114_21 0544  
                          i1l1585 02D0                            u130_21 02AB                            i1l1577 02A7  
                          i1l1569 0278                            i1l1745 0408                            i1l1737 03F4  
                          i1l1729 03CA                            i1l1587 02E8                            i1l1579 02AC  
                          i1l1747 040D                            i1l1739 03FA                            i1l1691 0329  
                          i1l1589 02EE                            i1l1749 0411                            i1l1693 032D  
                          i1l1685 030A                            i1l1695 0334                            i1l1687 0310  
                          u131_20 02B6                            u123_20 01F8                            u123_21 01F7  
                          i1l1697 0348                            i1l1689 0315                            i1l1699 034E  
                          u107_25 04F7                            u115_25 0549                            u123_25 01F4  
                          u108_20 0507                            u116_20 0557                            u132_20 02D0  
                          u124_20 0206                            u108_21 0506                            u116_21 0556  
                          u132_21 02CF                            u124_21 0205                            u108_25 0503  
                          u117_20 0561                            u133_20 02DA                            u125_20 0212  
                          u117_21 0560                            u125_21 0211                            u109_25 050F  
                          u117_25 055D                            u126_20 024A                            u150_20 0310  
                          u126_21 0249                            u150_21 030F                            u118_25 0568  
                          u119_20 0574                            u127_20 0278                            u151_20 0315  
                          u119_21 0573                            u127_21 0277                            u151_21 0314  
                          u127_25 0274                            u128_20 0289                            u160_20 035B  
                          u152_20 031D                            u128_21 0288                            u160_21 0359  
                          u152_21 031B                            u129_20 0293                            u161_20 035C  
                          u153_20 031E                            _INTCON 000B                            u170_20 03F4  
                          u162_20 036F                            u154_20 032D                            u170_21 03F3  
                          u162_21 036E                            u154_21 032C                            u170_25 03F0  
                          u171_20 0401                            u163_20 0373                            u155_20 0334  
                          u171_21 0400                            u163_21 0372                            u155_21 0333  
                          u172_20 0408                            u164_20 0380                            u156_20 033A  
                          u172_21 0407                            u164_21 037F                            u156_21 0338  
                          u180_27 06DA                            u165_20 0399                            u157_20 033B  
                          u165_21 0398                            u181_27 06EE                            u166_20 039F  
                          u158_20 034E                            u166_21 039E                            u158_21 034D  
                          u182_27 06FA                            u167_20 03B4                            u159_20 0355  
                    ?_send_string 0070                            u167_21 03B3                            u159_21 0354  
                          u168_20 03CA                            u168_21 03C9                            u169_20 03E1  
                          u169_21 03E0                            u178_27 02F6                            u179_27 06CE  
                     ?i1_send_cmd 0070                    send_string@str 0076                      ?_UART_TxChar 0070  
        __size_of_print_Countdown 013D                         ??___aldiv 00AF                 __end_of_UART_init 0658  
                       ??___awdiv 0074                         ??___awmod 0074                  __end_of_init_lcd 05DA  
                ___awdiv@quotient 0077                   ___awmod@divisor 0070                   ___awmod@counter 0075  
             print_Countdown@F933 01B2               print_Countdown@F935 01A1               print_Countdown@F929 01C3  
             print_Countdown@F937 0190                  __end_of_send_cmd 0680                         ??_initPic 00A7  
                    __pdataCOMMON 007D                            saved_w 007E         __size_of_Uart_send_string 001D  
messageTransmission@tipoMessaggio 00AF           __end_of__initialization 0045                    __pcstackCOMMON 0070  
                    __pidataBANK1 075A                      __pidataBANK3 05DA               __size_ofi1_send_cmd 0020  
                      __pbssBANK0 006F                        __pbssBANK1 00C1       messageTransmission@idStrada 00AB  
                      __pmaintext 0049                        _flagGiallo 00C9                        __pintentry 0004  
              __size_of_send_data 0020                 ??_print_Countdown 0020                        _contCamion 00D0  
             Uart_send_string@str 00A9                 main@semaforoVerde 00BF                         ?_init_lcd 0070  
            __size_of_send_string 0021                         ?_send_cmd 0070              __size_of_UART_TxChar 0010  
                         ___aldiv 0426                           ___awdiv 04C3                           ___awmod 052A  
                         __ptext1 0680                           __ptext2 0703                           __ptext3 0733  
                         __ptext4 0583                           __ptext5 0658                           __ptext6 0743  
                         __ptext7 061E                           __ptext8 0426                           __ptext9 030A  
                    __size_of_ISR 011C                           _oldBtn1 006F                           _oldBtn2 00CE  
                         _oldBtn3 00CC                           _initPic 0743                  ___awmod@dividend 0072  
                ___aldiv@dividend 00AB       __end_of_messageTransmission 06A2                           clrloop0 0753  
                _Uart_send_string 0703              end_of_initialization 0045                 __end_of_send_data 0703  
                      ??_init_lcd 00AA                      ??i1_send_cmd 0070          print_Countdown@secondStr 0024  
                      ??_send_cmd 00A7                         _RCSTAbits 0018                  ___aldiv@quotient 00B2  
        print_Countdown@resultNum 0068                     send_data@data 0072                         _PORTBbits 0006  
                       _UART_init 061E                         _PORTEbits 0009                __end_ofi1_send_cmd 06E3  
                       _TRISCbits 0087                 i1send_cmd@command 0072                   _temporizzazione 007C  
                       _TXSTAbits 0098                  print_Countdown@i 006D                     __pidataCOMMON 0760  
                      ?_UART_init 00B6               start_initialization 0019                       __end_of_ISR 0426  
                 _print_Countdown 01CD                        init_fetch0 0720                       __pdataBANK1 00DD  
                     __pdataBANK3 0190                       __pbssCOMMON 007C                         ___latbits 0002  
                   __pcstackBANK0 0020                     __pcstackBANK1 00A0                       _datoSeriale 00D3  
               __size_of_init_lcd 0057                          ?___aldiv 00A7                 __size_of_send_cmd 0028  
                        ?___awdiv 0070                          ?___awmod 0070          __end_of_Uart_send_string 0720  
                     ??_UART_init 00B8                          ?_initPic 0070                         _countDown 007D  
         __end_of_print_Countdown 030A                     ??_send_string 0073           print_Countdown@firstStr 0057  
                 ___aldiv@divisor 00A7                 interrupt_function 0004                   ___aldiv@counter 00B0  
                       clear_ram0 0752                          _PIE1bits 008C                         _send_data 06E3  
                   ??_UART_TxChar 00A7                          _GO_nDONE 00FA                         _numStrade 00E2  
         print_Countdown@statoSem 007B                        _ADCON0bits 001F                         _strToSend 00D5  
    __size_of_messageTransmission 0022                        ?_send_data 0070                      send_string@i 0074  
             __end_of_send_string 06C3                   UART_TxChar@dato 00A7                  __size_of___aldiv 009D  
             __end_of_UART_TxChar 0743                  __size_of___awdiv 0067                  __size_of___awmod 0059  
                __size_of_initPic 000F                          __ptext10 01CD                          __ptext11 06C3  
                        __ptext12 06A2                          __ptext13 06E3                          __ptext14 052A  
                        __ptext15 04C3                          _contAuto 00D2                          _contMoto 00D1  
                ?_print_Countdown 0079                          _init_lcd 0583                     __size_of_main 0184  
                        _received 00D4                          _send_cmd 0658                          _semafori 00C1  
                      _INTCONbits 000B                          init_ram0 0724                   send_cmd@command 00A9  
                        intlevel1 0000                 UART_init@baudrate 00B6                       _send_string 06A2  
                     ??_send_data 0070                       _UART_TxChar 0733             print_Countdown@length 006B  
               ?_Uart_send_string 0070                ??_Uart_send_string 00A8                        _OPTION_REG 0081  
                    ___aldiv@sign 00B1  
