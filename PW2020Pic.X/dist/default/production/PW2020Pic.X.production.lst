

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jul 16 11:58:05 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.10
    36                           ; Generated 31/07/2019 GMT
    37                           ; 
    38                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189                           
   190                           	psect	idataCOMMON
   191  067A                     __pidataCOMMON:	
   192                           
   193                           ;initializer for _countDown
   194  067A  3405               	retlw	5
   195                           
   196                           	psect	idataBANK1
   197  0674                     __pidataBANK1:	
   198                           
   199                           ;initializer for _statoSemafori
   200  0674  3400               	retlw	0
   201  0675  3401               	retlw	1
   202  0676  3402               	retlw	2
   203                           
   204                           ;initializer for _PicId
   205  0677  34A7               	retlw	167
   206  0678  3400               	retlw	0
   207                           
   208                           ;initializer for _numStrade
   209  0679  3404               	retlw	4
   210                           
   211                           	psect	idataBANK3
   212  0543                     __pidataBANK3:	
   213                           
   214                           ;initializer for print_Countdown@F933
   215  0543  3453               	retlw	83
   216  0544  3465               	retlw	101
   217  0545  346D               	retlw	109
   218  0546  3420               	retlw	32
   219  0547  3430               	retlw	48
   220  0548  343A               	retlw	58
   221  0549  3420               	retlw	32
   222  054A  3420               	retlw	32
   223  054B  3420               	retlw	32
   224  054C  3420               	retlw	32
   225  054D  3420               	retlw	32
   226  054E  3452               	retlw	82
   227  054F  346F               	retlw	111
   228  0550  3473               	retlw	115
   229  0551  3473               	retlw	115
   230  0552  346F               	retlw	111
   231  0553  3400               	retlw	0
   232                           
   233                           ;initializer for print_Countdown@F931
   234  0554  3453               	retlw	83
   235  0555  3465               	retlw	101
   236  0556  346D               	retlw	109
   237  0557  3420               	retlw	32
   238  0558  3430               	retlw	48
   239  0559  343A               	retlw	58
   240  055A  3420               	retlw	32
   241  055B  3420               	retlw	32
   242  055C  3420               	retlw	32
   243  055D  3420               	retlw	32
   244  055E  3447               	retlw	71
   245  055F  3469               	retlw	105
   246  0560  3461               	retlw	97
   247  0561  346C               	retlw	108
   248  0562  346C               	retlw	108
   249  0563  346F               	retlw	111
   250  0564  3400               	retlw	0
   251                           
   252                           ;initializer for print_Countdown@F929
   253  0565  3453               	retlw	83
   254  0566  3465               	retlw	101
   255  0567  346D               	retlw	109
   256  0568  3420               	retlw	32
   257  0569  3430               	retlw	48
   258  056A  343A               	retlw	58
   259  056B  3420               	retlw	32
   260  056C  3420               	retlw	32
   261  056D  3420               	retlw	32
   262  056E  3420               	retlw	32
   263  056F  3420               	retlw	32
   264  0570  3456               	retlw	86
   265  0571  3465               	retlw	101
   266  0572  3472               	retlw	114
   267  0573  3464               	retlw	100
   268  0574  3465               	retlw	101
   269  0575  3400               	retlw	0
   270                           
   271                           ;initializer for print_Countdown@F925
   272  0576  3454               	retlw	84
   273  0577  3465               	retlw	101
   274  0578  346D               	retlw	109
   275  0579  3470               	retlw	112
   276  057A  346F               	retlw	111
   277  057B  343A               	retlw	58
   278  057C  3420               	retlw	32
   279  057D  3420               	retlw	32
   280  057E  3420               	retlw	32
   281  057F  3420               	retlw	32
   282  0580  3420               	retlw	32
   283  0581  3420               	retlw	32
   284  0582  3420               	retlw	32
   285  0583  3420               	retlw	32
   286  0584  3420               	retlw	32
   287  0585  3420               	retlw	32
   288  0586  3400               	retlw	0
   289  0019                     _TXREG	set	25
   290  000B                     _INTCONbits	set	11
   291  0018                     _RCSTAbits	set	24
   292  0008                     _PORTD	set	8
   293  0009                     _PORTEbits	set	9
   294  001E                     _ADRESH	set	30
   295  001F                     _ADCON0bits	set	31
   296  001F                     _ADCON0	set	31
   297  0001                     _TMR0	set	1
   298  000B                     _INTCON	set	11
   299  001A                     _RCREG	set	26
   300  0006                     _PORTBbits	set	6
   301  0064                     _TXIF	set	100
   302  00FA                     _GO_nDONE	set	250
   303  0065                     _RCIF	set	101
   304  008C                     _PIE1bits	set	140
   305  0099                     _SPBRG	set	153
   306  0098                     _TXSTAbits	set	152
   307  0087                     _TRISCbits	set	135
   308  009E                     _ADRESL	set	158
   309  009F                     _ADCON1	set	159
   310  0085                     _TRISA	set	133
   311  0081                     _OPTION_REG	set	129
   312  0089                     _TRISE	set	137
   313  0086                     _TRISB	set	134
   314  0088                     _TRISD	set	136
   315                           
   316                           ; #config settings
   317  0000                     
   318                           	psect	cinit
   319  0019                     start_initialization:	
   320  0019                     __initialization:	
   321                           
   322                           ; Initialize objects allocated to BANK3
   323  0019  1783               	bsf	3,7	;select IRP bank2
   324  001A  30D4               	movlw	low (__pdataBANK3+68)
   325  001B  00FD               	movwf	btemp+-1
   326  001C  3005               	movlw	high __pidataBANK3
   327  001D  00FE               	movwf	btemp
   328  001E  3043               	movlw	low __pidataBANK3
   329  001F  00FF               	movwf	btemp+1
   330  0020  3090               	movlw	low __pdataBANK3
   331  0021  0084               	movwf	4
   332  0022  120A  118A  264E  120A  118A  	fcall	init_ram0
   333                           
   334                           ; Initialize objects allocated to BANK1
   335  0027  1383               	bcf	3,7	;select IRP bank0
   336  0028  30E4               	movlw	low (__pdataBANK1+6)
   337  0029  00FD               	movwf	btemp+-1
   338  002A  3006               	movlw	high __pidataBANK1
   339  002B  00FE               	movwf	btemp
   340  002C  3074               	movlw	low __pidataBANK1
   341  002D  00FF               	movwf	btemp+1
   342  002E  30DE               	movlw	low __pdataBANK1
   343  002F  0084               	movwf	4
   344  0030  120A  118A  264E  120A  118A  	fcall	init_ram0
   345                           
   346                           ; Initialize objects allocated to COMMON
   347  0035  120A  118A  267A  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   348  003A  00FD               	movwf	__pdataCOMMON& (0+127)
   349                           
   350                           ; Clear objects allocated to BANK1
   351  003B  30C2               	movlw	low __pbssBANK1
   352  003C  0084               	movwf	4
   353  003D  30DE               	movlw	low (__pbssBANK1+28)
   354  003E  120A  118A  266C  120A  118A  	fcall	clear_ram0
   355                           
   356                           ; Clear objects allocated to BANK0
   357  0043  01EF               	clrf	__pbssBANK0& (0+127)
   358                           
   359                           ; Clear objects allocated to COMMON
   360  0044  01FC               	clrf	__pbssCOMMON& (0+127)
   361  0045                     end_of_initialization:	
   362                           ;End of C runtime variable initialization code
   363                           
   364  0045                     __end_of__initialization:	
   365  0045  0183               	clrf	3
   366  0046  120A  118A  2AA2   	ljmp	_main	;jump to C main() function
   367                           
   368                           	psect	bssCOMMON
   369  007C                     __pbssCOMMON:	
   370  007C                     _temporizzazione:	
   371  007C                     	ds	1
   372                           
   373                           	psect	dataCOMMON
   374  007D                     __pdataCOMMON:	
   375  007D                     _countDown:	
   376  007D                     	ds	1
   377                           
   378                           	psect	bssBANK0
   379  006F                     __pbssBANK0:	
   380  006F                     _oldBtn1:	
   381  006F                     	ds	1
   382                           
   383                           	psect	bssBANK1
   384  00C2                     __pbssBANK1:	
   385  00C2                     _semafori:	
   386  00C2                     	ds	4
   387  00C6                     _f:	
   388  00C6                     	ds	2
   389  00C8                     _count:	
   390  00C8                     	ds	2
   391  00CA                     _flagGiallo:	
   392  00CA                     	ds	1
   393  00CB                     _scattoSemafori:	
   394  00CB                     	ds	1
   395  00CC                     _stat3:	
   396  00CC                     	ds	1
   397  00CD                     _oldBtn3:	
   398  00CD                     	ds	1
   399  00CE                     _stat2:	
   400  00CE                     	ds	1
   401  00CF                     _oldBtn2:	
   402  00CF                     	ds	1
   403  00D0                     _stat1:	
   404  00D0                     	ds	1
   405  00D1                     _contCamion:	
   406  00D1                     	ds	1
   407  00D2                     _contMoto:	
   408  00D2                     	ds	1
   409  00D3                     _contAuto:	
   410  00D3                     	ds	1
   411  00D4                     _datoSeriale:	
   412  00D4                     	ds	1
   413  00D5                     _received:	
   414  00D5                     	ds	1
   415  00D6                     _strToSend:	
   416  00D6                     	ds	8
   417                           
   418                           	psect	dataBANK1
   419  00DE                     __pdataBANK1:	
   420  00DE                     _statoSemafori:	
   421  00DE                     	ds	3
   422  00E1                     _PicId:	
   423  00E1                     	ds	2
   424  00E3                     _numStrade:	
   425  00E3                     	ds	1
   426                           
   427                           	psect	dataBANK3
   428  0190                     __pdataBANK3:	
   429  0190                     print_Countdown@F933:	
   430  0190                     	ds	17
   431  01A1                     print_Countdown@F931:	
   432  01A1                     	ds	17
   433  01B2                     print_Countdown@F929:	
   434  01B2                     	ds	17
   435  01C3                     print_Countdown@F925:	
   436  01C3                     	ds	17
   437                           
   438                           	psect	inittext
   439  064A                     init_fetch0:	
   440                           ;	Called with low address in FSR and high address in W
   441                           
   442  064A  087E               	movf	btemp,w
   443  064B  008A               	movwf	10
   444  064C  087F               	movf	btemp+1,w
   445  064D  0082               	movwf	2
   446  064E                     init_ram0:	
   447                           ;Called with:
   448                           ;	high address of idata address in btemp 
   449                           ;	low address of idata address in btemp+1 
   450                           ;	low address of data in FSR
   451                           ;	high address + 1 of data in btemp-1
   452                           
   453  064E  120A  118A  264A  120A  118A  	fcall	init_fetch0
   454  0653  0080               	movwf	0
   455  0654  0A84               	incf	4,f
   456  0655  0804               	movf	4,w
   457  0656  067D               	xorwf	btemp+-1,w
   458  0657  1903               	btfsc	3,2
   459  0658  3400               	retlw	0
   460  0659  0AFF               	incf	btemp+1,f
   461  065A  1903               	btfsc	3,2
   462  065B  0AFE               	incf	btemp,f
   463  065C  2E4E               	goto	init_ram0
   464                           
   465                           	psect	clrtext
   466  066C                     clear_ram0:	
   467                           ;	Called with FSR containing the base address, and
   468                           ;	W with the last address+1
   469                           
   470  066C  0064               	clrwdt	;clear the watchdog before getting into this loop
   471  066D                     clrloop0:	
   472  066D  0180               	clrf	0	;clear RAM location pointed to by FSR
   473  066E  0A84               	incf	4,f	;increment pointer
   474  066F  0604               	xorwf	4,w	;XOR with final address
   475  0670  1903               	btfsc	3,2	;have we reached the end yet?
   476  0671  3400               	retlw	0	;all done for this memory range, return
   477  0672  0604               	xorwf	4,w	;XOR again to restore value
   478  0673  2E6D               	goto	clrloop0	;do the next byte
   479                           
   480                           	psect	cstackBANK1
   481  00A0                     __pcstackBANK1:	
   482  00A0                     ??_ISR:	
   483                           
   484                           ; 1 bytes @ 0x0
   485  00A0                     	ds	7
   486  00A7                     ??_initPic:	
   487  00A7                     ??_send_cmd:	
   488                           ; 1 bytes @ 0x7
   489                           
   490  00A7                     ?___aldiv:	
   491                           ; 1 bytes @ 0x7
   492                           
   493  00A7                     ___aldiv@divisor:	
   494                           ; 4 bytes @ 0x7
   495                           
   496                           
   497                           ; 4 bytes @ 0x7
   498  00A7                     	ds	2
   499  00A9                     send_cmd@command:	
   500                           
   501                           ; 1 bytes @ 0x9
   502  00A9                     	ds	1
   503  00AA                     ??_init_lcd:	
   504                           
   505                           ; 1 bytes @ 0xA
   506  00AA                     	ds	1
   507  00AB                     ___aldiv@dividend:	
   508                           
   509                           ; 4 bytes @ 0xB
   510  00AB                     	ds	4
   511  00AF                     ??___aldiv:	
   512                           
   513                           ; 1 bytes @ 0xF
   514  00AF                     	ds	1
   515  00B0                     ___aldiv@counter:	
   516                           
   517                           ; 1 bytes @ 0x10
   518  00B0                     	ds	1
   519  00B1                     ___aldiv@sign:	
   520                           
   521                           ; 1 bytes @ 0x11
   522  00B1                     	ds	1
   523  00B2                     ___aldiv@quotient:	
   524                           
   525                           ; 4 bytes @ 0x12
   526  00B2                     	ds	4
   527  00B6                     ?_UART_init:	
   528  00B6                     UART_init@baudrate:	
   529                           ; 1 bytes @ 0x16
   530                           
   531                           
   532                           ; 2 bytes @ 0x16
   533  00B6                     	ds	2
   534  00B8                     ??_UART_init:	
   535                           
   536                           ; 1 bytes @ 0x18
   537  00B8                     	ds	4
   538  00BC                     ??_main:	
   539                           
   540                           ; 1 bytes @ 0x1C
   541  00BC                     	ds	3
   542  00BF                     main@stringa:	
   543                           
   544                           ; 1 bytes @ 0x1F
   545  00BF                     	ds	1
   546  00C0                     main@semaforoVerde:	
   547                           
   548                           ; 1 bytes @ 0x20
   549  00C0                     	ds	1
   550  00C1                     main@i:	
   551                           
   552                           ; 1 bytes @ 0x21
   553  00C1                     	ds	1
   554                           
   555                           	psect	cstackCOMMON
   556  0070                     __pcstackCOMMON:	
   557  0070                     ?_initPic:	
   558  0070                     ?_init_lcd:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_send_cmd:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_send_string:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_send_data:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ??_send_data:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_main:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_ISR:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?i1_send_cmd:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ??i1_send_cmd:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?___awdiv:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?___awmod:	
   589                           ; 2 bytes @ 0x0
   590                           
   591  0070                     ___awdiv@divisor:	
   592                           ; 2 bytes @ 0x0
   593                           
   594  0070                     ___awmod@divisor:	
   595                           ; 2 bytes @ 0x0
   596                           
   597                           
   598                           ; 2 bytes @ 0x0
   599  0070                     	ds	2
   600  0072                     send_data@data:	
   601  0072                     i1send_cmd@command:	
   602                           ; 1 bytes @ 0x2
   603                           
   604  0072                     ___awdiv@dividend:	
   605                           ; 1 bytes @ 0x2
   606                           
   607  0072                     ___awmod@dividend:	
   608                           ; 2 bytes @ 0x2
   609                           
   610                           
   611                           ; 2 bytes @ 0x2
   612  0072                     	ds	1
   613  0073                     ??_send_string:	
   614                           
   615                           ; 1 bytes @ 0x3
   616  0073                     	ds	1
   617  0074                     ??___awdiv:	
   618  0074                     ??___awmod:	
   619                           ; 1 bytes @ 0x4
   620                           
   621  0074                     send_string@i:	
   622                           ; 1 bytes @ 0x4
   623                           
   624                           
   625                           ; 2 bytes @ 0x4
   626  0074                     	ds	1
   627  0075                     ___awdiv@counter:	
   628  0075                     ___awmod@counter:	
   629                           ; 1 bytes @ 0x5
   630                           
   631                           
   632                           ; 1 bytes @ 0x5
   633  0075                     	ds	1
   634  0076                     send_string@str:	
   635  0076                     ___awdiv@sign:	
   636                           ; 1 bytes @ 0x6
   637                           
   638  0076                     ___awmod@sign:	
   639                           ; 1 bytes @ 0x6
   640                           
   641                           
   642                           ; 1 bytes @ 0x6
   643  0076                     	ds	1
   644  0077                     ___awdiv@quotient:	
   645                           
   646                           ; 2 bytes @ 0x7
   647  0077                     	ds	2
   648  0079                     ?_print_Countdown:	
   649  0079                     print_Countdown@num:	
   650                           ; 1 bytes @ 0x9
   651                           
   652                           
   653                           ; 2 bytes @ 0x9
   654  0079                     	ds	2
   655  007B                     print_Countdown@statoSem:	
   656                           
   657                           ; 1 bytes @ 0xB
   658  007B                     	ds	1
   659                           
   660                           	psect	cstackBANK0
   661  0020                     __pcstackBANK0:	
   662  0020                     ??_print_Countdown:	
   663                           
   664                           ; 1 bytes @ 0x0
   665  0020                     	ds	4
   666  0024                     print_Countdown@secondStr:	
   667                           
   668                           ; 17 bytes @ 0x4
   669  0024                     	ds	17
   670  0035                     print_Countdown@secondStr_400:	
   671                           
   672                           ; 17 bytes @ 0x15
   673  0035                     	ds	17
   674  0046                     print_Countdown@secondStr_402:	
   675                           
   676                           ; 17 bytes @ 0x26
   677  0046                     	ds	17
   678  0057                     print_Countdown@firstStr:	
   679                           
   680                           ; 17 bytes @ 0x37
   681  0057                     	ds	17
   682  0068                     print_Countdown@resultNum:	
   683                           
   684                           ; 3 bytes @ 0x48
   685  0068                     	ds	3
   686  006B                     print_Countdown@length:	
   687                           
   688                           ; 2 bytes @ 0x4B
   689  006B                     	ds	2
   690  006D                     print_Countdown@i:	
   691                           
   692                           ; 2 bytes @ 0x4D
   693  006D                     	ds	2
   694                           
   695                           	psect	maintext
   696  02A2                     __pmaintext:	
   697 ;;
   698 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   699 ;;
   700 ;; *************** function _main *****************
   701 ;; Defined at:
   702 ;;		line 113 in file "main.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;		None
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  stringa         1   31[BANK1 ] unsigned char 
   707 ;;  semaforoVerd    1   32[BANK1 ] unsigned char 
   708 ;;  i               1   33[BANK1 ] unsigned char 
   709 ;; Return value:  Size  Location     Type
   710 ;;                  1    wreg      void 
   711 ;; Registers used:
   712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   713 ;; Tracked objects:
   714 ;;		On entry : B00/0
   715 ;;		On exit  : 0/0
   716 ;;		Unchanged: 0/0
   717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   718 ;;      Params:         0       0       0       0       0
   719 ;;      Locals:         0       0       3       0       0
   720 ;;      Temps:          0       0       3       0       0
   721 ;;      Totals:         0       0       6       0       0
   722 ;;Total ram usage:        6 bytes
   723 ;; Hardware stack levels required when called:    6
   724 ;; This function calls:
   725 ;;		_UART_init
   726 ;;		_initPic
   727 ;;		_init_lcd
   728 ;;		_send_cmd
   729 ;; This function is called by:
   730 ;;		Startup code after reset
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           
   735                           ;psect for function _main
   736  02A2                     _main:	
   737  02A2                     l1565:	
   738                           ;incstack = 0
   739                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   740                           
   741                           
   742                           ;main.c: 115:     initPic();
   743  02A2  120A  118A  265D  120A  118A  	fcall	_initPic
   744                           
   745                           ;main.c: 116:     UART_init(9600);
   746  02A7  3080               	movlw	128
   747  02A8  1683               	bsf	3,5	;RP0=1, select bank1
   748  02A9  1303               	bcf	3,6	;RP1=0, select bank1
   749  02AA  00B6               	movwf	UART_init@baudrate^(0+128)
   750  02AB  3025               	movlw	37
   751  02AC  00B7               	movwf	(UART_init@baudrate^(0+128)+1)
   752  02AD  120A  118A  2587  120A  118A  	fcall	_UART_init
   753                           
   754                           ;main.c: 117:     init_lcd();
   755  02B2  120A  118A  24EC  120A  118A  	fcall	_init_lcd
   756                           
   757                           ;main.c: 118:     send_cmd(0x01);
   758  02B7  3001               	movlw	1
   759  02B8  120A  118A  25C1  120A  118A  	fcall	_send_cmd
   760  02BD                     l1567:	
   761                           
   762                           ;main.c: 190:     char i;;main.c: 199:     semafori[0]=statoSemafori[2];
   763  02BD  1683               	bsf	3,5	;RP0=1, select bank1
   764  02BE  1303               	bcf	3,6	;RP1=0, select bank1
   765  02BF  0860               	movf	(_statoSemafori^(0+128)+2),w
   766  02C0  00BC               	movwf	??_main^(0+128)
   767  02C1  083C               	movf	??_main^(0+128),w
   768  02C2  00C2               	movwf	_semafori^(0+128)
   769  02C3                     l1569:	
   770                           
   771                           ;main.c: 200:     semafori[1]=statoSemafori[2];
   772  02C3  0860               	movf	(_statoSemafori^(0+128)+2),w
   773  02C4  00BC               	movwf	??_main^(0+128)
   774  02C5  083C               	movf	??_main^(0+128),w
   775  02C6  00C3               	movwf	(_semafori^(0+128)+1)
   776  02C7                     l1571:	
   777                           
   778                           ;main.c: 201:     semafori[2]=statoSemafori[2];
   779  02C7  0860               	movf	(_statoSemafori^(0+128)+2),w
   780  02C8  00BC               	movwf	??_main^(0+128)
   781  02C9  083C               	movf	??_main^(0+128),w
   782  02CA  00C4               	movwf	(_semafori^(0+128)+2)
   783  02CB                     l1573:	
   784                           
   785                           ;main.c: 202:     semafori[3]=statoSemafori[2];
   786  02CB  0860               	movf	(_statoSemafori^(0+128)+2),w
   787  02CC  00BC               	movwf	??_main^(0+128)
   788  02CD  083C               	movf	??_main^(0+128),w
   789  02CE  00C5               	movwf	(_semafori^(0+128)+3)
   790  02CF                     l1575:	
   791                           
   792                           ;main.c: 203:     _delay((unsigned long)((500)*(32000000L/4000.0)));
   793  02CF  3015               	movlw	21
   794  02D0  1683               	bsf	3,5	;RP0=1, select bank1
   795  02D1  1303               	bcf	3,6	;RP1=0, select bank1
   796  02D2  00BE               	movwf	(??_main^(0+128)+2)
   797  02D3  304B               	movlw	75
   798  02D4  00BD               	movwf	(??_main^(0+128)+1)
   799  02D5  30BD               	movlw	189
   800  02D6  00BC               	movwf	??_main^(0+128)
   801  02D7                     u1737:	
   802  02D7  0BBC               	decfsz	??_main^(0+128),f
   803  02D8  2AD7               	goto	u1737
   804  02D9  0BBD               	decfsz	(??_main^(0+128)+1),f
   805  02DA  2AD7               	goto	u1737
   806  02DB  0BBE               	decfsz	(??_main^(0+128)+2),f
   807  02DC  2AD7               	goto	u1737
   808  02DD  2ADE               	nop2
   809  02DE                     l1577:	
   810                           
   811                           ;main.c: 204:     semafori[0]=statoSemafori[0];
   812  02DE  1683               	bsf	3,5	;RP0=1, select bank1
   813  02DF  1303               	bcf	3,6	;RP1=0, select bank1
   814  02E0  085E               	movf	_statoSemafori^(0+128),w
   815  02E1  00BC               	movwf	??_main^(0+128)
   816  02E2  083C               	movf	??_main^(0+128),w
   817  02E3  00C2               	movwf	_semafori^(0+128)
   818  02E4                     l1579:	
   819                           
   820                           ;main.c: 208:     {;main.c: 212:         if(stat1)
   821  02E4  0850               	movf	_stat1^(0+128),w
   822  02E5  1903               	btfsc	3,2
   823  02E6  2AE8               	goto	u1321
   824  02E7  2AE9               	goto	u1320
   825  02E8                     u1321:	
   826  02E8  2AEE               	goto	l1585
   827  02E9                     u1320:	
   828  02E9                     l1581:	
   829                           
   830                           ;main.c: 213:         {;main.c: 214:             contAuto++;
   831  02E9  3001               	movlw	1
   832  02EA  00BC               	movwf	??_main^(0+128)
   833  02EB  083C               	movf	??_main^(0+128),w
   834  02EC  07D3               	addwf	_contAuto^(0+128),f
   835  02ED                     l1583:	
   836                           
   837                           ;main.c: 215:             stat1=0;
   838  02ED  01D0               	clrf	_stat1^(0+128)
   839  02EE                     l1585:	
   840                           
   841                           ;main.c: 218:         if(stat2)
   842  02EE  084E               	movf	_stat2^(0+128),w
   843  02EF  1903               	btfsc	3,2
   844  02F0  2AF2               	goto	u1331
   845  02F1  2AF3               	goto	u1330
   846  02F2                     u1331:	
   847  02F2  2AF8               	goto	l1591
   848  02F3                     u1330:	
   849  02F3                     l1587:	
   850                           
   851                           ;main.c: 219:         {;main.c: 220:             contMoto++;
   852  02F3  3001               	movlw	1
   853  02F4  00BC               	movwf	??_main^(0+128)
   854  02F5  083C               	movf	??_main^(0+128),w
   855  02F6  07D2               	addwf	_contMoto^(0+128),f
   856  02F7                     l1589:	
   857                           
   858                           ;main.c: 221:             stat2=0;
   859  02F7  01CE               	clrf	_stat2^(0+128)
   860  02F8                     l1591:	
   861                           
   862                           ;main.c: 223:         if(stat3)
   863  02F8  084C               	movf	_stat3^(0+128),w
   864  02F9  1903               	btfsc	3,2
   865  02FA  2AFC               	goto	u1341
   866  02FB  2AFD               	goto	u1340
   867  02FC                     u1341:	
   868  02FC  2B02               	goto	l1597
   869  02FD                     u1340:	
   870  02FD                     l1593:	
   871                           
   872                           ;main.c: 224:         {;main.c: 225:             contCamion++;
   873  02FD  3001               	movlw	1
   874  02FE  00BC               	movwf	??_main^(0+128)
   875  02FF  083C               	movf	??_main^(0+128),w
   876  0300  07D1               	addwf	_contCamion^(0+128),f
   877  0301                     l1595:	
   878                           
   879                           ;main.c: 226:             stat3=0;
   880  0301  01CC               	clrf	_stat3^(0+128)
   881  0302                     l1597:	
   882                           
   883                           ;main.c: 230:         if(scattoSemafori==1)
   884  0302  034B               	decf	_scattoSemafori^(0+128),w
   885  0303  1D03               	btfss	3,2
   886  0304  2B06               	goto	u1351
   887  0305  2B07               	goto	u1350
   888  0306                     u1351:	
   889  0306  2B77               	goto	l1641
   890  0307                     u1350:	
   891  0307                     l1599:	
   892                           
   893                           ;main.c: 231:         {;main.c: 233:             char semaforoVerde=0;
   894  0307  01C0               	clrf	main@semaforoVerde^(0+128)
   895                           
   896                           ;main.c: 234:             for(i=0;i<4;i++)
   897  0308  01C1               	clrf	main@i^(0+128)
   898  0309                     l1605:	
   899                           
   900                           ;main.c: 235:             {;main.c: 237:                 if(semaforoVerde==0)
   901  0309  0840               	movf	main@semaforoVerde^(0+128),w
   902  030A  1D03               	btfss	3,2
   903  030B  2B0D               	goto	u1361
   904  030C  2B0E               	goto	u1360
   905  030D                     u1361:	
   906  030D  2B6D               	goto	l1637
   907  030E                     u1360:	
   908  030E                     l1607:	
   909                           
   910                           ;main.c: 238:                 {;main.c: 239:                     if(semafori[i]==statoSe
      +                          mafori[0])
   911  030E  0841               	movf	main@i^(0+128),w
   912  030F  3EC2               	addlw	(low (_semafori| 0))& (0+255)
   913  0310  0084               	movwf	4
   914  0311  1383               	bcf	3,7	;select IRP bank1
   915  0312  0800               	movf	0,w
   916  0313  065E               	xorwf	_statoSemafori^(0+128),w
   917  0314  1D03               	skipz
   918  0315  2B17               	goto	u1371
   919  0316  2B18               	goto	u1370
   920  0317                     u1371:	
   921  0317  2B6D               	goto	l1637
   922  0318                     u1370:	
   923  0318                     l1609:	
   924                           
   925                           ;main.c: 240:                     {;main.c: 242:                          if(semafori[i]
      +                          ==statoSemafori[0])
   926  0318  0841               	movf	main@i^(0+128),w
   927  0319  3EC2               	addlw	(low (_semafori| 0))& (0+255)
   928  031A  0084               	movwf	4
   929  031B  0800               	movf	0,w
   930  031C  065E               	xorwf	_statoSemafori^(0+128),w
   931  031D  1D03               	skipz
   932  031E  2B20               	goto	u1381
   933  031F  2B21               	goto	u1380
   934  0320                     u1381:	
   935  0320  2B37               	goto	l1619
   936  0321                     u1380:	
   937  0321                     l1611:	
   938                           
   939                           ;main.c: 243:                         {;main.c: 244:                             flagGia
      +                          llo=1;
   940  0321  01CA               	clrf	_flagGiallo^(0+128)
   941  0322  0ACA               	incf	_flagGiallo^(0+128),f
   942                           
   943                           ;main.c: 245:                             while(flagGiallo==1)
   944  0323  2B2B               	goto	l1615
   945  0324                     l1613:	
   946                           
   947                           ;main.c: 246:                                 semafori[i]=statoSemafori[1];
   948  0324  085F               	movf	(_statoSemafori^(0+128)+1),w
   949  0325  00BC               	movwf	??_main^(0+128)
   950  0326  0841               	movf	main@i^(0+128),w
   951  0327  3EC2               	addlw	(low (_semafori| 0))& (0+255)
   952  0328  0084               	movwf	4
   953  0329  083C               	movf	??_main^(0+128),w
   954  032A  0080               	movwf	0
   955  032B                     l1615:	
   956                           
   957                           ;main.c: 245:                             while(flagGiallo==1)
   958  032B  034A               	decf	_flagGiallo^(0+128),w
   959  032C  1903               	btfsc	3,2
   960  032D  2B2F               	goto	u1391
   961  032E  2B30               	goto	u1390
   962  032F                     u1391:	
   963  032F  2B24               	goto	l1613
   964  0330                     u1390:	
   965  0330                     l1617:	
   966                           
   967                           ;main.c: 248:                             semafori[i]=statoSemafori[2];
   968  0330  0860               	movf	(_statoSemafori^(0+128)+2),w
   969  0331  00BC               	movwf	??_main^(0+128)
   970  0332  0841               	movf	main@i^(0+128),w
   971  0333  3EC2               	addlw	(low (_semafori| 0))& (0+255)
   972  0334  0084               	movwf	4
   973  0335  083C               	movf	??_main^(0+128),w
   974  0336  0080               	movwf	0
   975  0337                     l1619:	
   976                           
   977                           ;main.c: 253:                         if(i<3)
   978  0337  3003               	movlw	3
   979  0338  0241               	subwf	main@i^(0+128),w
   980  0339  1803               	skipnc
   981  033A  2B3C               	goto	u1401
   982  033B  2B3D               	goto	u1400
   983  033C                     u1401:	
   984  033C  2B56               	goto	l1629
   985  033D                     u1400:	
   986  033D                     l1621:	
   987                           
   988                           ;main.c: 254:                         {;main.c: 257:                             if(sema
      +                          fori[i+1]==statoSemafori[2])
   989  033D  0841               	movf	main@i^(0+128),w
   990  033E  3EC3               	addlw	(low ((_semafori| 0+1)))& (0+255)
   991  033F  0084               	movwf	4
   992  0340  0800               	movf	0,w
   993  0341  0660               	xorwf	(_statoSemafori^(0+128)+2),w
   994  0342  1D03               	skipz
   995  0343  2B45               	goto	u1411
   996  0344  2B46               	goto	u1410
   997  0345                     u1411:	
   998  0345  2B6B               	goto	l139
   999  0346                     u1410:	
  1000  0346                     l1623:	
  1001                           
  1002                           ;main.c: 258:                             {;main.c: 259:                                
      +                           flagGiallo=1;
  1003  0346  01CA               	clrf	_flagGiallo^(0+128)
  1004  0347  0ACA               	incf	_flagGiallo^(0+128),f
  1005                           
  1006                           ;main.c: 260:                                 while(flagGiallo==1)
  1007  0348  2B50               	goto	l1627
  1008  0349                     l1625:	
  1009                           
  1010                           ;main.c: 261:                                     semafori[i+1]=statoSemafori[1];
  1011  0349  085F               	movf	(_statoSemafori^(0+128)+1),w
  1012  034A  00BC               	movwf	??_main^(0+128)
  1013  034B  0841               	movf	main@i^(0+128),w
  1014  034C  3EC3               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1015  034D  0084               	movwf	4
  1016  034E  083C               	movf	??_main^(0+128),w
  1017  034F  0080               	movwf	0
  1018  0350                     l1627:	
  1019                           
  1020                           ;main.c: 260:                                 while(flagGiallo==1)
  1021  0350  034A               	decf	_flagGiallo^(0+128),w
  1022  0351  1903               	btfsc	3,2
  1023  0352  2B54               	goto	u1421
  1024  0353  2B55               	goto	u1420
  1025  0354                     u1421:	
  1026  0354  2B49               	goto	l1625
  1027  0355                     u1420:	
  1028  0355  2B6B               	goto	l139
  1029  0356                     l1629:	
  1030                           
  1031                           ;main.c: 269:                         {;main.c: 270:                             if(sema
      +                          fori[0]==statoSemafori[2])
  1032  0356  0860               	movf	(_statoSemafori^(0+128)+2),w
  1033  0357  0642               	xorwf	_semafori^(0+128),w
  1034  0358  1D03               	skipz
  1035  0359  2B5B               	goto	u1431
  1036  035A  2B5C               	goto	u1430
  1037  035B                     u1431:	
  1038  035B  2B6B               	goto	l139
  1039  035C                     u1430:	
  1040  035C                     l1631:	
  1041                           
  1042                           ;main.c: 271:                             {;main.c: 272:                                
      +                           flagGiallo=1;
  1043  035C  01CA               	clrf	_flagGiallo^(0+128)
  1044  035D  0ACA               	incf	_flagGiallo^(0+128),f
  1045                           
  1046                           ;main.c: 273:                                 while(flagGiallo==1)
  1047  035E  2B66               	goto	l1635
  1048  035F                     l1633:	
  1049                           
  1050                           ;main.c: 274:                                     semafori[i+1]=statoSemafori[1];
  1051  035F  085F               	movf	(_statoSemafori^(0+128)+1),w
  1052  0360  00BC               	movwf	??_main^(0+128)
  1053  0361  0841               	movf	main@i^(0+128),w
  1054  0362  3EC3               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1055  0363  0084               	movwf	4
  1056  0364  083C               	movf	??_main^(0+128),w
  1057  0365  0080               	movwf	0
  1058  0366                     l1635:	
  1059                           
  1060                           ;main.c: 273:                                 while(flagGiallo==1)
  1061  0366  034A               	decf	_flagGiallo^(0+128),w
  1062  0367  1903               	btfsc	3,2
  1063  0368  2B6A               	goto	u1441
  1064  0369  2B6B               	goto	u1440
  1065  036A                     u1441:	
  1066  036A  2B5F               	goto	l1633
  1067  036B                     u1440:	
  1068  036B                     l139:	
  1069                           ;main.c: 279:                         }
  1070                           
  1071                           
  1072                           ;main.c: 281:                         semaforoVerde=1;
  1073  036B  01C0               	clrf	main@semaforoVerde^(0+128)
  1074  036C  0AC0               	incf	main@semaforoVerde^(0+128),f
  1075  036D                     l1637:	
  1076                           
  1077                           ;main.c: 285:             }
  1078  036D  3001               	movlw	1
  1079  036E  00BC               	movwf	??_main^(0+128)
  1080  036F  083C               	movf	??_main^(0+128),w
  1081  0370  07C1               	addwf	main@i^(0+128),f
  1082  0371                     l1639:	
  1083  0371  3004               	movlw	4
  1084  0372  0241               	subwf	main@i^(0+128),w
  1085  0373  1C03               	skipc
  1086  0374  2B76               	goto	u1451
  1087  0375  2B77               	goto	u1450
  1088  0376                     u1451:	
  1089  0376  2B09               	goto	l1605
  1090  0377                     u1450:	
  1091  0377                     l1641:	
  1092                           
  1093                           ;main.c: 290:         if(scattoSemafori==1)
  1094  0377  034B               	decf	_scattoSemafori^(0+128),w
  1095  0378  1D03               	btfss	3,2
  1096  0379  2B7B               	goto	u1461
  1097  037A  2B7C               	goto	u1460
  1098  037B                     u1461:	
  1099  037B  2B7D               	goto	l1645
  1100  037C                     u1460:	
  1101  037C                     l1643:	
  1102                           
  1103                           ;main.c: 291:         {;main.c: 295:             scattoSemafori=0;
  1104  037C  01CB               	clrf	_scattoSemafori^(0+128)
  1105  037D                     l1645:	
  1106                           
  1107                           ;main.c: 300:         if(received)
  1108  037D  0855               	movf	_received^(0+128),w
  1109  037E  1903               	btfsc	3,2
  1110  037F  2B81               	goto	u1471
  1111  0380  2B82               	goto	u1470
  1112  0381                     u1471:	
  1113  0381  2AE4               	goto	l1579
  1114  0382                     u1470:	
  1115  0382                     l1647:	
  1116                           
  1117                           ;main.c: 301:         {;main.c: 302:             char stringa=datoSeriale;
  1118  0382  0854               	movf	_datoSeriale^(0+128),w
  1119  0383  00BC               	movwf	??_main^(0+128)
  1120  0384  083C               	movf	??_main^(0+128),w
  1121  0385  00BF               	movwf	main@stringa^(0+128)
  1122                           
  1123                           ;main.c: 303:             temporizzazione=stringa;
  1124  0386  083F               	movf	main@stringa^(0+128),w
  1125  0387  00BC               	movwf	??_main^(0+128)
  1126  0388  083C               	movf	??_main^(0+128),w
  1127  0389  00FC               	movwf	_temporizzazione
  1128  038A                     l1649:	
  1129                           
  1130                           ;main.c: 307:             received=0;
  1131  038A  01D5               	clrf	_received^(0+128)
  1132  038B  2AE4               	goto	l1579
  1133  038C  120A  118A  2816   	ljmp	start
  1134  038F                     __end_of_main:	
  1135                           
  1136                           	psect	text1
  1137  04EC                     __ptext1:	
  1138 ;; *************** function _init_lcd *****************
  1139 ;; Defined at:
  1140 ;;		line 588 in file "main.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2, status,0, pclath, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1154 ;;      Params:         0       0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0
  1156 ;;      Temps:          0       0       2       0       0
  1157 ;;      Totals:         0       0       2       0       0
  1158 ;;Total ram usage:        2 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    5
  1161 ;; This function calls:
  1162 ;;		_send_cmd
  1163 ;; This function is called by:
  1164 ;;		_main
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           
  1169                           ;psect for function _init_lcd
  1170  04EC                     _init_lcd:	
  1171  04EC                     l1481:	
  1172                           ;incstack = 0
  1173                           ; Regs used in _init_lcd: [wreg+status,2+status,0+pclath+cstack]
  1174                           
  1175                           
  1176                           ;main.c: 590:     PORTEbits.RE2 = 0;
  1177  04EC  1283               	bcf	3,5	;RP0=0, select bank0
  1178  04ED  1303               	bcf	3,6	;RP1=0, select bank0
  1179  04EE  1109               	bcf	9,2	;volatile
  1180                           
  1181                           ;main.c: 591:     PORTEbits.RE1 = 0;
  1182  04EF  1089               	bcf	9,1	;volatile
  1183  04F0                     l1483:	
  1184                           
  1185                           ;main.c: 592:     _delay((unsigned long)((20)*(32000000L/4000.0)));
  1186  04F0  30D0               	movlw	208
  1187  04F1  1683               	bsf	3,5	;RP0=1, select bank1
  1188  04F2  1303               	bcf	3,6	;RP1=0, select bank1
  1189  04F3  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1190  04F4  30C9               	movlw	201
  1191  04F5  00AA               	movwf	??_init_lcd^(0+128)
  1192  04F6                     u1747:	
  1193  04F6  0BAA               	decfsz	??_init_lcd^(0+128),f
  1194  04F7  2CF6               	goto	u1747
  1195  04F8  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1196  04F9  2CF6               	goto	u1747
  1197  04FA                     l1485:	
  1198                           
  1199                           ;main.c: 593:     PORTEbits.RE1 = 1;
  1200  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  1201  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  1202  04FC  1489               	bsf	9,1	;volatile
  1203  04FD                     l1487:	
  1204                           
  1205                           ;main.c: 594:     send_cmd(0x38);
  1206  04FD  3038               	movlw	56
  1207  04FE  120A  118A  25C1  120A  118A  	fcall	_send_cmd
  1208  0503                     l1489:	
  1209                           
  1210                           ;main.c: 595:     _delay((unsigned long)((5)*(32000000L/4000.0)));
  1211  0503  3034               	movlw	52
  1212  0504  1683               	bsf	3,5	;RP0=1, select bank1
  1213  0505  1303               	bcf	3,6	;RP1=0, select bank1
  1214  0506  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1215  0507  30F1               	movlw	241
  1216  0508  00AA               	movwf	??_init_lcd^(0+128)
  1217  0509                     u1757:	
  1218  0509  0BAA               	decfsz	??_init_lcd^(0+128),f
  1219  050A  2D09               	goto	u1757
  1220  050B  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1221  050C  2D09               	goto	u1757
  1222                           
  1223                           ;main.c: 596:     send_cmd(0x38);
  1224  050D  3038               	movlw	56
  1225  050E  120A  118A  25C1  120A  118A  	fcall	_send_cmd
  1226  0513                     l1491:	
  1227                           
  1228                           ;main.c: 597:     _delay((unsigned long)((1)*(32000000L/4000.0)));
  1229  0513  300B               	movlw	11
  1230  0514  1683               	bsf	3,5	;RP0=1, select bank1
  1231  0515  1303               	bcf	3,6	;RP1=0, select bank1
  1232  0516  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1233  0517  3061               	movlw	97
  1234  0518  00AA               	movwf	??_init_lcd^(0+128)
  1235  0519                     u1767:	
  1236  0519  0BAA               	decfsz	??_init_lcd^(0+128),f
  1237  051A  2D19               	goto	u1767
  1238  051B  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1239  051C  2D19               	goto	u1767
  1240  051D  2D1E               	nop2
  1241  051E                     l1493:	
  1242                           
  1243                           ;main.c: 598:     send_cmd(0x38);
  1244  051E  3038               	movlw	56
  1245  051F  120A  118A  25C1  120A  118A  	fcall	_send_cmd
  1246  0524                     l1495:	
  1247                           
  1248                           ;main.c: 599:     send_cmd(0x08);
  1249  0524  3008               	movlw	8
  1250  0525  120A  118A  25C1  120A  118A  	fcall	_send_cmd
  1251  052A                     l1497:	
  1252                           
  1253                           ;main.c: 600:     send_cmd(0x0F);
  1254  052A  300F               	movlw	15
  1255  052B  120A  118A  25C1  120A  118A  	fcall	_send_cmd
  1256  0530                     l1499:	
  1257                           
  1258                           ;main.c: 601:     send_cmd(0x01);
  1259  0530  3001               	movlw	1
  1260  0531  120A  118A  25C1  120A  118A  	fcall	_send_cmd
  1261  0536                     l1501:	
  1262                           
  1263                           ;main.c: 602:     send_cmd(0x0C);
  1264  0536  300C               	movlw	12
  1265  0537  120A  118A  25C1  120A  118A  	fcall	_send_cmd
  1266  053C                     l1503:	
  1267                           
  1268                           ;main.c: 603:     send_cmd(0x80);
  1269  053C  3080               	movlw	128
  1270  053D  120A  118A  25C1  120A  118A  	fcall	_send_cmd
  1271  0542                     l240:	
  1272  0542  0008               	return
  1273  0543                     __end_of_init_lcd:	
  1274                           
  1275                           	psect	text2
  1276  05C1                     __ptext2:	
  1277 ;; *************** function _send_cmd *****************
  1278 ;; Defined at:
  1279 ;;		line 576 in file "main.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  command         1    wreg     unsigned char 
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;  command         1    9[BANK1 ] unsigned char 
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1293 ;;      Params:         0       0       0       0       0
  1294 ;;      Locals:         0       0       1       0       0
  1295 ;;      Temps:          0       0       2       0       0
  1296 ;;      Totals:         0       0       3       0       0
  1297 ;;Total ram usage:        3 bytes
  1298 ;; Hardware stack levels used:    1
  1299 ;; Hardware stack levels required when called:    4
  1300 ;; This function calls:
  1301 ;;		Nothing
  1302 ;; This function is called by:
  1303 ;;		_main
  1304 ;;		_init_lcd
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function _send_cmd
  1310  05C1                     _send_cmd:	
  1311                           
  1312                           ;incstack = 0
  1313                           ; Regs used in _send_cmd: [wreg]
  1314                           ;send_cmd@command stored from wreg
  1315  05C1  1683               	bsf	3,5	;RP0=1, select bank1
  1316  05C2  1303               	bcf	3,6	;RP1=0, select bank1
  1317  05C3  00A9               	movwf	send_cmd@command^(0+128)
  1318  05C4                     l1315:	
  1319                           
  1320                           ;main.c: 576: void send_cmd(char command);main.c: 577: {;main.c: 578:     PORTEbits.RE1 
      +                          = 1;
  1321  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  1322  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  1323  05C6  1489               	bsf	9,1	;volatile
  1324  05C7                     l1317:	
  1325                           
  1326                           ;main.c: 579:     PORTD = command;
  1327  05C7  1683               	bsf	3,5	;RP0=1, select bank1
  1328  05C8  1303               	bcf	3,6	;RP1=0, select bank1
  1329  05C9  0829               	movf	send_cmd@command^(0+128),w
  1330  05CA  1283               	bcf	3,5	;RP0=0, select bank0
  1331  05CB  1303               	bcf	3,6	;RP1=0, select bank0
  1332  05CC  0088               	movwf	8	;volatile
  1333  05CD                     l1319:	
  1334                           
  1335                           ;main.c: 580:     PORTEbits.RE2 = 0;
  1336  05CD  1109               	bcf	9,2	;volatile
  1337                           
  1338                           ;main.c: 581:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  1339  05CE  3020               	movlw	32
  1340  05CF  1683               	bsf	3,5	;RP0=1, select bank1
  1341  05D0  1303               	bcf	3,6	;RP1=0, select bank1
  1342  05D1  00A8               	movwf	(??_send_cmd^(0+128)+1)
  1343  05D2  3029               	movlw	41
  1344  05D3  00A7               	movwf	??_send_cmd^(0+128)
  1345  05D4                     u1777:	
  1346  05D4  0BA7               	decfsz	??_send_cmd^(0+128),f
  1347  05D5  2DD4               	goto	u1777
  1348  05D6  0BA8               	decfsz	(??_send_cmd^(0+128)+1),f
  1349  05D7  2DD4               	goto	u1777
  1350  05D8                     l1321:	
  1351                           
  1352                           ;main.c: 582:     PORTEbits.RE1 = 0;
  1353  05D8  1283               	bcf	3,5	;RP0=0, select bank0
  1354  05D9  1303               	bcf	3,6	;RP1=0, select bank0
  1355  05DA  1089               	bcf	9,1	;volatile
  1356                           
  1357                           ;main.c: 583:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  1358  05DB  3020               	movlw	32
  1359  05DC  1683               	bsf	3,5	;RP0=1, select bank1
  1360  05DD  1303               	bcf	3,6	;RP1=0, select bank1
  1361  05DE  00A8               	movwf	(??_send_cmd^(0+128)+1)
  1362  05DF  3029               	movlw	41
  1363  05E0  00A7               	movwf	??_send_cmd^(0+128)
  1364  05E1                     u1787:	
  1365  05E1  0BA7               	decfsz	??_send_cmd^(0+128),f
  1366  05E2  2DE1               	goto	u1787
  1367  05E3  0BA8               	decfsz	(??_send_cmd^(0+128)+1),f
  1368  05E4  2DE1               	goto	u1787
  1369  05E5                     l1323:	
  1370                           
  1371                           ;main.c: 584:     PORTEbits.RE1 = 1;
  1372  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  1373  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  1374  05E7  1489               	bsf	9,1	;volatile
  1375  05E8                     l237:	
  1376  05E8  0008               	return
  1377  05E9                     __end_of_send_cmd:	
  1378                           
  1379                           	psect	text3
  1380  065D                     __ptext3:	
  1381 ;; *************** function _initPic *****************
  1382 ;; Defined at:
  1383 ;;		line 462 in file "main.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;		None
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;		None
  1388 ;; Return value:  Size  Location     Type
  1389 ;;                  1    wreg      void 
  1390 ;; Registers used:
  1391 ;;		wreg, status,2
  1392 ;; Tracked objects:
  1393 ;;		On entry : 0/0
  1394 ;;		On exit  : 0/0
  1395 ;;		Unchanged: 0/0
  1396 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1397 ;;      Params:         0       0       0       0       0
  1398 ;;      Locals:         0       0       0       0       0
  1399 ;;      Temps:          0       0       0       0       0
  1400 ;;      Totals:         0       0       0       0       0
  1401 ;;Total ram usage:        0 bytes
  1402 ;; Hardware stack levels used:    1
  1403 ;; Hardware stack levels required when called:    4
  1404 ;; This function calls:
  1405 ;;		Nothing
  1406 ;; This function is called by:
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           
  1412                           ;psect for function _initPic
  1413  065D                     _initPic:	
  1414  065D                     l1465:	
  1415                           ;incstack = 0
  1416                           ; Regs used in _initPic: [wreg+status,2]
  1417                           
  1418                           
  1419                           ;main.c: 464:     TRISD = 0x00;
  1420  065D  1683               	bsf	3,5	;RP0=1, select bank1
  1421  065E  1303               	bcf	3,6	;RP1=0, select bank1
  1422  065F  0188               	clrf	8	;volatile
  1423  0660                     l1467:	
  1424                           
  1425                           ;main.c: 465:     TRISB = 0xFF;
  1426  0660  30FF               	movlw	255
  1427  0661  0086               	movwf	6	;volatile
  1428  0662                     l1469:	
  1429                           
  1430                           ;main.c: 466:     TRISE = 0x00;
  1431  0662  0189               	clrf	9	;volatile
  1432                           
  1433                           ;main.c: 468:     INTCON = 0xA0;
  1434  0663  30A0               	movlw	160
  1435  0664  008B               	movwf	11	;volatile
  1436                           
  1437                           ;main.c: 469:     OPTION_REG = 0x07;
  1438  0665  3007               	movlw	7
  1439  0666  0081               	movwf	1	;volatile
  1440                           
  1441                           ;main.c: 470:     TMR0 = 6;
  1442  0667  3006               	movlw	6
  1443  0668  1283               	bcf	3,5	;RP0=0, select bank0
  1444  0669  1303               	bcf	3,6	;RP1=0, select bank0
  1445  066A  0081               	movwf	1	;volatile
  1446  066B                     l191:	
  1447  066B  0008               	return
  1448  066C                     __end_of_initPic:	
  1449                           
  1450                           	psect	text4
  1451  0587                     __ptext4:	
  1452 ;; *************** function _UART_init *****************
  1453 ;; Defined at:
  1454 ;;		line 608 in file "main.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;  baudrate        2   22[BANK1 ] int 
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, status,2, status,0, pclath, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1468 ;;      Params:         0       0       2       0       0
  1469 ;;      Locals:         0       0       0       0       0
  1470 ;;      Temps:          0       0       4       0       0
  1471 ;;      Totals:         0       0       6       0       0
  1472 ;;Total ram usage:        6 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    5
  1475 ;; This function calls:
  1476 ;;		___aldiv
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           
  1483                           ;psect for function _UART_init
  1484  0587                     _UART_init:	
  1485  0587                     l1471:	
  1486                           ;incstack = 0
  1487                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  1488                           
  1489                           
  1490                           ;main.c: 608: void UART_init(int baudrate);main.c: 609: {;main.c: 610:     TRISCbits.TRI
      +                          SC6 = 0;
  1491  0587  1683               	bsf	3,5	;RP0=1, select bank1
  1492  0588  1303               	bcf	3,6	;RP1=0, select bank1
  1493  0589  1307               	bcf	7,6	;volatile
  1494                           
  1495                           ;main.c: 611:     TXSTAbits.TXEN = 1;
  1496  058A  1698               	bsf	24,5	;volatile
  1497                           
  1498                           ;main.c: 612:     RCSTAbits.SPEN = 1;
  1499  058B  1283               	bcf	3,5	;RP0=0, select bank0
  1500  058C  1303               	bcf	3,6	;RP1=0, select bank0
  1501  058D  1798               	bsf	24,7	;volatile
  1502                           
  1503                           ;main.c: 613:     RCSTAbits.CREN = 1;
  1504  058E  1618               	bsf	24,4	;volatile
  1505  058F                     l1473:	
  1506                           
  1507                           ;main.c: 614:     SPBRG = (32000000L/(long)(64UL*baudrate))-1;
  1508  058F  1683               	bsf	3,5	;RP0=1, select bank1
  1509  0590  1303               	bcf	3,6	;RP1=0, select bank1
  1510  0591  0836               	movf	UART_init@baudrate^(0+128),w
  1511  0592  00B8               	movwf	??_UART_init^(0+128)
  1512  0593  0837               	movf	(UART_init@baudrate+1)^(0+128),w
  1513  0594  00B9               	movwf	(??_UART_init^(0+128)+1)
  1514  0595  3000               	movlw	0
  1515  0596  1BB9               	btfsc	(??_UART_init^(0+128)+1),7
  1516  0597  30FF               	movlw	255
  1517  0598  00BA               	movwf	(??_UART_init^(0+128)+2)
  1518  0599  00BB               	movwf	(??_UART_init^(0+128)+3)
  1519  059A  3006               	movlw	6
  1520  059B                     u1195:	
  1521  059B  1003               	clrc
  1522  059C  0DB8               	rlf	??_UART_init^(0+128),f
  1523  059D  0DB9               	rlf	(??_UART_init^(0+128)+1),f
  1524  059E  0DBA               	rlf	(??_UART_init^(0+128)+2),f
  1525  059F  0DBB               	rlf	(??_UART_init^(0+128)+3),f
  1526  05A0                     u1190:	
  1527  05A0  3EFF               	addlw	-1
  1528  05A1  1D03               	skipz
  1529  05A2  2D9B               	goto	u1195
  1530  05A3  083B               	movf	(??_UART_init+3)^(0+128),w
  1531  05A4  00AA               	movwf	(___aldiv@divisor+3)^(0+128)
  1532  05A5  083A               	movf	(??_UART_init+2)^(0+128),w
  1533  05A6  00A9               	movwf	(___aldiv@divisor+2)^(0+128)
  1534  05A7  0839               	movf	(??_UART_init+1)^(0+128),w
  1535  05A8  00A8               	movwf	(___aldiv@divisor+1)^(0+128)
  1536  05A9  0838               	movf	??_UART_init^(0+128),w
  1537  05AA  00A7               	movwf	___aldiv@divisor^(0+128)
  1538  05AB  3001               	movlw	1
  1539  05AC  00AE               	movwf	(___aldiv@dividend+3)^(0+128)
  1540  05AD  30E8               	movlw	232
  1541  05AE  00AD               	movwf	(___aldiv@dividend+2)^(0+128)
  1542  05AF  3048               	movlw	72
  1543  05B0  00AC               	movwf	(___aldiv@dividend+1)^(0+128)
  1544  05B1  3000               	movlw	0
  1545  05B2  00AB               	movwf	___aldiv@dividend^(0+128)
  1546  05B3  120A  118A  238F  120A  118A  	fcall	___aldiv
  1547  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  1548  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  1549  05BA  0827               	movf	?___aldiv^(0+128),w
  1550  05BB  3EFF               	addlw	255
  1551  05BC  0099               	movwf	25	;volatile
  1552  05BD                     l1475:	
  1553                           
  1554                           ;main.c: 615:     INTCONbits.GIE = 1;
  1555  05BD  178B               	bsf	11,7	;volatile
  1556  05BE                     l1477:	
  1557                           
  1558                           ;main.c: 616:     INTCONbits.PEIE = 1;
  1559  05BE  170B               	bsf	11,6	;volatile
  1560  05BF                     l1479:	
  1561                           
  1562                           ;main.c: 617:     PIE1bits.RCIE = 1;
  1563  05BF  168C               	bsf	12,5	;volatile
  1564  05C0                     l243:	
  1565  05C0  0008               	return
  1566  05C1                     __end_of_UART_init:	
  1567                           
  1568                           	psect	text5
  1569  038F                     __ptext5:	
  1570 ;; *************** function ___aldiv *****************
  1571 ;; Defined at:
  1572 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  divisor         4    7[BANK1 ] long 
  1575 ;;  dividend        4   11[BANK1 ] long 
  1576 ;; Auto vars:     Size  Location     Type
  1577 ;;  quotient        4   18[BANK1 ] long 
  1578 ;;  sign            1   17[BANK1 ] unsigned char 
  1579 ;;  counter         1   16[BANK1 ] unsigned char 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  4    7[BANK1 ] long 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1589 ;;      Params:         0       0       8       0       0
  1590 ;;      Locals:         0       0       6       0       0
  1591 ;;      Temps:          0       0       1       0       0
  1592 ;;      Totals:         0       0      15       0       0
  1593 ;;Total ram usage:       15 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    4
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_UART_init
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           
  1604                           ;psect for function ___aldiv
  1605  038F                     ___aldiv:	
  1606  038F                     l1333:	
  1607                           ;incstack = 0
  1608                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1609                           
  1610  038F  1683               	bsf	3,5	;RP0=1, select bank1
  1611  0390  1303               	bcf	3,6	;RP1=0, select bank1
  1612  0391  01B1               	clrf	___aldiv@sign^(0+128)
  1613  0392                     l1335:	
  1614  0392  1FAA               	btfss	(___aldiv@divisor+3)^(0+128),7
  1615  0393  2B95               	goto	u901
  1616  0394  2B96               	goto	u900
  1617  0395                     u901:	
  1618  0395  2BA3               	goto	l400
  1619  0396                     u900:	
  1620  0396                     l1337:	
  1621  0396  09A7               	comf	___aldiv@divisor^(0+128),f
  1622  0397  09A8               	comf	(___aldiv@divisor+1)^(0+128),f
  1623  0398  09A9               	comf	(___aldiv@divisor+2)^(0+128),f
  1624  0399  09AA               	comf	(___aldiv@divisor+3)^(0+128),f
  1625  039A  0AA7               	incf	___aldiv@divisor^(0+128),f
  1626  039B  1903               	skipnz
  1627  039C  0AA8               	incf	(___aldiv@divisor+1)^(0+128),f
  1628  039D  1903               	skipnz
  1629  039E  0AA9               	incf	(___aldiv@divisor+2)^(0+128),f
  1630  039F  1903               	skipnz
  1631  03A0  0AAA               	incf	(___aldiv@divisor+3)^(0+128),f
  1632  03A1  01B1               	clrf	___aldiv@sign^(0+128)
  1633  03A2  0AB1               	incf	___aldiv@sign^(0+128),f
  1634  03A3                     l400:	
  1635  03A3  1FAE               	btfss	(___aldiv@dividend+3)^(0+128),7
  1636  03A4  2BA6               	goto	u911
  1637  03A5  2BA7               	goto	u910
  1638  03A6                     u911:	
  1639  03A6  2BB6               	goto	l1343
  1640  03A7                     u910:	
  1641  03A7                     l1339:	
  1642  03A7  09AB               	comf	___aldiv@dividend^(0+128),f
  1643  03A8  09AC               	comf	(___aldiv@dividend+1)^(0+128),f
  1644  03A9  09AD               	comf	(___aldiv@dividend+2)^(0+128),f
  1645  03AA  09AE               	comf	(___aldiv@dividend+3)^(0+128),f
  1646  03AB  0AAB               	incf	___aldiv@dividend^(0+128),f
  1647  03AC  1903               	skipnz
  1648  03AD  0AAC               	incf	(___aldiv@dividend+1)^(0+128),f
  1649  03AE  1903               	skipnz
  1650  03AF  0AAD               	incf	(___aldiv@dividend+2)^(0+128),f
  1651  03B0  1903               	skipnz
  1652  03B1  0AAE               	incf	(___aldiv@dividend+3)^(0+128),f
  1653  03B2                     l1341:	
  1654  03B2  3001               	movlw	1
  1655  03B3  00AF               	movwf	??___aldiv^(0+128)
  1656  03B4  082F               	movf	??___aldiv^(0+128),w
  1657  03B5  06B1               	xorwf	___aldiv@sign^(0+128),f
  1658  03B6                     l1343:	
  1659  03B6  3000               	movlw	0
  1660  03B7  00B5               	movwf	(___aldiv@quotient+3)^(0+128)
  1661  03B8  3000               	movlw	0
  1662  03B9  00B4               	movwf	(___aldiv@quotient+2)^(0+128)
  1663  03BA  3000               	movlw	0
  1664  03BB  00B3               	movwf	(___aldiv@quotient+1)^(0+128)
  1665  03BC  3000               	movlw	0
  1666  03BD  00B2               	movwf	___aldiv@quotient^(0+128)
  1667  03BE                     l1345:	
  1668  03BE  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  1669  03BF  0429               	iorwf	(___aldiv@divisor+2)^(0+128),w
  1670  03C0  0428               	iorwf	(___aldiv@divisor+1)^(0+128),w
  1671  03C1  0427               	iorwf	___aldiv@divisor^(0+128),w
  1672  03C2  1903               	skipnz
  1673  03C3  2BC5               	goto	u921
  1674  03C4  2BC6               	goto	u920
  1675  03C5                     u921:	
  1676  03C5  2C13               	goto	l1365
  1677  03C6                     u920:	
  1678  03C6                     l1347:	
  1679  03C6  01B0               	clrf	___aldiv@counter^(0+128)
  1680  03C7  0AB0               	incf	___aldiv@counter^(0+128),f
  1681  03C8  2BD6               	goto	l1351
  1682  03C9                     l1349:	
  1683  03C9  3001               	movlw	1
  1684  03CA  00AF               	movwf	??___aldiv^(0+128)
  1685  03CB                     u935:	
  1686  03CB  1003               	clrc
  1687  03CC  0DA7               	rlf	___aldiv@divisor^(0+128),f
  1688  03CD  0DA8               	rlf	(___aldiv@divisor+1)^(0+128),f
  1689  03CE  0DA9               	rlf	(___aldiv@divisor+2)^(0+128),f
  1690  03CF  0DAA               	rlf	(___aldiv@divisor+3)^(0+128),f
  1691  03D0  0BAF               	decfsz	??___aldiv^(0+128),f
  1692  03D1  2BCB               	goto	u935
  1693  03D2  3001               	movlw	1
  1694  03D3  00AF               	movwf	??___aldiv^(0+128)
  1695  03D4  082F               	movf	??___aldiv^(0+128),w
  1696  03D5  07B0               	addwf	___aldiv@counter^(0+128),f
  1697  03D6                     l1351:	
  1698  03D6  1FAA               	btfss	(___aldiv@divisor+3)^(0+128),7
  1699  03D7  2BD9               	goto	u941
  1700  03D8  2BDA               	goto	u940
  1701  03D9                     u941:	
  1702  03D9  2BC9               	goto	l1349
  1703  03DA                     u940:	
  1704  03DA                     l1353:	
  1705  03DA  3001               	movlw	1
  1706  03DB  00AF               	movwf	??___aldiv^(0+128)
  1707  03DC                     u955:	
  1708  03DC  1003               	clrc
  1709  03DD  0DB2               	rlf	___aldiv@quotient^(0+128),f
  1710  03DE  0DB3               	rlf	(___aldiv@quotient+1)^(0+128),f
  1711  03DF  0DB4               	rlf	(___aldiv@quotient+2)^(0+128),f
  1712  03E0  0DB5               	rlf	(___aldiv@quotient+3)^(0+128),f
  1713  03E1  0BAF               	decfsz	??___aldiv^(0+128),f
  1714  03E2  2BDC               	goto	u955
  1715  03E3                     l1355:	
  1716  03E3  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  1717  03E4  022E               	subwf	(___aldiv@dividend+3)^(0+128),w
  1718  03E5  1D03               	skipz
  1719  03E6  2BF1               	goto	u965
  1720  03E7  0829               	movf	(___aldiv@divisor+2)^(0+128),w
  1721  03E8  022D               	subwf	(___aldiv@dividend+2)^(0+128),w
  1722  03E9  1D03               	skipz
  1723  03EA  2BF1               	goto	u965
  1724  03EB  0828               	movf	(___aldiv@divisor+1)^(0+128),w
  1725  03EC  022C               	subwf	(___aldiv@dividend+1)^(0+128),w
  1726  03ED  1D03               	skipz
  1727  03EE  2BF1               	goto	u965
  1728  03EF  0827               	movf	___aldiv@divisor^(0+128),w
  1729  03F0  022B               	subwf	___aldiv@dividend^(0+128),w
  1730  03F1                     u965:	
  1731  03F1  1C03               	skipc
  1732  03F2  2BF4               	goto	u961
  1733  03F3  2BF5               	goto	u960
  1734  03F4                     u961:	
  1735  03F4  2C04               	goto	l1361
  1736  03F5                     u960:	
  1737  03F5                     l1357:	
  1738  03F5  0827               	movf	___aldiv@divisor^(0+128),w
  1739  03F6  02AB               	subwf	___aldiv@dividend^(0+128),f
  1740  03F7  0828               	movf	(___aldiv@divisor+1)^(0+128),w
  1741  03F8  1C03               	skipc
  1742  03F9  0F28               	incfsz	(___aldiv@divisor+1)^(0+128),w
  1743  03FA  02AC               	subwf	(___aldiv@dividend+1)^(0+128),f
  1744  03FB  0829               	movf	(___aldiv@divisor+2)^(0+128),w
  1745  03FC  1C03               	skipc
  1746  03FD  0F29               	incfsz	(___aldiv@divisor+2)^(0+128),w
  1747  03FE  02AD               	subwf	(___aldiv@dividend+2)^(0+128),f
  1748  03FF  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  1749  0400  1C03               	skipc
  1750  0401  0F2A               	incfsz	(___aldiv@divisor+3)^(0+128),w
  1751  0402  02AE               	subwf	(___aldiv@dividend+3)^(0+128),f
  1752  0403                     l1359:	
  1753  0403  1432               	bsf	___aldiv@quotient^(0+128),0
  1754  0404                     l1361:	
  1755  0404  3001               	movlw	1
  1756  0405                     u975:	
  1757  0405  1003               	clrc
  1758  0406  0CAA               	rrf	(___aldiv@divisor+3)^(0+128),f
  1759  0407  0CA9               	rrf	(___aldiv@divisor+2)^(0+128),f
  1760  0408  0CA8               	rrf	(___aldiv@divisor+1)^(0+128),f
  1761  0409  0CA7               	rrf	___aldiv@divisor^(0+128),f
  1762  040A  3EFF               	addlw	-1
  1763  040B  1D03               	skipz
  1764  040C  2C05               	goto	u975
  1765  040D                     l1363:	
  1766  040D  3001               	movlw	1
  1767  040E  02B0               	subwf	___aldiv@counter^(0+128),f
  1768  040F  1D03               	btfss	3,2
  1769  0410  2C12               	goto	u981
  1770  0411  2C13               	goto	u980
  1771  0412                     u981:	
  1772  0412  2BDA               	goto	l1353
  1773  0413                     u980:	
  1774  0413                     l1365:	
  1775  0413  0831               	movf	___aldiv@sign^(0+128),w
  1776  0414  1903               	btfsc	3,2
  1777  0415  2C17               	goto	u991
  1778  0416  2C18               	goto	u990
  1779  0417                     u991:	
  1780  0417  2C23               	goto	l1369
  1781  0418                     u990:	
  1782  0418                     l1367:	
  1783  0418  09B2               	comf	___aldiv@quotient^(0+128),f
  1784  0419  09B3               	comf	(___aldiv@quotient+1)^(0+128),f
  1785  041A  09B4               	comf	(___aldiv@quotient+2)^(0+128),f
  1786  041B  09B5               	comf	(___aldiv@quotient+3)^(0+128),f
  1787  041C  0AB2               	incf	___aldiv@quotient^(0+128),f
  1788  041D  1903               	skipnz
  1789  041E  0AB3               	incf	(___aldiv@quotient+1)^(0+128),f
  1790  041F  1903               	skipnz
  1791  0420  0AB4               	incf	(___aldiv@quotient+2)^(0+128),f
  1792  0421  1903               	skipnz
  1793  0422  0AB5               	incf	(___aldiv@quotient+3)^(0+128),f
  1794  0423                     l1369:	
  1795  0423  0835               	movf	(___aldiv@quotient+3)^(0+128),w
  1796  0424  00AA               	movwf	(?___aldiv+3)^(0+128)
  1797  0425  0834               	movf	(___aldiv@quotient+2)^(0+128),w
  1798  0426  00A9               	movwf	(?___aldiv+2)^(0+128)
  1799  0427  0833               	movf	(___aldiv@quotient+1)^(0+128),w
  1800  0428  00A8               	movwf	(?___aldiv+1)^(0+128)
  1801  0429  0832               	movf	___aldiv@quotient^(0+128),w
  1802  042A  00A7               	movwf	?___aldiv^(0+128)
  1803  042B                     l410:	
  1804  042B  0008               	return
  1805  042C                     __end_of___aldiv:	
  1806                           
  1807                           	psect	text6
  1808  0186                     __ptext6:	
  1809 ;; *************** function _ISR *****************
  1810 ;; Defined at:
  1811 ;;		line 317 in file "main.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;		None
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  1    wreg      void 
  1818 ;; Registers used:
  1819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1825 ;;      Params:         0       0       0       0       0
  1826 ;;      Locals:         0       0       0       0       0
  1827 ;;      Temps:          0       0       7       0       0
  1828 ;;      Totals:         0       0       7       0       0
  1829 ;;Total ram usage:        7 bytes
  1830 ;; Hardware stack levels used:    1
  1831 ;; Hardware stack levels required when called:    3
  1832 ;; This function calls:
  1833 ;;		_print_Countdown
  1834 ;; This function is called by:
  1835 ;;		Interrupt level 1
  1836 ;; This function uses a non-reentrant model
  1837 ;;
  1838                           
  1839                           
  1840                           ;psect for function _ISR
  1841  0186                     _ISR:	
  1842  0186                     i1l1651:	
  1843                           
  1844                           ;main.c: 321:     if (!(PORTBbits.RB3)&& (!oldBtn1))
  1845  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0188  1986               	btfsc	6,3	;volatile
  1848  0189  298B               	goto	u148_21
  1849  018A  298C               	goto	u148_20
  1850  018B                     u148_21:	
  1851  018B  299D               	goto	i1l153
  1852  018C                     u148_20:	
  1853  018C                     i1l1653:	
  1854  018C  086F               	movf	_oldBtn1,w
  1855  018D  1D03               	btfss	3,2
  1856  018E  2990               	goto	u149_21
  1857  018F  2991               	goto	u149_20
  1858  0190                     u149_21:	
  1859  0190  299D               	goto	i1l153
  1860  0191                     u149_20:	
  1861  0191                     i1l1655:	
  1862                           
  1863                           ;main.c: 322:     {;main.c: 323:         stat1=!stat1;
  1864  0191  1683               	bsf	3,5	;RP0=1, select bank1
  1865  0192  1303               	bcf	3,6	;RP1=0, select bank1
  1866  0193  0850               	movf	_stat1^(0+128),w
  1867  0194  1903               	btfsc	3,2
  1868  0195  2997               	goto	u150_21
  1869  0196  2999               	goto	u150_20
  1870  0197                     u150_21:	
  1871  0197  3001               	movlw	1
  1872  0198  299A               	goto	u151_20
  1873  0199                     u150_20:	
  1874  0199  3000               	movlw	0
  1875  019A                     u151_20:	
  1876  019A  00A0               	movwf	??_ISR^(0+128)
  1877  019B  0820               	movf	??_ISR^(0+128),w
  1878  019C  00D0               	movwf	_stat1^(0+128)
  1879  019D                     i1l153:	
  1880                           ;main.c: 325:     }
  1881                           
  1882                           
  1883                           ;main.c: 326:     oldBtn1 = !PORTBbits.RB3;
  1884  019D  1003               	clrc
  1885  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1886  019F  1D86               	btfss	6,3	;volatile
  1887  01A0  1403               	setc
  1888  01A1  3000               	movlw	0
  1889  01A2  1803               	btfsc	3,0
  1890  01A3  3001               	movlw	1
  1891  01A4  00EF               	movwf	_oldBtn1
  1892  01A5                     i1l1657:	
  1893                           
  1894                           ;main.c: 328:     if (!(PORTBbits.RB4)&& (!oldBtn2))
  1895  01A5  1A06               	btfsc	6,4	;volatile
  1896  01A6  29A8               	goto	u152_21
  1897  01A7  29A9               	goto	u152_20
  1898  01A8                     u152_21:	
  1899  01A8  29BA               	goto	i1l154
  1900  01A9                     u152_20:	
  1901  01A9                     i1l1659:	
  1902  01A9  1683               	bsf	3,5	;RP0=1, select bank1
  1903  01AA  1303               	bcf	3,6	;RP1=0, select bank1
  1904  01AB  084F               	movf	_oldBtn2^(0+128),w
  1905  01AC  1D03               	btfss	3,2
  1906  01AD  29AF               	goto	u153_21
  1907  01AE  29B0               	goto	u153_20
  1908  01AF                     u153_21:	
  1909  01AF  29BA               	goto	i1l154
  1910  01B0                     u153_20:	
  1911  01B0                     i1l1661:	
  1912                           
  1913                           ;main.c: 329:     {;main.c: 330:         stat2=!stat2;
  1914  01B0  084E               	movf	_stat2^(0+128),w
  1915  01B1  1903               	btfsc	3,2
  1916  01B2  29B4               	goto	u154_21
  1917  01B3  29B6               	goto	u154_20
  1918  01B4                     u154_21:	
  1919  01B4  3001               	movlw	1
  1920  01B5  29B7               	goto	u155_20
  1921  01B6                     u154_20:	
  1922  01B6  3000               	movlw	0
  1923  01B7                     u155_20:	
  1924  01B7  00A0               	movwf	??_ISR^(0+128)
  1925  01B8  0820               	movf	??_ISR^(0+128),w
  1926  01B9  00CE               	movwf	_stat2^(0+128)
  1927  01BA                     i1l154:	
  1928                           ;main.c: 332:     }
  1929                           
  1930                           
  1931                           ;main.c: 333:     oldBtn2 = !PORTBbits.RB4;
  1932  01BA  1003               	clrc
  1933  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  1934  01BC  1E06               	btfss	6,4	;volatile
  1935  01BD  1403               	setc
  1936  01BE  3000               	movlw	0
  1937  01BF  1803               	btfsc	3,0
  1938  01C0  3001               	movlw	1
  1939  01C1  1683               	bsf	3,5	;RP0=1, select bank1
  1940  01C2  1303               	bcf	3,6	;RP1=0, select bank1
  1941  01C3  00CF               	movwf	_oldBtn2^(0+128)
  1942  01C4                     i1l1663:	
  1943                           
  1944                           ;main.c: 335:     if (!(PORTBbits.RB5)&& (!oldBtn3))
  1945  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1946  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1947  01C6  1A86               	btfsc	6,5	;volatile
  1948  01C7  29C9               	goto	u156_21
  1949  01C8  29CA               	goto	u156_20
  1950  01C9                     u156_21:	
  1951  01C9  29DB               	goto	i1l155
  1952  01CA                     u156_20:	
  1953  01CA                     i1l1665:	
  1954  01CA  1683               	bsf	3,5	;RP0=1, select bank1
  1955  01CB  1303               	bcf	3,6	;RP1=0, select bank1
  1956  01CC  084D               	movf	_oldBtn3^(0+128),w
  1957  01CD  1D03               	btfss	3,2
  1958  01CE  29D0               	goto	u157_21
  1959  01CF  29D1               	goto	u157_20
  1960  01D0                     u157_21:	
  1961  01D0  29DB               	goto	i1l155
  1962  01D1                     u157_20:	
  1963  01D1                     i1l1667:	
  1964                           
  1965                           ;main.c: 336:     {;main.c: 337:         stat3=!stat3;
  1966  01D1  084C               	movf	_stat3^(0+128),w
  1967  01D2  1903               	btfsc	3,2
  1968  01D3  29D5               	goto	u158_21
  1969  01D4  29D7               	goto	u158_20
  1970  01D5                     u158_21:	
  1971  01D5  3001               	movlw	1
  1972  01D6  29D8               	goto	u159_20
  1973  01D7                     u158_20:	
  1974  01D7  3000               	movlw	0
  1975  01D8                     u159_20:	
  1976  01D8  00A0               	movwf	??_ISR^(0+128)
  1977  01D9  0820               	movf	??_ISR^(0+128),w
  1978  01DA  00CC               	movwf	_stat3^(0+128)
  1979  01DB                     i1l155:	
  1980                           ;main.c: 339:     }
  1981                           
  1982                           
  1983                           ;main.c: 340:     oldBtn3 = !PORTBbits.RB5;
  1984  01DB  1003               	clrc
  1985  01DC  1283               	bcf	3,5	;RP0=0, select bank0
  1986  01DD  1E86               	btfss	6,5	;volatile
  1987  01DE  1403               	setc
  1988  01DF  3000               	movlw	0
  1989  01E0  1803               	btfsc	3,0
  1990  01E1  3001               	movlw	1
  1991  01E2  1683               	bsf	3,5	;RP0=1, select bank1
  1992  01E3  1303               	bcf	3,6	;RP1=0, select bank1
  1993  01E4  00CD               	movwf	_oldBtn3^(0+128)
  1994  01E5                     i1l1669:	
  1995                           
  1996                           ;main.c: 344:    if(RCIF)
  1997  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1998  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1999  01E7  1E8C               	btfss	12,5	;volatile
  2000  01E8  29EA               	goto	u160_21
  2001  01E9  29EB               	goto	u160_20
  2002  01EA                     u160_21:	
  2003  01EA  29F8               	goto	i1l1677
  2004  01EB                     u160_20:	
  2005  01EB                     i1l157:	
  2006  01EB  1E8C               	btfss	12,5	;volatile
  2007  01EC  29EE               	goto	u161_21
  2008  01ED  29EF               	goto	u161_20
  2009  01EE                     u161_21:	
  2010  01EE  29EB               	goto	i1l157
  2011  01EF                     u161_20:	
  2012  01EF                     i1l159:	
  2013                           
  2014                           ;main.c: 347:         RCIF = 0;
  2015  01EF  128C               	bcf	12,5	;volatile
  2016  01F0                     i1l1673:	
  2017                           
  2018                           ;main.c: 348:         datoSeriale = RCREG;
  2019  01F0  081A               	movf	26,w	;volatile
  2020  01F1  1683               	bsf	3,5	;RP0=1, select bank1
  2021  01F2  1303               	bcf	3,6	;RP1=0, select bank1
  2022  01F3  00A0               	movwf	??_ISR^(0+128)
  2023  01F4  0820               	movf	??_ISR^(0+128),w
  2024  01F5  00D4               	movwf	_datoSeriale^(0+128)
  2025  01F6                     i1l1675:	
  2026                           
  2027                           ;main.c: 349:         received = 1;
  2028  01F6  01D5               	clrf	_received^(0+128)
  2029  01F7  0AD5               	incf	_received^(0+128),f
  2030  01F8                     i1l1677:	
  2031                           
  2032                           ;main.c: 352:    if (INTCON&0x04)
  2033  01F8  1D0B               	btfss	11,2	;volatile
  2034  01F9  29FB               	goto	u162_21
  2035  01FA  29FC               	goto	u162_20
  2036  01FB                     u162_21:	
  2037  01FB  2A91               	goto	i1l171
  2038  01FC                     u162_20:	
  2039  01FC                     i1l1679:	
  2040                           
  2041                           ;main.c: 353:     {;main.c: 354:         INTCON &= ~0x04;
  2042  01FC  30FB               	movlw	251
  2043  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  2044  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  2045  01FF  00A0               	movwf	??_ISR^(0+128)
  2046  0200  0820               	movf	??_ISR^(0+128),w
  2047  0201  058B               	andwf	11,f	;volatile
  2048  0202                     i1l1681:	
  2049                           
  2050                           ;main.c: 355:         TMR0 = 6;
  2051  0202  3006               	movlw	6
  2052  0203  1283               	bcf	3,5	;RP0=0, select bank0
  2053  0204  1303               	bcf	3,6	;RP1=0, select bank0
  2054  0205  0081               	movwf	1	;volatile
  2055  0206                     i1l1683:	
  2056                           
  2057                           ;main.c: 356:         count++;
  2058  0206  3001               	movlw	1
  2059  0207  1683               	bsf	3,5	;RP0=1, select bank1
  2060  0208  1303               	bcf	3,6	;RP1=0, select bank1
  2061  0209  07C8               	addwf	_count^(0+128),f
  2062  020A  1803               	skipnc
  2063  020B  0AC9               	incf	(_count+1)^(0+128),f
  2064  020C  3000               	movlw	0
  2065  020D  07C9               	addwf	(_count+1)^(0+128),f
  2066                           
  2067                           ;main.c: 357:         if (count == 125)
  2068  020E  307D               	movlw	125
  2069  020F  0648               	xorwf	_count^(0+128),w
  2070  0210  0449               	iorwf	(_count+1)^(0+128),w
  2071  0211  1D03               	btfss	3,2
  2072  0212  2A14               	goto	u163_21
  2073  0213  2A15               	goto	u163_20
  2074  0214                     u163_21:	
  2075  0214  2A91               	goto	i1l171
  2076  0215                     u163_20:	
  2077  0215                     i1l1685:	
  2078                           
  2079                           ;main.c: 358:         {;main.c: 360:             if(semafori[0]==statoSemafori[0])
  2080  0215  0842               	movf	_semafori^(0+128),w
  2081  0216  065E               	xorwf	_statoSemafori^(0+128),w
  2082  0217  1D03               	skipz
  2083  0218  2A1A               	goto	u164_21
  2084  0219  2A1B               	goto	u164_20
  2085  021A                     u164_21:	
  2086  021A  2A28               	goto	i1l1689
  2087  021B                     u164_20:	
  2088  021B                     i1l1687:	
  2089                           
  2090                           ;main.c: 361:                 print_Countdown(countDown, 0);
  2091  021B  087D               	movf	_countDown,w
  2092  021C  00A0               	movwf	??_ISR^(0+128)
  2093  021D  01A1               	clrf	(??_ISR^(0+128)+1)
  2094  021E  0820               	movf	??_ISR^(0+128),w
  2095  021F  00F9               	movwf	print_Countdown@num
  2096  0220  0821               	movf	(??_ISR+1)^(0+128),w
  2097  0221  00FA               	movwf	print_Countdown@num+1
  2098  0222  01FB               	clrf	print_Countdown@statoSem
  2099  0223  120A  118A  2049  120A  118A  	fcall	_print_Countdown
  2100  0228                     i1l1689:	
  2101                           
  2102                           ;main.c: 362:             if(semafori[0]==statoSemafori[1])
  2103  0228  1683               	bsf	3,5	;RP0=1, select bank1
  2104  0229  1303               	bcf	3,6	;RP1=0, select bank1
  2105  022A  085F               	movf	(_statoSemafori^(0+128)+1),w
  2106  022B  0642               	xorwf	_semafori^(0+128),w
  2107  022C  1D03               	skipz
  2108  022D  2A2F               	goto	u165_21
  2109  022E  2A30               	goto	u165_20
  2110  022F                     u165_21:	
  2111  022F  2A3E               	goto	i1l1693
  2112  0230                     u165_20:	
  2113  0230                     i1l1691:	
  2114                           
  2115                           ;main.c: 363:                 print_Countdown(countDown, 1);
  2116  0230  087D               	movf	_countDown,w
  2117  0231  00A0               	movwf	??_ISR^(0+128)
  2118  0232  01A1               	clrf	(??_ISR^(0+128)+1)
  2119  0233  0820               	movf	??_ISR^(0+128),w
  2120  0234  00F9               	movwf	print_Countdown@num
  2121  0235  0821               	movf	(??_ISR+1)^(0+128),w
  2122  0236  00FA               	movwf	print_Countdown@num+1
  2123  0237  01FB               	clrf	print_Countdown@statoSem
  2124  0238  0AFB               	incf	print_Countdown@statoSem,f
  2125  0239  120A  118A  2049  120A  118A  	fcall	_print_Countdown
  2126  023E                     i1l1693:	
  2127                           
  2128                           ;main.c: 364:             if(semafori[0]==statoSemafori[2])
  2129  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2130  023F  1303               	bcf	3,6	;RP1=0, select bank1
  2131  0240  0860               	movf	(_statoSemafori^(0+128)+2),w
  2132  0241  0642               	xorwf	_semafori^(0+128),w
  2133  0242  1D03               	skipz
  2134  0243  2A45               	goto	u166_21
  2135  0244  2A46               	goto	u166_20
  2136  0245                     u166_21:	
  2137  0245  2A56               	goto	i1l1697
  2138  0246                     u166_20:	
  2139  0246                     i1l1695:	
  2140                           
  2141                           ;main.c: 365:                 print_Countdown(countDown, 2);
  2142  0246  087D               	movf	_countDown,w
  2143  0247  00A0               	movwf	??_ISR^(0+128)
  2144  0248  01A1               	clrf	(??_ISR^(0+128)+1)
  2145  0249  0820               	movf	??_ISR^(0+128),w
  2146  024A  00F9               	movwf	print_Countdown@num
  2147  024B  0821               	movf	(??_ISR+1)^(0+128),w
  2148  024C  00FA               	movwf	print_Countdown@num+1
  2149  024D  3002               	movlw	2
  2150  024E  00A2               	movwf	(??_ISR+2)^(0+128)
  2151  024F  0822               	movf	(??_ISR+2)^(0+128),w
  2152  0250  00FB               	movwf	print_Countdown@statoSem
  2153  0251  120A  118A  2049  120A  118A  	fcall	_print_Countdown
  2154  0256                     i1l1697:	
  2155                           
  2156                           ;main.c: 366:             if(flagGiallo==1)
  2157  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2158  0257  1303               	bcf	3,6	;RP1=0, select bank1
  2159  0258  034A               	decf	_flagGiallo^(0+128),w
  2160  0259  1D03               	btfss	3,2
  2161  025A  2A5C               	goto	u167_21
  2162  025B  2A5D               	goto	u167_20
  2163  025C                     u167_21:	
  2164  025C  2A76               	goto	i1l1705
  2165  025D                     u167_20:	
  2166  025D                     i1l1699:	
  2167                           
  2168                           ;main.c: 367:             {;main.c: 368:                 f++;
  2169  025D  3001               	movlw	1
  2170  025E  07C6               	addwf	_f^(0+128),f
  2171  025F  1803               	skipnc
  2172  0260  0AC7               	incf	(_f+1)^(0+128),f
  2173  0261  3000               	movlw	0
  2174  0262  07C7               	addwf	(_f+1)^(0+128),f
  2175  0263                     i1l1701:	
  2176                           
  2177                           ;main.c: 369:                 if(f>=3)
  2178  0263  0847               	movf	(_f+1)^(0+128),w
  2179  0264  3A80               	xorlw	128
  2180  0265  00FF               	movwf	btemp+1
  2181  0266  3080               	movlw	128
  2182  0267  027F               	subwf	btemp+1,w
  2183  0268  1D03               	skipz
  2184  0269  2A6C               	goto	u168_25
  2185  026A  3003               	movlw	3
  2186  026B  0246               	subwf	_f^(0+128),w
  2187  026C                     u168_25:	
  2188  026C  1C03               	skipc
  2189  026D  2A6F               	goto	u168_21
  2190  026E  2A70               	goto	u168_20
  2191  026F                     u168_21:	
  2192  026F  2A8D               	goto	i1l1715
  2193  0270                     u168_20:	
  2194  0270                     i1l1703:	
  2195                           
  2196                           ;main.c: 370:                 {;main.c: 371:                     flagGiallo=0;
  2197  0270  1683               	bsf	3,5	;RP0=1, select bank1
  2198  0271  1303               	bcf	3,6	;RP1=0, select bank1
  2199  0272  01CA               	clrf	_flagGiallo^(0+128)
  2200                           
  2201                           ;main.c: 372:                     f=0;
  2202  0273  01C6               	clrf	_f^(0+128)
  2203  0274  01C7               	clrf	(_f+1)^(0+128)
  2204  0275  2A8D               	goto	i1l1715
  2205  0276                     i1l1705:	
  2206                           
  2207                           ;main.c: 376:             {;main.c: 377:                 countDown--;
  2208  0276  3001               	movlw	1
  2209  0277  02FD               	subwf	_countDown,f
  2210                           
  2211                           ;main.c: 378:                 if(countDown==0)
  2212  0278  087D               	movf	_countDown,w
  2213  0279  1D03               	btfss	3,2
  2214  027A  2A7C               	goto	u169_21
  2215  027B  2A7D               	goto	u169_20
  2216  027C                     u169_21:	
  2217  027C  2A8D               	goto	i1l1715
  2218  027D                     u169_20:	
  2219  027D                     i1l1707:	
  2220                           
  2221                           ;main.c: 379:                 {;main.c: 380:                     scattoSemafori=1;
  2222  027D  01CB               	clrf	_scattoSemafori^(0+128)
  2223  027E  0ACB               	incf	_scattoSemafori^(0+128),f
  2224  027F                     i1l1709:	
  2225                           
  2226                           ;main.c: 381:                     if(temporizzazione!=0)
  2227  027F  087C               	movf	_temporizzazione,w
  2228  0280  1903               	btfsc	3,2
  2229  0281  2A83               	goto	u170_21
  2230  0282  2A84               	goto	u170_20
  2231  0283                     u170_21:	
  2232  0283  2A89               	goto	i1l1713
  2233  0284                     u170_20:	
  2234  0284                     i1l1711:	
  2235                           
  2236                           ;main.c: 382:                         countDown=temporizzazione;
  2237  0284  087C               	movf	_temporizzazione,w
  2238  0285  00A0               	movwf	??_ISR^(0+128)
  2239  0286  0820               	movf	??_ISR^(0+128),w
  2240  0287  00FD               	movwf	_countDown
  2241  0288  2A8D               	goto	i1l1715
  2242  0289                     i1l1713:	
  2243                           
  2244                           ;main.c: 384:                         countDown=5;
  2245  0289  3005               	movlw	5
  2246  028A  00A0               	movwf	??_ISR^(0+128)
  2247  028B  0820               	movf	??_ISR^(0+128),w
  2248  028C  00FD               	movwf	_countDown
  2249  028D                     i1l1715:	
  2250                           
  2251                           ;main.c: 393:             count = 0;
  2252  028D  1683               	bsf	3,5	;RP0=1, select bank1
  2253  028E  1303               	bcf	3,6	;RP1=0, select bank1
  2254  028F  01C8               	clrf	_count^(0+128)
  2255  0290  01C9               	clrf	(_count+1)^(0+128)
  2256  0291                     i1l171:	
  2257  0291  1683               	bsf	3,5	;RP0=1, select bank1
  2258  0292  1303               	bcf	3,6	;RP1=0, select bank1
  2259  0293  0826               	movf	(??_ISR+6)^(0+128),w
  2260  0294  1283               	bcf	3,5	;RP0=0, select bank0
  2261  0295  1303               	bcf	3,6	;RP1=0, select bank0
  2262  0296  00FF               	movwf	btemp+1
  2263  0297  1683               	bsf	3,5	;RP0=1, select bank1
  2264  0298  1303               	bcf	3,6	;RP1=0, select bank1
  2265  0299  0825               	movf	(??_ISR+5)^(0+128),w
  2266  029A  008A               	movwf	10
  2267  029B  0824               	movf	(??_ISR+4)^(0+128),w
  2268  029C  0084               	movwf	4
  2269  029D  0E23               	swapf	(??_ISR+3)^(0+128),w
  2270  029E  0083               	movwf	3
  2271  029F  0EFE               	swapf	btemp,f
  2272  02A0  0E7E               	swapf	btemp,w
  2273  02A1  0009               	retfie
  2274  02A2                     __end_of_ISR:	
  2275                           
  2276                           	psect	intentry
  2277  0004                     __pintentry:	
  2278                           ;incstack = 0
  2279                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2280                           
  2281  0004                     interrupt_function:	
  2282  007E                     saved_w	set	btemp
  2283  0004  00FE               	movwf	btemp
  2284  0005  0E03               	swapf	3,w
  2285  0006  1683               	bsf	3,5	;RP0=1, select bank1
  2286  0007  1303               	bcf	3,6	;RP1=0, select bank1
  2287  0008  00A3               	movwf	(??_ISR+3)^(0+128)
  2288  0009  0804               	movf	4,w
  2289  000A  00A4               	movwf	(??_ISR+4)^(0+128)
  2290  000B  080A               	movf	10,w
  2291  000C  00A5               	movwf	(??_ISR+5)^(0+128)
  2292  000D  1283               	bcf	3,5	;RP0=0, select bank0
  2293  000E  1303               	bcf	3,6	;RP1=0, select bank0
  2294  000F  087F               	movf	btemp+1,w
  2295  0010  1683               	bsf	3,5	;RP0=1, select bank1
  2296  0011  1303               	bcf	3,6	;RP1=0, select bank1
  2297  0012  00A6               	movwf	(??_ISR+6)^(0+128)
  2298  0013  120A  118A  2986   	ljmp	_ISR
  2299                           
  2300                           	psect	text7
  2301  0049                     __ptext7:	
  2302 ;; *************** function _print_Countdown *****************
  2303 ;; Defined at:
  2304 ;;		line 495 in file "main.c"
  2305 ;; Parameters:    Size  Location     Type
  2306 ;;  num             2    9[COMMON] int 
  2307 ;;  statoSem        1   11[COMMON] unsigned char 
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  secondStr      17   38[BANK0 ] unsigned char [17]
  2310 ;;  secondStr      17   21[BANK0 ] unsigned char [17]
  2311 ;;  secondStr      17    4[BANK0 ] unsigned char [17]
  2312 ;;  firstStr       17   55[BANK0 ] unsigned char [17]
  2313 ;;  resultNum       3   72[BANK0 ] unsigned char [3]
  2314 ;;  i               2   77[BANK0 ] int 
  2315 ;;  length          2   75[BANK0 ] int 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      void 
  2318 ;; Registers used:
  2319 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2325 ;;      Params:         3       0       0       0       0
  2326 ;;      Locals:         0      75       0       0       0
  2327 ;;      Temps:          0       4       0       0       0
  2328 ;;      Totals:         3      79       0       0       0
  2329 ;;Total ram usage:       82 bytes
  2330 ;; Hardware stack levels used:    1
  2331 ;; Hardware stack levels required when called:    2
  2332 ;; This function calls:
  2333 ;;		___awdiv
  2334 ;;		___awmod
  2335 ;;		_send_string
  2336 ;;		i1_send_cmd
  2337 ;; This function is called by:
  2338 ;;		_ISR
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           
  2343                           ;psect for function _print_Countdown
  2344  0049                     _print_Countdown:	
  2345  0049                     i1l1505:	
  2346                           ;incstack = 0
  2347                           ; Regs used in _print_Countdown: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2348                           
  2349                           
  2350                           ;main.c: 495: void print_Countdown(int num, char statoSem);main.c: 496: {;main.c: 497:  
      +                             char resultNum[3], firstStr[17] = "Tempo:          ";
  2351  0049  3057               	movlw	print_Countdown@firstStr& (0+255)
  2352  004A  0084               	movwf	4
  2353  004B  30C3               	movlw	low print_Countdown@F925
  2354  004C  1283               	bcf	3,5	;RP0=0, select bank0
  2355  004D  1303               	bcf	3,6	;RP1=0, select bank0
  2356  004E  00A0               	movwf	??_print_Countdown
  2357  004F  0804               	movf	4,w
  2358  0050  00A1               	movwf	??_print_Countdown+1
  2359  0051  3011               	movlw	17
  2360  0052  00A2               	movwf	??_print_Countdown+2
  2361  0053                     u120_20:	
  2362  0053  0820               	movf	??_print_Countdown,w
  2363  0054  0084               	movwf	4
  2364  0055  1783               	bsf	3,7	;select IRP bank3
  2365  0056  0800               	movf	0,w
  2366  0057  00A3               	movwf	??_print_Countdown+3
  2367  0058  0AA0               	incf	??_print_Countdown,f
  2368  0059  0821               	movf	??_print_Countdown+1,w
  2369  005A  0084               	movwf	4
  2370  005B  1383               	bcf	3,7	;select IRP bank0
  2371  005C  0823               	movf	??_print_Countdown+3,w
  2372  005D  0080               	movwf	0
  2373  005E  0AA1               	incf	??_print_Countdown+1,f
  2374  005F  0BA2               	decfsz	??_print_Countdown+2,f
  2375  0060  2853               	goto	u120_20
  2376  0061                     i1l1507:	
  2377                           
  2378                           ;main.c: 498:     int length = 2, i = 0;
  2379  0061  3002               	movlw	2
  2380  0062  00EB               	movwf	print_Countdown@length
  2381  0063  3000               	movlw	0
  2382  0064  00EC               	movwf	print_Countdown@length+1
  2383  0065                     i1l1509:	
  2384  0065  01ED               	clrf	print_Countdown@i
  2385  0066  01EE               	clrf	print_Countdown@i+1
  2386  0067                     i1l1511:	
  2387                           
  2388                           ;main.c: 500:     if(num < 10)
  2389  0067  087A               	movf	print_Countdown@num+1,w
  2390  0068  3A80               	xorlw	128
  2391  0069  00FF               	movwf	btemp+1
  2392  006A  3080               	movlw	128
  2393  006B  027F               	subwf	btemp+1,w
  2394  006C  1D03               	skipz
  2395  006D  2870               	goto	u121_25
  2396  006E  300A               	movlw	10
  2397  006F  0279               	subwf	print_Countdown@num,w
  2398  0070                     u121_25:	
  2399  0070  1803               	skipnc
  2400  0071  2873               	goto	u121_21
  2401  0072  2874               	goto	u121_20
  2402  0073                     u121_21:	
  2403  0073  287B               	goto	i1l1515
  2404  0074                     u121_20:	
  2405  0074                     i1l1513:	
  2406                           
  2407                           ;main.c: 501:         length = 1;
  2408  0074  3001               	movlw	1
  2409  0075  1283               	bcf	3,5	;RP0=0, select bank0
  2410  0076  1303               	bcf	3,6	;RP1=0, select bank0
  2411  0077  00EB               	movwf	print_Countdown@length
  2412  0078  3000               	movlw	0
  2413  0079  00EC               	movwf	print_Countdown@length+1
  2414  007A  2888               	goto	i1l1519
  2415  007B                     i1l1515:	
  2416  007B  3064               	movlw	100
  2417  007C  0679               	xorwf	print_Countdown@num,w
  2418  007D  047A               	iorwf	print_Countdown@num+1,w
  2419  007E  1D03               	btfss	3,2
  2420  007F  2881               	goto	u122_21
  2421  0080  2882               	goto	u122_20
  2422  0081                     u122_21:	
  2423  0081  2888               	goto	i1l1519
  2424  0082                     u122_20:	
  2425  0082                     i1l1517:	
  2426                           
  2427                           ;main.c: 503:         length = 3;
  2428  0082  3003               	movlw	3
  2429  0083  1283               	bcf	3,5	;RP0=0, select bank0
  2430  0084  1303               	bcf	3,6	;RP1=0, select bank0
  2431  0085  00EB               	movwf	print_Countdown@length
  2432  0086  3000               	movlw	0
  2433  0087  00EC               	movwf	print_Countdown@length+1
  2434  0088                     i1l1519:	
  2435                           
  2436                           ;main.c: 505:     if(num != 0)
  2437  0088  0879               	movf	print_Countdown@num,w
  2438  0089  047A               	iorwf	print_Countdown@num+1,w
  2439  008A  1903               	btfsc	3,2
  2440  008B  288D               	goto	u123_21
  2441  008C  288E               	goto	u123_20
  2442  008D                     u123_21:	
  2443  008D  28C7               	goto	i1l1531
  2444  008E                     u123_20:	
  2445  008E  28C0               	goto	i1l1529
  2446  008F                     i1l1523:	
  2447                           
  2448                           ;main.c: 508:         {;main.c: 509:             resultNum[i] = num%10 + '0';
  2449  008F  300A               	movlw	10
  2450  0090  00F0               	movwf	___awmod@divisor
  2451  0091  3000               	movlw	0
  2452  0092  00F1               	movwf	___awmod@divisor+1
  2453  0093  087A               	movf	print_Countdown@num+1,w
  2454  0094  00F3               	movwf	___awmod@dividend+1
  2455  0095  0879               	movf	print_Countdown@num,w
  2456  0096  00F2               	movwf	___awmod@dividend
  2457  0097  120A  118A  2493  120A  118A  	fcall	___awmod
  2458  009C  0870               	movf	?___awmod,w
  2459  009D  3E30               	addlw	48
  2460  009E  1283               	bcf	3,5	;RP0=0, select bank0
  2461  009F  1303               	bcf	3,6	;RP1=0, select bank0
  2462  00A0  00A0               	movwf	??_print_Countdown
  2463  00A1  086D               	movf	print_Countdown@i,w
  2464  00A2  3E68               	addlw	(low (print_Countdown@resultNum| 0))& (0+255)
  2465  00A3  0084               	movwf	4
  2466  00A4  0820               	movf	??_print_Countdown,w
  2467  00A5  1383               	bcf	3,7	;select IRP bank0
  2468  00A6  0080               	movwf	0
  2469  00A7                     i1l1525:	
  2470                           
  2471                           ;main.c: 510:             num /= 10;
  2472  00A7  300A               	movlw	10
  2473  00A8  00F0               	movwf	___awdiv@divisor
  2474  00A9  3000               	movlw	0
  2475  00AA  00F1               	movwf	___awdiv@divisor+1
  2476  00AB  087A               	movf	print_Countdown@num+1,w
  2477  00AC  00F3               	movwf	___awdiv@dividend+1
  2478  00AD  0879               	movf	print_Countdown@num,w
  2479  00AE  00F2               	movwf	___awdiv@dividend
  2480  00AF  120A  118A  242C  120A  118A  	fcall	___awdiv
  2481  00B4  0871               	movf	?___awdiv+1,w
  2482  00B5  00FA               	movwf	print_Countdown@num+1
  2483  00B6  0870               	movf	?___awdiv,w
  2484  00B7  00F9               	movwf	print_Countdown@num
  2485  00B8                     i1l1527:	
  2486                           
  2487                           ;main.c: 511:             i++;
  2488  00B8  3001               	movlw	1
  2489  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  2490  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  2491  00BB  07ED               	addwf	print_Countdown@i,f
  2492  00BC  1803               	skipnc
  2493  00BD  0AEE               	incf	print_Countdown@i+1,f
  2494  00BE  3000               	movlw	0
  2495  00BF  07EE               	addwf	print_Countdown@i+1,f
  2496  00C0                     i1l1529:	
  2497                           
  2498                           ;main.c: 507:         while(num)
  2499  00C0  0879               	movf	print_Countdown@num,w
  2500  00C1  047A               	iorwf	print_Countdown@num+1,w
  2501  00C2  1D03               	btfss	3,2
  2502  00C3  28C5               	goto	u124_21
  2503  00C4  28C6               	goto	u124_20
  2504  00C5                     u124_21:	
  2505  00C5  288F               	goto	i1l1523
  2506  00C6                     u124_20:	
  2507  00C6  28CD               	goto	i1l1533
  2508  00C7                     i1l1531:	
  2509                           
  2510                           ;main.c: 515:     {;main.c: 516:         resultNum[0] = '0';
  2511  00C7  3030               	movlw	48
  2512  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  2513  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  2514  00CA  00A0               	movwf	??_print_Countdown
  2515  00CB  0820               	movf	??_print_Countdown,w
  2516  00CC  00E8               	movwf	print_Countdown@resultNum
  2517  00CD                     i1l1533:	
  2518                           
  2519                           ;main.c: 519:     for(i=0; i<length; i++)
  2520  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  2521  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  2522  00CF  01ED               	clrf	print_Countdown@i
  2523  00D0  01EE               	clrf	print_Countdown@i+1
  2524  00D1  28E6               	goto	i1l1539
  2525  00D2                     i1l1535:	
  2526                           
  2527                           ;main.c: 520:     {;main.c: 521:         firstStr[13-i] = resultNum[i];
  2528  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  2529  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  2530  00D4  086D               	movf	print_Countdown@i,w
  2531  00D5  3E68               	addlw	(low (print_Countdown@resultNum| 0))& (0+255)
  2532  00D6  0084               	movwf	4
  2533  00D7  1383               	bcf	3,7	;select IRP bank0
  2534  00D8  0800               	movf	0,w
  2535  00D9  00A0               	movwf	??_print_Countdown
  2536  00DA  086D               	movf	print_Countdown@i,w
  2537  00DB  3C0D               	sublw	13
  2538  00DC  3E57               	addlw	(low (print_Countdown@firstStr| 0))& (0+255)
  2539  00DD  0084               	movwf	4
  2540  00DE  0820               	movf	??_print_Countdown,w
  2541  00DF  0080               	movwf	0
  2542  00E0                     i1l1537:	
  2543                           
  2544                           ;main.c: 522:     }
  2545  00E0  3001               	movlw	1
  2546  00E1  07ED               	addwf	print_Countdown@i,f
  2547  00E2  1803               	skipnc
  2548  00E3  0AEE               	incf	print_Countdown@i+1,f
  2549  00E4  3000               	movlw	0
  2550  00E5  07EE               	addwf	print_Countdown@i+1,f
  2551  00E6                     i1l1539:	
  2552  00E6  086E               	movf	print_Countdown@i+1,w
  2553  00E7  3A80               	xorlw	128
  2554  00E8  00A0               	movwf	??_print_Countdown
  2555  00E9  086C               	movf	print_Countdown@length+1,w
  2556  00EA  3A80               	xorlw	128
  2557  00EB  0220               	subwf	??_print_Countdown,w
  2558  00EC  1D03               	skipz
  2559  00ED  28F0               	goto	u125_25
  2560  00EE  086B               	movf	print_Countdown@length,w
  2561  00EF  026D               	subwf	print_Countdown@i,w
  2562  00F0                     u125_25:	
  2563  00F0  1C03               	skipc
  2564  00F1  28F3               	goto	u125_21
  2565  00F2  28F4               	goto	u125_20
  2566  00F3                     u125_21:	
  2567  00F3  28D2               	goto	i1l1535
  2568  00F4                     u125_20:	
  2569  00F4                     i1l1541:	
  2570                           
  2571                           ;main.c: 524:     send_cmd(0x01);
  2572  00F4  3001               	movlw	1
  2573  00F5  120A  118A  260A  120A  118A  	fcall	i1_send_cmd
  2574                           
  2575                           ;main.c: 525:     send_cmd(0xC0);
  2576  00FA  30C0               	movlw	192
  2577  00FB  120A  118A  260A  120A  118A  	fcall	i1_send_cmd
  2578  0100                     i1l1543:	
  2579                           
  2580                           ;main.c: 526:     if(statoSem==0)
  2581  0100  087B               	movf	print_Countdown@statoSem,w
  2582  0101  1D03               	btfss	3,2
  2583  0102  2904               	goto	u126_21
  2584  0103  2905               	goto	u126_20
  2585  0104                     u126_21:	
  2586  0104  2923               	goto	i1l1549
  2587  0105                     u126_20:	
  2588  0105                     i1l1545:	
  2589                           
  2590                           ;main.c: 527:     {;main.c: 528:        char secondStr[17] = "Sem 0:     Verde";
  2591  0105  3024               	movlw	print_Countdown@secondStr& (0+255)
  2592  0106  0084               	movwf	4
  2593  0107  30B2               	movlw	low print_Countdown@F929
  2594  0108  1283               	bcf	3,5	;RP0=0, select bank0
  2595  0109  1303               	bcf	3,6	;RP1=0, select bank0
  2596  010A  00A0               	movwf	??_print_Countdown
  2597  010B  0804               	movf	4,w
  2598  010C  00A1               	movwf	??_print_Countdown+1
  2599  010D  3011               	movlw	17
  2600  010E  00A2               	movwf	??_print_Countdown+2
  2601  010F                     u127_20:	
  2602  010F  0820               	movf	??_print_Countdown,w
  2603  0110  0084               	movwf	4
  2604  0111  1783               	bsf	3,7	;select IRP bank3
  2605  0112  0800               	movf	0,w
  2606  0113  00A3               	movwf	??_print_Countdown+3
  2607  0114  0AA0               	incf	??_print_Countdown,f
  2608  0115  0821               	movf	??_print_Countdown+1,w
  2609  0116  0084               	movwf	4
  2610  0117  1383               	bcf	3,7	;select IRP bank0
  2611  0118  0823               	movf	??_print_Countdown+3,w
  2612  0119  0080               	movwf	0
  2613  011A  0AA1               	incf	??_print_Countdown+1,f
  2614  011B  0BA2               	decfsz	??_print_Countdown+2,f
  2615  011C  290F               	goto	u127_20
  2616  011D                     i1l1547:	
  2617                           
  2618                           ;main.c: 529:        send_string(secondStr);
  2619  011D  3024               	movlw	(low (print_Countdown@secondStr| 0))& (0+255)
  2620  011E  120A  118A  25E9  120A  118A  	fcall	_send_string
  2621  0123                     i1l1549:	
  2622                           
  2623                           ;main.c: 531:     if(statoSem==1)
  2624  0123  037B               	decf	print_Countdown@statoSem,w
  2625  0124  1D03               	btfss	3,2
  2626  0125  2927               	goto	u128_21
  2627  0126  2928               	goto	u128_20
  2628  0127                     u128_21:	
  2629  0127  2946               	goto	i1l1555
  2630  0128                     u128_20:	
  2631  0128                     i1l1551:	
  2632                           
  2633                           ;main.c: 532:     {;main.c: 533:        char secondStr[17] = "Sem 0:    Giallo";
  2634  0128  3035               	movlw	print_Countdown@secondStr_400& (0+255)
  2635  0129  0084               	movwf	4
  2636  012A  30A1               	movlw	low print_Countdown@F931
  2637  012B  1283               	bcf	3,5	;RP0=0, select bank0
  2638  012C  1303               	bcf	3,6	;RP1=0, select bank0
  2639  012D  00A0               	movwf	??_print_Countdown
  2640  012E  0804               	movf	4,w
  2641  012F  00A1               	movwf	??_print_Countdown+1
  2642  0130  3011               	movlw	17
  2643  0131  00A2               	movwf	??_print_Countdown+2
  2644  0132                     u129_20:	
  2645  0132  0820               	movf	??_print_Countdown,w
  2646  0133  0084               	movwf	4
  2647  0134  1783               	bsf	3,7	;select IRP bank3
  2648  0135  0800               	movf	0,w
  2649  0136  00A3               	movwf	??_print_Countdown+3
  2650  0137  0AA0               	incf	??_print_Countdown,f
  2651  0138  0821               	movf	??_print_Countdown+1,w
  2652  0139  0084               	movwf	4
  2653  013A  1383               	bcf	3,7	;select IRP bank0
  2654  013B  0823               	movf	??_print_Countdown+3,w
  2655  013C  0080               	movwf	0
  2656  013D  0AA1               	incf	??_print_Countdown+1,f
  2657  013E  0BA2               	decfsz	??_print_Countdown+2,f
  2658  013F  2932               	goto	u129_20
  2659  0140                     i1l1553:	
  2660                           
  2661                           ;main.c: 534:        send_string(secondStr);
  2662  0140  3035               	movlw	(low (print_Countdown@secondStr_400| 0))& (0+255)
  2663  0141  120A  118A  25E9  120A  118A  	fcall	_send_string
  2664  0146                     i1l1555:	
  2665                           
  2666                           ;main.c: 536:     if(statoSem==2)
  2667  0146  3002               	movlw	2
  2668  0147  067B               	xorwf	print_Countdown@statoSem,w
  2669  0148  1D03               	btfss	3,2
  2670  0149  294B               	goto	u130_21
  2671  014A  294C               	goto	u130_20
  2672  014B                     u130_21:	
  2673  014B  296A               	goto	i1l1561
  2674  014C                     u130_20:	
  2675  014C                     i1l1557:	
  2676                           
  2677                           ;main.c: 537:     {;main.c: 538:        char secondStr[17] = "Sem 0:     Rosso";
  2678  014C  3046               	movlw	print_Countdown@secondStr_402& (0+255)
  2679  014D  0084               	movwf	4
  2680  014E  3090               	movlw	low print_Countdown@F933
  2681  014F  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0150  1303               	bcf	3,6	;RP1=0, select bank0
  2683  0151  00A0               	movwf	??_print_Countdown
  2684  0152  0804               	movf	4,w
  2685  0153  00A1               	movwf	??_print_Countdown+1
  2686  0154  3011               	movlw	17
  2687  0155  00A2               	movwf	??_print_Countdown+2
  2688  0156                     u131_20:	
  2689  0156  0820               	movf	??_print_Countdown,w
  2690  0157  0084               	movwf	4
  2691  0158  1783               	bsf	3,7	;select IRP bank3
  2692  0159  0800               	movf	0,w
  2693  015A  00A3               	movwf	??_print_Countdown+3
  2694  015B  0AA0               	incf	??_print_Countdown,f
  2695  015C  0821               	movf	??_print_Countdown+1,w
  2696  015D  0084               	movwf	4
  2697  015E  1383               	bcf	3,7	;select IRP bank0
  2698  015F  0823               	movf	??_print_Countdown+3,w
  2699  0160  0080               	movwf	0
  2700  0161  0AA1               	incf	??_print_Countdown+1,f
  2701  0162  0BA2               	decfsz	??_print_Countdown+2,f
  2702  0163  2956               	goto	u131_20
  2703  0164                     i1l1559:	
  2704                           
  2705                           ;main.c: 539:        send_string(secondStr);
  2706  0164  3046               	movlw	(low (print_Countdown@secondStr_402| 0))& (0+255)
  2707  0165  120A  118A  25E9  120A  118A  	fcall	_send_string
  2708  016A                     i1l1561:	
  2709                           
  2710                           ;main.c: 543:     _delay((unsigned long)((100)*(32000000L/4000.0)));
  2711  016A  3005               	movlw	5
  2712  016B  1283               	bcf	3,5	;RP0=0, select bank0
  2713  016C  1303               	bcf	3,6	;RP1=0, select bank0
  2714  016D  00A2               	movwf	??_print_Countdown+2
  2715  016E  300F               	movlw	15
  2716  016F  00A1               	movwf	??_print_Countdown+1
  2717  0170  30F0               	movlw	240
  2718  0171  00A0               	movwf	??_print_Countdown
  2719  0172                     u179_27:	
  2720  0172  0BA0               	decfsz	??_print_Countdown,f
  2721  0173  2972               	goto	u179_27
  2722  0174  0BA1               	decfsz	??_print_Countdown+1,f
  2723  0175  2972               	goto	u179_27
  2724  0176  0BA2               	decfsz	??_print_Countdown+2,f
  2725  0177  2972               	goto	u179_27
  2726  0178  0000               	nop
  2727                           
  2728                           ;main.c: 545:     send_cmd(0x80);
  2729  0179  3080               	movlw	128
  2730  017A  120A  118A  260A  120A  118A  	fcall	i1_send_cmd
  2731  017F                     i1l1563:	
  2732                           
  2733                           ;main.c: 546:     send_string(firstStr);
  2734  017F  3057               	movlw	(low (print_Countdown@firstStr| 0))& (0+255)
  2735  0180  120A  118A  25E9  120A  118A  	fcall	_send_string
  2736  0185                     i1l225:	
  2737  0185  0008               	return
  2738  0186                     __end_of_print_Countdown:	
  2739                           
  2740                           	psect	text8
  2741  060A                     __ptext8:	
  2742 ;; *************** function i1_send_cmd *****************
  2743 ;; Defined at:
  2744 ;;		line 576 in file "main.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;  command         1    wreg     unsigned char 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  command         1    2[COMMON] unsigned char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2758 ;;      Params:         0       0       0       0       0
  2759 ;;      Locals:         1       0       0       0       0
  2760 ;;      Temps:          2       0       0       0       0
  2761 ;;      Totals:         3       0       0       0       0
  2762 ;;Total ram usage:        3 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; This function calls:
  2765 ;;		Nothing
  2766 ;; This function is called by:
  2767 ;;		_print_Countdown
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           
  2772                           ;psect for function i1_send_cmd
  2773  060A                     i1_send_cmd:	
  2774                           
  2775                           ;incstack = 0
  2776                           ; Regs used in i1_send_cmd: [wreg]
  2777                           ;i1send_cmd@command stored from wreg
  2778  060A  00F2               	movwf	i1send_cmd@command
  2779  060B                     i1l1455:	
  2780                           
  2781                           ;main.c: 576: void send_cmd(char command);main.c: 577: {;main.c: 578:     PORTEbits.RE1 
      +                          = 1;
  2782  060B  1283               	bcf	3,5	;RP0=0, select bank0
  2783  060C  1303               	bcf	3,6	;RP1=0, select bank0
  2784  060D  1489               	bsf	9,1	;volatile
  2785  060E                     i1l1457:	
  2786                           
  2787                           ;main.c: 579:     PORTD = command;
  2788  060E  0872               	movf	i1send_cmd@command,w
  2789  060F  0088               	movwf	8	;volatile
  2790  0610                     i1l1459:	
  2791                           
  2792                           ;main.c: 580:     PORTEbits.RE2 = 0;
  2793  0610  1109               	bcf	9,2	;volatile
  2794                           
  2795                           ;main.c: 581:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  2796  0611  3020               	movlw	32
  2797  0612  00F1               	movwf	??i1_send_cmd+1
  2798  0613  3029               	movlw	41
  2799  0614  00F0               	movwf	??i1_send_cmd
  2800  0615                     u180_27:	
  2801  0615  0BF0               	decfsz	??i1_send_cmd,f
  2802  0616  2E15               	goto	u180_27
  2803  0617  0BF1               	decfsz	??i1_send_cmd+1,f
  2804  0618  2E15               	goto	u180_27
  2805  0619  2E1A               	nop2
  2806  061A                     i1l1461:	
  2807                           
  2808                           ;main.c: 582:     PORTEbits.RE1 = 0;
  2809  061A  1283               	bcf	3,5	;RP0=0, select bank0
  2810  061B  1303               	bcf	3,6	;RP1=0, select bank0
  2811  061C  1089               	bcf	9,1	;volatile
  2812                           
  2813                           ;main.c: 583:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  2814  061D  3020               	movlw	32
  2815  061E  00F1               	movwf	??i1_send_cmd+1
  2816  061F  3029               	movlw	41
  2817  0620  00F0               	movwf	??i1_send_cmd
  2818  0621                     u181_27:	
  2819  0621  0BF0               	decfsz	??i1_send_cmd,f
  2820  0622  2E21               	goto	u181_27
  2821  0623  0BF1               	decfsz	??i1_send_cmd+1,f
  2822  0624  2E21               	goto	u181_27
  2823  0625  2E26               	nop2
  2824  0626                     i1l1463:	
  2825                           
  2826                           ;main.c: 584:     PORTEbits.RE1 = 1;
  2827  0626  1283               	bcf	3,5	;RP0=0, select bank0
  2828  0627  1303               	bcf	3,6	;RP1=0, select bank0
  2829  0628  1489               	bsf	9,1	;volatile
  2830  0629                     i1l237:	
  2831  0629  0008               	return
  2832  062A                     __end_ofi1_send_cmd:	
  2833                           
  2834                           	psect	text9
  2835  05E9                     __ptext9:	
  2836 ;; *************** function _send_string *****************
  2837 ;; Defined at:
  2838 ;;		line 553 in file "main.c"
  2839 ;; Parameters:    Size  Location     Type
  2840 ;;  str             1    wreg     PTR unsigned char 
  2841 ;;		 -> print_Countdown@secondStr_402(17), print_Countdown@secondStr_400(17), print_Countdown@secondStr(17), print_Count
      +down@firstStr(17), 
  2842 ;; Auto vars:     Size  Location     Type
  2843 ;;  str             1    6[COMMON] PTR unsigned char 
  2844 ;;		 -> print_Countdown@secondStr_402(17), print_Countdown@secondStr_400(17), print_Countdown@secondStr(17), print_Count
      +down@firstStr(17), 
  2845 ;;  i               2    4[COMMON] int 
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      void 
  2848 ;; Registers used:
  2849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2855 ;;      Params:         0       0       0       0       0
  2856 ;;      Locals:         3       0       0       0       0
  2857 ;;      Temps:          1       0       0       0       0
  2858 ;;      Totals:         4       0       0       0       0
  2859 ;;Total ram usage:        4 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    1
  2862 ;; This function calls:
  2863 ;;		_send_data
  2864 ;; This function is called by:
  2865 ;;		_print_Countdown
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           
  2870                           ;psect for function _send_string
  2871  05E9                     _send_string:	
  2872                           
  2873                           ;incstack = 0
  2874                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2875                           ;send_string@str stored from wreg
  2876  05E9  00F6               	movwf	send_string@str
  2877  05EA                     i1l1325:	
  2878                           
  2879                           ;main.c: 553: void send_string(char *str);main.c: 554: {;main.c: 555:     int i = 0;
  2880  05EA  01F4               	clrf	send_string@i
  2881  05EB  01F5               	clrf	send_string@i+1
  2882                           
  2883                           ;main.c: 556:     while(str[i] != '\0')
  2884  05EC  2DFE               	goto	i1l1331
  2885  05ED                     i1l1327:	
  2886                           
  2887                           ;main.c: 557:     {;main.c: 558:         send_data(str[i]);
  2888  05ED  0874               	movf	send_string@i,w
  2889  05EE  0776               	addwf	send_string@str,w
  2890  05EF  00F3               	movwf	??_send_string
  2891  05F0  0873               	movf	??_send_string,w
  2892  05F1  0084               	movwf	4
  2893  05F2  0800               	movf	0,w
  2894  05F3  120A  118A  262A  120A  118A  	fcall	_send_data
  2895  05F8                     i1l1329:	
  2896                           
  2897                           ;main.c: 559:         i++;
  2898  05F8  3001               	movlw	1
  2899  05F9  07F4               	addwf	send_string@i,f
  2900  05FA  1803               	skipnc
  2901  05FB  0AF5               	incf	send_string@i+1,f
  2902  05FC  3000               	movlw	0
  2903  05FD  07F5               	addwf	send_string@i+1,f
  2904  05FE                     i1l1331:	
  2905                           
  2906                           ;main.c: 556:     while(str[i] != '\0')
  2907  05FE  0874               	movf	send_string@i,w
  2908  05FF  0776               	addwf	send_string@str,w
  2909  0600  00F3               	movwf	??_send_string
  2910  0601  0873               	movf	??_send_string,w
  2911  0602  0084               	movwf	4
  2912  0603  1383               	bcf	3,7	;select IRP bank0
  2913  0604  0800               	movf	0,w
  2914  0605  1D03               	btfss	3,2
  2915  0606  2E08               	goto	u89_21
  2916  0607  2E09               	goto	u89_20
  2917  0608                     u89_21:	
  2918  0608  2DED               	goto	i1l1327
  2919  0609                     u89_20:	
  2920  0609                     i1l231:	
  2921  0609  0008               	return
  2922  060A                     __end_of_send_string:	
  2923                           
  2924                           	psect	text10
  2925  062A                     __ptext10:	
  2926 ;; *************** function _send_data *****************
  2927 ;; Defined at:
  2928 ;;		line 564 in file "main.c"
  2929 ;; Parameters:    Size  Location     Type
  2930 ;;  data            1    wreg     unsigned char 
  2931 ;; Auto vars:     Size  Location     Type
  2932 ;;  data            1    2[COMMON] unsigned char 
  2933 ;; Return value:  Size  Location     Type
  2934 ;;                  1    wreg      void 
  2935 ;; Registers used:
  2936 ;;		wreg
  2937 ;; Tracked objects:
  2938 ;;		On entry : 0/0
  2939 ;;		On exit  : 0/0
  2940 ;;		Unchanged: 0/0
  2941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2942 ;;      Params:         0       0       0       0       0
  2943 ;;      Locals:         1       0       0       0       0
  2944 ;;      Temps:          2       0       0       0       0
  2945 ;;      Totals:         3       0       0       0       0
  2946 ;;Total ram usage:        3 bytes
  2947 ;; Hardware stack levels used:    1
  2948 ;; This function calls:
  2949 ;;		Nothing
  2950 ;; This function is called by:
  2951 ;;		_send_string
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955                           
  2956                           ;psect for function _send_data
  2957  062A                     _send_data:	
  2958                           
  2959                           ;incstack = 0
  2960                           ; Regs used in _send_data: [wreg]
  2961                           ;send_data@data stored from wreg
  2962  062A  00F2               	movwf	send_data@data
  2963  062B                     i1l1305:	
  2964                           
  2965                           ;main.c: 564: void send_data(char data);main.c: 565: {;main.c: 566:     PORTEbits.RE1 = 
      +                          1;
  2966  062B  1283               	bcf	3,5	;RP0=0, select bank0
  2967  062C  1303               	bcf	3,6	;RP1=0, select bank0
  2968  062D  1489               	bsf	9,1	;volatile
  2969  062E                     i1l1307:	
  2970                           
  2971                           ;main.c: 567:     PORTD = data;
  2972  062E  0872               	movf	send_data@data,w
  2973  062F  0088               	movwf	8	;volatile
  2974  0630                     i1l1309:	
  2975                           
  2976                           ;main.c: 568:     PORTEbits.RE2 = 1;
  2977  0630  1509               	bsf	9,2	;volatile
  2978                           
  2979                           ;main.c: 569:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  2980  0631  3020               	movlw	32
  2981  0632  00F1               	movwf	??_send_data+1
  2982  0633  3029               	movlw	41
  2983  0634  00F0               	movwf	??_send_data
  2984  0635                     u182_27:	
  2985  0635  0BF0               	decfsz	??_send_data,f
  2986  0636  2E35               	goto	u182_27
  2987  0637  0BF1               	decfsz	??_send_data+1,f
  2988  0638  2E35               	goto	u182_27
  2989  0639  2E3A               	nop2
  2990  063A                     i1l1311:	
  2991                           
  2992                           ;main.c: 570:     PORTEbits.RE1 = 0;
  2993  063A  1283               	bcf	3,5	;RP0=0, select bank0
  2994  063B  1303               	bcf	3,6	;RP1=0, select bank0
  2995  063C  1089               	bcf	9,1	;volatile
  2996                           
  2997                           ;main.c: 571:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  2998  063D  3020               	movlw	32
  2999  063E  00F1               	movwf	??_send_data+1
  3000  063F  3029               	movlw	41
  3001  0640  00F0               	movwf	??_send_data
  3002  0641                     u183_27:	
  3003  0641  0BF0               	decfsz	??_send_data,f
  3004  0642  2E41               	goto	u183_27
  3005  0643  0BF1               	decfsz	??_send_data+1,f
  3006  0644  2E41               	goto	u183_27
  3007  0645  2E46               	nop2
  3008  0646                     i1l1313:	
  3009                           
  3010                           ;main.c: 572:     PORTEbits.RE1 = 1;
  3011  0646  1283               	bcf	3,5	;RP0=0, select bank0
  3012  0647  1303               	bcf	3,6	;RP1=0, select bank0
  3013  0648  1489               	bsf	9,1	;volatile
  3014  0649                     i1l234:	
  3015  0649  0008               	return
  3016  064A                     __end_of_send_data:	
  3017                           
  3018                           	psect	text11
  3019  0493                     __ptext11:	
  3020 ;; *************** function ___awmod *****************
  3021 ;; Defined at:
  3022 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;  divisor         2    0[COMMON] int 
  3025 ;;  dividend        2    2[COMMON] int 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;  sign            1    6[COMMON] unsigned char 
  3028 ;;  counter         1    5[COMMON] unsigned char 
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  2    0[COMMON] int 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3038 ;;      Params:         4       0       0       0       0
  3039 ;;      Locals:         2       0       0       0       0
  3040 ;;      Temps:          1       0       0       0       0
  3041 ;;      Totals:         7       0       0       0       0
  3042 ;;Total ram usage:        7 bytes
  3043 ;; Hardware stack levels used:    1
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		_print_Countdown
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           
  3052                           ;psect for function ___awmod
  3053  0493                     ___awmod:	
  3054  0493                     i1l1417:	
  3055                           ;incstack = 0
  3056                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3057                           
  3058  0493  01F6               	clrf	___awmod@sign
  3059  0494                     i1l1419:	
  3060  0494  1FF3               	btfss	___awmod@dividend+1,7
  3061  0495  2C97               	goto	u110_21
  3062  0496  2C98               	goto	u110_20
  3063  0497                     u110_21:	
  3064  0497  2C9F               	goto	i1l1425
  3065  0498                     u110_20:	
  3066  0498                     i1l1421:	
  3067  0498  09F2               	comf	___awmod@dividend,f
  3068  0499  09F3               	comf	___awmod@dividend+1,f
  3069  049A  0AF2               	incf	___awmod@dividend,f
  3070  049B  1903               	skipnz
  3071  049C  0AF3               	incf	___awmod@dividend+1,f
  3072  049D                     i1l1423:	
  3073  049D  01F6               	clrf	___awmod@sign
  3074  049E  0AF6               	incf	___awmod@sign,f
  3075  049F                     i1l1425:	
  3076  049F  1FF1               	btfss	___awmod@divisor+1,7
  3077  04A0  2CA2               	goto	u111_21
  3078  04A1  2CA3               	goto	u111_20
  3079  04A2                     u111_21:	
  3080  04A2  2CA8               	goto	i1l1429
  3081  04A3                     u111_20:	
  3082  04A3                     i1l1427:	
  3083  04A3  09F0               	comf	___awmod@divisor,f
  3084  04A4  09F1               	comf	___awmod@divisor+1,f
  3085  04A5  0AF0               	incf	___awmod@divisor,f
  3086  04A6  1903               	skipnz
  3087  04A7  0AF1               	incf	___awmod@divisor+1,f
  3088  04A8                     i1l1429:	
  3089  04A8  0870               	movf	___awmod@divisor,w
  3090  04A9  0471               	iorwf	___awmod@divisor+1,w
  3091  04AA  1903               	btfsc	3,2
  3092  04AB  2CAD               	goto	u112_21
  3093  04AC  2CAE               	goto	u112_20
  3094  04AD                     u112_21:	
  3095  04AD  2CDD               	goto	i1l1447
  3096  04AE                     u112_20:	
  3097  04AE                     i1l1431:	
  3098  04AE  01F5               	clrf	___awmod@counter
  3099  04AF  0AF5               	incf	___awmod@counter,f
  3100  04B0  2CBC               	goto	i1l1437
  3101  04B1                     i1l1433:	
  3102  04B1  3001               	movlw	1
  3103  04B2                     u113_25:	
  3104  04B2  1003               	clrc
  3105  04B3  0DF0               	rlf	___awmod@divisor,f
  3106  04B4  0DF1               	rlf	___awmod@divisor+1,f
  3107  04B5  3EFF               	addlw	-1
  3108  04B6  1D03               	skipz
  3109  04B7  2CB2               	goto	u113_25
  3110  04B8                     i1l1435:	
  3111  04B8  3001               	movlw	1
  3112  04B9  00F4               	movwf	??___awmod
  3113  04BA  0874               	movf	??___awmod,w
  3114  04BB  07F5               	addwf	___awmod@counter,f
  3115  04BC                     i1l1437:	
  3116  04BC  1FF1               	btfss	___awmod@divisor+1,7
  3117  04BD  2CBF               	goto	u114_21
  3118  04BE  2CC0               	goto	u114_20
  3119  04BF                     u114_21:	
  3120  04BF  2CB1               	goto	i1l1433
  3121  04C0                     u114_20:	
  3122  04C0                     i1l1439:	
  3123  04C0  0871               	movf	___awmod@divisor+1,w
  3124  04C1  0273               	subwf	___awmod@dividend+1,w
  3125  04C2  1D03               	skipz
  3126  04C3  2CC6               	goto	u115_25
  3127  04C4  0870               	movf	___awmod@divisor,w
  3128  04C5  0272               	subwf	___awmod@dividend,w
  3129  04C6                     u115_25:	
  3130  04C6  1C03               	skipc
  3131  04C7  2CC9               	goto	u115_21
  3132  04C8  2CCA               	goto	u115_20
  3133  04C9                     u115_21:	
  3134  04C9  2CD0               	goto	i1l1443
  3135  04CA                     u115_20:	
  3136  04CA                     i1l1441:	
  3137  04CA  0870               	movf	___awmod@divisor,w
  3138  04CB  02F2               	subwf	___awmod@dividend,f
  3139  04CC  0871               	movf	___awmod@divisor+1,w
  3140  04CD  1C03               	skipc
  3141  04CE  03F3               	decf	___awmod@dividend+1,f
  3142  04CF  02F3               	subwf	___awmod@dividend+1,f
  3143  04D0                     i1l1443:	
  3144  04D0  3001               	movlw	1
  3145  04D1                     u116_25:	
  3146  04D1  1003               	clrc
  3147  04D2  0CF1               	rrf	___awmod@divisor+1,f
  3148  04D3  0CF0               	rrf	___awmod@divisor,f
  3149  04D4  3EFF               	addlw	-1
  3150  04D5  1D03               	skipz
  3151  04D6  2CD1               	goto	u116_25
  3152  04D7                     i1l1445:	
  3153  04D7  3001               	movlw	1
  3154  04D8  02F5               	subwf	___awmod@counter,f
  3155  04D9  1D03               	btfss	3,2
  3156  04DA  2CDC               	goto	u117_21
  3157  04DB  2CDD               	goto	u117_20
  3158  04DC                     u117_21:	
  3159  04DC  2CC0               	goto	i1l1439
  3160  04DD                     u117_20:	
  3161  04DD                     i1l1447:	
  3162  04DD  0876               	movf	___awmod@sign,w
  3163  04DE  1903               	btfsc	3,2
  3164  04DF  2CE1               	goto	u118_21
  3165  04E0  2CE2               	goto	u118_20
  3166  04E1                     u118_21:	
  3167  04E1  2CE7               	goto	i1l1451
  3168  04E2                     u118_20:	
  3169  04E2                     i1l1449:	
  3170  04E2  09F2               	comf	___awmod@dividend,f
  3171  04E3  09F3               	comf	___awmod@dividend+1,f
  3172  04E4  0AF2               	incf	___awmod@dividend,f
  3173  04E5  1903               	skipnz
  3174  04E6  0AF3               	incf	___awmod@dividend+1,f
  3175  04E7                     i1l1451:	
  3176  04E7  0873               	movf	___awmod@dividend+1,w
  3177  04E8  00F1               	movwf	?___awmod+1
  3178  04E9  0872               	movf	___awmod@dividend,w
  3179  04EA  00F0               	movwf	?___awmod
  3180  04EB                     i1l501:	
  3181  04EB  0008               	return
  3182  04EC                     __end_of___awmod:	
  3183                           
  3184                           	psect	text12
  3185  042C                     __ptext12:	
  3186 ;; *************** function ___awdiv *****************
  3187 ;; Defined at:
  3188 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3189 ;; Parameters:    Size  Location     Type
  3190 ;;  divisor         2    0[COMMON] int 
  3191 ;;  dividend        2    2[COMMON] int 
  3192 ;; Auto vars:     Size  Location     Type
  3193 ;;  quotient        2    7[COMMON] int 
  3194 ;;  sign            1    6[COMMON] unsigned char 
  3195 ;;  counter         1    5[COMMON] unsigned char 
  3196 ;; Return value:  Size  Location     Type
  3197 ;;                  2    0[COMMON] int 
  3198 ;; Registers used:
  3199 ;;		wreg, status,2, status,0
  3200 ;; Tracked objects:
  3201 ;;		On entry : 0/0
  3202 ;;		On exit  : 0/0
  3203 ;;		Unchanged: 0/0
  3204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3205 ;;      Params:         4       0       0       0       0
  3206 ;;      Locals:         4       0       0       0       0
  3207 ;;      Temps:          1       0       0       0       0
  3208 ;;      Totals:         9       0       0       0       0
  3209 ;;Total ram usage:        9 bytes
  3210 ;; Hardware stack levels used:    1
  3211 ;; This function calls:
  3212 ;;		Nothing
  3213 ;; This function is called by:
  3214 ;;		_print_Countdown
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           
  3218                           
  3219                           ;psect for function ___awdiv
  3220  042C                     ___awdiv:	
  3221  042C                     i1l1373:	
  3222                           ;incstack = 0
  3223                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3224                           
  3225  042C  01F6               	clrf	___awdiv@sign
  3226  042D                     i1l1375:	
  3227  042D  1FF1               	btfss	___awdiv@divisor+1,7
  3228  042E  2C30               	goto	u100_21
  3229  042F  2C31               	goto	u100_20
  3230  0430                     u100_21:	
  3231  0430  2C38               	goto	i1l1381
  3232  0431                     u100_20:	
  3233  0431                     i1l1377:	
  3234  0431  09F0               	comf	___awdiv@divisor,f
  3235  0432  09F1               	comf	___awdiv@divisor+1,f
  3236  0433  0AF0               	incf	___awdiv@divisor,f
  3237  0434  1903               	skipnz
  3238  0435  0AF1               	incf	___awdiv@divisor+1,f
  3239  0436                     i1l1379:	
  3240  0436  01F6               	clrf	___awdiv@sign
  3241  0437  0AF6               	incf	___awdiv@sign,f
  3242  0438                     i1l1381:	
  3243  0438  1FF3               	btfss	___awdiv@dividend+1,7
  3244  0439  2C3B               	goto	u101_21
  3245  043A  2C3C               	goto	u101_20
  3246  043B                     u101_21:	
  3247  043B  2C45               	goto	i1l1387
  3248  043C                     u101_20:	
  3249  043C                     i1l1383:	
  3250  043C  09F2               	comf	___awdiv@dividend,f
  3251  043D  09F3               	comf	___awdiv@dividend+1,f
  3252  043E  0AF2               	incf	___awdiv@dividend,f
  3253  043F  1903               	skipnz
  3254  0440  0AF3               	incf	___awdiv@dividend+1,f
  3255  0441                     i1l1385:	
  3256  0441  3001               	movlw	1
  3257  0442  00F4               	movwf	??___awdiv
  3258  0443  0874               	movf	??___awdiv,w
  3259  0444  06F6               	xorwf	___awdiv@sign,f
  3260  0445                     i1l1387:	
  3261  0445  01F7               	clrf	___awdiv@quotient
  3262  0446  01F8               	clrf	___awdiv@quotient+1
  3263  0447                     i1l1389:	
  3264  0447  0870               	movf	___awdiv@divisor,w
  3265  0448  0471               	iorwf	___awdiv@divisor+1,w
  3266  0449  1903               	btfsc	3,2
  3267  044A  2C4C               	goto	u102_21
  3268  044B  2C4D               	goto	u102_20
  3269  044C                     u102_21:	
  3270  044C  2C84               	goto	i1l1409
  3271  044D                     u102_20:	
  3272  044D                     i1l1391:	
  3273  044D  01F5               	clrf	___awdiv@counter
  3274  044E  0AF5               	incf	___awdiv@counter,f
  3275  044F  2C5B               	goto	i1l1397
  3276  0450                     i1l1393:	
  3277  0450  3001               	movlw	1
  3278  0451                     u103_25:	
  3279  0451  1003               	clrc
  3280  0452  0DF0               	rlf	___awdiv@divisor,f
  3281  0453  0DF1               	rlf	___awdiv@divisor+1,f
  3282  0454  3EFF               	addlw	-1
  3283  0455  1D03               	skipz
  3284  0456  2C51               	goto	u103_25
  3285  0457                     i1l1395:	
  3286  0457  3001               	movlw	1
  3287  0458  00F4               	movwf	??___awdiv
  3288  0459  0874               	movf	??___awdiv,w
  3289  045A  07F5               	addwf	___awdiv@counter,f
  3290  045B                     i1l1397:	
  3291  045B  1FF1               	btfss	___awdiv@divisor+1,7
  3292  045C  2C5E               	goto	u104_21
  3293  045D  2C5F               	goto	u104_20
  3294  045E                     u104_21:	
  3295  045E  2C50               	goto	i1l1393
  3296  045F                     u104_20:	
  3297  045F                     i1l1399:	
  3298  045F  3001               	movlw	1
  3299  0460                     u105_25:	
  3300  0460  1003               	clrc
  3301  0461  0DF7               	rlf	___awdiv@quotient,f
  3302  0462  0DF8               	rlf	___awdiv@quotient+1,f
  3303  0463  3EFF               	addlw	-1
  3304  0464  1D03               	skipz
  3305  0465  2C60               	goto	u105_25
  3306  0466  0871               	movf	___awdiv@divisor+1,w
  3307  0467  0273               	subwf	___awdiv@dividend+1,w
  3308  0468  1D03               	skipz
  3309  0469  2C6C               	goto	u106_25
  3310  046A  0870               	movf	___awdiv@divisor,w
  3311  046B  0272               	subwf	___awdiv@dividend,w
  3312  046C                     u106_25:	
  3313  046C  1C03               	skipc
  3314  046D  2C6F               	goto	u106_21
  3315  046E  2C70               	goto	u106_20
  3316  046F                     u106_21:	
  3317  046F  2C77               	goto	i1l1405
  3318  0470                     u106_20:	
  3319  0470                     i1l1401:	
  3320  0470  0870               	movf	___awdiv@divisor,w
  3321  0471  02F2               	subwf	___awdiv@dividend,f
  3322  0472  0871               	movf	___awdiv@divisor+1,w
  3323  0473  1C03               	skipc
  3324  0474  03F3               	decf	___awdiv@dividend+1,f
  3325  0475  02F3               	subwf	___awdiv@dividend+1,f
  3326  0476                     i1l1403:	
  3327  0476  1477               	bsf	___awdiv@quotient,0
  3328  0477                     i1l1405:	
  3329  0477  3001               	movlw	1
  3330  0478                     u107_25:	
  3331  0478  1003               	clrc
  3332  0479  0CF1               	rrf	___awdiv@divisor+1,f
  3333  047A  0CF0               	rrf	___awdiv@divisor,f
  3334  047B  3EFF               	addlw	-1
  3335  047C  1D03               	skipz
  3336  047D  2C78               	goto	u107_25
  3337  047E                     i1l1407:	
  3338  047E  3001               	movlw	1
  3339  047F  02F5               	subwf	___awdiv@counter,f
  3340  0480  1D03               	btfss	3,2
  3341  0481  2C83               	goto	u108_21
  3342  0482  2C84               	goto	u108_20
  3343  0483                     u108_21:	
  3344  0483  2C5F               	goto	i1l1399
  3345  0484                     u108_20:	
  3346  0484                     i1l1409:	
  3347  0484  0876               	movf	___awdiv@sign,w
  3348  0485  1903               	btfsc	3,2
  3349  0486  2C88               	goto	u109_21
  3350  0487  2C89               	goto	u109_20
  3351  0488                     u109_21:	
  3352  0488  2C8E               	goto	i1l1413
  3353  0489                     u109_20:	
  3354  0489                     i1l1411:	
  3355  0489  09F7               	comf	___awdiv@quotient,f
  3356  048A  09F8               	comf	___awdiv@quotient+1,f
  3357  048B  0AF7               	incf	___awdiv@quotient,f
  3358  048C  1903               	skipnz
  3359  048D  0AF8               	incf	___awdiv@quotient+1,f
  3360  048E                     i1l1413:	
  3361  048E  0878               	movf	___awdiv@quotient+1,w
  3362  048F  00F1               	movwf	?___awdiv+1
  3363  0490  0877               	movf	___awdiv@quotient,w
  3364  0491  00F0               	movwf	?___awdiv
  3365  0492                     i1l488:	
  3366  0492  0008               	return
  3367  0493                     __end_of___awdiv:	
  3368  007E                     btemp	set	126	;btemp
  3369  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        75
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     79      80
    BANK1            80     34      68
    BANK3            96      0      68
    BANK2            96      0       0

Pointer List with Targets:

    send_string@str	PTR unsigned char  size(1) Largest target is 17
		 -> print_Countdown@secondStr_402(BANK0[17]), print_Countdown@secondStr_400(BANK0[17]), print_Countdown@secondStr(BANK0[17]), print_Countdown@firstStr(BANK0[17]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_print_Countdown
    _print_Countdown->___awdiv
    _send_string->_send_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_print_Countdown

Critical Paths under _main in BANK1

    _main->_UART_init
    _init_lcd->_send_cmd
    _UART_init->___aldiv

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     863
                                             28 BANK1      6     6      0
                          _UART_init
                            _initPic
                           _init_lcd
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             2     2      0      22
                                             10 BANK1      2     2      0
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _send_cmd                                             3     3      0      22
                                              7 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initPic                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            6     4      2     550
                                             22 BANK1      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              7 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  7     7      0    2110
                                              0 BANK1      7     7      0
                    _print_Countdown
 ---------------------------------------------------------------------------------
 (4) _print_Countdown                                     82    79      3    2110
                                              9 COMMON     3     0      3
                                              0 BANK0     79    79      0
                            ___awdiv
                            ___awmod
                        _send_string
                         i1_send_cmd
 ---------------------------------------------------------------------------------
 (5) i1_send_cmd                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) _send_string                                          4     4      0     244
                                              3 COMMON     4     4      0
                          _send_data
 ---------------------------------------------------------------------------------
 (6) _send_data                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
   _initPic
   _init_lcd
     _send_cmd
   _send_cmd

 _ISR (ROOT)
   _print_Countdown
     ___awdiv
     ___awmod
     _send_string
       _send_data
     i1_send_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      44       9       70.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      44       7       85.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E6      12        0.0%
ABS                  0      0      E6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jul 16 11:58:05 2020

                           _f 00C6                             pc 0002                   __CFG_CP$OFF 0000  
                ___awdiv@sign 0076                            fsr 0004  print_Countdown@secondStr_400 0035  
print_Countdown@secondStr_402 0046                   __CFG_LVP$ON 0000                           l400 03A3  
                         l240 0542                           l410 042B                           l243 05C0  
                         l139 036B                           l237 05E8                           l191 066B  
                __CFG_CPD$OFF 0000                           _ISR 0186                           u900 0396  
                         u901 0395                           u910 03A7                           u911 03A6  
                         u920 03C6                           u921 03C5                           u940 03DA  
                         u941 03D9                           u935 03CB                           u960 03F5  
                         u961 03F4                           u955 03DC                           u980 0413  
                         u981 0412                           u965 03F1                           u990 0418  
                         u991 0417                           u975 0405                           fsr0 0004  
                         indf 0000                  ___awmod@sign 0076                  __CFG_FOSC$HS 0000  
                        ?_ISR 0070                          l1321 05D8                          l1323 05E5  
                        l1315 05C4                          l1341 03B2                          l1333 038F  
                        l1317 05C7                          l1501 0536                          l1351 03D6  
                        l1343 03B6                          l1335 0392                          l1319 05CD  
                        l1503 053C                          l1361 0404                          l1353 03DA  
                        l1345 03BE                          l1337 0396                          l1363 040D  
                        l1355 03E3                          l1347 03C6                          l1339 03A7  
                        l1611 0321                          l1357 03F5                          l1349 03C9  
                        l1365 0413                          l1621 033D                          l1613 0324  
                        l1605 0309                          l1367 0418                          l1359 0403  
                        l1471 0587                          l1631 035C                          l1623 0346  
                        l1615 032B                          l1607 030E                          l1369 0423  
                        l1473 058F                          l1465 065D                          l1481 04EC  
                        l1633 035F                          l1625 0349                          l1617 0330  
                        l1609 0318                          l1641 0377                          l1475 05BD  
                        l1467 0660                          l1491 0513                          l1483 04F0  
                        l1643 037C                          l1635 0366                          l1627 0350  
                        l1619 0337                          l1571 02C7                          l1477 05BE  
                        l1469 0662                          l1493 051E                          l1485 04FA  
                        l1645 037D                          l1629 0356                          l1637 036D  
                        l1581 02E9                          l1573 02CB                          l1565 02A2  
                        l1479 05BF                          l1495 0524                          l1487 04FD  
                        l1647 0382                          l1639 0371                          l1591 02F8  
                        l1583 02ED                          l1575 02CF                          l1567 02BD  
                        l1497 052A                          l1489 0503                          l1649 038A  
                        l1593 02FD                          l1585 02EE                          l1577 02DE  
                        l1569 02C3                          l1499 0530                          l1595 0301  
                        l1587 02F3                          l1579 02E4                          l1597 0302  
                        l1589 02F7                          l1599 0307                          u1400 033D  
                        u1320 02E9                          u1401 033C                          u1321 02E8  
                        u1410 0346                          u1330 02F3                          u1411 0345  
                        u1331 02F2                          u1420 0355                          u1340 02FD  
                        u1421 0354                          u1341 02FC                          u1190 05A0  
                        u1430 035C                          u1350 0307                          u1431 035B  
                        u1351 0306                          u1440 036B                          u1360 030E  
                        u1441 036A                          u1361 030D                          u1450 0377  
                        u1370 0318                          u1195 059B                          u1451 0376  
                        u1371 0317                          u1460 037C                          u1380 0321  
                        u1461 037B                          u1381 0320                          u1470 0382  
                        u1390 0330                          u1471 0381                          u1391 032F  
                        u1737 02D7                          u1747 04F6                          u1757 0509  
                        u1767 0519                          u1777 05D4                          u1787 05E1  
                        _RCIF 0065                          _TMR0 0001                          _TXIF 0064  
                __CFG_WRT$OFF 0000                          _main 02A2                    i1_send_cmd 060A  
                        btemp 007E                 __CFG_BOREN$ON 0000                          start 0016  
                 main@stringa 00BF                 _statoSemafori 00DE                         ??_ISR 00A0  
             __end_of___aldiv 042C                         ?_main 0070               __end_of___awdiv 0493  
               __CFG_WDTE$OFF 0000               __end_of___awmod 04EC               ___awdiv@divisor 0070  
                       i1l231 0609                         i1l225 0185                         i1l153 019D  
                       i1l234 0649                         i1l154 01BA                         i1l171 0291  
                       i1l155 01DB                         i1l501 04EB                         i1l237 0629  
                       i1l157 01EB                         i1l159 01EF                         i1l488 0492  
             ___awdiv@counter 0075                         _RCREG 001A                         _SPBRG 0099  
                       _PORTD 0008                         _TRISA 0085                         _TRISB 0086  
                       _TRISD 0088                         _TRISE 0089                         u89_20 0609  
                       u89_21 0608                         _TXREG 0019                         _PicId 00E1  
               __CFG_PWRTE$ON 0000                _scattoSemafori 00CB            __size_of_UART_init 003A  
             __end_of_initPic 066C                         _count 00C8                         _stat1 00D0  
                       _stat2 00CE                         _stat3 00CC                         main@i 00C1  
                       pclath 000A            print_Countdown@num 0079                         status 0003  
                       wtemp0 007E               __initialization 0019                  __end_of_main 038F  
                      ??_main 00BC                        _ADCON0 001F                        _ADCON1 009F  
                      _ADRESH 001E                        _ADRESL 009E              ___awdiv@dividend 0072  
                      u100_20 0431                        u100_21 0430                        u101_20 043C  
                      u101_21 043B                        u102_20 044D                        u110_20 0498  
                      u102_21 044C                        u110_21 0497                        i1l1311 063A  
                      u111_20 04A3                        i1l1401 0470                        u111_21 04A2  
                      i1l1313 0646                        i1l1305 062B                        i1l1411 0489  
                      i1l1403 0476                        i1l1307 062E                        i1l1331 05FE  
                      i1l1413 048E                        i1l1405 0477                        u103_25 0451  
                      i1l1421 0498                        i1l1309 0630                        i1l1325 05EA  
                      i1l1407 047E                        i1l1431 04AE                        i1l1423 049D  
                      i1l1327 05ED                        i1l1511 0067                        u104_20 045F  
                      u112_20 04AE                        u120_20 0053                        u104_21 045E  
                      i1l1409 0484                        i1l1441 04CA                        i1l1433 04B1  
                      u112_21 04AD                        i1l1425 049F                        i1l1417 0493  
                      i1l1329 05F8                        i1l1513 0074                        i1l1505 0049  
                      i1l1451 04E7                        i1l1443 04D0                        i1l1435 04B8  
                      i1l1427 04A3                        i1l1419 0494                        i1l1523 008F  
                      i1l1531 00C7                        i1l1515 007B                        i1l1507 0061  
                      i1l1381 0438                        i1l1373 042C                        i1l1445 04D7  
                      i1l1437 04BC                        i1l1429 04A8                        i1l1461 061A  
                      i1l1541 00F4                        i1l1533 00CD                        i1l1525 00A7  
                      i1l1517 0082                        i1l1509 0065                        i1l1701 0263  
                      i1l1391 044D                        i1l1383 043C                        i1l1375 042D  
                      i1l1439 04C0                        i1l1447 04DD                        i1l1463 0626  
                      i1l1455 060B                        i1l1551 0128                        i1l1543 0100  
                      i1l1535 00D2                        i1l1527 00B8                        i1l1519 0088  
                      i1l1711 0284                        i1l1703 0270                        u121_20 0074  
                      i1l1393 0450                        i1l1385 0441                        i1l1377 0431  
                      i1l1449 04E2                        i1l1457 060E                        i1l1561 016A  
                      i1l1553 0140                        i1l1545 0105                        i1l1537 00E0  
                      i1l1529 00C0                        u121_21 0073                        i1l1713 0289  
                      i1l1705 0276                        i1l1395 0457                        i1l1387 0445  
                      i1l1379 0436                        i1l1459 0610                        i1l1563 017F  
                      i1l1555 0146                        i1l1547 011D                        i1l1539 00E6  
                      i1l1707 027D                        i1l1715 028D                        i1l1651 0186  
                      u105_25 0460                        i1l1397 045B                        i1l1389 0447  
                      u113_25 04B2                        i1l1557 014C                        i1l1549 0123  
                      u121_25 0070                        i1l1709 027F                        i1l1661 01B0  
                      i1l1653 018C                        i1l1399 045F                        i1l1559 0164  
                      i1l1663 01C4                        i1l1655 0191                        u106_20 0470  
                      u114_20 04C0                        u130_20 014C                        u122_20 0082  
                      u106_21 046F                        u114_21 04BF                        u130_21 014B  
                      u122_21 0081                        i1l1681 0202                        i1l1673 01F0  
                      i1l1665 01CA                        i1l1657 01A5                        i1l1691 0230  
                      i1l1683 0206                        i1l1675 01F6                        i1l1667 01D1  
                      i1l1659 01A9                        u106_25 046C                        i1l1693 023E  
                      i1l1685 0215                        i1l1677 01F8                        i1l1669 01E5  
                      i1l1695 0246                        i1l1687 021B                        i1l1679 01FC  
                      u115_20 04CA                        u131_20 0156                        u123_20 008E  
                      u115_21 04C9                        u123_21 008D                        i1l1697 0256  
                      i1l1689 0228                        i1l1699 025D                        u107_25 0478  
                      u115_25 04C6                        u108_20 0484                        u124_20 00C6  
                      u108_21 0483                        u124_21 00C5                        u116_25 04D1  
                      u109_20 0489                        u117_20 04DD                        u125_20 00F4  
                      u109_21 0488                        u117_21 04DC                        u125_21 00F3  
                      u125_25 00F0                        u118_20 04E2                        u126_20 0105  
                      u150_20 0199                        u118_21 04E1                        u126_21 0104  
                      u150_21 0197                        u127_20 010F                        u151_20 019A  
                      u128_20 0128                        u160_20 01EB                        u152_20 01A9  
                      u128_21 0127                        u160_21 01EA                        u152_21 01A8  
                      u129_20 0132                        u161_20 01EF                        u153_20 01B0  
                      _INTCON 000B                        u161_21 01EE                        u153_21 01AF  
                      u170_20 0284                        u162_20 01FC                        u154_20 01B6  
                      u170_21 0283                        u162_21 01FB                        u154_21 01B4  
                      u163_20 0215                        u155_20 01B7                        u163_21 0214  
                      u164_20 021B                        u156_20 01CA                        u148_20 018C  
                      u164_21 021A                        u156_21 01C9                        u148_21 018B  
                      u180_27 0615                        u165_20 0230                        u157_20 01D1  
                      u149_20 0191                        u165_21 022F                        u157_21 01D0  
                      u149_21 0190                        u181_27 0621                        u166_20 0246  
                      u158_20 01D7                        u166_21 0245                        u158_21 01D5  
                      u182_27 0635                        u167_20 025D                        u159_20 01D8  
                ?_send_string 0070                        u167_21 025C                        u183_27 0641  
                      u168_20 0270                        u168_21 026F                        u168_25 026C  
                      u169_20 027D                        u169_21 027C                        u179_27 0172  
                 ?i1_send_cmd 0070                send_string@str 0076      __size_of_print_Countdown 013D  
                   ??___aldiv 00AF             __end_of_UART_init 05C1                     ??___awdiv 0074  
                   ??___awmod 0074              __end_of_init_lcd 0543              ___awdiv@quotient 0077  
             ___awmod@divisor 0070               ___awmod@counter 0075           print_Countdown@F931 01A1  
         print_Countdown@F925 01C3           print_Countdown@F933 0190           print_Countdown@F929 01B2  
            __end_of_send_cmd 05E9                     ??_initPic 00A7                  __pdataCOMMON 007D  
                      saved_w 007E       __end_of__initialization 0045                __pcstackCOMMON 0070  
                __pidataBANK1 0674                  __pidataBANK3 0543           __size_ofi1_send_cmd 0020  
                  __pbssBANK0 006F                    __pbssBANK1 00C2                    __pmaintext 02A2  
                  _flagGiallo 00CA                    __pintentry 0004            __size_of_send_data 0020  
           ??_print_Countdown 0020                    _contCamion 00D1             main@semaforoVerde 00C0  
                   ?_init_lcd 0070          __size_of_send_string 0021                     ?_send_cmd 0070  
                     ___aldiv 038F                       ___awdiv 042C                       ___awmod 0493  
                     __ptext1 04EC                       __ptext2 05C1                       __ptext3 065D  
                     __ptext4 0587                       __ptext5 038F                       __ptext6 0186  
                     __ptext7 0049                       __ptext8 060A                       __ptext9 05E9  
                __size_of_ISR 011C                       _oldBtn1 006F                       _oldBtn2 00CF  
                     _oldBtn3 00CD                       _initPic 065D              ___awmod@dividend 0072  
            ___aldiv@dividend 00AB                       clrloop0 066D          end_of_initialization 0045  
           __end_of_send_data 064A                    ??_init_lcd 00AA                  ??i1_send_cmd 0070  
    print_Countdown@secondStr 0024                    ??_send_cmd 00A7                     _RCSTAbits 0018  
            ___aldiv@quotient 00B2      print_Countdown@resultNum 0068                 send_data@data 0072  
                   _PORTBbits 0006                     _UART_init 0587                     _PORTEbits 0009  
          __end_ofi1_send_cmd 062A                     _TRISCbits 0087             i1send_cmd@command 0072  
             _temporizzazione 007C                     _TXSTAbits 0098              print_Countdown@i 006D  
               __pidataCOMMON 067A                    ?_UART_init 00B6           start_initialization 0019  
                 __end_of_ISR 02A2               _print_Countdown 0049                    init_fetch0 064A  
                 __pdataBANK1 00DE                   __pdataBANK3 0190                   __pbssCOMMON 007C  
                   ___latbits 0002                 __pcstackBANK0 0020                 __pcstackBANK1 00A0  
                 _datoSeriale 00D4             __size_of_init_lcd 0057                      ?___aldiv 00A7  
           __size_of_send_cmd 0028                      ?___awdiv 0070                      ?___awmod 0070  
                 ??_UART_init 00B8                      ?_initPic 0070                     _countDown 007D  
     __end_of_print_Countdown 0186                 ??_send_string 0073       print_Countdown@firstStr 0057  
             ___aldiv@divisor 00A7             interrupt_function 0004               ___aldiv@counter 00B0  
                   clear_ram0 066C                      _PIE1bits 008C                     _send_data 062A  
                    _GO_nDONE 00FA                     _numStrade 00E3       print_Countdown@statoSem 007B  
                  _ADCON0bits 001F                     _strToSend 00D6                    ?_send_data 0070  
                send_string@i 0074           __end_of_send_string 060A              __size_of___aldiv 009D  
            __size_of___awdiv 0067              __size_of___awmod 0059              __size_of_initPic 000F  
                    __ptext10 062A                      __ptext11 0493                      __ptext12 042C  
                    _contAuto 00D3                      _contMoto 00D2              ?_print_Countdown 0079  
                    _init_lcd 04EC                 __size_of_main 00ED                      _received 00D5  
                    _send_cmd 05C1                      _semafori 00C2                    _INTCONbits 000B  
                    init_ram0 064E               send_cmd@command 00A9                      intlevel1 0000  
           UART_init@baudrate 00B6                   _send_string 05E9                   ??_send_data 0070  
       print_Countdown@length 006B                    _OPTION_REG 0081                  ___aldiv@sign 00B1  
