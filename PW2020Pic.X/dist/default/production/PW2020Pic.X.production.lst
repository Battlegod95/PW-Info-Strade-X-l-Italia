

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jul 17 09:18:54 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.10
    39                           ; Generated 31/07/2019 GMT
    40                           ; 
    41                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192                           
   193                           	psect	idataCOMMON
   194  0783                     __pidataCOMMON:	
   195                           
   196                           ;initializer for _countDown
   197  0783  3405               	retlw	5
   198                           
   199                           	psect	idataBANK1
   200  0773                     __pidataBANK1:	
   201                           
   202                           ;initializer for _statoSemafori
   203  0773  3400               	retlw	0
   204  0774  3401               	retlw	1
   205  0775  3402               	retlw	2
   206                           
   207                           ;initializer for _f
   208  0776  3403               	retlw	3
   209  0777  3400               	retlw	0
   210                           
   211                           ;initializer for _PicId
   212  0778  34A7               	retlw	167
   213  0779  3400               	retlw	0
   214                           
   215                           ;initializer for _numStrade
   216  077A  3404               	retlw	4
   217                           
   218                           	psect	idataBANK3
   219  05FB                     __pidataBANK3:	
   220                           
   221                           ;initializer for print_Countdown@F931
   222  05FB  3453               	retlw	83
   223  05FC  3465               	retlw	101
   224  05FD  346D               	retlw	109
   225  05FE  3420               	retlw	32
   226  05FF  3430               	retlw	48
   227  0600  343A               	retlw	58
   228  0601  3420               	retlw	32
   229  0602  3420               	retlw	32
   230  0603  3420               	retlw	32
   231  0604  3420               	retlw	32
   232  0605  3420               	retlw	32
   233  0606  3452               	retlw	82
   234  0607  346F               	retlw	111
   235  0608  3473               	retlw	115
   236  0609  3473               	retlw	115
   237  060A  346F               	retlw	111
   238  060B  3400               	retlw	0
   239                           
   240                           ;initializer for print_Countdown@F929
   241  060C  3453               	retlw	83
   242  060D  3465               	retlw	101
   243  060E  346D               	retlw	109
   244  060F  3420               	retlw	32
   245  0610  3430               	retlw	48
   246  0611  343A               	retlw	58
   247  0612  3420               	retlw	32
   248  0613  3420               	retlw	32
   249  0614  3420               	retlw	32
   250  0615  3420               	retlw	32
   251  0616  3447               	retlw	71
   252  0617  3469               	retlw	105
   253  0618  3461               	retlw	97
   254  0619  346C               	retlw	108
   255  061A  346C               	retlw	108
   256  061B  346F               	retlw	111
   257  061C  3400               	retlw	0
   258                           
   259                           ;initializer for print_Countdown@F927
   260  061D  3453               	retlw	83
   261  061E  3465               	retlw	101
   262  061F  346D               	retlw	109
   263  0620  3420               	retlw	32
   264  0621  3430               	retlw	48
   265  0622  343A               	retlw	58
   266  0623  3420               	retlw	32
   267  0624  3420               	retlw	32
   268  0625  3420               	retlw	32
   269  0626  3420               	retlw	32
   270  0627  3420               	retlw	32
   271  0628  3456               	retlw	86
   272  0629  3465               	retlw	101
   273  062A  3472               	retlw	114
   274  062B  3464               	retlw	100
   275  062C  3465               	retlw	101
   276  062D  3400               	retlw	0
   277                           
   278                           ;initializer for print_Countdown@F923
   279  062E  3454               	retlw	84
   280  062F  3465               	retlw	101
   281  0630  346D               	retlw	109
   282  0631  3470               	retlw	112
   283  0632  346F               	retlw	111
   284  0633  343A               	retlw	58
   285  0634  3420               	retlw	32
   286  0635  3420               	retlw	32
   287  0636  3420               	retlw	32
   288  0637  3420               	retlw	32
   289  0638  3420               	retlw	32
   290  0639  3420               	retlw	32
   291  063A  3420               	retlw	32
   292  063B  3420               	retlw	32
   293  063C  3420               	retlw	32
   294  063D  3420               	retlw	32
   295  063E  3400               	retlw	0
   296  0019                     _TXREG	set	25
   297  000B                     _INTCONbits	set	11
   298  0018                     _RCSTAbits	set	24
   299  0008                     _PORTD	set	8
   300  0009                     _PORTEbits	set	9
   301  001E                     _ADRESH	set	30
   302  001F                     _ADCON0bits	set	31
   303  001F                     _ADCON0	set	31
   304  0001                     _TMR0	set	1
   305  000B                     _INTCON	set	11
   306  001A                     _RCREG	set	26
   307  0006                     _PORTBbits	set	6
   308  0064                     _TXIF	set	100
   309  00FA                     _GO_nDONE	set	250
   310  0065                     _RCIF	set	101
   311  008C                     _PIE1bits	set	140
   312  0099                     _SPBRG	set	153
   313  0098                     _TXSTAbits	set	152
   314  0087                     _TRISCbits	set	135
   315  009E                     _ADRESL	set	158
   316  009F                     _ADCON1	set	159
   317  0085                     _TRISA	set	133
   318  0081                     _OPTION_REG	set	129
   319  0089                     _TRISE	set	137
   320  0086                     _TRISB	set	134
   321  0088                     _TRISD	set	136
   322                           
   323                           ; #config settings
   324  0000                     
   325                           	psect	cinit
   326  0019                     start_initialization:	
   327  0019                     __initialization:	
   328                           
   329                           ; Initialize objects allocated to BANK3
   330  0019  1783               	bsf	3,7	;select IRP bank2
   331  001A  30D4               	movlw	low (__pdataBANK3+68)
   332  001B  00FD               	movwf	btemp+-1
   333  001C  3005               	movlw	high __pidataBANK3
   334  001D  00FE               	movwf	btemp
   335  001E  30FB               	movlw	low __pidataBANK3
   336  001F  00FF               	movwf	btemp+1
   337  0020  3090               	movlw	low __pdataBANK3
   338  0021  0084               	movwf	4
   339  0022  120A  118A  2745  120A  118A  	fcall	init_ram0
   340                           
   341                           ; Initialize objects allocated to BANK1
   342  0027  1383               	bcf	3,7	;select IRP bank0
   343  0028  30E3               	movlw	low (__pdataBANK1+8)
   344  0029  00FD               	movwf	btemp+-1
   345  002A  3007               	movlw	high __pidataBANK1
   346  002B  00FE               	movwf	btemp
   347  002C  3073               	movlw	low __pidataBANK1
   348  002D  00FF               	movwf	btemp+1
   349  002E  30DB               	movlw	low __pdataBANK1
   350  002F  0084               	movwf	4
   351  0030  120A  118A  2745  120A  118A  	fcall	init_ram0
   352                           
   353                           ; Initialize objects allocated to COMMON
   354  0035  120A  118A  2783  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   355  003A  00FD               	movwf	__pdataCOMMON& (0+127)
   356                           
   357                           ; Clear objects allocated to BANK1
   358  003B  30C1               	movlw	low __pbssBANK1
   359  003C  0084               	movwf	4
   360  003D  30DB               	movlw	low (__pbssBANK1+26)
   361  003E  120A  118A  277B  120A  118A  	fcall	clear_ram0
   362                           
   363                           ; Clear objects allocated to BANK0
   364  0043  01EF               	clrf	__pbssBANK0& (0+127)
   365                           
   366                           ; Clear objects allocated to COMMON
   367  0044  01FC               	clrf	__pbssCOMMON& (0+127)
   368  0045                     end_of_initialization:	
   369                           ;End of C runtime variable initialization code
   370                           
   371  0045                     __end_of__initialization:	
   372  0045  0183               	clrf	3
   373  0046  120A  118A  2849   	ljmp	_main	;jump to C main() function
   374                           
   375                           	psect	bssCOMMON
   376  007C                     __pbssCOMMON:	
   377  007C                     _temporizzazione:	
   378  007C                     	ds	1
   379                           
   380                           	psect	dataCOMMON
   381  007D                     __pdataCOMMON:	
   382  007D                     _countDown:	
   383  007D                     	ds	1
   384                           
   385                           	psect	bssBANK0
   386  006F                     __pbssBANK0:	
   387  006F                     _oldBtn1:	
   388  006F                     	ds	1
   389                           
   390                           	psect	bssBANK1
   391  00C1                     __pbssBANK1:	
   392  00C1                     _semafori:	
   393  00C1                     	ds	4
   394  00C5                     _count:	
   395  00C5                     	ds	2
   396  00C7                     _flagGiallo:	
   397  00C7                     	ds	1
   398  00C8                     _scattoSemafori:	
   399  00C8                     	ds	1
   400  00C9                     _stat3:	
   401  00C9                     	ds	1
   402  00CA                     _oldBtn3:	
   403  00CA                     	ds	1
   404  00CB                     _stat2:	
   405  00CB                     	ds	1
   406  00CC                     _oldBtn2:	
   407  00CC                     	ds	1
   408  00CD                     _stat1:	
   409  00CD                     	ds	1
   410  00CE                     _contCamion:	
   411  00CE                     	ds	1
   412  00CF                     _contMoto:	
   413  00CF                     	ds	1
   414  00D0                     _contAuto:	
   415  00D0                     	ds	1
   416  00D1                     _datoSeriale:	
   417  00D1                     	ds	1
   418  00D2                     _received:	
   419  00D2                     	ds	1
   420  00D3                     _strToSend:	
   421  00D3                     	ds	8
   422                           
   423                           	psect	dataBANK1
   424  00DB                     __pdataBANK1:	
   425  00DB                     _statoSemafori:	
   426  00DB                     	ds	3
   427  00DE                     _f:	
   428  00DE                     	ds	2
   429  00E0                     _PicId:	
   430  00E0                     	ds	2
   431  00E2                     _numStrade:	
   432  00E2                     	ds	1
   433                           
   434                           	psect	dataBANK3
   435  0190                     __pdataBANK3:	
   436  0190                     print_Countdown@F931:	
   437  0190                     	ds	17
   438  01A1                     print_Countdown@F929:	
   439  01A1                     	ds	17
   440  01B2                     print_Countdown@F927:	
   441  01B2                     	ds	17
   442  01C3                     print_Countdown@F923:	
   443  01C3                     	ds	17
   444                           
   445                           	psect	inittext
   446  0741                     init_fetch0:	
   447                           ;	Called with low address in FSR and high address in W
   448                           
   449  0741  087E               	movf	btemp,w
   450  0742  008A               	movwf	10
   451  0743  087F               	movf	btemp+1,w
   452  0744  0082               	movwf	2
   453  0745                     init_ram0:	
   454                           ;Called with:
   455                           ;	high address of idata address in btemp 
   456                           ;	low address of idata address in btemp+1 
   457                           ;	low address of data in FSR
   458                           ;	high address + 1 of data in btemp-1
   459                           
   460  0745  120A  118A  2741  120A  118A  	fcall	init_fetch0
   461  074A  0080               	movwf	0
   462  074B  0A84               	incf	4,f
   463  074C  0804               	movf	4,w
   464  074D  067D               	xorwf	btemp+-1,w
   465  074E  1903               	btfsc	3,2
   466  074F  3400               	retlw	0
   467  0750  0AFF               	incf	btemp+1,f
   468  0751  1903               	btfsc	3,2
   469  0752  0AFE               	incf	btemp,f
   470  0753  2F45               	goto	init_ram0
   471                           
   472                           	psect	clrtext
   473  077B                     clear_ram0:	
   474                           ;	Called with FSR containing the base address, and
   475                           ;	W with the last address+1
   476                           
   477  077B  0064               	clrwdt	;clear the watchdog before getting into this loop
   478  077C                     clrloop0:	
   479  077C  0180               	clrf	0	;clear RAM location pointed to by FSR
   480  077D  0A84               	incf	4,f	;increment pointer
   481  077E  0604               	xorwf	4,w	;XOR with final address
   482  077F  1903               	btfsc	3,2	;have we reached the end yet?
   483  0780  3400               	retlw	0	;all done for this memory range, return
   484  0781  0604               	xorwf	4,w	;XOR again to restore value
   485  0782  2F7C               	goto	clrloop0	;do the next byte
   486                           
   487                           	psect	cstackBANK1
   488  00A0                     __pcstackBANK1:	
   489  00A0                     ??_ISR:	
   490                           
   491                           ; 1 bytes @ 0x0
   492  00A0                     	ds	7
   493  00A7                     ??_initPic:	
   494  00A7                     ??_send_cmd:	
   495                           ; 1 bytes @ 0x7
   496                           
   497  00A7                     ??_UART_TxChar:	
   498                           ; 1 bytes @ 0x7
   499                           
   500  00A7                     ?___aldiv:	
   501                           ; 1 bytes @ 0x7
   502                           
   503  00A7                     UART_TxChar@dato:	
   504                           ; 4 bytes @ 0x7
   505                           
   506  00A7                     ___aldiv@divisor:	
   507                           ; 1 bytes @ 0x7
   508                           
   509                           
   510                           ; 4 bytes @ 0x7
   511  00A7                     	ds	1
   512  00A8                     ??_Uart_send_string:	
   513                           
   514                           ; 1 bytes @ 0x8
   515  00A8                     	ds	1
   516  00A9                     Uart_send_string@str:	
   517  00A9                     send_cmd@command:	
   518                           ; 1 bytes @ 0x9
   519                           
   520                           
   521                           ; 1 bytes @ 0x9
   522  00A9                     	ds	1
   523  00AA                     ??_init_lcd:	
   524  00AA                     Uart_send_string@i:	
   525                           ; 1 bytes @ 0xA
   526                           
   527                           
   528                           ; 1 bytes @ 0xA
   529  00AA                     	ds	1
   530  00AB                     ?_messageTransmission:	
   531  00AB                     messageTransmission@idStrada:	
   532                           ; 1 bytes @ 0xB
   533                           
   534  00AB                     ___aldiv@dividend:	
   535                           ; 1 bytes @ 0xB
   536                           
   537                           
   538                           ; 4 bytes @ 0xB
   539  00AB                     	ds	1
   540  00AC                     messageTransmission@codice:	
   541                           
   542                           ; 1 bytes @ 0xC
   543  00AC                     	ds	1
   544  00AD                     messageTransmission@valore:	
   545                           
   546                           ; 1 bytes @ 0xD
   547  00AD                     	ds	1
   548  00AE                     ??_messageTransmission:	
   549                           
   550                           ; 1 bytes @ 0xE
   551  00AE                     	ds	1
   552  00AF                     ??___aldiv:	
   553  00AF                     messageTransmission@tipoMessaggio:	
   554                           ; 1 bytes @ 0xF
   555                           
   556                           
   557                           ; 1 bytes @ 0xF
   558  00AF                     	ds	1
   559  00B0                     ___aldiv@counter:	
   560                           
   561                           ; 1 bytes @ 0x10
   562  00B0                     	ds	1
   563  00B1                     ___aldiv@sign:	
   564                           
   565                           ; 1 bytes @ 0x11
   566  00B1                     	ds	1
   567  00B2                     ___aldiv@quotient:	
   568                           
   569                           ; 4 bytes @ 0x12
   570  00B2                     	ds	4
   571  00B6                     ?_UART_init:	
   572  00B6                     UART_init@baudrate:	
   573                           ; 1 bytes @ 0x16
   574                           
   575                           
   576                           ; 2 bytes @ 0x16
   577  00B6                     	ds	2
   578  00B8                     ??_UART_init:	
   579                           
   580                           ; 1 bytes @ 0x18
   581  00B8                     	ds	4
   582  00BC                     ??_main:	
   583                           
   584                           ; 1 bytes @ 0x1C
   585  00BC                     	ds	3
   586  00BF                     main@semaforoVerde:	
   587                           
   588                           ; 1 bytes @ 0x1F
   589  00BF                     	ds	1
   590  00C0                     main@i:	
   591                           
   592                           ; 1 bytes @ 0x20
   593  00C0                     	ds	1
   594                           
   595                           	psect	cstackCOMMON
   596  0070                     __pcstackCOMMON:	
   597  0070                     ?_initPic:	
   598  0070                     ?_init_lcd:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_send_cmd:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_Uart_send_string:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_UART_TxChar:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_send_string:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_send_data:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ??_send_data:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_main:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_ISR:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?i1_send_cmd:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ??i1_send_cmd:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?___awdiv:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?___awmod:	
   635                           ; 2 bytes @ 0x0
   636                           
   637  0070                     ___awdiv@divisor:	
   638                           ; 2 bytes @ 0x0
   639                           
   640  0070                     ___awmod@divisor:	
   641                           ; 2 bytes @ 0x0
   642                           
   643                           
   644                           ; 2 bytes @ 0x0
   645  0070                     	ds	2
   646  0072                     send_data@data:	
   647  0072                     i1send_cmd@command:	
   648                           ; 1 bytes @ 0x2
   649                           
   650  0072                     ___awdiv@dividend:	
   651                           ; 1 bytes @ 0x2
   652                           
   653  0072                     ___awmod@dividend:	
   654                           ; 2 bytes @ 0x2
   655                           
   656                           
   657                           ; 2 bytes @ 0x2
   658  0072                     	ds	1
   659  0073                     ??_send_string:	
   660                           
   661                           ; 1 bytes @ 0x3
   662  0073                     	ds	1
   663  0074                     ??___awdiv:	
   664  0074                     ??___awmod:	
   665                           ; 1 bytes @ 0x4
   666                           
   667  0074                     send_string@i:	
   668                           ; 1 bytes @ 0x4
   669                           
   670                           
   671                           ; 2 bytes @ 0x4
   672  0074                     	ds	1
   673  0075                     ___awdiv@counter:	
   674  0075                     ___awmod@counter:	
   675                           ; 1 bytes @ 0x5
   676                           
   677                           
   678                           ; 1 bytes @ 0x5
   679  0075                     	ds	1
   680  0076                     send_string@str:	
   681  0076                     ___awdiv@sign:	
   682                           ; 1 bytes @ 0x6
   683                           
   684  0076                     ___awmod@sign:	
   685                           ; 1 bytes @ 0x6
   686                           
   687                           
   688                           ; 1 bytes @ 0x6
   689  0076                     	ds	1
   690  0077                     ___awdiv@quotient:	
   691                           
   692                           ; 2 bytes @ 0x7
   693  0077                     	ds	2
   694  0079                     ?_print_Countdown:	
   695  0079                     print_Countdown@num:	
   696                           ; 1 bytes @ 0x9
   697                           
   698                           
   699                           ; 2 bytes @ 0x9
   700  0079                     	ds	2
   701  007B                     print_Countdown@statoSem:	
   702                           
   703                           ; 1 bytes @ 0xB
   704  007B                     	ds	1
   705                           
   706                           	psect	cstackBANK0
   707  0020                     __pcstackBANK0:	
   708  0020                     ??_print_Countdown:	
   709                           
   710                           ; 1 bytes @ 0x0
   711  0020                     	ds	4
   712  0024                     print_Countdown@secondStr:	
   713                           
   714                           ; 17 bytes @ 0x4
   715  0024                     	ds	17
   716  0035                     print_Countdown@secondStr_401:	
   717                           
   718                           ; 17 bytes @ 0x15
   719  0035                     	ds	17
   720  0046                     print_Countdown@secondStr_403:	
   721                           
   722                           ; 17 bytes @ 0x26
   723  0046                     	ds	17
   724  0057                     print_Countdown@firstStr:	
   725                           
   726                           ; 17 bytes @ 0x37
   727  0057                     	ds	17
   728  0068                     print_Countdown@resultNum:	
   729                           
   730                           ; 3 bytes @ 0x48
   731  0068                     	ds	3
   732  006B                     print_Countdown@length:	
   733                           
   734                           ; 2 bytes @ 0x4B
   735  006B                     	ds	2
   736  006D                     print_Countdown@i:	
   737                           
   738                           ; 2 bytes @ 0x4D
   739  006D                     	ds	2
   740                           
   741                           	psect	maintext
   742  0049                     __pmaintext:	
   743 ;;
   744 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   745 ;;
   746 ;; *************** function _main *****************
   747 ;; Defined at:
   748 ;;		line 113 in file "main.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  semaforoVerd    1   31[BANK1 ] unsigned char 
   753 ;;  i               1   32[BANK1 ] unsigned char 
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : B00/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   763 ;;      Params:         0       0       0       0       0
   764 ;;      Locals:         0       0       2       0       0
   765 ;;      Temps:          0       0       3       0       0
   766 ;;      Totals:         0       0       5       0       0
   767 ;;Total ram usage:        5 bytes
   768 ;; Hardware stack levels required when called:    7
   769 ;; This function calls:
   770 ;;		_UART_init
   771 ;;		_initPic
   772 ;;		_init_lcd
   773 ;;		_messageTransmission
   774 ;;		_send_cmd
   775 ;; This function is called by:
   776 ;;		Startup code after reset
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           
   781                           ;psect for function _main
   782  0049                     _main:	
   783  0049                     l1578:	
   784                           ;incstack = 0
   785                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   786                           
   787                           
   788                           ;main.c: 115:     initPic();
   789  0049  120A  118A  2764  120A  118A  	fcall	_initPic
   790                           
   791                           ;main.c: 116:     UART_init(9600);
   792  004E  3080               	movlw	128
   793  004F  1683               	bsf	3,5	;RP0=1, select bank1
   794  0050  1303               	bcf	3,6	;RP1=0, select bank1
   795  0051  00B6               	movwf	UART_init@baudrate^(0+128)
   796  0052  3025               	movlw	37
   797  0053  00B7               	movwf	(UART_init@baudrate^(0+128)+1)
   798  0054  120A  118A  263F  120A  118A  	fcall	_UART_init
   799                           
   800                           ;main.c: 117:     init_lcd();
   801  0059  120A  118A  25A4  120A  118A  	fcall	_init_lcd
   802                           
   803                           ;main.c: 118:     send_cmd(0x01);
   804  005E  3001               	movlw	1
   805  005F  120A  118A  2679  120A  118A  	fcall	_send_cmd
   806  0064                     l1580:	
   807                           
   808                           ;main.c: 190:     char i;;main.c: 193:     semafori[1]=statoSemafori[2];
   809  0064  1683               	bsf	3,5	;RP0=1, select bank1
   810  0065  1303               	bcf	3,6	;RP1=0, select bank1
   811  0066  085D               	movf	(_statoSemafori^(0+128)+2),w
   812  0067  00BC               	movwf	??_main^(0+128)
   813  0068  083C               	movf	??_main^(0+128),w
   814  0069  00C2               	movwf	(_semafori^(0+128)+1)
   815  006A                     l1582:	
   816                           
   817                           ;main.c: 194:     semafori[2]=statoSemafori[2];
   818  006A  085D               	movf	(_statoSemafori^(0+128)+2),w
   819  006B  00BC               	movwf	??_main^(0+128)
   820  006C  083C               	movf	??_main^(0+128),w
   821  006D  00C3               	movwf	(_semafori^(0+128)+2)
   822  006E                     l1584:	
   823                           
   824                           ;main.c: 195:     semafori[3]=statoSemafori[2];
   825  006E  085D               	movf	(_statoSemafori^(0+128)+2),w
   826  006F  00BC               	movwf	??_main^(0+128)
   827  0070  083C               	movf	??_main^(0+128),w
   828  0071  00C4               	movwf	(_semafori^(0+128)+3)
   829  0072                     l1586:	
   830                           
   831                           ;main.c: 196:     semafori[0]=statoSemafori[0];
   832  0072  085B               	movf	_statoSemafori^(0+128),w
   833  0073  00BC               	movwf	??_main^(0+128)
   834  0074  083C               	movf	??_main^(0+128),w
   835  0075  00C1               	movwf	_semafori^(0+128)
   836  0076                     l1588:	
   837                           
   838                           ;main.c: 200:     {;main.c: 204:         if(stat1)
   839  0076  084D               	movf	_stat1^(0+128),w
   840  0077  1903               	btfsc	3,2
   841  0078  287A               	goto	u1331
   842  0079  287B               	goto	u1330
   843  007A                     u1331:	
   844  007A  2880               	goto	l1594
   845  007B                     u1330:	
   846  007B                     l1590:	
   847                           
   848                           ;main.c: 205:         {;main.c: 206:             contAuto++;
   849  007B  3001               	movlw	1
   850  007C  00BC               	movwf	??_main^(0+128)
   851  007D  083C               	movf	??_main^(0+128),w
   852  007E  07D0               	addwf	_contAuto^(0+128),f
   853  007F                     l1592:	
   854                           
   855                           ;main.c: 207:             stat1=0;
   856  007F  01CD               	clrf	_stat1^(0+128)
   857  0080                     l1594:	
   858                           
   859                           ;main.c: 210:         if(stat2)
   860  0080  084B               	movf	_stat2^(0+128),w
   861  0081  1903               	btfsc	3,2
   862  0082  2884               	goto	u1341
   863  0083  2885               	goto	u1340
   864  0084                     u1341:	
   865  0084  288A               	goto	l1600
   866  0085                     u1340:	
   867  0085                     l1596:	
   868                           
   869                           ;main.c: 211:         {;main.c: 212:             contMoto++;
   870  0085  3001               	movlw	1
   871  0086  00BC               	movwf	??_main^(0+128)
   872  0087  083C               	movf	??_main^(0+128),w
   873  0088  07CF               	addwf	_contMoto^(0+128),f
   874  0089                     l1598:	
   875                           
   876                           ;main.c: 213:             stat2=0;
   877  0089  01CB               	clrf	_stat2^(0+128)
   878  008A                     l1600:	
   879                           
   880                           ;main.c: 215:         if(stat3)
   881  008A  0849               	movf	_stat3^(0+128),w
   882  008B  1903               	btfsc	3,2
   883  008C  288E               	goto	u1351
   884  008D  288F               	goto	u1350
   885  008E                     u1351:	
   886  008E  2894               	goto	l1606
   887  008F                     u1350:	
   888  008F                     l1602:	
   889                           
   890                           ;main.c: 216:         {;main.c: 217:             contCamion++;
   891  008F  3001               	movlw	1
   892  0090  00BC               	movwf	??_main^(0+128)
   893  0091  083C               	movf	??_main^(0+128),w
   894  0092  07CE               	addwf	_contCamion^(0+128),f
   895  0093                     l1604:	
   896                           
   897                           ;main.c: 218:             stat3=0;
   898  0093  01C9               	clrf	_stat3^(0+128)
   899  0094                     l1606:	
   900                           
   901                           ;main.c: 222:         if(scattoSemafori==1)
   902  0094  0348               	decf	_scattoSemafori^(0+128),w
   903  0095  1D03               	btfss	3,2
   904  0096  2898               	goto	u1361
   905  0097  2899               	goto	u1360
   906  0098                     u1361:	
   907  0098  290B               	goto	l1652
   908  0099                     u1360:	
   909  0099                     l1608:	
   910                           
   911                           ;main.c: 223:         {;main.c: 226:             char semaforoVerde=0;
   912  0099  01BF               	clrf	main@semaforoVerde^(0+128)
   913                           
   914                           ;main.c: 227:             for(i=0;i<4;i++)
   915  009A  01C0               	clrf	main@i^(0+128)
   916  009B                     l1614:	
   917                           
   918                           ;main.c: 228:             {;main.c: 230:                 if(semaforoVerde==0)
   919  009B  083F               	movf	main@semaforoVerde^(0+128),w
   920  009C  1D03               	btfss	3,2
   921  009D  289F               	goto	u1371
   922  009E  28A0               	goto	u1370
   923  009F                     u1371:	
   924  009F  2901               	goto	l1648
   925  00A0                     u1370:	
   926  00A0                     l1616:	
   927                           
   928                           ;main.c: 231:                 {;main.c: 232:                     if(semafori[i]==statoSe
      +                          mafori[0])
   929  00A0  0840               	movf	main@i^(0+128),w
   930  00A1  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   931  00A2  0084               	movwf	4
   932  00A3  1383               	bcf	3,7	;select IRP bank1
   933  00A4  0800               	movf	0,w
   934  00A5  065B               	xorwf	_statoSemafori^(0+128),w
   935  00A6  1D03               	skipz
   936  00A7  28A9               	goto	u1381
   937  00A8  28AA               	goto	u1380
   938  00A9                     u1381:	
   939  00A9  2901               	goto	l1648
   940  00AA                     u1380:	
   941  00AA                     l1618:	
   942                           
   943                           ;main.c: 233:                     {;main.c: 235:                         if(semafori[i]=
      +                          =statoSemafori[0])
   944  00AA  0840               	movf	main@i^(0+128),w
   945  00AB  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   946  00AC  0084               	movwf	4
   947  00AD  0800               	movf	0,w
   948  00AE  065B               	xorwf	_statoSemafori^(0+128),w
   949  00AF  1D03               	skipz
   950  00B0  28B2               	goto	u1391
   951  00B1  28B3               	goto	u1390
   952  00B2                     u1391:	
   953  00B2  28C9               	goto	l1628
   954  00B3                     u1390:	
   955  00B3                     l1620:	
   956                           
   957                           ;main.c: 236:                         {;main.c: 237:                             flagGia
      +                          llo=1;
   958  00B3  01C7               	clrf	_flagGiallo^(0+128)
   959  00B4  0AC7               	incf	_flagGiallo^(0+128),f
   960                           
   961                           ;main.c: 238:                             while(flagGiallo==1)
   962  00B5  28BD               	goto	l1624
   963  00B6                     l1622:	
   964                           
   965                           ;main.c: 239:                                 semafori[i]=statoSemafori[1];
   966  00B6  085C               	movf	(_statoSemafori^(0+128)+1),w
   967  00B7  00BC               	movwf	??_main^(0+128)
   968  00B8  0840               	movf	main@i^(0+128),w
   969  00B9  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   970  00BA  0084               	movwf	4
   971  00BB  083C               	movf	??_main^(0+128),w
   972  00BC  0080               	movwf	0
   973  00BD                     l1624:	
   974                           
   975                           ;main.c: 238:                             while(flagGiallo==1)
   976  00BD  0347               	decf	_flagGiallo^(0+128),w
   977  00BE  1903               	btfsc	3,2
   978  00BF  28C1               	goto	u1401
   979  00C0  28C2               	goto	u1400
   980  00C1                     u1401:	
   981  00C1  28B6               	goto	l1622
   982  00C2                     u1400:	
   983  00C2                     l1626:	
   984                           
   985                           ;main.c: 241:                             semafori[i]=statoSemafori[2];
   986  00C2  085D               	movf	(_statoSemafori^(0+128)+2),w
   987  00C3  00BC               	movwf	??_main^(0+128)
   988  00C4  0840               	movf	main@i^(0+128),w
   989  00C5  3EC1               	addlw	(low (_semafori| 0))& (0+255)
   990  00C6  0084               	movwf	4
   991  00C7  083C               	movf	??_main^(0+128),w
   992  00C8  0080               	movwf	0
   993  00C9                     l1628:	
   994                           
   995                           ;main.c: 246:                         if(i<3)
   996  00C9  3003               	movlw	3
   997  00CA  0240               	subwf	main@i^(0+128),w
   998  00CB  1803               	skipnc
   999  00CC  28CE               	goto	u1411
  1000  00CD  28CF               	goto	u1410
  1001  00CE                     u1411:	
  1002  00CE  28E7               	goto	l1638
  1003  00CF                     u1410:	
  1004  00CF                     l1630:	
  1005                           
  1006                           ;main.c: 247:                         {;main.c: 250:                             if(sema
      +                          fori[i+1]==statoSemafori[2])
  1007  00CF  0840               	movf	main@i^(0+128),w
  1008  00D0  3EC2               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1009  00D1  0084               	movwf	4
  1010  00D2  0800               	movf	0,w
  1011  00D3  065D               	xorwf	(_statoSemafori^(0+128)+2),w
  1012  00D4  1D03               	skipz
  1013  00D5  28D7               	goto	u1421
  1014  00D6  28D8               	goto	u1420
  1015  00D7                     u1421:	
  1016  00D7  28E7               	goto	l1638
  1017  00D8                     u1420:	
  1018  00D8                     l1632:	
  1019                           
  1020                           ;main.c: 251:                             {;main.c: 252:                                
      +                           flagGiallo=1;
  1021  00D8  01C7               	clrf	_flagGiallo^(0+128)
  1022  00D9  0AC7               	incf	_flagGiallo^(0+128),f
  1023                           
  1024                           ;main.c: 253:                                 while(flagGiallo==1)
  1025  00DA  28E2               	goto	l1636
  1026  00DB                     l1634:	
  1027                           
  1028                           ;main.c: 254:                                     semafori[i+1]=statoSemafori[1];
  1029  00DB  085C               	movf	(_statoSemafori^(0+128)+1),w
  1030  00DC  00BC               	movwf	??_main^(0+128)
  1031  00DD  0840               	movf	main@i^(0+128),w
  1032  00DE  3EC2               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1033  00DF  0084               	movwf	4
  1034  00E0  083C               	movf	??_main^(0+128),w
  1035  00E1  0080               	movwf	0
  1036  00E2                     l1636:	
  1037                           
  1038                           ;main.c: 253:                                 while(flagGiallo==1)
  1039  00E2  0347               	decf	_flagGiallo^(0+128),w
  1040  00E3  1903               	btfsc	3,2
  1041  00E4  28E6               	goto	u1431
  1042  00E5  28E7               	goto	u1430
  1043  00E6                     u1431:	
  1044  00E6  28DB               	goto	l1634
  1045  00E7                     u1430:	
  1046  00E7                     l1638:	
  1047                           
  1048                           ;main.c: 261:                         if(i>=3)
  1049  00E7  3003               	movlw	3
  1050  00E8  0240               	subwf	main@i^(0+128),w
  1051  00E9  1C03               	skipc
  1052  00EA  28EC               	goto	u1441
  1053  00EB  28ED               	goto	u1440
  1054  00EC                     u1441:	
  1055  00EC  28FF               	goto	l141
  1056  00ED                     u1440:	
  1057  00ED                     l1640:	
  1058                           
  1059                           ;main.c: 262:                         {;main.c: 263:                             if(sema
      +                          fori[0]==statoSemafori[2])
  1060  00ED  085D               	movf	(_statoSemafori^(0+128)+2),w
  1061  00EE  0641               	xorwf	_semafori^(0+128),w
  1062  00EF  1D03               	skipz
  1063  00F0  28F2               	goto	u1451
  1064  00F1  28F3               	goto	u1450
  1065  00F2                     u1451:	
  1066  00F2  28FF               	goto	l141
  1067  00F3                     u1450:	
  1068  00F3                     l1642:	
  1069                           
  1070                           ;main.c: 264:                             {;main.c: 265:                                
      +                           flagGiallo=1;
  1071  00F3  01C7               	clrf	_flagGiallo^(0+128)
  1072  00F4  0AC7               	incf	_flagGiallo^(0+128),f
  1073                           
  1074                           ;main.c: 266:                                 while(flagGiallo==1)
  1075  00F5  28FA               	goto	l1646
  1076  00F6                     l1644:	
  1077                           
  1078                           ;main.c: 267:                                     semafori[0]=statoSemafori[1];
  1079  00F6  085C               	movf	(_statoSemafori^(0+128)+1),w
  1080  00F7  00BC               	movwf	??_main^(0+128)
  1081  00F8  083C               	movf	??_main^(0+128),w
  1082  00F9  00C1               	movwf	_semafori^(0+128)
  1083  00FA                     l1646:	
  1084                           
  1085                           ;main.c: 266:                                 while(flagGiallo==1)
  1086  00FA  0347               	decf	_flagGiallo^(0+128),w
  1087  00FB  1903               	btfsc	3,2
  1088  00FC  28FE               	goto	u1461
  1089  00FD  28FF               	goto	u1460
  1090  00FE                     u1461:	
  1091  00FE  28F6               	goto	l1644
  1092  00FF                     u1460:	
  1093  00FF                     l141:	
  1094                           ;main.c: 272:                         }
  1095                           
  1096                           
  1097                           ;main.c: 274:                         semaforoVerde=1;
  1098  00FF  01BF               	clrf	main@semaforoVerde^(0+128)
  1099  0100  0ABF               	incf	main@semaforoVerde^(0+128),f
  1100  0101                     l1648:	
  1101                           
  1102                           ;main.c: 278:             }
  1103  0101  3001               	movlw	1
  1104  0102  00BC               	movwf	??_main^(0+128)
  1105  0103  083C               	movf	??_main^(0+128),w
  1106  0104  07C0               	addwf	main@i^(0+128),f
  1107  0105                     l1650:	
  1108  0105  3004               	movlw	4
  1109  0106  0240               	subwf	main@i^(0+128),w
  1110  0107  1C03               	skipc
  1111  0108  290A               	goto	u1471
  1112  0109  290B               	goto	u1470
  1113  010A                     u1471:	
  1114  010A  289B               	goto	l1614
  1115  010B                     u1470:	
  1116  010B                     l1652:	
  1117                           
  1118                           ;main.c: 285:         if(scattoSemafori==1)
  1119  010B  0348               	decf	_scattoSemafori^(0+128),w
  1120  010C  1D03               	btfss	3,2
  1121  010D  290F               	goto	u1481
  1122  010E  2910               	goto	u1480
  1123  010F                     u1481:	
  1124  010F  29EC               	goto	l1668
  1125  0110                     u1480:	
  1126  0110                     l1654:	
  1127                           
  1128                           ;main.c: 286:         {;main.c: 288:             messageTransmission(1, 1, 0, 10);
  1129  0110  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1130  0111  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1131  0112  01AC               	clrf	messageTransmission@codice^(0+128)
  1132  0113  300A               	movlw	10
  1133  0114  00BC               	movwf	??_main^(0+128)
  1134  0115  083C               	movf	??_main^(0+128),w
  1135  0116  00AD               	movwf	messageTransmission@valore^(0+128)
  1136  0117  3001               	movlw	1
  1137  0118  120A  118A  26A1  120A  118A  	fcall	_messageTransmission
  1138                           
  1139                           ;main.c: 289:             messageTransmission(1, 2, 1, 60);
  1140  011D  3002               	movlw	2
  1141  011E  1683               	bsf	3,5	;RP0=1, select bank1
  1142  011F  1303               	bcf	3,6	;RP1=0, select bank1
  1143  0120  00BC               	movwf	??_main^(0+128)
  1144  0121  083C               	movf	??_main^(0+128),w
  1145  0122  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1146  0123  01AC               	clrf	messageTransmission@codice^(0+128)
  1147  0124  0AAC               	incf	messageTransmission@codice^(0+128),f
  1148  0125  303C               	movlw	60
  1149  0126  00BD               	movwf	(??_main+1)^(0+128)
  1150  0127  083D               	movf	(??_main+1)^(0+128),w
  1151  0128  00AD               	movwf	messageTransmission@valore^(0+128)
  1152  0129  3001               	movlw	1
  1153  012A  120A  118A  26A1  120A  118A  	fcall	_messageTransmission
  1154                           
  1155                           ;main.c: 290:             messageTransmission(1, 4, 2, 1);
  1156  012F  3004               	movlw	4
  1157  0130  1683               	bsf	3,5	;RP0=1, select bank1
  1158  0131  1303               	bcf	3,6	;RP1=0, select bank1
  1159  0132  00BC               	movwf	??_main^(0+128)
  1160  0133  083C               	movf	??_main^(0+128),w
  1161  0134  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1162  0135  3002               	movlw	2
  1163  0136  00BD               	movwf	(??_main+1)^(0+128)
  1164  0137  083D               	movf	(??_main+1)^(0+128),w
  1165  0138  00AC               	movwf	messageTransmission@codice^(0+128)
  1166  0139  01AD               	clrf	messageTransmission@valore^(0+128)
  1167  013A  0AAD               	incf	messageTransmission@valore^(0+128),f
  1168  013B  3001               	movlw	1
  1169  013C  120A  118A  26A1  120A  118A  	fcall	_messageTransmission
  1170                           
  1171                           ;main.c: 292:             messageTransmission(2, 0, 3, semafori[0]);
  1172  0141  1683               	bsf	3,5	;RP0=1, select bank1
  1173  0142  1303               	bcf	3,6	;RP1=0, select bank1
  1174  0143  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1175  0144  3003               	movlw	3
  1176  0145  00BC               	movwf	??_main^(0+128)
  1177  0146  083C               	movf	??_main^(0+128),w
  1178  0147  00AC               	movwf	messageTransmission@codice^(0+128)
  1179  0148  0841               	movf	_semafori^(0+128),w
  1180  0149  00BD               	movwf	(??_main+1)^(0+128)
  1181  014A  083D               	movf	(??_main+1)^(0+128),w
  1182  014B  00AD               	movwf	messageTransmission@valore^(0+128)
  1183  014C  3002               	movlw	2
  1184  014D  120A  118A  26A1  120A  118A  	fcall	_messageTransmission
  1185                           
  1186                           ;main.c: 293:             messageTransmission(2, 1, 3, semafori[1]);
  1187  0152  1683               	bsf	3,5	;RP0=1, select bank1
  1188  0153  1303               	bcf	3,6	;RP1=0, select bank1
  1189  0154  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1190  0155  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1191  0156  3003               	movlw	3
  1192  0157  00BC               	movwf	??_main^(0+128)
  1193  0158  083C               	movf	??_main^(0+128),w
  1194  0159  00AC               	movwf	messageTransmission@codice^(0+128)
  1195  015A  0842               	movf	(_semafori^(0+128)+1),w
  1196  015B  00BD               	movwf	(??_main+1)^(0+128)
  1197  015C  083D               	movf	(??_main+1)^(0+128),w
  1198  015D  00AD               	movwf	messageTransmission@valore^(0+128)
  1199  015E  3002               	movlw	2
  1200  015F  120A  118A  26A1  120A  118A  	fcall	_messageTransmission
  1201                           
  1202                           ;main.c: 294:             messageTransmission(2, 2, 3, semafori[2]);
  1203  0164  3002               	movlw	2
  1204  0165  1683               	bsf	3,5	;RP0=1, select bank1
  1205  0166  1303               	bcf	3,6	;RP1=0, select bank1
  1206  0167  00BC               	movwf	??_main^(0+128)
  1207  0168  083C               	movf	??_main^(0+128),w
  1208  0169  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1209  016A  3003               	movlw	3
  1210  016B  00BD               	movwf	(??_main+1)^(0+128)
  1211  016C  083D               	movf	(??_main+1)^(0+128),w
  1212  016D  00AC               	movwf	messageTransmission@codice^(0+128)
  1213  016E  0843               	movf	(_semafori^(0+128)+2),w
  1214  016F  00BE               	movwf	(??_main+2)^(0+128)
  1215  0170  083E               	movf	(??_main+2)^(0+128),w
  1216  0171  00AD               	movwf	messageTransmission@valore^(0+128)
  1217  0172  3002               	movlw	2
  1218  0173  120A  118A  26A1  120A  118A  	fcall	_messageTransmission
  1219                           
  1220                           ;main.c: 295:             messageTransmission(2, 3, 3, semafori[3]);
  1221  0178  3003               	movlw	3
  1222  0179  1683               	bsf	3,5	;RP0=1, select bank1
  1223  017A  1303               	bcf	3,6	;RP1=0, select bank1
  1224  017B  00BC               	movwf	??_main^(0+128)
  1225  017C  083C               	movf	??_main^(0+128),w
  1226  017D  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1227  017E  3003               	movlw	3
  1228  017F  00BD               	movwf	(??_main+1)^(0+128)
  1229  0180  083D               	movf	(??_main+1)^(0+128),w
  1230  0181  00AC               	movwf	messageTransmission@codice^(0+128)
  1231  0182  0844               	movf	(_semafori^(0+128)+3),w
  1232  0183  00BE               	movwf	(??_main+2)^(0+128)
  1233  0184  083E               	movf	(??_main+2)^(0+128),w
  1234  0185  00AD               	movwf	messageTransmission@valore^(0+128)
  1235  0186  3002               	movlw	2
  1236  0187  120A  118A  26A1  120A  118A  	fcall	_messageTransmission
  1237                           
  1238                           ;main.c: 297:             messageTransmission(2, 1, 4, contMoto);
  1239  018C  1683               	bsf	3,5	;RP0=1, select bank1
  1240  018D  1303               	bcf	3,6	;RP1=0, select bank1
  1241  018E  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1242  018F  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1243  0190  3004               	movlw	4
  1244  0191  00BC               	movwf	??_main^(0+128)
  1245  0192  083C               	movf	??_main^(0+128),w
  1246  0193  00AC               	movwf	messageTransmission@codice^(0+128)
  1247  0194  084F               	movf	_contMoto^(0+128),w
  1248  0195  00BD               	movwf	(??_main+1)^(0+128)
  1249  0196  083D               	movf	(??_main+1)^(0+128),w
  1250  0197  00AD               	movwf	messageTransmission@valore^(0+128)
  1251  0198  3002               	movlw	2
  1252  0199  120A  118A  26A1  120A  118A  	fcall	_messageTransmission
  1253                           
  1254                           ;main.c: 298:             messageTransmission(2, 1, 4, 4);
  1255  019E  1683               	bsf	3,5	;RP0=1, select bank1
  1256  019F  1303               	bcf	3,6	;RP1=0, select bank1
  1257  01A0  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1258  01A1  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1259  01A2  3004               	movlw	4
  1260  01A3  00BC               	movwf	??_main^(0+128)
  1261  01A4  083C               	movf	??_main^(0+128),w
  1262  01A5  00AC               	movwf	messageTransmission@codice^(0+128)
  1263  01A6  3004               	movlw	4
  1264  01A7  00BD               	movwf	(??_main+1)^(0+128)
  1265  01A8  083D               	movf	(??_main+1)^(0+128),w
  1266  01A9  00AD               	movwf	messageTransmission@valore^(0+128)
  1267  01AA  3002               	movlw	2
  1268  01AB  120A  118A  26A1  120A  118A  	fcall	_messageTransmission
  1269  01B0                     l1656:	
  1270                           
  1271                           ;main.c: 299:             contMoto=0;
  1272  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  1273  01B1  1303               	bcf	3,6	;RP1=0, select bank1
  1274  01B2  01CF               	clrf	_contMoto^(0+128)
  1275  01B3                     l1658:	
  1276                           
  1277                           ;main.c: 300:             messageTransmission(2, 1, 5, contAuto);
  1278  01B3  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1279  01B4  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1280  01B5  3005               	movlw	5
  1281  01B6  00BC               	movwf	??_main^(0+128)
  1282  01B7  083C               	movf	??_main^(0+128),w
  1283  01B8  00AC               	movwf	messageTransmission@codice^(0+128)
  1284  01B9  0850               	movf	_contAuto^(0+128),w
  1285  01BA  00BD               	movwf	(??_main+1)^(0+128)
  1286  01BB  083D               	movf	(??_main+1)^(0+128),w
  1287  01BC  00AD               	movwf	messageTransmission@valore^(0+128)
  1288  01BD  3002               	movlw	2
  1289  01BE  120A  118A  26A1  120A  118A  	fcall	_messageTransmission
  1290  01C3                     l1660:	
  1291                           
  1292                           ;main.c: 301:             messageTransmission(2, 1, 5, 7);
  1293  01C3  1683               	bsf	3,5	;RP0=1, select bank1
  1294  01C4  1303               	bcf	3,6	;RP1=0, select bank1
  1295  01C5  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1296  01C6  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1297  01C7  3005               	movlw	5
  1298  01C8  00BC               	movwf	??_main^(0+128)
  1299  01C9  083C               	movf	??_main^(0+128),w
  1300  01CA  00AC               	movwf	messageTransmission@codice^(0+128)
  1301  01CB  3007               	movlw	7
  1302  01CC  00BD               	movwf	(??_main+1)^(0+128)
  1303  01CD  083D               	movf	(??_main+1)^(0+128),w
  1304  01CE  00AD               	movwf	messageTransmission@valore^(0+128)
  1305  01CF  3002               	movlw	2
  1306  01D0  120A  118A  26A1  120A  118A  	fcall	_messageTransmission
  1307  01D5                     l1662:	
  1308                           
  1309                           ;main.c: 302:             contAuto=0;
  1310  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  1311  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  1312  01D7  01D0               	clrf	_contAuto^(0+128)
  1313                           
  1314                           ;main.c: 303:             messageTransmission(2, 1, 6, 3);
  1315  01D8  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1316  01D9  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1317  01DA  3006               	movlw	6
  1318  01DB  00BC               	movwf	??_main^(0+128)
  1319  01DC  083C               	movf	??_main^(0+128),w
  1320  01DD  00AC               	movwf	messageTransmission@codice^(0+128)
  1321  01DE  3003               	movlw	3
  1322  01DF  00BD               	movwf	(??_main+1)^(0+128)
  1323  01E0  083D               	movf	(??_main+1)^(0+128),w
  1324  01E1  00AD               	movwf	messageTransmission@valore^(0+128)
  1325  01E2  3002               	movlw	2
  1326  01E3  120A  118A  26A1  120A  118A  	fcall	_messageTransmission
  1327  01E8                     l1664:	
  1328                           
  1329                           ;main.c: 304:             contCamion=0;
  1330  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  1331  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  1332  01EA  01CE               	clrf	_contCamion^(0+128)
  1333  01EB                     l1666:	
  1334                           
  1335                           ;main.c: 305:             scattoSemafori=0;
  1336  01EB  01C8               	clrf	_scattoSemafori^(0+128)
  1337  01EC                     l1668:	
  1338                           
  1339                           ;main.c: 310:         if(received)
  1340  01EC  0852               	movf	_received^(0+128),w
  1341  01ED  1903               	btfsc	3,2
  1342  01EE  29F0               	goto	u1491
  1343  01EF  29F1               	goto	u1490
  1344  01F0                     u1491:	
  1345  01F0  2876               	goto	l1588
  1346  01F1                     u1490:	
  1347  01F1                     l1670:	
  1348                           
  1349                           ;main.c: 311:         {;main.c: 313:             temporizzazione=datoSeriale;
  1350  01F1  0851               	movf	_datoSeriale^(0+128),w
  1351  01F2  00BC               	movwf	??_main^(0+128)
  1352  01F3  083C               	movf	??_main^(0+128),w
  1353  01F4  00FC               	movwf	_temporizzazione
  1354  01F5                     l1672:	
  1355                           
  1356                           ;main.c: 317:             received=0;
  1357  01F5  01D2               	clrf	_received^(0+128)
  1358  01F6  2876               	goto	l1588
  1359  01F7  120A  118A  2816   	ljmp	start
  1360  01FA                     __end_of_main:	
  1361                           
  1362                           	psect	text1
  1363  06A1                     __ptext1:	
  1364 ;; *************** function _messageTransmission *****************
  1365 ;; Defined at:
  1366 ;;		line 427 in file "main.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  tipoMessaggi    1    wreg     unsigned char 
  1369 ;;  idStrada        1   11[BANK1 ] unsigned char 
  1370 ;;  codice          1   12[BANK1 ] unsigned char 
  1371 ;;  valore          1   13[BANK1 ] unsigned char 
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  tipoMessaggi    1   15[BANK1 ] unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1383 ;;      Params:         0       0       3       0       0
  1384 ;;      Locals:         0       0       1       0       0
  1385 ;;      Temps:          0       0       1       0       0
  1386 ;;      Totals:         0       0       5       0       0
  1387 ;;Total ram usage:        5 bytes
  1388 ;; Hardware stack levels used:    1
  1389 ;; Hardware stack levels required when called:    6
  1390 ;; This function calls:
  1391 ;;		_Uart_send_string
  1392 ;; This function is called by:
  1393 ;;		_main
  1394 ;; This function uses a non-reentrant model
  1395 ;;
  1396                           
  1397                           
  1398                           ;psect for function _messageTransmission
  1399  06A1                     _messageTransmission:	
  1400                           
  1401                           ;incstack = 0
  1402                           ; Regs used in _messageTransmission: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1403                           ;messageTransmission@tipoMessaggio stored from wreg
  1404  06A1  1683               	bsf	3,5	;RP0=1, select bank1
  1405  06A2  1303               	bcf	3,6	;RP1=0, select bank1
  1406  06A3  00AF               	movwf	messageTransmission@tipoMessaggio^(0+128)
  1407  06A4                     l1514:	
  1408                           
  1409                           ;main.c: 427: void messageTransmission(char tipoMessaggio, char idStrada, char codice, c
      +                          har valore);main.c: 428: {;main.c: 429:     strToSend[0]=tipoMessaggio;
  1410  06A4  082F               	movf	messageTransmission@tipoMessaggio^(0+128),w
  1411  06A5  00AE               	movwf	??_messageTransmission^(0+128)
  1412  06A6  082E               	movf	??_messageTransmission^(0+128),w
  1413  06A7  00D3               	movwf	_strToSend^(0+128)
  1414                           
  1415                           ;main.c: 430:     strToSend[1]=200;
  1416  06A8  30C8               	movlw	200
  1417  06A9  00AE               	movwf	??_messageTransmission^(0+128)
  1418  06AA  082E               	movf	??_messageTransmission^(0+128),w
  1419  06AB  00D4               	movwf	(_strToSend^(0+128)+1)
  1420                           
  1421                           ;main.c: 431:     strToSend[2]=4;
  1422  06AC  3004               	movlw	4
  1423  06AD  00AE               	movwf	??_messageTransmission^(0+128)
  1424  06AE  082E               	movf	??_messageTransmission^(0+128),w
  1425  06AF  00D5               	movwf	(_strToSend^(0+128)+2)
  1426                           
  1427                           ;main.c: 432:     strToSend[3]=idStrada;
  1428  06B0  082B               	movf	messageTransmission@idStrada^(0+128),w
  1429  06B1  00AE               	movwf	??_messageTransmission^(0+128)
  1430  06B2  082E               	movf	??_messageTransmission^(0+128),w
  1431  06B3  00D6               	movwf	(_strToSend^(0+128)+3)
  1432                           
  1433                           ;main.c: 433:     strToSend[4]=codice;
  1434  06B4  082C               	movf	messageTransmission@codice^(0+128),w
  1435  06B5  00AE               	movwf	??_messageTransmission^(0+128)
  1436  06B6  082E               	movf	??_messageTransmission^(0+128),w
  1437  06B7  00D7               	movwf	(_strToSend^(0+128)+4)
  1438                           
  1439                           ;main.c: 434:     strToSend[5]=valore;
  1440  06B8  082D               	movf	messageTransmission@valore^(0+128),w
  1441  06B9  00AE               	movwf	??_messageTransmission^(0+128)
  1442  06BA  082E               	movf	??_messageTransmission^(0+128),w
  1443  06BB  00D8               	movwf	(_strToSend^(0+128)+5)
  1444  06BC                     l1516:	
  1445                           
  1446                           ;main.c: 435:     Uart_send_string(strToSend);
  1447  06BC  30D3               	movlw	(low (_strToSend| 0))& (0+255)
  1448  06BD  120A  118A  2724  120A  118A  	fcall	_Uart_send_string
  1449  06C2                     l176:	
  1450  06C2  0008               	return
  1451  06C3                     __end_of_messageTransmission:	
  1452                           
  1453                           	psect	text2
  1454  0724                     __ptext2:	
  1455 ;; *************** function _Uart_send_string *****************
  1456 ;; Defined at:
  1457 ;;		line 439 in file "main.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;  str             1    wreg     PTR unsigned char 
  1460 ;;		 -> strToSend(8), 
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;  str             1    9[BANK1 ] PTR unsigned char 
  1463 ;;		 -> strToSend(8), 
  1464 ;;  i               1   10[BANK1 ] unsigned char 
  1465 ;; Return value:  Size  Location     Type
  1466 ;;                  1    wreg      void 
  1467 ;; Registers used:
  1468 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1469 ;; Tracked objects:
  1470 ;;		On entry : 0/0
  1471 ;;		On exit  : 0/0
  1472 ;;		Unchanged: 0/0
  1473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1474 ;;      Params:         0       0       0       0       0
  1475 ;;      Locals:         0       0       2       0       0
  1476 ;;      Temps:          0       0       1       0       0
  1477 ;;      Totals:         0       0       3       0       0
  1478 ;;Total ram usage:        3 bytes
  1479 ;; Hardware stack levels used:    1
  1480 ;; Hardware stack levels required when called:    5
  1481 ;; This function calls:
  1482 ;;		_UART_TxChar
  1483 ;; This function is called by:
  1484 ;;		_messageTransmission
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           
  1488                           
  1489                           ;psect for function _Uart_send_string
  1490  0724                     _Uart_send_string:	
  1491                           
  1492                           ;incstack = 0
  1493                           ; Regs used in _Uart_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1494                           ;Uart_send_string@str stored from wreg
  1495  0724  1683               	bsf	3,5	;RP0=1, select bank1
  1496  0725  1303               	bcf	3,6	;RP1=0, select bank1
  1497  0726  00A9               	movwf	Uart_send_string@str^(0+128)
  1498  0727                     l1322:	
  1499                           
  1500                           ;main.c: 439: void Uart_send_string(char *str);main.c: 440: {;main.c: 441:     char i;;m
      +                          ain.c: 442:     for(i=0;i<6;i++)
  1501  0727  01AA               	clrf	Uart_send_string@i^(0+128)
  1502  0728                     l1328:	
  1503                           
  1504                           ;main.c: 443:     {;main.c: 444:         UART_TxChar(*(str+i));
  1505  0728  082A               	movf	Uart_send_string@i^(0+128),w
  1506  0729  0729               	addwf	Uart_send_string@str^(0+128),w
  1507  072A  00A8               	movwf	??_Uart_send_string^(0+128)
  1508  072B  0828               	movf	??_Uart_send_string^(0+128),w
  1509  072C  0084               	movwf	4
  1510  072D  1383               	bcf	3,7	;select IRP bank0
  1511  072E  0800               	movf	0,w
  1512  072F  120A  118A  2754  120A  118A  	fcall	_UART_TxChar
  1513  0734                     l1330:	
  1514                           
  1515                           ;main.c: 445:     }
  1516  0734  3001               	movlw	1
  1517  0735  1683               	bsf	3,5	;RP0=1, select bank1
  1518  0736  1303               	bcf	3,6	;RP1=0, select bank1
  1519  0737  00A8               	movwf	??_Uart_send_string^(0+128)
  1520  0738  0828               	movf	??_Uart_send_string^(0+128),w
  1521  0739  07AA               	addwf	Uart_send_string@i^(0+128),f
  1522  073A                     l1332:	
  1523  073A  3006               	movlw	6
  1524  073B  022A               	subwf	Uart_send_string@i^(0+128),w
  1525  073C  1C03               	skipc
  1526  073D  2F3F               	goto	u891
  1527  073E  2F40               	goto	u890
  1528  073F                     u891:	
  1529  073F  2F28               	goto	l1328
  1530  0740                     u890:	
  1531  0740                     l181:	
  1532  0740  0008               	return
  1533  0741                     __end_of_Uart_send_string:	
  1534                           
  1535                           	psect	text3
  1536  0754                     __ptext3:	
  1537 ;; *************** function _UART_TxChar *****************
  1538 ;; Defined at:
  1539 ;;		line 608 in file "main.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  dato            1    wreg     unsigned char 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  dato            1    7[BANK1 ] unsigned char 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1553 ;;      Params:         0       0       0       0       0
  1554 ;;      Locals:         0       0       1       0       0
  1555 ;;      Temps:          0       0       0       0       0
  1556 ;;      Totals:         0       0       1       0       0
  1557 ;;Total ram usage:        1 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    4
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_Uart_send_string
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _UART_TxChar
  1569  0754                     _UART_TxChar:	
  1570                           
  1571                           ;incstack = 0
  1572                           ; Regs used in _UART_TxChar: [wreg]
  1573                           ;UART_TxChar@dato stored from wreg
  1574  0754  1683               	bsf	3,5	;RP0=1, select bank1
  1575  0755  1303               	bcf	3,6	;RP1=0, select bank1
  1576  0756  00A7               	movwf	UART_TxChar@dato^(0+128)
  1577  0757                     l1298:	
  1578  0757                     l239:	
  1579                           ;main.c: 608: void UART_TxChar(char dato);main.c: 609: {;main.c: 610:     while (!TXIF);
  1580                           
  1581  0757  1283               	bcf	3,5	;RP0=0, select bank0
  1582  0758  1E0C               	btfss	12,4	;volatile
  1583  0759  2F5B               	goto	u881
  1584  075A  2F5C               	goto	u880
  1585  075B                     u881:	
  1586  075B  2F57               	goto	l239
  1587  075C                     u880:	
  1588  075C                     l241:	
  1589                           
  1590                           ;main.c: 611:     TXIF = 0;
  1591  075C  120C               	bcf	12,4	;volatile
  1592  075D                     l1300:	
  1593                           
  1594                           ;main.c: 612:     TXREG = dato;
  1595  075D  1683               	bsf	3,5	;RP0=1, select bank1
  1596  075E  1303               	bcf	3,6	;RP1=0, select bank1
  1597  075F  0827               	movf	UART_TxChar@dato^(0+128),w
  1598  0760  1283               	bcf	3,5	;RP0=0, select bank0
  1599  0761  1303               	bcf	3,6	;RP1=0, select bank0
  1600  0762  0099               	movwf	25	;volatile
  1601  0763                     l242:	
  1602  0763  0008               	return
  1603  0764                     __end_of_UART_TxChar:	
  1604                           
  1605                           	psect	text4
  1606  05A4                     __ptext4:	
  1607 ;; *************** function _init_lcd *****************
  1608 ;; Defined at:
  1609 ;;		line 575 in file "main.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0, pclath, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         0       0       0       0       0
  1624 ;;      Locals:         0       0       0       0       0
  1625 ;;      Temps:          0       0       2       0       0
  1626 ;;      Totals:         0       0       2       0       0
  1627 ;;Total ram usage:        2 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    5
  1630 ;; This function calls:
  1631 ;;		_send_cmd
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           
  1638                           ;psect for function _init_lcd
  1639  05A4                     _init_lcd:	
  1640  05A4                     l1490:	
  1641                           ;incstack = 0
  1642                           ; Regs used in _init_lcd: [wreg+status,2+status,0+pclath+cstack]
  1643                           
  1644                           
  1645                           ;main.c: 577:     PORTEbits.RE2 = 0;
  1646  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1647  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1648  05A6  1109               	bcf	9,2	;volatile
  1649                           
  1650                           ;main.c: 578:     PORTEbits.RE1 = 0;
  1651  05A7  1089               	bcf	9,1	;volatile
  1652  05A8                     l1492:	
  1653                           
  1654                           ;main.c: 579:     _delay((unsigned long)((20)*(32000000L/4000.0)));
  1655  05A8  30D0               	movlw	208
  1656  05A9  1683               	bsf	3,5	;RP0=1, select bank1
  1657  05AA  1303               	bcf	3,6	;RP1=0, select bank1
  1658  05AB  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1659  05AC  30C9               	movlw	201
  1660  05AD  00AA               	movwf	??_init_lcd^(0+128)
  1661  05AE                     u1737:	
  1662  05AE  0BAA               	decfsz	??_init_lcd^(0+128),f
  1663  05AF  2DAE               	goto	u1737
  1664  05B0  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1665  05B1  2DAE               	goto	u1737
  1666  05B2                     l1494:	
  1667                           
  1668                           ;main.c: 580:     PORTEbits.RE1 = 1;
  1669  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  1670  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  1671  05B4  1489               	bsf	9,1	;volatile
  1672  05B5                     l1496:	
  1673                           
  1674                           ;main.c: 581:     send_cmd(0x38);
  1675  05B5  3038               	movlw	56
  1676  05B6  120A  118A  2679  120A  118A  	fcall	_send_cmd
  1677  05BB                     l1498:	
  1678                           
  1679                           ;main.c: 582:     _delay((unsigned long)((5)*(32000000L/4000.0)));
  1680  05BB  3034               	movlw	52
  1681  05BC  1683               	bsf	3,5	;RP0=1, select bank1
  1682  05BD  1303               	bcf	3,6	;RP1=0, select bank1
  1683  05BE  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1684  05BF  30F1               	movlw	241
  1685  05C0  00AA               	movwf	??_init_lcd^(0+128)
  1686  05C1                     u1747:	
  1687  05C1  0BAA               	decfsz	??_init_lcd^(0+128),f
  1688  05C2  2DC1               	goto	u1747
  1689  05C3  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1690  05C4  2DC1               	goto	u1747
  1691                           
  1692                           ;main.c: 583:     send_cmd(0x38);
  1693  05C5  3038               	movlw	56
  1694  05C6  120A  118A  2679  120A  118A  	fcall	_send_cmd
  1695  05CB                     l1500:	
  1696                           
  1697                           ;main.c: 584:     _delay((unsigned long)((1)*(32000000L/4000.0)));
  1698  05CB  300B               	movlw	11
  1699  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  1700  05CD  1303               	bcf	3,6	;RP1=0, select bank1
  1701  05CE  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1702  05CF  3061               	movlw	97
  1703  05D0  00AA               	movwf	??_init_lcd^(0+128)
  1704  05D1                     u1757:	
  1705  05D1  0BAA               	decfsz	??_init_lcd^(0+128),f
  1706  05D2  2DD1               	goto	u1757
  1707  05D3  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1708  05D4  2DD1               	goto	u1757
  1709  05D5  2DD6               	nop2
  1710  05D6                     l1502:	
  1711                           
  1712                           ;main.c: 585:     send_cmd(0x38);
  1713  05D6  3038               	movlw	56
  1714  05D7  120A  118A  2679  120A  118A  	fcall	_send_cmd
  1715  05DC                     l1504:	
  1716                           
  1717                           ;main.c: 586:     send_cmd(0x08);
  1718  05DC  3008               	movlw	8
  1719  05DD  120A  118A  2679  120A  118A  	fcall	_send_cmd
  1720  05E2                     l1506:	
  1721                           
  1722                           ;main.c: 587:     send_cmd(0x0F);
  1723  05E2  300F               	movlw	15
  1724  05E3  120A  118A  2679  120A  118A  	fcall	_send_cmd
  1725  05E8                     l1508:	
  1726                           
  1727                           ;main.c: 588:     send_cmd(0x01);
  1728  05E8  3001               	movlw	1
  1729  05E9  120A  118A  2679  120A  118A  	fcall	_send_cmd
  1730  05EE                     l1510:	
  1731                           
  1732                           ;main.c: 589:     send_cmd(0x0C);
  1733  05EE  300C               	movlw	12
  1734  05EF  120A  118A  2679  120A  118A  	fcall	_send_cmd
  1735  05F4                     l1512:	
  1736                           
  1737                           ;main.c: 590:     send_cmd(0x80);
  1738  05F4  3080               	movlw	128
  1739  05F5  120A  118A  2679  120A  118A  	fcall	_send_cmd
  1740  05FA                     l233:	
  1741  05FA  0008               	return
  1742  05FB                     __end_of_init_lcd:	
  1743                           
  1744                           	psect	text5
  1745  0679                     __ptext5:	
  1746 ;; *************** function _send_cmd *****************
  1747 ;; Defined at:
  1748 ;;		line 563 in file "main.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  command         1    wreg     unsigned char 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  command         1    9[BANK1 ] unsigned char 
  1753 ;; Return value:  Size  Location     Type
  1754 ;;                  1    wreg      void 
  1755 ;; Registers used:
  1756 ;;		wreg
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1762 ;;      Params:         0       0       0       0       0
  1763 ;;      Locals:         0       0       1       0       0
  1764 ;;      Temps:          0       0       2       0       0
  1765 ;;      Totals:         0       0       3       0       0
  1766 ;;Total ram usage:        3 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:    4
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_main
  1773 ;;		_init_lcd
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function _send_cmd
  1779  0679                     _send_cmd:	
  1780                           
  1781                           ;incstack = 0
  1782                           ; Regs used in _send_cmd: [wreg]
  1783                           ;send_cmd@command stored from wreg
  1784  0679  1683               	bsf	3,5	;RP0=1, select bank1
  1785  067A  1303               	bcf	3,6	;RP1=0, select bank1
  1786  067B  00A9               	movwf	send_cmd@command^(0+128)
  1787  067C                     l1312:	
  1788                           
  1789                           ;main.c: 563: void send_cmd(char command);main.c: 564: {;main.c: 565:     PORTEbits.RE1 
      +                          = 1;
  1790  067C  1283               	bcf	3,5	;RP0=0, select bank0
  1791  067D  1303               	bcf	3,6	;RP1=0, select bank0
  1792  067E  1489               	bsf	9,1	;volatile
  1793  067F                     l1314:	
  1794                           
  1795                           ;main.c: 566:     PORTD = command;
  1796  067F  1683               	bsf	3,5	;RP0=1, select bank1
  1797  0680  1303               	bcf	3,6	;RP1=0, select bank1
  1798  0681  0829               	movf	send_cmd@command^(0+128),w
  1799  0682  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0683  1303               	bcf	3,6	;RP1=0, select bank0
  1801  0684  0088               	movwf	8	;volatile
  1802  0685                     l1316:	
  1803                           
  1804                           ;main.c: 567:     PORTEbits.RE2 = 0;
  1805  0685  1109               	bcf	9,2	;volatile
  1806                           
  1807                           ;main.c: 568:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  1808  0686  3020               	movlw	32
  1809  0687  1683               	bsf	3,5	;RP0=1, select bank1
  1810  0688  1303               	bcf	3,6	;RP1=0, select bank1
  1811  0689  00A8               	movwf	(??_send_cmd^(0+128)+1)
  1812  068A  3029               	movlw	41
  1813  068B  00A7               	movwf	??_send_cmd^(0+128)
  1814  068C                     u1767:	
  1815  068C  0BA7               	decfsz	??_send_cmd^(0+128),f
  1816  068D  2E8C               	goto	u1767
  1817  068E  0BA8               	decfsz	(??_send_cmd^(0+128)+1),f
  1818  068F  2E8C               	goto	u1767
  1819  0690                     l1318:	
  1820                           
  1821                           ;main.c: 569:     PORTEbits.RE1 = 0;
  1822  0690  1283               	bcf	3,5	;RP0=0, select bank0
  1823  0691  1303               	bcf	3,6	;RP1=0, select bank0
  1824  0692  1089               	bcf	9,1	;volatile
  1825                           
  1826                           ;main.c: 570:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  1827  0693  3020               	movlw	32
  1828  0694  1683               	bsf	3,5	;RP0=1, select bank1
  1829  0695  1303               	bcf	3,6	;RP1=0, select bank1
  1830  0696  00A8               	movwf	(??_send_cmd^(0+128)+1)
  1831  0697  3029               	movlw	41
  1832  0698  00A7               	movwf	??_send_cmd^(0+128)
  1833  0699                     u1777:	
  1834  0699  0BA7               	decfsz	??_send_cmd^(0+128),f
  1835  069A  2E99               	goto	u1777
  1836  069B  0BA8               	decfsz	(??_send_cmd^(0+128)+1),f
  1837  069C  2E99               	goto	u1777
  1838  069D                     l1320:	
  1839                           
  1840                           ;main.c: 571:     PORTEbits.RE1 = 1;
  1841  069D  1283               	bcf	3,5	;RP0=0, select bank0
  1842  069E  1303               	bcf	3,6	;RP1=0, select bank0
  1843  069F  1489               	bsf	9,1	;volatile
  1844  06A0                     l230:	
  1845  06A0  0008               	return
  1846  06A1                     __end_of_send_cmd:	
  1847                           
  1848                           	psect	text6
  1849  0764                     __ptext6:	
  1850 ;; *************** function _initPic *****************
  1851 ;; Defined at:
  1852 ;;		line 449 in file "main.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;		None
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;		None
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg, status,2
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1866 ;;      Params:         0       0       0       0       0
  1867 ;;      Locals:         0       0       0       0       0
  1868 ;;      Temps:          0       0       0       0       0
  1869 ;;      Totals:         0       0       0       0       0
  1870 ;;Total ram usage:        0 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    4
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_main
  1877 ;; This function uses a non-reentrant model
  1878 ;;
  1879                           
  1880                           
  1881                           ;psect for function _initPic
  1882  0764                     _initPic:	
  1883  0764                     l1474:	
  1884                           ;incstack = 0
  1885                           ; Regs used in _initPic: [wreg+status,2]
  1886                           
  1887                           
  1888                           ;main.c: 451:     TRISD = 0x00;
  1889  0764  1683               	bsf	3,5	;RP0=1, select bank1
  1890  0765  1303               	bcf	3,6	;RP1=0, select bank1
  1891  0766  0188               	clrf	8	;volatile
  1892  0767                     l1476:	
  1893                           
  1894                           ;main.c: 452:     TRISB = 0xFF;
  1895  0767  30FF               	movlw	255
  1896  0768  0086               	movwf	6	;volatile
  1897  0769                     l1478:	
  1898                           
  1899                           ;main.c: 453:     TRISE = 0x00;
  1900  0769  0189               	clrf	9	;volatile
  1901                           
  1902                           ;main.c: 455:     INTCON = 0xA0;
  1903  076A  30A0               	movlw	160
  1904  076B  008B               	movwf	11	;volatile
  1905                           
  1906                           ;main.c: 456:     OPTION_REG = 0x07;
  1907  076C  3007               	movlw	7
  1908  076D  0081               	movwf	1	;volatile
  1909                           
  1910                           ;main.c: 457:     TMR0 = 6;
  1911  076E  3006               	movlw	6
  1912  076F  1283               	bcf	3,5	;RP0=0, select bank0
  1913  0770  1303               	bcf	3,6	;RP1=0, select bank0
  1914  0771  0081               	movwf	1	;volatile
  1915  0772                     l184:	
  1916  0772  0008               	return
  1917  0773                     __end_of_initPic:	
  1918                           
  1919                           	psect	text7
  1920  063F                     __ptext7:	
  1921 ;; *************** function _UART_init *****************
  1922 ;; Defined at:
  1923 ;;		line 595 in file "main.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  baudrate        2   22[BANK1 ] int 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;		None
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      void 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0, pclath, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1937 ;;      Params:         0       0       2       0       0
  1938 ;;      Locals:         0       0       0       0       0
  1939 ;;      Temps:          0       0       4       0       0
  1940 ;;      Totals:         0       0       6       0       0
  1941 ;;Total ram usage:        6 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    5
  1944 ;; This function calls:
  1945 ;;		___aldiv
  1946 ;; This function is called by:
  1947 ;;		_main
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           
  1952                           ;psect for function _UART_init
  1953  063F                     _UART_init:	
  1954  063F                     l1480:	
  1955                           ;incstack = 0
  1956                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  1957                           
  1958                           
  1959                           ;main.c: 595: void UART_init(int baudrate);main.c: 596: {;main.c: 597:     TRISCbits.TRI
      +                          SC6 = 0;
  1960  063F  1683               	bsf	3,5	;RP0=1, select bank1
  1961  0640  1303               	bcf	3,6	;RP1=0, select bank1
  1962  0641  1307               	bcf	7,6	;volatile
  1963                           
  1964                           ;main.c: 598:     TXSTAbits.TXEN = 1;
  1965  0642  1698               	bsf	24,5	;volatile
  1966                           
  1967                           ;main.c: 599:     RCSTAbits.SPEN = 1;
  1968  0643  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0644  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0645  1798               	bsf	24,7	;volatile
  1971                           
  1972                           ;main.c: 600:     RCSTAbits.CREN = 1;
  1973  0646  1618               	bsf	24,4	;volatile
  1974  0647                     l1482:	
  1975                           
  1976                           ;main.c: 601:     SPBRG = (32000000L/(long)(64UL*baudrate))-1;
  1977  0647  1683               	bsf	3,5	;RP0=1, select bank1
  1978  0648  1303               	bcf	3,6	;RP1=0, select bank1
  1979  0649  0836               	movf	UART_init@baudrate^(0+128),w
  1980  064A  00B8               	movwf	??_UART_init^(0+128)
  1981  064B  0837               	movf	(UART_init@baudrate+1)^(0+128),w
  1982  064C  00B9               	movwf	(??_UART_init^(0+128)+1)
  1983  064D  3000               	movlw	0
  1984  064E  1BB9               	btfsc	(??_UART_init^(0+128)+1),7
  1985  064F  30FF               	movlw	255
  1986  0650  00BA               	movwf	(??_UART_init^(0+128)+2)
  1987  0651  00BB               	movwf	(??_UART_init^(0+128)+3)
  1988  0652  3006               	movlw	6
  1989  0653                     u1205:	
  1990  0653  1003               	clrc
  1991  0654  0DB8               	rlf	??_UART_init^(0+128),f
  1992  0655  0DB9               	rlf	(??_UART_init^(0+128)+1),f
  1993  0656  0DBA               	rlf	(??_UART_init^(0+128)+2),f
  1994  0657  0DBB               	rlf	(??_UART_init^(0+128)+3),f
  1995  0658                     u1200:	
  1996  0658  3EFF               	addlw	-1
  1997  0659  1D03               	skipz
  1998  065A  2E53               	goto	u1205
  1999  065B  083B               	movf	(??_UART_init+3)^(0+128),w
  2000  065C  00AA               	movwf	(___aldiv@divisor+3)^(0+128)
  2001  065D  083A               	movf	(??_UART_init+2)^(0+128),w
  2002  065E  00A9               	movwf	(___aldiv@divisor+2)^(0+128)
  2003  065F  0839               	movf	(??_UART_init+1)^(0+128),w
  2004  0660  00A8               	movwf	(___aldiv@divisor+1)^(0+128)
  2005  0661  0838               	movf	??_UART_init^(0+128),w
  2006  0662  00A7               	movwf	___aldiv@divisor^(0+128)
  2007  0663  3001               	movlw	1
  2008  0664  00AE               	movwf	(___aldiv@dividend+3)^(0+128)
  2009  0665  30E8               	movlw	232
  2010  0666  00AD               	movwf	(___aldiv@dividend+2)^(0+128)
  2011  0667  3048               	movlw	72
  2012  0668  00AC               	movwf	(___aldiv@dividend+1)^(0+128)
  2013  0669  3000               	movlw	0
  2014  066A  00AB               	movwf	___aldiv@dividend^(0+128)
  2015  066B  120A  118A  2447  120A  118A  	fcall	___aldiv
  2016  0670  1683               	bsf	3,5	;RP0=1, select bank1
  2017  0671  1303               	bcf	3,6	;RP1=0, select bank1
  2018  0672  0827               	movf	?___aldiv^(0+128),w
  2019  0673  3EFF               	addlw	255
  2020  0674  0099               	movwf	25	;volatile
  2021  0675                     l1484:	
  2022                           
  2023                           ;main.c: 602:     INTCONbits.GIE = 1;
  2024  0675  178B               	bsf	11,7	;volatile
  2025  0676                     l1486:	
  2026                           
  2027                           ;main.c: 603:     INTCONbits.PEIE = 1;
  2028  0676  170B               	bsf	11,6	;volatile
  2029  0677                     l1488:	
  2030                           
  2031                           ;main.c: 604:     PIE1bits.RCIE = 1;
  2032  0677  168C               	bsf	12,5	;volatile
  2033  0678                     l236:	
  2034  0678  0008               	return
  2035  0679                     __end_of_UART_init:	
  2036                           
  2037                           	psect	text8
  2038  0447                     __ptext8:	
  2039 ;; *************** function ___aldiv *****************
  2040 ;; Defined at:
  2041 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;  divisor         4    7[BANK1 ] long 
  2044 ;;  dividend        4   11[BANK1 ] long 
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  quotient        4   18[BANK1 ] long 
  2047 ;;  sign            1   17[BANK1 ] unsigned char 
  2048 ;;  counter         1   16[BANK1 ] unsigned char 
  2049 ;; Return value:  Size  Location     Type
  2050 ;;                  4    7[BANK1 ] long 
  2051 ;; Registers used:
  2052 ;;		wreg, status,2, status,0
  2053 ;; Tracked objects:
  2054 ;;		On entry : 0/0
  2055 ;;		On exit  : 0/0
  2056 ;;		Unchanged: 0/0
  2057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2058 ;;      Params:         0       0       8       0       0
  2059 ;;      Locals:         0       0       6       0       0
  2060 ;;      Temps:          0       0       1       0       0
  2061 ;;      Totals:         0       0      15       0       0
  2062 ;;Total ram usage:       15 bytes
  2063 ;; Hardware stack levels used:    1
  2064 ;; Hardware stack levels required when called:    4
  2065 ;; This function calls:
  2066 ;;		Nothing
  2067 ;; This function is called by:
  2068 ;;		_UART_init
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           
  2073                           ;psect for function ___aldiv
  2074  0447                     ___aldiv:	
  2075  0447                     l1342:	
  2076                           ;incstack = 0
  2077                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2078                           
  2079  0447  1683               	bsf	3,5	;RP0=1, select bank1
  2080  0448  1303               	bcf	3,6	;RP1=0, select bank1
  2081  0449  01B1               	clrf	___aldiv@sign^(0+128)
  2082  044A                     l1344:	
  2083  044A  1FAA               	btfss	(___aldiv@divisor+3)^(0+128),7
  2084  044B  2C4D               	goto	u911
  2085  044C  2C4E               	goto	u910
  2086  044D                     u911:	
  2087  044D  2C5B               	goto	l393
  2088  044E                     u910:	
  2089  044E                     l1346:	
  2090  044E  09A7               	comf	___aldiv@divisor^(0+128),f
  2091  044F  09A8               	comf	(___aldiv@divisor+1)^(0+128),f
  2092  0450  09A9               	comf	(___aldiv@divisor+2)^(0+128),f
  2093  0451  09AA               	comf	(___aldiv@divisor+3)^(0+128),f
  2094  0452  0AA7               	incf	___aldiv@divisor^(0+128),f
  2095  0453  1903               	skipnz
  2096  0454  0AA8               	incf	(___aldiv@divisor+1)^(0+128),f
  2097  0455  1903               	skipnz
  2098  0456  0AA9               	incf	(___aldiv@divisor+2)^(0+128),f
  2099  0457  1903               	skipnz
  2100  0458  0AAA               	incf	(___aldiv@divisor+3)^(0+128),f
  2101  0459  01B1               	clrf	___aldiv@sign^(0+128)
  2102  045A  0AB1               	incf	___aldiv@sign^(0+128),f
  2103  045B                     l393:	
  2104  045B  1FAE               	btfss	(___aldiv@dividend+3)^(0+128),7
  2105  045C  2C5E               	goto	u921
  2106  045D  2C5F               	goto	u920
  2107  045E                     u921:	
  2108  045E  2C6E               	goto	l1352
  2109  045F                     u920:	
  2110  045F                     l1348:	
  2111  045F  09AB               	comf	___aldiv@dividend^(0+128),f
  2112  0460  09AC               	comf	(___aldiv@dividend+1)^(0+128),f
  2113  0461  09AD               	comf	(___aldiv@dividend+2)^(0+128),f
  2114  0462  09AE               	comf	(___aldiv@dividend+3)^(0+128),f
  2115  0463  0AAB               	incf	___aldiv@dividend^(0+128),f
  2116  0464  1903               	skipnz
  2117  0465  0AAC               	incf	(___aldiv@dividend+1)^(0+128),f
  2118  0466  1903               	skipnz
  2119  0467  0AAD               	incf	(___aldiv@dividend+2)^(0+128),f
  2120  0468  1903               	skipnz
  2121  0469  0AAE               	incf	(___aldiv@dividend+3)^(0+128),f
  2122  046A                     l1350:	
  2123  046A  3001               	movlw	1
  2124  046B  00AF               	movwf	??___aldiv^(0+128)
  2125  046C  082F               	movf	??___aldiv^(0+128),w
  2126  046D  06B1               	xorwf	___aldiv@sign^(0+128),f
  2127  046E                     l1352:	
  2128  046E  3000               	movlw	0
  2129  046F  00B5               	movwf	(___aldiv@quotient+3)^(0+128)
  2130  0470  3000               	movlw	0
  2131  0471  00B4               	movwf	(___aldiv@quotient+2)^(0+128)
  2132  0472  3000               	movlw	0
  2133  0473  00B3               	movwf	(___aldiv@quotient+1)^(0+128)
  2134  0474  3000               	movlw	0
  2135  0475  00B2               	movwf	___aldiv@quotient^(0+128)
  2136  0476                     l1354:	
  2137  0476  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2138  0477  0429               	iorwf	(___aldiv@divisor+2)^(0+128),w
  2139  0478  0428               	iorwf	(___aldiv@divisor+1)^(0+128),w
  2140  0479  0427               	iorwf	___aldiv@divisor^(0+128),w
  2141  047A  1903               	skipnz
  2142  047B  2C7D               	goto	u931
  2143  047C  2C7E               	goto	u930
  2144  047D                     u931:	
  2145  047D  2CCB               	goto	l1374
  2146  047E                     u930:	
  2147  047E                     l1356:	
  2148  047E  01B0               	clrf	___aldiv@counter^(0+128)
  2149  047F  0AB0               	incf	___aldiv@counter^(0+128),f
  2150  0480  2C8E               	goto	l1360
  2151  0481                     l1358:	
  2152  0481  3001               	movlw	1
  2153  0482  00AF               	movwf	??___aldiv^(0+128)
  2154  0483                     u945:	
  2155  0483  1003               	clrc
  2156  0484  0DA7               	rlf	___aldiv@divisor^(0+128),f
  2157  0485  0DA8               	rlf	(___aldiv@divisor+1)^(0+128),f
  2158  0486  0DA9               	rlf	(___aldiv@divisor+2)^(0+128),f
  2159  0487  0DAA               	rlf	(___aldiv@divisor+3)^(0+128),f
  2160  0488  0BAF               	decfsz	??___aldiv^(0+128),f
  2161  0489  2C83               	goto	u945
  2162  048A  3001               	movlw	1
  2163  048B  00AF               	movwf	??___aldiv^(0+128)
  2164  048C  082F               	movf	??___aldiv^(0+128),w
  2165  048D  07B0               	addwf	___aldiv@counter^(0+128),f
  2166  048E                     l1360:	
  2167  048E  1FAA               	btfss	(___aldiv@divisor+3)^(0+128),7
  2168  048F  2C91               	goto	u951
  2169  0490  2C92               	goto	u950
  2170  0491                     u951:	
  2171  0491  2C81               	goto	l1358
  2172  0492                     u950:	
  2173  0492                     l1362:	
  2174  0492  3001               	movlw	1
  2175  0493  00AF               	movwf	??___aldiv^(0+128)
  2176  0494                     u965:	
  2177  0494  1003               	clrc
  2178  0495  0DB2               	rlf	___aldiv@quotient^(0+128),f
  2179  0496  0DB3               	rlf	(___aldiv@quotient+1)^(0+128),f
  2180  0497  0DB4               	rlf	(___aldiv@quotient+2)^(0+128),f
  2181  0498  0DB5               	rlf	(___aldiv@quotient+3)^(0+128),f
  2182  0499  0BAF               	decfsz	??___aldiv^(0+128),f
  2183  049A  2C94               	goto	u965
  2184  049B                     l1364:	
  2185  049B  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2186  049C  022E               	subwf	(___aldiv@dividend+3)^(0+128),w
  2187  049D  1D03               	skipz
  2188  049E  2CA9               	goto	u975
  2189  049F  0829               	movf	(___aldiv@divisor+2)^(0+128),w
  2190  04A0  022D               	subwf	(___aldiv@dividend+2)^(0+128),w
  2191  04A1  1D03               	skipz
  2192  04A2  2CA9               	goto	u975
  2193  04A3  0828               	movf	(___aldiv@divisor+1)^(0+128),w
  2194  04A4  022C               	subwf	(___aldiv@dividend+1)^(0+128),w
  2195  04A5  1D03               	skipz
  2196  04A6  2CA9               	goto	u975
  2197  04A7  0827               	movf	___aldiv@divisor^(0+128),w
  2198  04A8  022B               	subwf	___aldiv@dividend^(0+128),w
  2199  04A9                     u975:	
  2200  04A9  1C03               	skipc
  2201  04AA  2CAC               	goto	u971
  2202  04AB  2CAD               	goto	u970
  2203  04AC                     u971:	
  2204  04AC  2CBC               	goto	l1370
  2205  04AD                     u970:	
  2206  04AD                     l1366:	
  2207  04AD  0827               	movf	___aldiv@divisor^(0+128),w
  2208  04AE  02AB               	subwf	___aldiv@dividend^(0+128),f
  2209  04AF  0828               	movf	(___aldiv@divisor+1)^(0+128),w
  2210  04B0  1C03               	skipc
  2211  04B1  0F28               	incfsz	(___aldiv@divisor+1)^(0+128),w
  2212  04B2  02AC               	subwf	(___aldiv@dividend+1)^(0+128),f
  2213  04B3  0829               	movf	(___aldiv@divisor+2)^(0+128),w
  2214  04B4  1C03               	skipc
  2215  04B5  0F29               	incfsz	(___aldiv@divisor+2)^(0+128),w
  2216  04B6  02AD               	subwf	(___aldiv@dividend+2)^(0+128),f
  2217  04B7  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2218  04B8  1C03               	skipc
  2219  04B9  0F2A               	incfsz	(___aldiv@divisor+3)^(0+128),w
  2220  04BA  02AE               	subwf	(___aldiv@dividend+3)^(0+128),f
  2221  04BB                     l1368:	
  2222  04BB  1432               	bsf	___aldiv@quotient^(0+128),0
  2223  04BC                     l1370:	
  2224  04BC  3001               	movlw	1
  2225  04BD                     u985:	
  2226  04BD  1003               	clrc
  2227  04BE  0CAA               	rrf	(___aldiv@divisor+3)^(0+128),f
  2228  04BF  0CA9               	rrf	(___aldiv@divisor+2)^(0+128),f
  2229  04C0  0CA8               	rrf	(___aldiv@divisor+1)^(0+128),f
  2230  04C1  0CA7               	rrf	___aldiv@divisor^(0+128),f
  2231  04C2  3EFF               	addlw	-1
  2232  04C3  1D03               	skipz
  2233  04C4  2CBD               	goto	u985
  2234  04C5                     l1372:	
  2235  04C5  3001               	movlw	1
  2236  04C6  02B0               	subwf	___aldiv@counter^(0+128),f
  2237  04C7  1D03               	btfss	3,2
  2238  04C8  2CCA               	goto	u991
  2239  04C9  2CCB               	goto	u990
  2240  04CA                     u991:	
  2241  04CA  2C92               	goto	l1362
  2242  04CB                     u990:	
  2243  04CB                     l1374:	
  2244  04CB  0831               	movf	___aldiv@sign^(0+128),w
  2245  04CC  1903               	btfsc	3,2
  2246  04CD  2CCF               	goto	u1001
  2247  04CE  2CD0               	goto	u1000
  2248  04CF                     u1001:	
  2249  04CF  2CDB               	goto	l1378
  2250  04D0                     u1000:	
  2251  04D0                     l1376:	
  2252  04D0  09B2               	comf	___aldiv@quotient^(0+128),f
  2253  04D1  09B3               	comf	(___aldiv@quotient+1)^(0+128),f
  2254  04D2  09B4               	comf	(___aldiv@quotient+2)^(0+128),f
  2255  04D3  09B5               	comf	(___aldiv@quotient+3)^(0+128),f
  2256  04D4  0AB2               	incf	___aldiv@quotient^(0+128),f
  2257  04D5  1903               	skipnz
  2258  04D6  0AB3               	incf	(___aldiv@quotient+1)^(0+128),f
  2259  04D7  1903               	skipnz
  2260  04D8  0AB4               	incf	(___aldiv@quotient+2)^(0+128),f
  2261  04D9  1903               	skipnz
  2262  04DA  0AB5               	incf	(___aldiv@quotient+3)^(0+128),f
  2263  04DB                     l1378:	
  2264  04DB  0835               	movf	(___aldiv@quotient+3)^(0+128),w
  2265  04DC  00AA               	movwf	(?___aldiv+3)^(0+128)
  2266  04DD  0834               	movf	(___aldiv@quotient+2)^(0+128),w
  2267  04DE  00A9               	movwf	(?___aldiv+2)^(0+128)
  2268  04DF  0833               	movf	(___aldiv@quotient+1)^(0+128),w
  2269  04E0  00A8               	movwf	(?___aldiv+1)^(0+128)
  2270  04E1  0832               	movf	___aldiv@quotient^(0+128),w
  2271  04E2  00A7               	movwf	?___aldiv^(0+128)
  2272  04E3                     l403:	
  2273  04E3  0008               	return
  2274  04E4                     __end_of___aldiv:	
  2275                           
  2276                           	psect	text9
  2277  0337                     __ptext9:	
  2278 ;; *************** function _ISR *****************
  2279 ;; Defined at:
  2280 ;;		line 327 in file "main.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;		None
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;		None
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      void 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2294 ;;      Params:         0       0       0       0       0
  2295 ;;      Locals:         0       0       0       0       0
  2296 ;;      Temps:          0       0       7       0       0
  2297 ;;      Totals:         0       0       7       0       0
  2298 ;;Total ram usage:        7 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; Hardware stack levels required when called:    3
  2301 ;; This function calls:
  2302 ;;		_print_Countdown
  2303 ;; This function is called by:
  2304 ;;		Interrupt level 1
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           
  2309                           ;psect for function _ISR
  2310  0337                     _ISR:	
  2311  0337                     i1l1674:	
  2312                           
  2313                           ;main.c: 331:     if (!(PORTBbits.RB3)&& (!oldBtn1))
  2314  0337  1283               	bcf	3,5	;RP0=0, select bank0
  2315  0338  1303               	bcf	3,6	;RP1=0, select bank0
  2316  0339  1986               	btfsc	6,3	;volatile
  2317  033A  2B3C               	goto	u150_21
  2318  033B  2B3D               	goto	u150_20
  2319  033C                     u150_21:	
  2320  033C  2B4E               	goto	i1l155
  2321  033D                     u150_20:	
  2322  033D                     i1l1676:	
  2323  033D  086F               	movf	_oldBtn1,w
  2324  033E  1D03               	btfss	3,2
  2325  033F  2B41               	goto	u151_21
  2326  0340  2B42               	goto	u151_20
  2327  0341                     u151_21:	
  2328  0341  2B4E               	goto	i1l155
  2329  0342                     u151_20:	
  2330  0342                     i1l1678:	
  2331                           
  2332                           ;main.c: 332:     {;main.c: 333:         stat1=!stat1;
  2333  0342  1683               	bsf	3,5	;RP0=1, select bank1
  2334  0343  1303               	bcf	3,6	;RP1=0, select bank1
  2335  0344  084D               	movf	_stat1^(0+128),w
  2336  0345  1903               	btfsc	3,2
  2337  0346  2B48               	goto	u152_21
  2338  0347  2B4A               	goto	u152_20
  2339  0348                     u152_21:	
  2340  0348  3001               	movlw	1
  2341  0349  2B4B               	goto	u153_20
  2342  034A                     u152_20:	
  2343  034A  3000               	movlw	0
  2344  034B                     u153_20:	
  2345  034B  00A0               	movwf	??_ISR^(0+128)
  2346  034C  0820               	movf	??_ISR^(0+128),w
  2347  034D  00CD               	movwf	_stat1^(0+128)
  2348  034E                     i1l155:	
  2349                           ;main.c: 335:     }
  2350                           
  2351                           
  2352                           ;main.c: 336:     oldBtn1 = !PORTBbits.RB3;
  2353  034E  1003               	clrc
  2354  034F  1283               	bcf	3,5	;RP0=0, select bank0
  2355  0350  1D86               	btfss	6,3	;volatile
  2356  0351  1403               	setc
  2357  0352  3000               	movlw	0
  2358  0353  1803               	btfsc	3,0
  2359  0354  3001               	movlw	1
  2360  0355  00EF               	movwf	_oldBtn1
  2361  0356                     i1l1680:	
  2362                           
  2363                           ;main.c: 338:     if (!(PORTBbits.RB4)&& (!oldBtn2))
  2364  0356  1A06               	btfsc	6,4	;volatile
  2365  0357  2B59               	goto	u154_21
  2366  0358  2B5A               	goto	u154_20
  2367  0359                     u154_21:	
  2368  0359  2B6B               	goto	i1l156
  2369  035A                     u154_20:	
  2370  035A                     i1l1682:	
  2371  035A  1683               	bsf	3,5	;RP0=1, select bank1
  2372  035B  1303               	bcf	3,6	;RP1=0, select bank1
  2373  035C  084C               	movf	_oldBtn2^(0+128),w
  2374  035D  1D03               	btfss	3,2
  2375  035E  2B60               	goto	u155_21
  2376  035F  2B61               	goto	u155_20
  2377  0360                     u155_21:	
  2378  0360  2B6B               	goto	i1l156
  2379  0361                     u155_20:	
  2380  0361                     i1l1684:	
  2381                           
  2382                           ;main.c: 339:     {;main.c: 340:         stat2=!stat2;
  2383  0361  084B               	movf	_stat2^(0+128),w
  2384  0362  1903               	btfsc	3,2
  2385  0363  2B65               	goto	u156_21
  2386  0364  2B67               	goto	u156_20
  2387  0365                     u156_21:	
  2388  0365  3001               	movlw	1
  2389  0366  2B68               	goto	u157_20
  2390  0367                     u156_20:	
  2391  0367  3000               	movlw	0
  2392  0368                     u157_20:	
  2393  0368  00A0               	movwf	??_ISR^(0+128)
  2394  0369  0820               	movf	??_ISR^(0+128),w
  2395  036A  00CB               	movwf	_stat2^(0+128)
  2396  036B                     i1l156:	
  2397                           ;main.c: 342:     }
  2398                           
  2399                           
  2400                           ;main.c: 343:     oldBtn2 = !PORTBbits.RB4;
  2401  036B  1003               	clrc
  2402  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2403  036D  1E06               	btfss	6,4	;volatile
  2404  036E  1403               	setc
  2405  036F  3000               	movlw	0
  2406  0370  1803               	btfsc	3,0
  2407  0371  3001               	movlw	1
  2408  0372  1683               	bsf	3,5	;RP0=1, select bank1
  2409  0373  1303               	bcf	3,6	;RP1=0, select bank1
  2410  0374  00CC               	movwf	_oldBtn2^(0+128)
  2411  0375                     i1l1686:	
  2412                           
  2413                           ;main.c: 345:     if (!(PORTBbits.RB5)&& (!oldBtn3))
  2414  0375  1283               	bcf	3,5	;RP0=0, select bank0
  2415  0376  1303               	bcf	3,6	;RP1=0, select bank0
  2416  0377  1A86               	btfsc	6,5	;volatile
  2417  0378  2B7A               	goto	u158_21
  2418  0379  2B7B               	goto	u158_20
  2419  037A                     u158_21:	
  2420  037A  2B8C               	goto	i1l157
  2421  037B                     u158_20:	
  2422  037B                     i1l1688:	
  2423  037B  1683               	bsf	3,5	;RP0=1, select bank1
  2424  037C  1303               	bcf	3,6	;RP1=0, select bank1
  2425  037D  084A               	movf	_oldBtn3^(0+128),w
  2426  037E  1D03               	btfss	3,2
  2427  037F  2B81               	goto	u159_21
  2428  0380  2B82               	goto	u159_20
  2429  0381                     u159_21:	
  2430  0381  2B8C               	goto	i1l157
  2431  0382                     u159_20:	
  2432  0382                     i1l1690:	
  2433                           
  2434                           ;main.c: 346:     {;main.c: 347:         stat3=!stat3;
  2435  0382  0849               	movf	_stat3^(0+128),w
  2436  0383  1903               	btfsc	3,2
  2437  0384  2B86               	goto	u160_21
  2438  0385  2B88               	goto	u160_20
  2439  0386                     u160_21:	
  2440  0386  3001               	movlw	1
  2441  0387  2B89               	goto	u161_20
  2442  0388                     u160_20:	
  2443  0388  3000               	movlw	0
  2444  0389                     u161_20:	
  2445  0389  00A0               	movwf	??_ISR^(0+128)
  2446  038A  0820               	movf	??_ISR^(0+128),w
  2447  038B  00C9               	movwf	_stat3^(0+128)
  2448  038C                     i1l157:	
  2449                           ;main.c: 349:     }
  2450                           
  2451                           
  2452                           ;main.c: 350:     oldBtn3 = !PORTBbits.RB5;
  2453  038C  1003               	clrc
  2454  038D  1283               	bcf	3,5	;RP0=0, select bank0
  2455  038E  1E86               	btfss	6,5	;volatile
  2456  038F  1403               	setc
  2457  0390  3000               	movlw	0
  2458  0391  1803               	btfsc	3,0
  2459  0392  3001               	movlw	1
  2460  0393  1683               	bsf	3,5	;RP0=1, select bank1
  2461  0394  1303               	bcf	3,6	;RP1=0, select bank1
  2462  0395  00CA               	movwf	_oldBtn3^(0+128)
  2463                           
  2464                           ;main.c: 353:     if(f==0)
  2465  0396  085E               	movf	_f^(0+128),w
  2466  0397  045F               	iorwf	(_f+1)^(0+128),w
  2467  0398  1D03               	btfss	3,2
  2468  0399  2B9B               	goto	u162_21
  2469  039A  2B9C               	goto	u162_20
  2470  039B                     u162_21:	
  2471  039B  2BA1               	goto	i1l1696
  2472  039C                     u162_20:	
  2473  039C                     i1l1692:	
  2474                           
  2475                           ;main.c: 354:     {;main.c: 355:         flagGiallo=0;
  2476  039C  01C7               	clrf	_flagGiallo^(0+128)
  2477  039D                     i1l1694:	
  2478                           
  2479                           ;main.c: 356:         f=3;
  2480  039D  3003               	movlw	3
  2481  039E  00DE               	movwf	_f^(0+128)
  2482  039F  3000               	movlw	0
  2483  03A0  00DF               	movwf	(_f^(0+128)+1)
  2484  03A1                     i1l1696:	
  2485                           
  2486                           ;main.c: 359:     if(countDown==0)
  2487  03A1  087D               	movf	_countDown,w
  2488  03A2  1D03               	btfss	3,2
  2489  03A3  2BA5               	goto	u163_21
  2490  03A4  2BA6               	goto	u163_20
  2491  03A5                     u163_21:	
  2492  03A5  2BB6               	goto	i1l1706
  2493  03A6                     u163_20:	
  2494  03A6                     i1l1698:	
  2495                           
  2496                           ;main.c: 360:     {;main.c: 361:         scattoSemafori=1;
  2497  03A6  01C8               	clrf	_scattoSemafori^(0+128)
  2498  03A7  0AC8               	incf	_scattoSemafori^(0+128),f
  2499  03A8                     i1l1700:	
  2500                           
  2501                           ;main.c: 362:         if(temporizzazione!=0)
  2502  03A8  087C               	movf	_temporizzazione,w
  2503  03A9  1903               	btfsc	3,2
  2504  03AA  2BAC               	goto	u164_21
  2505  03AB  2BAD               	goto	u164_20
  2506  03AC                     u164_21:	
  2507  03AC  2BB2               	goto	i1l1704
  2508  03AD                     u164_20:	
  2509  03AD                     i1l1702:	
  2510                           
  2511                           ;main.c: 363:             countDown=temporizzazione;
  2512  03AD  087C               	movf	_temporizzazione,w
  2513  03AE  00A0               	movwf	??_ISR^(0+128)
  2514  03AF  0820               	movf	??_ISR^(0+128),w
  2515  03B0  00FD               	movwf	_countDown
  2516  03B1  2BB6               	goto	i1l1706
  2517  03B2                     i1l1704:	
  2518                           
  2519                           ;main.c: 365:             countDown=5;
  2520  03B2  3005               	movlw	5
  2521  03B3  00A0               	movwf	??_ISR^(0+128)
  2522  03B4  0820               	movf	??_ISR^(0+128),w
  2523  03B5  00FD               	movwf	_countDown
  2524  03B6                     i1l1706:	
  2525                           
  2526                           ;main.c: 369:    if(RCIF)
  2527  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  2528  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  2529  03B8  1E8C               	btfss	12,5	;volatile
  2530  03B9  2BBB               	goto	u165_21
  2531  03BA  2BBC               	goto	u165_20
  2532  03BB                     u165_21:	
  2533  03BB  2BC9               	goto	i1l1714
  2534  03BC                     u165_20:	
  2535  03BC                     i1l163:	
  2536  03BC  1E8C               	btfss	12,5	;volatile
  2537  03BD  2BBF               	goto	u166_21
  2538  03BE  2BC0               	goto	u166_20
  2539  03BF                     u166_21:	
  2540  03BF  2BBC               	goto	i1l163
  2541  03C0                     u166_20:	
  2542  03C0                     i1l165:	
  2543                           
  2544                           ;main.c: 372:         RCIF = 0;
  2545  03C0  128C               	bcf	12,5	;volatile
  2546  03C1                     i1l1710:	
  2547                           
  2548                           ;main.c: 373:         datoSeriale = RCREG;
  2549  03C1  081A               	movf	26,w	;volatile
  2550  03C2  1683               	bsf	3,5	;RP0=1, select bank1
  2551  03C3  1303               	bcf	3,6	;RP1=0, select bank1
  2552  03C4  00A0               	movwf	??_ISR^(0+128)
  2553  03C5  0820               	movf	??_ISR^(0+128),w
  2554  03C6  00D1               	movwf	_datoSeriale^(0+128)
  2555  03C7                     i1l1712:	
  2556                           
  2557                           ;main.c: 374:         received = 1;
  2558  03C7  01D2               	clrf	_received^(0+128)
  2559  03C8  0AD2               	incf	_received^(0+128),f
  2560  03C9                     i1l1714:	
  2561                           
  2562                           ;main.c: 377:    if (INTCON&0x04)
  2563  03C9  1D0B               	btfss	11,2	;volatile
  2564  03CA  2BCC               	goto	u167_21
  2565  03CB  2BCD               	goto	u167_20
  2566  03CC                     u167_21:	
  2567  03CC  2C36               	goto	i1l173
  2568  03CD                     u167_20:	
  2569  03CD                     i1l1716:	
  2570                           
  2571                           ;main.c: 378:     {;main.c: 379:         INTCON &= ~0x04;
  2572  03CD  30FB               	movlw	251
  2573  03CE  1683               	bsf	3,5	;RP0=1, select bank1
  2574  03CF  1303               	bcf	3,6	;RP1=0, select bank1
  2575  03D0  00A0               	movwf	??_ISR^(0+128)
  2576  03D1  0820               	movf	??_ISR^(0+128),w
  2577  03D2  058B               	andwf	11,f	;volatile
  2578  03D3                     i1l1718:	
  2579                           
  2580                           ;main.c: 380:         TMR0 = 6;
  2581  03D3  3006               	movlw	6
  2582  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2583  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  2584  03D6  0081               	movwf	1	;volatile
  2585  03D7                     i1l1720:	
  2586                           
  2587                           ;main.c: 381:         count++;
  2588  03D7  3001               	movlw	1
  2589  03D8  1683               	bsf	3,5	;RP0=1, select bank1
  2590  03D9  1303               	bcf	3,6	;RP1=0, select bank1
  2591  03DA  07C5               	addwf	_count^(0+128),f
  2592  03DB  1803               	skipnc
  2593  03DC  0AC6               	incf	(_count+1)^(0+128),f
  2594  03DD  3000               	movlw	0
  2595  03DE  07C6               	addwf	(_count+1)^(0+128),f
  2596                           
  2597                           ;main.c: 382:         if (count == 125)
  2598  03DF  307D               	movlw	125
  2599  03E0  0645               	xorwf	_count^(0+128),w
  2600  03E1  0446               	iorwf	(_count+1)^(0+128),w
  2601  03E2  1D03               	btfss	3,2
  2602  03E3  2BE5               	goto	u168_21
  2603  03E4  2BE6               	goto	u168_20
  2604  03E5                     u168_21:	
  2605  03E5  2C36               	goto	i1l173
  2606  03E6                     u168_20:	
  2607  03E6                     i1l1722:	
  2608                           
  2609                           ;main.c: 383:         {;main.c: 385:             if(semafori[0]==statoSemafori[0])
  2610  03E6  0841               	movf	_semafori^(0+128),w
  2611  03E7  065B               	xorwf	_statoSemafori^(0+128),w
  2612  03E8  1D03               	skipz
  2613  03E9  2BEB               	goto	u169_21
  2614  03EA  2BEC               	goto	u169_20
  2615  03EB                     u169_21:	
  2616  03EB  2BF9               	goto	i1l1726
  2617  03EC                     u169_20:	
  2618  03EC                     i1l1724:	
  2619                           
  2620                           ;main.c: 386:                 print_Countdown(countDown, 0);
  2621  03EC  087D               	movf	_countDown,w
  2622  03ED  00A0               	movwf	??_ISR^(0+128)
  2623  03EE  01A1               	clrf	(??_ISR^(0+128)+1)
  2624  03EF  0820               	movf	??_ISR^(0+128),w
  2625  03F0  00F9               	movwf	print_Countdown@num
  2626  03F1  0821               	movf	(??_ISR+1)^(0+128),w
  2627  03F2  00FA               	movwf	print_Countdown@num+1
  2628  03F3  01FB               	clrf	print_Countdown@statoSem
  2629  03F4  120A  118A  21FA  120A  118A  	fcall	_print_Countdown
  2630  03F9                     i1l1726:	
  2631                           
  2632                           ;main.c: 387:             if(semafori[0]==statoSemafori[2])
  2633  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  2634  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  2635  03FB  085D               	movf	(_statoSemafori^(0+128)+2),w
  2636  03FC  0641               	xorwf	_semafori^(0+128),w
  2637  03FD  1D03               	skipz
  2638  03FE  2C00               	goto	u170_21
  2639  03FF  2C01               	goto	u170_20
  2640  0400                     u170_21:	
  2641  0400  2C11               	goto	i1l1730
  2642  0401                     u170_20:	
  2643  0401                     i1l1728:	
  2644                           
  2645                           ;main.c: 388:                 print_Countdown(countDown, 2);
  2646  0401  087D               	movf	_countDown,w
  2647  0402  00A0               	movwf	??_ISR^(0+128)
  2648  0403  01A1               	clrf	(??_ISR^(0+128)+1)
  2649  0404  0820               	movf	??_ISR^(0+128),w
  2650  0405  00F9               	movwf	print_Countdown@num
  2651  0406  0821               	movf	(??_ISR+1)^(0+128),w
  2652  0407  00FA               	movwf	print_Countdown@num+1
  2653  0408  3002               	movlw	2
  2654  0409  00A2               	movwf	(??_ISR+2)^(0+128)
  2655  040A  0822               	movf	(??_ISR+2)^(0+128),w
  2656  040B  00FB               	movwf	print_Countdown@statoSem
  2657  040C  120A  118A  21FA  120A  118A  	fcall	_print_Countdown
  2658  0411                     i1l1730:	
  2659                           
  2660                           ;main.c: 391:             if(flagGiallo==1)
  2661  0411  1683               	bsf	3,5	;RP0=1, select bank1
  2662  0412  1303               	bcf	3,6	;RP1=0, select bank1
  2663  0413  0347               	decf	_flagGiallo^(0+128),w
  2664  0414  1D03               	btfss	3,2
  2665  0415  2C17               	goto	u171_21
  2666  0416  2C18               	goto	u171_20
  2667  0417                     u171_21:	
  2668  0417  2C32               	goto	i1l1738
  2669  0418                     u171_20:	
  2670  0418                     i1l1732:	
  2671                           
  2672                           ;main.c: 392:             {;main.c: 393:                 if(semafori[0]==statoSemafori[1
      +                          ])
  2673  0418  085C               	movf	(_statoSemafori^(0+128)+1),w
  2674  0419  0641               	xorwf	_semafori^(0+128),w
  2675  041A  1D03               	skipz
  2676  041B  2C1D               	goto	u172_21
  2677  041C  2C1E               	goto	u172_20
  2678  041D                     u172_21:	
  2679  041D  2C29               	goto	i1l1736
  2680  041E                     u172_20:	
  2681  041E                     i1l1734:	
  2682                           
  2683                           ;main.c: 394:                    print_Countdown(f, 1);
  2684  041E  085F               	movf	(_f+1)^(0+128),w
  2685  041F  00FA               	movwf	print_Countdown@num+1
  2686  0420  085E               	movf	_f^(0+128),w
  2687  0421  00F9               	movwf	print_Countdown@num
  2688  0422  01FB               	clrf	print_Countdown@statoSem
  2689  0423  0AFB               	incf	print_Countdown@statoSem,f
  2690  0424  120A  118A  21FA  120A  118A  	fcall	_print_Countdown
  2691  0429                     i1l1736:	
  2692                           
  2693                           ;main.c: 396:                 f--;
  2694  0429  30FF               	movlw	255
  2695  042A  1683               	bsf	3,5	;RP0=1, select bank1
  2696  042B  1303               	bcf	3,6	;RP1=0, select bank1
  2697  042C  07DE               	addwf	_f^(0+128),f
  2698  042D  1803               	skipnc
  2699  042E  0ADF               	incf	(_f+1)^(0+128),f
  2700  042F  30FF               	movlw	255
  2701  0430  07DF               	addwf	(_f+1)^(0+128),f
  2702                           
  2703                           ;main.c: 398:             }
  2704  0431  2C34               	goto	i1l1740
  2705  0432                     i1l1738:	
  2706                           
  2707                           ;main.c: 400:             {;main.c: 401:                 countDown--;
  2708  0432  3001               	movlw	1
  2709  0433  02FD               	subwf	_countDown,f
  2710  0434                     i1l1740:	
  2711                           
  2712                           ;main.c: 404:             count = 0;
  2713  0434  01C5               	clrf	_count^(0+128)
  2714  0435  01C6               	clrf	(_count+1)^(0+128)
  2715  0436                     i1l173:	
  2716  0436  1683               	bsf	3,5	;RP0=1, select bank1
  2717  0437  1303               	bcf	3,6	;RP1=0, select bank1
  2718  0438  0826               	movf	(??_ISR+6)^(0+128),w
  2719  0439  1283               	bcf	3,5	;RP0=0, select bank0
  2720  043A  1303               	bcf	3,6	;RP1=0, select bank0
  2721  043B  00FF               	movwf	btemp+1
  2722  043C  1683               	bsf	3,5	;RP0=1, select bank1
  2723  043D  1303               	bcf	3,6	;RP1=0, select bank1
  2724  043E  0825               	movf	(??_ISR+5)^(0+128),w
  2725  043F  008A               	movwf	10
  2726  0440  0824               	movf	(??_ISR+4)^(0+128),w
  2727  0441  0084               	movwf	4
  2728  0442  0E23               	swapf	(??_ISR+3)^(0+128),w
  2729  0443  0083               	movwf	3
  2730  0444  0EFE               	swapf	btemp,f
  2731  0445  0E7E               	swapf	btemp,w
  2732  0446  0009               	retfie
  2733  0447                     __end_of_ISR:	
  2734                           
  2735                           	psect	intentry
  2736  0004                     __pintentry:	
  2737                           ;incstack = 0
  2738                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2739                           
  2740  0004                     interrupt_function:	
  2741  007E                     saved_w	set	btemp
  2742  0004  00FE               	movwf	btemp
  2743  0005  0E03               	swapf	3,w
  2744  0006  1683               	bsf	3,5	;RP0=1, select bank1
  2745  0007  1303               	bcf	3,6	;RP1=0, select bank1
  2746  0008  00A3               	movwf	(??_ISR+3)^(0+128)
  2747  0009  0804               	movf	4,w
  2748  000A  00A4               	movwf	(??_ISR+4)^(0+128)
  2749  000B  080A               	movf	10,w
  2750  000C  00A5               	movwf	(??_ISR+5)^(0+128)
  2751  000D  1283               	bcf	3,5	;RP0=0, select bank0
  2752  000E  1303               	bcf	3,6	;RP1=0, select bank0
  2753  000F  087F               	movf	btemp+1,w
  2754  0010  1683               	bsf	3,5	;RP0=1, select bank1
  2755  0011  1303               	bcf	3,6	;RP1=0, select bank1
  2756  0012  00A6               	movwf	(??_ISR+6)^(0+128)
  2757  0013  120A  118A  2B37   	ljmp	_ISR
  2758                           
  2759                           	psect	text10
  2760  01FA                     __ptext10:	
  2761 ;; *************** function _print_Countdown *****************
  2762 ;; Defined at:
  2763 ;;		line 482 in file "main.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  num             2    9[COMMON] int 
  2766 ;;  statoSem        1   11[COMMON] unsigned char 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  secondStr      17   38[BANK0 ] unsigned char [17]
  2769 ;;  secondStr      17   21[BANK0 ] unsigned char [17]
  2770 ;;  secondStr      17    4[BANK0 ] unsigned char [17]
  2771 ;;  firstStr       17   55[BANK0 ] unsigned char [17]
  2772 ;;  resultNum       3   72[BANK0 ] unsigned char [3]
  2773 ;;  i               2   77[BANK0 ] int 
  2774 ;;  length          2   75[BANK0 ] int 
  2775 ;; Return value:  Size  Location     Type
  2776 ;;                  1    wreg      void 
  2777 ;; Registers used:
  2778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2779 ;; Tracked objects:
  2780 ;;		On entry : 0/0
  2781 ;;		On exit  : 0/0
  2782 ;;		Unchanged: 0/0
  2783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2784 ;;      Params:         3       0       0       0       0
  2785 ;;      Locals:         0      75       0       0       0
  2786 ;;      Temps:          0       4       0       0       0
  2787 ;;      Totals:         3      79       0       0       0
  2788 ;;Total ram usage:       82 bytes
  2789 ;; Hardware stack levels used:    1
  2790 ;; Hardware stack levels required when called:    2
  2791 ;; This function calls:
  2792 ;;		___awdiv
  2793 ;;		___awmod
  2794 ;;		_send_string
  2795 ;;		i1_send_cmd
  2796 ;; This function is called by:
  2797 ;;		_ISR
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function _print_Countdown
  2803  01FA                     _print_Countdown:	
  2804  01FA                     i1l1518:	
  2805                           ;incstack = 0
  2806                           ; Regs used in _print_Countdown: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2807                           
  2808                           
  2809                           ;main.c: 482: void print_Countdown(int num, char statoSem);main.c: 483: {;main.c: 484:  
      +                             char resultNum[3], firstStr[17] = "Tempo:          ";
  2810  01FA  3057               	movlw	print_Countdown@firstStr& (0+255)
  2811  01FB  0084               	movwf	4
  2812  01FC  30C3               	movlw	low print_Countdown@F923
  2813  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  2814  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  2815  01FF  00A0               	movwf	??_print_Countdown
  2816  0200  0804               	movf	4,w
  2817  0201  00A1               	movwf	??_print_Countdown+1
  2818  0202  3011               	movlw	17
  2819  0203  00A2               	movwf	??_print_Countdown+2
  2820  0204                     u121_20:	
  2821  0204  0820               	movf	??_print_Countdown,w
  2822  0205  0084               	movwf	4
  2823  0206  1783               	bsf	3,7	;select IRP bank3
  2824  0207  0800               	movf	0,w
  2825  0208  00A3               	movwf	??_print_Countdown+3
  2826  0209  0AA0               	incf	??_print_Countdown,f
  2827  020A  0821               	movf	??_print_Countdown+1,w
  2828  020B  0084               	movwf	4
  2829  020C  1383               	bcf	3,7	;select IRP bank0
  2830  020D  0823               	movf	??_print_Countdown+3,w
  2831  020E  0080               	movwf	0
  2832  020F  0AA1               	incf	??_print_Countdown+1,f
  2833  0210  0BA2               	decfsz	??_print_Countdown+2,f
  2834  0211  2A04               	goto	u121_20
  2835  0212                     i1l1520:	
  2836                           
  2837                           ;main.c: 485:     int length = 2, i = 0;
  2838  0212  3002               	movlw	2
  2839  0213  00EB               	movwf	print_Countdown@length
  2840  0214  3000               	movlw	0
  2841  0215  00EC               	movwf	print_Countdown@length+1
  2842  0216                     i1l1522:	
  2843  0216  01ED               	clrf	print_Countdown@i
  2844  0217  01EE               	clrf	print_Countdown@i+1
  2845  0218                     i1l1524:	
  2846                           
  2847                           ;main.c: 487:     if(num < 10)
  2848  0218  087A               	movf	print_Countdown@num+1,w
  2849  0219  3A80               	xorlw	128
  2850  021A  00FF               	movwf	btemp+1
  2851  021B  3080               	movlw	128
  2852  021C  027F               	subwf	btemp+1,w
  2853  021D  1D03               	skipz
  2854  021E  2A21               	goto	u122_25
  2855  021F  300A               	movlw	10
  2856  0220  0279               	subwf	print_Countdown@num,w
  2857  0221                     u122_25:	
  2858  0221  1803               	skipnc
  2859  0222  2A24               	goto	u122_21
  2860  0223  2A25               	goto	u122_20
  2861  0224                     u122_21:	
  2862  0224  2A2C               	goto	i1l1528
  2863  0225                     u122_20:	
  2864  0225                     i1l1526:	
  2865                           
  2866                           ;main.c: 488:         length = 1;
  2867  0225  3001               	movlw	1
  2868  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2869  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2870  0228  00EB               	movwf	print_Countdown@length
  2871  0229  3000               	movlw	0
  2872  022A  00EC               	movwf	print_Countdown@length+1
  2873  022B  2A39               	goto	i1l1532
  2874  022C                     i1l1528:	
  2875  022C  3064               	movlw	100
  2876  022D  0679               	xorwf	print_Countdown@num,w
  2877  022E  047A               	iorwf	print_Countdown@num+1,w
  2878  022F  1D03               	btfss	3,2
  2879  0230  2A32               	goto	u123_21
  2880  0231  2A33               	goto	u123_20
  2881  0232                     u123_21:	
  2882  0232  2A39               	goto	i1l1532
  2883  0233                     u123_20:	
  2884  0233                     i1l1530:	
  2885                           
  2886                           ;main.c: 490:         length = 3;
  2887  0233  3003               	movlw	3
  2888  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2889  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2890  0236  00EB               	movwf	print_Countdown@length
  2891  0237  3000               	movlw	0
  2892  0238  00EC               	movwf	print_Countdown@length+1
  2893  0239                     i1l1532:	
  2894                           
  2895                           ;main.c: 492:     if(num != 0)
  2896  0239  0879               	movf	print_Countdown@num,w
  2897  023A  047A               	iorwf	print_Countdown@num+1,w
  2898  023B  1903               	btfsc	3,2
  2899  023C  2A3E               	goto	u124_21
  2900  023D  2A3F               	goto	u124_20
  2901  023E                     u124_21:	
  2902  023E  2A78               	goto	i1l1544
  2903  023F                     u124_20:	
  2904  023F  2A71               	goto	i1l1542
  2905  0240                     i1l1536:	
  2906                           
  2907                           ;main.c: 495:         {;main.c: 496:             resultNum[i] = num%10 + '0';
  2908  0240  300A               	movlw	10
  2909  0241  00F0               	movwf	___awmod@divisor
  2910  0242  3000               	movlw	0
  2911  0243  00F1               	movwf	___awmod@divisor+1
  2912  0244  087A               	movf	print_Countdown@num+1,w
  2913  0245  00F3               	movwf	___awmod@dividend+1
  2914  0246  0879               	movf	print_Countdown@num,w
  2915  0247  00F2               	movwf	___awmod@dividend
  2916  0248  120A  118A  254B  120A  118A  	fcall	___awmod
  2917  024D  0870               	movf	?___awmod,w
  2918  024E  3E30               	addlw	48
  2919  024F  1283               	bcf	3,5	;RP0=0, select bank0
  2920  0250  1303               	bcf	3,6	;RP1=0, select bank0
  2921  0251  00A0               	movwf	??_print_Countdown
  2922  0252  086D               	movf	print_Countdown@i,w
  2923  0253  3E68               	addlw	(low (print_Countdown@resultNum| 0))& (0+255)
  2924  0254  0084               	movwf	4
  2925  0255  0820               	movf	??_print_Countdown,w
  2926  0256  1383               	bcf	3,7	;select IRP bank0
  2927  0257  0080               	movwf	0
  2928  0258                     i1l1538:	
  2929                           
  2930                           ;main.c: 497:             num /= 10;
  2931  0258  300A               	movlw	10
  2932  0259  00F0               	movwf	___awdiv@divisor
  2933  025A  3000               	movlw	0
  2934  025B  00F1               	movwf	___awdiv@divisor+1
  2935  025C  087A               	movf	print_Countdown@num+1,w
  2936  025D  00F3               	movwf	___awdiv@dividend+1
  2937  025E  0879               	movf	print_Countdown@num,w
  2938  025F  00F2               	movwf	___awdiv@dividend
  2939  0260  120A  118A  24E4  120A  118A  	fcall	___awdiv
  2940  0265  0871               	movf	?___awdiv+1,w
  2941  0266  00FA               	movwf	print_Countdown@num+1
  2942  0267  0870               	movf	?___awdiv,w
  2943  0268  00F9               	movwf	print_Countdown@num
  2944  0269                     i1l1540:	
  2945                           
  2946                           ;main.c: 498:             i++;
  2947  0269  3001               	movlw	1
  2948  026A  1283               	bcf	3,5	;RP0=0, select bank0
  2949  026B  1303               	bcf	3,6	;RP1=0, select bank0
  2950  026C  07ED               	addwf	print_Countdown@i,f
  2951  026D  1803               	skipnc
  2952  026E  0AEE               	incf	print_Countdown@i+1,f
  2953  026F  3000               	movlw	0
  2954  0270  07EE               	addwf	print_Countdown@i+1,f
  2955  0271                     i1l1542:	
  2956                           
  2957                           ;main.c: 494:         while(num)
  2958  0271  0879               	movf	print_Countdown@num,w
  2959  0272  047A               	iorwf	print_Countdown@num+1,w
  2960  0273  1D03               	btfss	3,2
  2961  0274  2A76               	goto	u125_21
  2962  0275  2A77               	goto	u125_20
  2963  0276                     u125_21:	
  2964  0276  2A40               	goto	i1l1536
  2965  0277                     u125_20:	
  2966  0277  2A7E               	goto	i1l1546
  2967  0278                     i1l1544:	
  2968                           
  2969                           ;main.c: 502:     {;main.c: 503:         resultNum[0] = '0';
  2970  0278  3030               	movlw	48
  2971  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2972  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2973  027B  00A0               	movwf	??_print_Countdown
  2974  027C  0820               	movf	??_print_Countdown,w
  2975  027D  00E8               	movwf	print_Countdown@resultNum
  2976  027E                     i1l1546:	
  2977                           
  2978                           ;main.c: 506:     for(i=0; i<length; i++)
  2979  027E  1283               	bcf	3,5	;RP0=0, select bank0
  2980  027F  1303               	bcf	3,6	;RP1=0, select bank0
  2981  0280  01ED               	clrf	print_Countdown@i
  2982  0281  01EE               	clrf	print_Countdown@i+1
  2983  0282  2A97               	goto	i1l1552
  2984  0283                     i1l1548:	
  2985                           
  2986                           ;main.c: 507:     {;main.c: 508:         firstStr[13-i] = resultNum[i];
  2987  0283  1283               	bcf	3,5	;RP0=0, select bank0
  2988  0284  1303               	bcf	3,6	;RP1=0, select bank0
  2989  0285  086D               	movf	print_Countdown@i,w
  2990  0286  3E68               	addlw	(low (print_Countdown@resultNum| 0))& (0+255)
  2991  0287  0084               	movwf	4
  2992  0288  1383               	bcf	3,7	;select IRP bank0
  2993  0289  0800               	movf	0,w
  2994  028A  00A0               	movwf	??_print_Countdown
  2995  028B  086D               	movf	print_Countdown@i,w
  2996  028C  3C0D               	sublw	13
  2997  028D  3E57               	addlw	(low (print_Countdown@firstStr| 0))& (0+255)
  2998  028E  0084               	movwf	4
  2999  028F  0820               	movf	??_print_Countdown,w
  3000  0290  0080               	movwf	0
  3001  0291                     i1l1550:	
  3002                           
  3003                           ;main.c: 509:     }
  3004  0291  3001               	movlw	1
  3005  0292  07ED               	addwf	print_Countdown@i,f
  3006  0293  1803               	skipnc
  3007  0294  0AEE               	incf	print_Countdown@i+1,f
  3008  0295  3000               	movlw	0
  3009  0296  07EE               	addwf	print_Countdown@i+1,f
  3010  0297                     i1l1552:	
  3011  0297  086E               	movf	print_Countdown@i+1,w
  3012  0298  3A80               	xorlw	128
  3013  0299  00A0               	movwf	??_print_Countdown
  3014  029A  086C               	movf	print_Countdown@length+1,w
  3015  029B  3A80               	xorlw	128
  3016  029C  0220               	subwf	??_print_Countdown,w
  3017  029D  1D03               	skipz
  3018  029E  2AA1               	goto	u126_25
  3019  029F  086B               	movf	print_Countdown@length,w
  3020  02A0  026D               	subwf	print_Countdown@i,w
  3021  02A1                     u126_25:	
  3022  02A1  1C03               	skipc
  3023  02A2  2AA4               	goto	u126_21
  3024  02A3  2AA5               	goto	u126_20
  3025  02A4                     u126_21:	
  3026  02A4  2A83               	goto	i1l1548
  3027  02A5                     u126_20:	
  3028  02A5                     i1l1554:	
  3029                           
  3030                           ;main.c: 511:     send_cmd(0x01);
  3031  02A5  3001               	movlw	1
  3032  02A6  120A  118A  26E4  120A  118A  	fcall	i1_send_cmd
  3033                           
  3034                           ;main.c: 512:     send_cmd(0xC0);
  3035  02AB  30C0               	movlw	192
  3036  02AC  120A  118A  26E4  120A  118A  	fcall	i1_send_cmd
  3037  02B1                     i1l1556:	
  3038                           
  3039                           ;main.c: 513:     if(statoSem==0)
  3040  02B1  087B               	movf	print_Countdown@statoSem,w
  3041  02B2  1D03               	btfss	3,2
  3042  02B3  2AB5               	goto	u127_21
  3043  02B4  2AB6               	goto	u127_20
  3044  02B5                     u127_21:	
  3045  02B5  2AD4               	goto	i1l1562
  3046  02B6                     u127_20:	
  3047  02B6                     i1l1558:	
  3048                           
  3049                           ;main.c: 514:     {;main.c: 515:        char secondStr[17] = "Sem 0:     Verde";
  3050  02B6  3024               	movlw	print_Countdown@secondStr& (0+255)
  3051  02B7  0084               	movwf	4
  3052  02B8  30B2               	movlw	low print_Countdown@F927
  3053  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  3054  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  3055  02BB  00A0               	movwf	??_print_Countdown
  3056  02BC  0804               	movf	4,w
  3057  02BD  00A1               	movwf	??_print_Countdown+1
  3058  02BE  3011               	movlw	17
  3059  02BF  00A2               	movwf	??_print_Countdown+2
  3060  02C0                     u128_20:	
  3061  02C0  0820               	movf	??_print_Countdown,w
  3062  02C1  0084               	movwf	4
  3063  02C2  1783               	bsf	3,7	;select IRP bank3
  3064  02C3  0800               	movf	0,w
  3065  02C4  00A3               	movwf	??_print_Countdown+3
  3066  02C5  0AA0               	incf	??_print_Countdown,f
  3067  02C6  0821               	movf	??_print_Countdown+1,w
  3068  02C7  0084               	movwf	4
  3069  02C8  1383               	bcf	3,7	;select IRP bank0
  3070  02C9  0823               	movf	??_print_Countdown+3,w
  3071  02CA  0080               	movwf	0
  3072  02CB  0AA1               	incf	??_print_Countdown+1,f
  3073  02CC  0BA2               	decfsz	??_print_Countdown+2,f
  3074  02CD  2AC0               	goto	u128_20
  3075  02CE                     i1l1560:	
  3076                           
  3077                           ;main.c: 516:        send_string(secondStr);
  3078  02CE  3024               	movlw	(low (print_Countdown@secondStr| 0))& (0+255)
  3079  02CF  120A  118A  26C3  120A  118A  	fcall	_send_string
  3080  02D4                     i1l1562:	
  3081                           
  3082                           ;main.c: 518:     if(statoSem==1)
  3083  02D4  037B               	decf	print_Countdown@statoSem,w
  3084  02D5  1D03               	btfss	3,2
  3085  02D6  2AD8               	goto	u129_21
  3086  02D7  2AD9               	goto	u129_20
  3087  02D8                     u129_21:	
  3088  02D8  2AF7               	goto	i1l1568
  3089  02D9                     u129_20:	
  3090  02D9                     i1l1564:	
  3091                           
  3092                           ;main.c: 519:     {;main.c: 520:        char secondStr[17] = "Sem 0:    Giallo";
  3093  02D9  3035               	movlw	print_Countdown@secondStr_401& (0+255)
  3094  02DA  0084               	movwf	4
  3095  02DB  30A1               	movlw	low print_Countdown@F929
  3096  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  3097  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  3098  02DE  00A0               	movwf	??_print_Countdown
  3099  02DF  0804               	movf	4,w
  3100  02E0  00A1               	movwf	??_print_Countdown+1
  3101  02E1  3011               	movlw	17
  3102  02E2  00A2               	movwf	??_print_Countdown+2
  3103  02E3                     u130_20:	
  3104  02E3  0820               	movf	??_print_Countdown,w
  3105  02E4  0084               	movwf	4
  3106  02E5  1783               	bsf	3,7	;select IRP bank3
  3107  02E6  0800               	movf	0,w
  3108  02E7  00A3               	movwf	??_print_Countdown+3
  3109  02E8  0AA0               	incf	??_print_Countdown,f
  3110  02E9  0821               	movf	??_print_Countdown+1,w
  3111  02EA  0084               	movwf	4
  3112  02EB  1383               	bcf	3,7	;select IRP bank0
  3113  02EC  0823               	movf	??_print_Countdown+3,w
  3114  02ED  0080               	movwf	0
  3115  02EE  0AA1               	incf	??_print_Countdown+1,f
  3116  02EF  0BA2               	decfsz	??_print_Countdown+2,f
  3117  02F0  2AE3               	goto	u130_20
  3118  02F1                     i1l1566:	
  3119                           
  3120                           ;main.c: 521:        send_string(secondStr);
  3121  02F1  3035               	movlw	(low (print_Countdown@secondStr_401| 0))& (0+255)
  3122  02F2  120A  118A  26C3  120A  118A  	fcall	_send_string
  3123  02F7                     i1l1568:	
  3124                           
  3125                           ;main.c: 523:     if(statoSem==2)
  3126  02F7  3002               	movlw	2
  3127  02F8  067B               	xorwf	print_Countdown@statoSem,w
  3128  02F9  1D03               	btfss	3,2
  3129  02FA  2AFC               	goto	u131_21
  3130  02FB  2AFD               	goto	u131_20
  3131  02FC                     u131_21:	
  3132  02FC  2B1B               	goto	i1l1574
  3133  02FD                     u131_20:	
  3134  02FD                     i1l1570:	
  3135                           
  3136                           ;main.c: 524:     {;main.c: 525:        char secondStr[17] = "Sem 0:     Rosso";
  3137  02FD  3046               	movlw	print_Countdown@secondStr_403& (0+255)
  3138  02FE  0084               	movwf	4
  3139  02FF  3090               	movlw	low print_Countdown@F931
  3140  0300  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0301  1303               	bcf	3,6	;RP1=0, select bank0
  3142  0302  00A0               	movwf	??_print_Countdown
  3143  0303  0804               	movf	4,w
  3144  0304  00A1               	movwf	??_print_Countdown+1
  3145  0305  3011               	movlw	17
  3146  0306  00A2               	movwf	??_print_Countdown+2
  3147  0307                     u132_20:	
  3148  0307  0820               	movf	??_print_Countdown,w
  3149  0308  0084               	movwf	4
  3150  0309  1783               	bsf	3,7	;select IRP bank3
  3151  030A  0800               	movf	0,w
  3152  030B  00A3               	movwf	??_print_Countdown+3
  3153  030C  0AA0               	incf	??_print_Countdown,f
  3154  030D  0821               	movf	??_print_Countdown+1,w
  3155  030E  0084               	movwf	4
  3156  030F  1383               	bcf	3,7	;select IRP bank0
  3157  0310  0823               	movf	??_print_Countdown+3,w
  3158  0311  0080               	movwf	0
  3159  0312  0AA1               	incf	??_print_Countdown+1,f
  3160  0313  0BA2               	decfsz	??_print_Countdown+2,f
  3161  0314  2B07               	goto	u132_20
  3162  0315                     i1l1572:	
  3163                           
  3164                           ;main.c: 526:        send_string(secondStr);
  3165  0315  3046               	movlw	(low (print_Countdown@secondStr_403| 0))& (0+255)
  3166  0316  120A  118A  26C3  120A  118A  	fcall	_send_string
  3167  031B                     i1l1574:	
  3168                           
  3169                           ;main.c: 530:     _delay((unsigned long)((100)*(32000000L/4000.0)));
  3170  031B  3005               	movlw	5
  3171  031C  1283               	bcf	3,5	;RP0=0, select bank0
  3172  031D  1303               	bcf	3,6	;RP1=0, select bank0
  3173  031E  00A2               	movwf	??_print_Countdown+2
  3174  031F  300F               	movlw	15
  3175  0320  00A1               	movwf	??_print_Countdown+1
  3176  0321  30F0               	movlw	240
  3177  0322  00A0               	movwf	??_print_Countdown
  3178  0323                     u178_27:	
  3179  0323  0BA0               	decfsz	??_print_Countdown,f
  3180  0324  2B23               	goto	u178_27
  3181  0325  0BA1               	decfsz	??_print_Countdown+1,f
  3182  0326  2B23               	goto	u178_27
  3183  0327  0BA2               	decfsz	??_print_Countdown+2,f
  3184  0328  2B23               	goto	u178_27
  3185  0329  0000               	nop
  3186                           
  3187                           ;main.c: 532:     send_cmd(0x80);
  3188  032A  3080               	movlw	128
  3189  032B  120A  118A  26E4  120A  118A  	fcall	i1_send_cmd
  3190  0330                     i1l1576:	
  3191                           
  3192                           ;main.c: 533:     send_string(firstStr);
  3193  0330  3057               	movlw	(low (print_Countdown@firstStr| 0))& (0+255)
  3194  0331  120A  118A  26C3  120A  118A  	fcall	_send_string
  3195  0336                     i1l218:	
  3196  0336  0008               	return
  3197  0337                     __end_of_print_Countdown:	
  3198                           
  3199                           	psect	text11
  3200  06E4                     __ptext11:	
  3201 ;; *************** function i1_send_cmd *****************
  3202 ;; Defined at:
  3203 ;;		line 563 in file "main.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  command         1    wreg     unsigned char 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  command         1    2[COMMON] unsigned char 
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		wreg
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3217 ;;      Params:         0       0       0       0       0
  3218 ;;      Locals:         1       0       0       0       0
  3219 ;;      Temps:          2       0       0       0       0
  3220 ;;      Totals:         3       0       0       0       0
  3221 ;;Total ram usage:        3 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_print_Countdown
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           
  3231                           ;psect for function i1_send_cmd
  3232  06E4                     i1_send_cmd:	
  3233                           
  3234                           ;incstack = 0
  3235                           ; Regs used in i1_send_cmd: [wreg]
  3236                           ;i1send_cmd@command stored from wreg
  3237  06E4  00F2               	movwf	i1send_cmd@command
  3238  06E5                     i1l1464:	
  3239                           
  3240                           ;main.c: 563: void send_cmd(char command);main.c: 564: {;main.c: 565:     PORTEbits.RE1 
      +                          = 1;
  3241  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  3242  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  3243  06E7  1489               	bsf	9,1	;volatile
  3244  06E8                     i1l1466:	
  3245                           
  3246                           ;main.c: 566:     PORTD = command;
  3247  06E8  0872               	movf	i1send_cmd@command,w
  3248  06E9  0088               	movwf	8	;volatile
  3249  06EA                     i1l1468:	
  3250                           
  3251                           ;main.c: 567:     PORTEbits.RE2 = 0;
  3252  06EA  1109               	bcf	9,2	;volatile
  3253                           
  3254                           ;main.c: 568:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3255  06EB  3020               	movlw	32
  3256  06EC  00F1               	movwf	??i1_send_cmd+1
  3257  06ED  3029               	movlw	41
  3258  06EE  00F0               	movwf	??i1_send_cmd
  3259  06EF                     u179_27:	
  3260  06EF  0BF0               	decfsz	??i1_send_cmd,f
  3261  06F0  2EEF               	goto	u179_27
  3262  06F1  0BF1               	decfsz	??i1_send_cmd+1,f
  3263  06F2  2EEF               	goto	u179_27
  3264  06F3  2EF4               	nop2
  3265  06F4                     i1l1470:	
  3266                           
  3267                           ;main.c: 569:     PORTEbits.RE1 = 0;
  3268  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  3269  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  3270  06F6  1089               	bcf	9,1	;volatile
  3271                           
  3272                           ;main.c: 570:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3273  06F7  3020               	movlw	32
  3274  06F8  00F1               	movwf	??i1_send_cmd+1
  3275  06F9  3029               	movlw	41
  3276  06FA  00F0               	movwf	??i1_send_cmd
  3277  06FB                     u180_27:	
  3278  06FB  0BF0               	decfsz	??i1_send_cmd,f
  3279  06FC  2EFB               	goto	u180_27
  3280  06FD  0BF1               	decfsz	??i1_send_cmd+1,f
  3281  06FE  2EFB               	goto	u180_27
  3282  06FF  2F00               	nop2
  3283  0700                     i1l1472:	
  3284                           
  3285                           ;main.c: 571:     PORTEbits.RE1 = 1;
  3286  0700  1283               	bcf	3,5	;RP0=0, select bank0
  3287  0701  1303               	bcf	3,6	;RP1=0, select bank0
  3288  0702  1489               	bsf	9,1	;volatile
  3289  0703                     i1l230:	
  3290  0703  0008               	return
  3291  0704                     __end_ofi1_send_cmd:	
  3292                           
  3293                           	psect	text12
  3294  06C3                     __ptext12:	
  3295 ;; *************** function _send_string *****************
  3296 ;; Defined at:
  3297 ;;		line 540 in file "main.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  str             1    wreg     PTR unsigned char 
  3300 ;;		 -> print_Countdown@secondStr_403(17), print_Countdown@secondStr_401(17), print_Countdown@secondStr(17), print_Count
      +down@firstStr(17), 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  str             1    6[COMMON] PTR unsigned char 
  3303 ;;		 -> print_Countdown@secondStr_403(17), print_Countdown@secondStr_401(17), print_Countdown@secondStr(17), print_Count
      +down@firstStr(17), 
  3304 ;;  i               2    4[COMMON] int 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  1    wreg      void 
  3307 ;; Registers used:
  3308 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3314 ;;      Params:         0       0       0       0       0
  3315 ;;      Locals:         3       0       0       0       0
  3316 ;;      Temps:          1       0       0       0       0
  3317 ;;      Totals:         4       0       0       0       0
  3318 ;;Total ram usage:        4 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; Hardware stack levels required when called:    1
  3321 ;; This function calls:
  3322 ;;		_send_data
  3323 ;; This function is called by:
  3324 ;;		_print_Countdown
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           
  3329                           ;psect for function _send_string
  3330  06C3                     _send_string:	
  3331                           
  3332                           ;incstack = 0
  3333                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3334                           ;send_string@str stored from wreg
  3335  06C3  00F6               	movwf	send_string@str
  3336  06C4                     i1l1334:	
  3337                           
  3338                           ;main.c: 540: void send_string(char *str);main.c: 541: {;main.c: 542:     int i = 0;
  3339  06C4  01F4               	clrf	send_string@i
  3340  06C5  01F5               	clrf	send_string@i+1
  3341                           
  3342                           ;main.c: 543:     while(str[i] != '\0')
  3343  06C6  2ED8               	goto	i1l1340
  3344  06C7                     i1l1336:	
  3345                           
  3346                           ;main.c: 544:     {;main.c: 545:         send_data(str[i]);
  3347  06C7  0874               	movf	send_string@i,w
  3348  06C8  0776               	addwf	send_string@str,w
  3349  06C9  00F3               	movwf	??_send_string
  3350  06CA  0873               	movf	??_send_string,w
  3351  06CB  0084               	movwf	4
  3352  06CC  0800               	movf	0,w
  3353  06CD  120A  118A  2704  120A  118A  	fcall	_send_data
  3354  06D2                     i1l1338:	
  3355                           
  3356                           ;main.c: 546:         i++;
  3357  06D2  3001               	movlw	1
  3358  06D3  07F4               	addwf	send_string@i,f
  3359  06D4  1803               	skipnc
  3360  06D5  0AF5               	incf	send_string@i+1,f
  3361  06D6  3000               	movlw	0
  3362  06D7  07F5               	addwf	send_string@i+1,f
  3363  06D8                     i1l1340:	
  3364                           
  3365                           ;main.c: 543:     while(str[i] != '\0')
  3366  06D8  0874               	movf	send_string@i,w
  3367  06D9  0776               	addwf	send_string@str,w
  3368  06DA  00F3               	movwf	??_send_string
  3369  06DB  0873               	movf	??_send_string,w
  3370  06DC  0084               	movwf	4
  3371  06DD  1383               	bcf	3,7	;select IRP bank0
  3372  06DE  0800               	movf	0,w
  3373  06DF  1D03               	btfss	3,2
  3374  06E0  2EE2               	goto	u90_21
  3375  06E1  2EE3               	goto	u90_20
  3376  06E2                     u90_21:	
  3377  06E2  2EC7               	goto	i1l1336
  3378  06E3                     u90_20:	
  3379  06E3                     i1l224:	
  3380  06E3  0008               	return
  3381  06E4                     __end_of_send_string:	
  3382                           
  3383                           	psect	text13
  3384  0704                     __ptext13:	
  3385 ;; *************** function _send_data *****************
  3386 ;; Defined at:
  3387 ;;		line 551 in file "main.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  data            1    wreg     unsigned char 
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  data            1    2[COMMON] unsigned char 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3401 ;;      Params:         0       0       0       0       0
  3402 ;;      Locals:         1       0       0       0       0
  3403 ;;      Temps:          2       0       0       0       0
  3404 ;;      Totals:         3       0       0       0       0
  3405 ;;Total ram usage:        3 bytes
  3406 ;; Hardware stack levels used:    1
  3407 ;; This function calls:
  3408 ;;		Nothing
  3409 ;; This function is called by:
  3410 ;;		_send_string
  3411 ;; This function uses a non-reentrant model
  3412 ;;
  3413                           
  3414                           
  3415                           ;psect for function _send_data
  3416  0704                     _send_data:	
  3417                           
  3418                           ;incstack = 0
  3419                           ; Regs used in _send_data: [wreg]
  3420                           ;send_data@data stored from wreg
  3421  0704  00F2               	movwf	send_data@data
  3422  0705                     i1l1302:	
  3423                           
  3424                           ;main.c: 551: void send_data(char data);main.c: 552: {;main.c: 553:     PORTEbits.RE1 = 
      +                          1;
  3425  0705  1283               	bcf	3,5	;RP0=0, select bank0
  3426  0706  1303               	bcf	3,6	;RP1=0, select bank0
  3427  0707  1489               	bsf	9,1	;volatile
  3428  0708                     i1l1304:	
  3429                           
  3430                           ;main.c: 554:     PORTD = data;
  3431  0708  0872               	movf	send_data@data,w
  3432  0709  0088               	movwf	8	;volatile
  3433  070A                     i1l1306:	
  3434                           
  3435                           ;main.c: 555:     PORTEbits.RE2 = 1;
  3436  070A  1509               	bsf	9,2	;volatile
  3437                           
  3438                           ;main.c: 556:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3439  070B  3020               	movlw	32
  3440  070C  00F1               	movwf	??_send_data+1
  3441  070D  3029               	movlw	41
  3442  070E  00F0               	movwf	??_send_data
  3443  070F                     u181_27:	
  3444  070F  0BF0               	decfsz	??_send_data,f
  3445  0710  2F0F               	goto	u181_27
  3446  0711  0BF1               	decfsz	??_send_data+1,f
  3447  0712  2F0F               	goto	u181_27
  3448  0713  2F14               	nop2
  3449  0714                     i1l1308:	
  3450                           
  3451                           ;main.c: 557:     PORTEbits.RE1 = 0;
  3452  0714  1283               	bcf	3,5	;RP0=0, select bank0
  3453  0715  1303               	bcf	3,6	;RP1=0, select bank0
  3454  0716  1089               	bcf	9,1	;volatile
  3455                           
  3456                           ;main.c: 558:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3457  0717  3020               	movlw	32
  3458  0718  00F1               	movwf	??_send_data+1
  3459  0719  3029               	movlw	41
  3460  071A  00F0               	movwf	??_send_data
  3461  071B                     u182_27:	
  3462  071B  0BF0               	decfsz	??_send_data,f
  3463  071C  2F1B               	goto	u182_27
  3464  071D  0BF1               	decfsz	??_send_data+1,f
  3465  071E  2F1B               	goto	u182_27
  3466  071F  2F20               	nop2
  3467  0720                     i1l1310:	
  3468                           
  3469                           ;main.c: 559:     PORTEbits.RE1 = 1;
  3470  0720  1283               	bcf	3,5	;RP0=0, select bank0
  3471  0721  1303               	bcf	3,6	;RP1=0, select bank0
  3472  0722  1489               	bsf	9,1	;volatile
  3473  0723                     i1l227:	
  3474  0723  0008               	return
  3475  0724                     __end_of_send_data:	
  3476                           
  3477                           	psect	text14
  3478  054B                     __ptext14:	
  3479 ;; *************** function ___awmod *****************
  3480 ;; Defined at:
  3481 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3482 ;; Parameters:    Size  Location     Type
  3483 ;;  divisor         2    0[COMMON] int 
  3484 ;;  dividend        2    2[COMMON] int 
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;  sign            1    6[COMMON] unsigned char 
  3487 ;;  counter         1    5[COMMON] unsigned char 
  3488 ;; Return value:  Size  Location     Type
  3489 ;;                  2    0[COMMON] int 
  3490 ;; Registers used:
  3491 ;;		wreg, status,2, status,0
  3492 ;; Tracked objects:
  3493 ;;		On entry : 0/0
  3494 ;;		On exit  : 0/0
  3495 ;;		Unchanged: 0/0
  3496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3497 ;;      Params:         4       0       0       0       0
  3498 ;;      Locals:         2       0       0       0       0
  3499 ;;      Temps:          1       0       0       0       0
  3500 ;;      Totals:         7       0       0       0       0
  3501 ;;Total ram usage:        7 bytes
  3502 ;; Hardware stack levels used:    1
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_print_Countdown
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           
  3511                           ;psect for function ___awmod
  3512  054B                     ___awmod:	
  3513  054B                     i1l1426:	
  3514                           ;incstack = 0
  3515                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3516                           
  3517  054B  01F6               	clrf	___awmod@sign
  3518  054C                     i1l1428:	
  3519  054C  1FF3               	btfss	___awmod@dividend+1,7
  3520  054D  2D4F               	goto	u111_21
  3521  054E  2D50               	goto	u111_20
  3522  054F                     u111_21:	
  3523  054F  2D57               	goto	i1l1434
  3524  0550                     u111_20:	
  3525  0550                     i1l1430:	
  3526  0550  09F2               	comf	___awmod@dividend,f
  3527  0551  09F3               	comf	___awmod@dividend+1,f
  3528  0552  0AF2               	incf	___awmod@dividend,f
  3529  0553  1903               	skipnz
  3530  0554  0AF3               	incf	___awmod@dividend+1,f
  3531  0555                     i1l1432:	
  3532  0555  01F6               	clrf	___awmod@sign
  3533  0556  0AF6               	incf	___awmod@sign,f
  3534  0557                     i1l1434:	
  3535  0557  1FF1               	btfss	___awmod@divisor+1,7
  3536  0558  2D5A               	goto	u112_21
  3537  0559  2D5B               	goto	u112_20
  3538  055A                     u112_21:	
  3539  055A  2D60               	goto	i1l1438
  3540  055B                     u112_20:	
  3541  055B                     i1l1436:	
  3542  055B  09F0               	comf	___awmod@divisor,f
  3543  055C  09F1               	comf	___awmod@divisor+1,f
  3544  055D  0AF0               	incf	___awmod@divisor,f
  3545  055E  1903               	skipnz
  3546  055F  0AF1               	incf	___awmod@divisor+1,f
  3547  0560                     i1l1438:	
  3548  0560  0870               	movf	___awmod@divisor,w
  3549  0561  0471               	iorwf	___awmod@divisor+1,w
  3550  0562  1903               	btfsc	3,2
  3551  0563  2D65               	goto	u113_21
  3552  0564  2D66               	goto	u113_20
  3553  0565                     u113_21:	
  3554  0565  2D95               	goto	i1l1456
  3555  0566                     u113_20:	
  3556  0566                     i1l1440:	
  3557  0566  01F5               	clrf	___awmod@counter
  3558  0567  0AF5               	incf	___awmod@counter,f
  3559  0568  2D74               	goto	i1l1446
  3560  0569                     i1l1442:	
  3561  0569  3001               	movlw	1
  3562  056A                     u114_25:	
  3563  056A  1003               	clrc
  3564  056B  0DF0               	rlf	___awmod@divisor,f
  3565  056C  0DF1               	rlf	___awmod@divisor+1,f
  3566  056D  3EFF               	addlw	-1
  3567  056E  1D03               	skipz
  3568  056F  2D6A               	goto	u114_25
  3569  0570                     i1l1444:	
  3570  0570  3001               	movlw	1
  3571  0571  00F4               	movwf	??___awmod
  3572  0572  0874               	movf	??___awmod,w
  3573  0573  07F5               	addwf	___awmod@counter,f
  3574  0574                     i1l1446:	
  3575  0574  1FF1               	btfss	___awmod@divisor+1,7
  3576  0575  2D77               	goto	u115_21
  3577  0576  2D78               	goto	u115_20
  3578  0577                     u115_21:	
  3579  0577  2D69               	goto	i1l1442
  3580  0578                     u115_20:	
  3581  0578                     i1l1448:	
  3582  0578  0871               	movf	___awmod@divisor+1,w
  3583  0579  0273               	subwf	___awmod@dividend+1,w
  3584  057A  1D03               	skipz
  3585  057B  2D7E               	goto	u116_25
  3586  057C  0870               	movf	___awmod@divisor,w
  3587  057D  0272               	subwf	___awmod@dividend,w
  3588  057E                     u116_25:	
  3589  057E  1C03               	skipc
  3590  057F  2D81               	goto	u116_21
  3591  0580  2D82               	goto	u116_20
  3592  0581                     u116_21:	
  3593  0581  2D88               	goto	i1l1452
  3594  0582                     u116_20:	
  3595  0582                     i1l1450:	
  3596  0582  0870               	movf	___awmod@divisor,w
  3597  0583  02F2               	subwf	___awmod@dividend,f
  3598  0584  0871               	movf	___awmod@divisor+1,w
  3599  0585  1C03               	skipc
  3600  0586  03F3               	decf	___awmod@dividend+1,f
  3601  0587  02F3               	subwf	___awmod@dividend+1,f
  3602  0588                     i1l1452:	
  3603  0588  3001               	movlw	1
  3604  0589                     u117_25:	
  3605  0589  1003               	clrc
  3606  058A  0CF1               	rrf	___awmod@divisor+1,f
  3607  058B  0CF0               	rrf	___awmod@divisor,f
  3608  058C  3EFF               	addlw	-1
  3609  058D  1D03               	skipz
  3610  058E  2D89               	goto	u117_25
  3611  058F                     i1l1454:	
  3612  058F  3001               	movlw	1
  3613  0590  02F5               	subwf	___awmod@counter,f
  3614  0591  1D03               	btfss	3,2
  3615  0592  2D94               	goto	u118_21
  3616  0593  2D95               	goto	u118_20
  3617  0594                     u118_21:	
  3618  0594  2D78               	goto	i1l1448
  3619  0595                     u118_20:	
  3620  0595                     i1l1456:	
  3621  0595  0876               	movf	___awmod@sign,w
  3622  0596  1903               	btfsc	3,2
  3623  0597  2D99               	goto	u119_21
  3624  0598  2D9A               	goto	u119_20
  3625  0599                     u119_21:	
  3626  0599  2D9F               	goto	i1l1460
  3627  059A                     u119_20:	
  3628  059A                     i1l1458:	
  3629  059A  09F2               	comf	___awmod@dividend,f
  3630  059B  09F3               	comf	___awmod@dividend+1,f
  3631  059C  0AF2               	incf	___awmod@dividend,f
  3632  059D  1903               	skipnz
  3633  059E  0AF3               	incf	___awmod@dividend+1,f
  3634  059F                     i1l1460:	
  3635  059F  0873               	movf	___awmod@dividend+1,w
  3636  05A0  00F1               	movwf	?___awmod+1
  3637  05A1  0872               	movf	___awmod@dividend,w
  3638  05A2  00F0               	movwf	?___awmod
  3639  05A3                     i1l494:	
  3640  05A3  0008               	return
  3641  05A4                     __end_of___awmod:	
  3642                           
  3643                           	psect	text15
  3644  04E4                     __ptext15:	
  3645 ;; *************** function ___awdiv *****************
  3646 ;; Defined at:
  3647 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  divisor         2    0[COMMON] int 
  3650 ;;  dividend        2    2[COMMON] int 
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  quotient        2    7[COMMON] int 
  3653 ;;  sign            1    6[COMMON] unsigned char 
  3654 ;;  counter         1    5[COMMON] unsigned char 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;                  2    0[COMMON] int 
  3657 ;; Registers used:
  3658 ;;		wreg, status,2, status,0
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3664 ;;      Params:         4       0       0       0       0
  3665 ;;      Locals:         4       0       0       0       0
  3666 ;;      Temps:          1       0       0       0       0
  3667 ;;      Totals:         9       0       0       0       0
  3668 ;;Total ram usage:        9 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; This function calls:
  3671 ;;		Nothing
  3672 ;; This function is called by:
  3673 ;;		_print_Countdown
  3674 ;; This function uses a non-reentrant model
  3675 ;;
  3676                           
  3677                           
  3678                           ;psect for function ___awdiv
  3679  04E4                     ___awdiv:	
  3680  04E4                     i1l1382:	
  3681                           ;incstack = 0
  3682                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3683                           
  3684  04E4  01F6               	clrf	___awdiv@sign
  3685  04E5                     i1l1384:	
  3686  04E5  1FF1               	btfss	___awdiv@divisor+1,7
  3687  04E6  2CE8               	goto	u101_21
  3688  04E7  2CE9               	goto	u101_20
  3689  04E8                     u101_21:	
  3690  04E8  2CF0               	goto	i1l1390
  3691  04E9                     u101_20:	
  3692  04E9                     i1l1386:	
  3693  04E9  09F0               	comf	___awdiv@divisor,f
  3694  04EA  09F1               	comf	___awdiv@divisor+1,f
  3695  04EB  0AF0               	incf	___awdiv@divisor,f
  3696  04EC  1903               	skipnz
  3697  04ED  0AF1               	incf	___awdiv@divisor+1,f
  3698  04EE                     i1l1388:	
  3699  04EE  01F6               	clrf	___awdiv@sign
  3700  04EF  0AF6               	incf	___awdiv@sign,f
  3701  04F0                     i1l1390:	
  3702  04F0  1FF3               	btfss	___awdiv@dividend+1,7
  3703  04F1  2CF3               	goto	u102_21
  3704  04F2  2CF4               	goto	u102_20
  3705  04F3                     u102_21:	
  3706  04F3  2CFD               	goto	i1l1396
  3707  04F4                     u102_20:	
  3708  04F4                     i1l1392:	
  3709  04F4  09F2               	comf	___awdiv@dividend,f
  3710  04F5  09F3               	comf	___awdiv@dividend+1,f
  3711  04F6  0AF2               	incf	___awdiv@dividend,f
  3712  04F7  1903               	skipnz
  3713  04F8  0AF3               	incf	___awdiv@dividend+1,f
  3714  04F9                     i1l1394:	
  3715  04F9  3001               	movlw	1
  3716  04FA  00F4               	movwf	??___awdiv
  3717  04FB  0874               	movf	??___awdiv,w
  3718  04FC  06F6               	xorwf	___awdiv@sign,f
  3719  04FD                     i1l1396:	
  3720  04FD  01F7               	clrf	___awdiv@quotient
  3721  04FE  01F8               	clrf	___awdiv@quotient+1
  3722  04FF                     i1l1398:	
  3723  04FF  0870               	movf	___awdiv@divisor,w
  3724  0500  0471               	iorwf	___awdiv@divisor+1,w
  3725  0501  1903               	btfsc	3,2
  3726  0502  2D04               	goto	u103_21
  3727  0503  2D05               	goto	u103_20
  3728  0504                     u103_21:	
  3729  0504  2D3C               	goto	i1l1418
  3730  0505                     u103_20:	
  3731  0505                     i1l1400:	
  3732  0505  01F5               	clrf	___awdiv@counter
  3733  0506  0AF5               	incf	___awdiv@counter,f
  3734  0507  2D13               	goto	i1l1406
  3735  0508                     i1l1402:	
  3736  0508  3001               	movlw	1
  3737  0509                     u104_25:	
  3738  0509  1003               	clrc
  3739  050A  0DF0               	rlf	___awdiv@divisor,f
  3740  050B  0DF1               	rlf	___awdiv@divisor+1,f
  3741  050C  3EFF               	addlw	-1
  3742  050D  1D03               	skipz
  3743  050E  2D09               	goto	u104_25
  3744  050F                     i1l1404:	
  3745  050F  3001               	movlw	1
  3746  0510  00F4               	movwf	??___awdiv
  3747  0511  0874               	movf	??___awdiv,w
  3748  0512  07F5               	addwf	___awdiv@counter,f
  3749  0513                     i1l1406:	
  3750  0513  1FF1               	btfss	___awdiv@divisor+1,7
  3751  0514  2D16               	goto	u105_21
  3752  0515  2D17               	goto	u105_20
  3753  0516                     u105_21:	
  3754  0516  2D08               	goto	i1l1402
  3755  0517                     u105_20:	
  3756  0517                     i1l1408:	
  3757  0517  3001               	movlw	1
  3758  0518                     u106_25:	
  3759  0518  1003               	clrc
  3760  0519  0DF7               	rlf	___awdiv@quotient,f
  3761  051A  0DF8               	rlf	___awdiv@quotient+1,f
  3762  051B  3EFF               	addlw	-1
  3763  051C  1D03               	skipz
  3764  051D  2D18               	goto	u106_25
  3765  051E  0871               	movf	___awdiv@divisor+1,w
  3766  051F  0273               	subwf	___awdiv@dividend+1,w
  3767  0520  1D03               	skipz
  3768  0521  2D24               	goto	u107_25
  3769  0522  0870               	movf	___awdiv@divisor,w
  3770  0523  0272               	subwf	___awdiv@dividend,w
  3771  0524                     u107_25:	
  3772  0524  1C03               	skipc
  3773  0525  2D27               	goto	u107_21
  3774  0526  2D28               	goto	u107_20
  3775  0527                     u107_21:	
  3776  0527  2D2F               	goto	i1l1414
  3777  0528                     u107_20:	
  3778  0528                     i1l1410:	
  3779  0528  0870               	movf	___awdiv@divisor,w
  3780  0529  02F2               	subwf	___awdiv@dividend,f
  3781  052A  0871               	movf	___awdiv@divisor+1,w
  3782  052B  1C03               	skipc
  3783  052C  03F3               	decf	___awdiv@dividend+1,f
  3784  052D  02F3               	subwf	___awdiv@dividend+1,f
  3785  052E                     i1l1412:	
  3786  052E  1477               	bsf	___awdiv@quotient,0
  3787  052F                     i1l1414:	
  3788  052F  3001               	movlw	1
  3789  0530                     u108_25:	
  3790  0530  1003               	clrc
  3791  0531  0CF1               	rrf	___awdiv@divisor+1,f
  3792  0532  0CF0               	rrf	___awdiv@divisor,f
  3793  0533  3EFF               	addlw	-1
  3794  0534  1D03               	skipz
  3795  0535  2D30               	goto	u108_25
  3796  0536                     i1l1416:	
  3797  0536  3001               	movlw	1
  3798  0537  02F5               	subwf	___awdiv@counter,f
  3799  0538  1D03               	btfss	3,2
  3800  0539  2D3B               	goto	u109_21
  3801  053A  2D3C               	goto	u109_20
  3802  053B                     u109_21:	
  3803  053B  2D17               	goto	i1l1408
  3804  053C                     u109_20:	
  3805  053C                     i1l1418:	
  3806  053C  0876               	movf	___awdiv@sign,w
  3807  053D  1903               	btfsc	3,2
  3808  053E  2D40               	goto	u110_21
  3809  053F  2D41               	goto	u110_20
  3810  0540                     u110_21:	
  3811  0540  2D46               	goto	i1l1422
  3812  0541                     u110_20:	
  3813  0541                     i1l1420:	
  3814  0541  09F7               	comf	___awdiv@quotient,f
  3815  0542  09F8               	comf	___awdiv@quotient+1,f
  3816  0543  0AF7               	incf	___awdiv@quotient,f
  3817  0544  1903               	skipnz
  3818  0545  0AF8               	incf	___awdiv@quotient+1,f
  3819  0546                     i1l1422:	
  3820  0546  0878               	movf	___awdiv@quotient+1,w
  3821  0547  00F1               	movwf	?___awdiv+1
  3822  0548  0877               	movf	___awdiv@quotient,w
  3823  0549  00F0               	movwf	?___awdiv
  3824  054A                     i1l481:	
  3825  054A  0008               	return
  3826  054B                     __end_of___awdiv:	
  3827  007E                     btemp	set	126	;btemp
  3828  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        77
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     79      80
    BANK1            80     33      67
    BANK3            96      0      68
    BANK2            96      0       0

Pointer List with Targets:

    send_string@str	PTR unsigned char  size(1) Largest target is 17
		 -> print_Countdown@secondStr_403(BANK0[17]), print_Countdown@secondStr_401(BANK0[17]), print_Countdown@secondStr(BANK0[17]), print_Countdown@firstStr(BANK0[17]), 

    Uart_send_string@str	PTR unsigned char  size(1) Largest target is 8
		 -> strToSend(BANK1[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_print_Countdown
    _print_Countdown->___awdiv
    _send_string->_send_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_print_Countdown

Critical Paths under _main in BANK1

    _main->_UART_init
    _messageTransmission->_Uart_send_string
    _Uart_send_string->_UART_TxChar
    _init_lcd->_send_cmd
    _UART_init->___aldiv

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    3809
                                             28 BANK1      5     5      0
                          _UART_init
                            _initPic
                           _init_lcd
                _messageTransmission
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _messageTransmission                                  5     2      3    2969
                                             11 BANK1      5     2      3
                   _Uart_send_string
 ---------------------------------------------------------------------------------
 (2) _Uart_send_string                                     3     3      0     145
                                              8 BANK1      3     3      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              7 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             2     2      0      22
                                             10 BANK1      2     2      0
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _send_cmd                                             3     3      0      22
                                              7 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initPic                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            6     4      2     550
                                             22 BANK1      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              7 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  7     7      0    2110
                                              0 BANK1      7     7      0
                    _print_Countdown
 ---------------------------------------------------------------------------------
 (5) _print_Countdown                                     82    79      3    2110
                                              9 COMMON     3     0      3
                                              0 BANK0     79    79      0
                            ___awdiv
                            ___awmod
                        _send_string
                         i1_send_cmd
 ---------------------------------------------------------------------------------
 (6) i1_send_cmd                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _send_string                                          4     4      0     244
                                              3 COMMON     4     4      0
                          _send_data
 ---------------------------------------------------------------------------------
 (7) _send_data                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
   _initPic
   _init_lcd
     _send_cmd
   _messageTransmission
     _Uart_send_string
       _UART_TxChar
   _send_cmd

 _ISR (ROOT)
   _print_Countdown
     ___awdiv
     ___awmod
     _send_string
       _send_data
     i1_send_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      44       9       70.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     21      43       7       83.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E5      12        0.0%
ABS                  0      0      E5       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jul 17 09:18:54 2020

                               _f 00DE                                 pc 0002                       __CFG_CP$OFF 0000  
                    ___awdiv@sign 0076                                fsr 0004      print_Countdown@secondStr_401 0035  
    print_Countdown@secondStr_403 0046               _messageTransmission 06A1                       __CFG_LVP$ON 0000  
                             l141 00FF                               l230 06A0                               l233 05FA  
                             l241 075C                               l242 0763                               l403 04E3  
                             l236 0678                               l181 0740                               l239 0757  
                             l184 0772                               l176 06C2                               l393 045B  
                    __CFG_CPD$OFF 0000                               _ISR 0337                               u910 044E  
                             u911 044D                               u920 045F                               u921 045E  
                             u930 047E                               u931 047D                               u950 0492  
                             u951 0491                               u880 075C                               u945 0483  
                             u881 075B                               u970 04AD                               u890 0740  
                             u971 04AC                               u891 073F                               u965 0494  
                             u990 04CB                               u991 04CA                               u975 04A9  
                             u985 04BD                               fsr0 0004                               indf 0000  
                    ___awmod@sign 0076                      __CFG_FOSC$HS 0000         messageTransmission@codice 00AC  
                            ?_ISR 0070         messageTransmission@valore 00AD                              l1300 075D  
                            l1320 069D                              l1312 067C                              l1314 067F  
                            l1330 0734                              l1322 0727                              l1316 0685  
                            l1500 05CB                              l1332 073A                              l1350 046A  
                            l1342 0447                              l1318 0690                              l1510 05EE  
                            l1502 05D6                              l1360 048E                              l1352 046E  
                            l1344 044A                              l1512 05F4                              l1504 05DC  
                            l1328 0728                              l1600 008A                              l1370 04BC  
                            l1362 0492                              l1354 0476                              l1346 044E  
                            l1506 05E2                              l1514 06A4                              l1602 008F  
                            l1372 04C5                              l1364 049B                              l1356 047E  
                            l1348 045F                              l1508 05E8                              l1516 06BC  
                            l1620 00B3                              l1604 0093                              l1366 04AD  
                            l1358 0481                              l1374 04CB                              l1630 00CF  
                            l1622 00B6                              l1614 009B                              l1606 0094  
                            l1376 04D0                              l1368 04BB                              l1480 063F  
                            l1640 00ED                              l1632 00D8                              l1624 00BD  
                            l1616 00A0                              l1608 0099                              l1378 04DB  
                            l1482 0647                              l1474 0764                              l1490 05A4  
                            l1298 0757                              l1650 0105                              l1642 00F3  
                            l1634 00DB                              l1626 00C2                              l1618 00AA  
                            l1484 0675                              l1476 0767                              l1492 05A8  
                            l1660 01C3                              l1644 00F6                              l1636 00E2  
                            l1628 00C9                              l1652 010B                              l1580 0064  
                            l1486 0676                              l1478 0769                              l1494 05B2  
                            l1670 01F1                              l1662 01D5                              l1654 0110  
                            l1646 00FA                              l1638 00E7                              l1590 007B  
                            l1582 006A                              l1488 0677                              l1496 05B5  
                            l1672 01F5                              l1664 01E8                              l1656 01B0  
                            l1648 0101                              l1592 007F                              l1584 006E  
                            l1498 05BB                              l1666 01EB                              l1658 01B3  
                            l1594 0080                              l1586 0072                              l1578 0049  
                            l1668 01EC                              l1596 0085                              l1588 0076  
                            l1598 0089                              u1000 04D0                              u1001 04CF  
                            u1200 0658                              u1205 0653                              u1400 00C2  
                            u1401 00C1                              u1410 00CF                              u1330 007B  
                            u1411 00CE                              u1331 007A                              u1420 00D8  
                            u1340 0085                              u1421 00D7                              u1341 0084  
                            u1430 00E7                              u1350 008F                              u1431 00E6  
                            u1351 008E                              u1440 00ED                              u1360 0099  
                            u1441 00EC                              u1361 0098                              u1450 00F3  
                            u1370 00A0                              u1451 00F2                              u1371 009F  
                            u1460 00FF                              u1380 00AA                              u1461 00FE  
                            u1381 00A9                              u1470 010B                              u1390 00B3  
                            u1471 010A                              u1391 00B2                              u1480 0110  
                            u1481 010F                              u1490 01F1                              u1491 01F0  
                            u1737 05AE                              u1747 05C1                              u1757 05D1  
                            u1767 068C                              u1777 0699                              _RCIF 0065  
                            _TMR0 0001                              _TXIF 0064              ?_messageTransmission 00AB  
                    __CFG_WRT$OFF 0000                              _main 0049                        i1_send_cmd 06E4  
                            btemp 007E                     __CFG_BOREN$ON 0000                              start 0016  
                   _statoSemafori 00DB                             ??_ISR 00A0                   __end_of___aldiv 04E4  
                           ?_main 0070                   __end_of___awdiv 054B                     __CFG_WDTE$OFF 0000  
                 __end_of___awmod 05A4                   ___awdiv@divisor 0070                             i1l230 0703  
                           i1l224 06E3                             i1l218 0336                             i1l227 0723  
                           i1l163 03BC                             i1l155 034E                 Uart_send_string@i 00AA  
                           i1l156 036B                             i1l173 0436                             i1l165 03C0  
                           i1l157 038C                             i1l481 054A                             i1l494 05A3  
                 ___awdiv@counter 0075                             _RCREG 001A                             _SPBRG 0099  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISD 0088                             _TRISE 0089                             u90_20 06E3  
                           u90_21 06E2                             _TXREG 0019                             _PicId 00E0  
                   __CFG_PWRTE$ON 0000                    _scattoSemafori 00C8                __size_of_UART_init 003A  
                 __end_of_initPic 0773                             _count 00C5                             _stat1 00CD  
                           _stat2 00CB                             _stat3 00C9                             main@i 00C0  
           ??_messageTransmission 00AE                             pclath 000A                print_Countdown@num 0079  
                           status 0003                             wtemp0 007E                   __initialization 0019  
                    __end_of_main 01FA                            ??_main 00BC                            _ADCON0 001F  
                          _ADCON1 009F                            _ADRESH 001E                            _ADRESL 009E  
                ___awdiv@dividend 0072                            u101_20 04E9                            u101_21 04E8  
                          u110_20 0541                            u102_20 04F4                            u110_21 0540  
                          u102_21 04F3                            i1l1310 0720                            i1l1302 0705  
                          i1l1400 0505                            u103_20 0505                            u111_20 0550  
                          i1l1304 0708                            u103_21 0504                            u111_21 054F  
                          i1l1410 0528                            i1l1402 0508                            i1l1306 070A  
                          i1l1420 0541                            i1l1412 052E                            i1l1404 050F  
                          i1l1308 0714                            i1l1340 06D8                            i1l1422 0546  
                          i1l1414 052F                            i1l1406 0513                            i1l1430 0550  
                          i1l1334 06C4                            i1l1416 0536                            i1l1408 0517  
                          i1l1440 0566                            u112_20 055B                            i1l1432 0555  
                          i1l1336 06C7                            i1l1520 0212                            u112_21 055A  
                          i1l1418 053C                            i1l1450 0582                            i1l1442 0569  
                          i1l1434 0557                            i1l1426 054B                            i1l1338 06D2  
                          i1l1530 0233                            i1l1522 0216                            i1l1460 059F  
                          i1l1452 0588                            i1l1444 0570                            i1l1436 055B  
                          i1l1428 054C                            i1l1540 0269                            i1l1532 0239  
                          i1l1524 0218                            i1l1700 03A8                            u104_25 0509  
                          i1l1390 04F0                            i1l1382 04E4                            i1l1454 058F  
                          i1l1446 0574                            i1l1438 0560                            i1l1470 06F4  
                          i1l1550 0291                            i1l1542 0271                            i1l1526 0225  
                          i1l1518 01FA                            i1l1710 03C1                            i1l1702 03AD  
                          u105_20 0517                            i1l1392 04F4                            i1l1384 04E5  
                          i1l1448 0578                            i1l1456 0595                            u113_20 0566  
                          i1l1472 0700                            i1l1464 06E5                            i1l1560 02CE  
                          i1l1552 0297                            i1l1536 0240                            i1l1544 0278  
                          i1l1528 022C                            u121_20 0204                            i1l1720 03D7  
                          i1l1712 03C7                            i1l1704 03B2                            u105_21 0516  
                          u113_21 0565                            i1l1394 04F9                            i1l1386 04E9  
                          i1l1458 059A                            i1l1466 06E8                            i1l1570 02FD  
                          i1l1562 02D4                            i1l1554 02A5                            i1l1546 027E  
                          i1l1538 0258                            i1l1730 0411                            i1l1722 03E6  
                          i1l1714 03C9                            i1l1706 03B6                            i1l1396 04FD  
                          i1l1388 04EE                            i1l1468 06EA                            i1l1572 0315  
                          i1l1564 02D9                            i1l1556 02B1                            i1l1548 0283  
                          i1l1740 0434                            i1l1732 0418                            i1l1724 03EC  
                          i1l1716 03CD                            i1l1398 04FF                            i1l1574 031B  
                          i1l1566 02F1                            i1l1558 02B6                            i1l1734 041E  
                          i1l1726 03F9                            i1l1718 03D3                            i1l1576 0330  
                          u130_20 02E3                            i1l1568 02F7                            u122_20 0225  
                          i1l1736 0429                            i1l1728 0401                            i1l1680 0356  
                          u122_21 0224                            i1l1738 0432                            i1l1690 0382  
                          i1l1682 035A                            i1l1674 0337                            i1l1692 039C  
                          i1l1684 0361                            i1l1676 033D                            u106_25 0518  
                          u114_25 056A                            u122_25 0221                            i1l1694 039D  
                          i1l1686 0375                            i1l1678 0342                            u107_20 0528  
                          u115_20 0578                            u131_20 02FD                            u123_20 0233  
                          i1l1696 03A1                            i1l1688 037B                            u107_21 0527  
                          u115_21 0577                            u131_21 02FC                            u123_21 0232  
                          i1l1698 03A6                            u107_25 0524                            u116_20 0582  
                          u132_20 0307                            u124_20 023F                            u116_21 0581  
                          u124_21 023E                            u108_25 0530                            u116_25 057E  
                          u109_20 053C                            u125_20 0277                            u109_21 053B  
                          u125_21 0276                            u117_25 0589                            u118_20 0595  
                          u126_20 02A5                            u150_20 033D                            u118_21 0594  
                          u126_21 02A4                            u150_21 033C                            u126_25 02A1  
                          u119_20 059A                            u127_20 02B6                            u151_20 0342  
                          u119_21 0599                            u127_21 02B5                            u151_21 0341  
                          u128_20 02C0                            u160_20 0388                            u152_20 034A  
                          u160_21 0386                            u152_21 0348                            u129_20 02D9  
                          u161_20 0389                            u153_20 034B                            _INTCON 000B  
                          u129_21 02D8                            u170_20 0401                            u162_20 039C  
                          u154_20 035A                            u170_21 0400                            u162_21 039B  
                          u154_21 0359                            u171_20 0418                            u163_20 03A6  
                          u155_20 0361                            u171_21 0417                            u163_21 03A5  
                          u155_21 0360                            u172_20 041E                            u164_20 03AD  
                          u156_20 0367                            u172_21 041D                            u164_21 03AC  
                          u156_21 0365                            u180_27 06FB                            u165_20 03BC  
                          u157_20 0368                            u165_21 03BB                            u181_27 070F  
                          u166_20 03C0                            u158_20 037B                            u166_21 03BF  
                          u158_21 037A                            u182_27 071B                            u167_20 03CD  
                          u159_20 0382                      ?_send_string 0070                            u167_21 03CC  
                          u159_21 0381                            u168_20 03E6                            u168_21 03E5  
                          u169_20 03EC                            u169_21 03EB                            u178_27 0323  
                          u179_27 06EF                       ?i1_send_cmd 0070                    send_string@str 0076  
                    ?_UART_TxChar 0070          __size_of_print_Countdown 013D                         ??___aldiv 00AF  
               __end_of_UART_init 0679                         ??___awdiv 0074                         ??___awmod 0074  
                __end_of_init_lcd 05FB                  ___awdiv@quotient 0077                   ___awmod@divisor 0070  
                 ___awmod@counter 0075               print_Countdown@F923 01C3               print_Countdown@F931 0190  
             print_Countdown@F927 01B2               print_Countdown@F929 01A1                  __end_of_send_cmd 06A1  
                       ??_initPic 00A7                      __pdataCOMMON 007D                            saved_w 007E  
       __size_of_Uart_send_string 001D  messageTransmission@tipoMessaggio 00AF           __end_of__initialization 0045  
                  __pcstackCOMMON 0070                      __pidataBANK1 0773                      __pidataBANK3 05FB  
             __size_ofi1_send_cmd 0020                        __pbssBANK0 006F                        __pbssBANK1 00C1  
     messageTransmission@idStrada 00AB                        __pmaintext 0049                        _flagGiallo 00C7  
                      __pintentry 0004                __size_of_send_data 0020                 ??_print_Countdown 0020  
                      _contCamion 00CE               Uart_send_string@str 00A9                 main@semaforoVerde 00BF  
                       ?_init_lcd 0070              __size_of_send_string 0021                         ?_send_cmd 0070  
            __size_of_UART_TxChar 0010                           ___aldiv 0447                           ___awdiv 04E4  
                         ___awmod 054B                           __ptext1 06A1                           __ptext2 0724  
                         __ptext3 0754                           __ptext4 05A4                           __ptext5 0679  
                         __ptext6 0764                           __ptext7 063F                           __ptext8 0447  
                         __ptext9 0337                      __size_of_ISR 0110                           _oldBtn1 006F  
                         _oldBtn2 00CC                           _oldBtn3 00CA                           _initPic 0764  
                ___awmod@dividend 0072                  ___aldiv@dividend 00AB       __end_of_messageTransmission 06C3  
                         clrloop0 077C                  _Uart_send_string 0724              end_of_initialization 0045  
               __end_of_send_data 0724                        ??_init_lcd 00AA                      ??i1_send_cmd 0070  
        print_Countdown@secondStr 0024                        ??_send_cmd 00A7                         _RCSTAbits 0018  
                ___aldiv@quotient 00B2          print_Countdown@resultNum 0068                     send_data@data 0072  
                       _PORTBbits 0006                         _UART_init 063F                         _PORTEbits 0009  
              __end_ofi1_send_cmd 0704                         _TRISCbits 0087                 i1send_cmd@command 0072  
                 _temporizzazione 007C                         _TXSTAbits 0098                  print_Countdown@i 006D  
                   __pidataCOMMON 0783                        ?_UART_init 00B6               start_initialization 0019  
                     __end_of_ISR 0447                   _print_Countdown 01FA                        init_fetch0 0741  
                     __pdataBANK1 00DB                       __pdataBANK3 0190                       __pbssCOMMON 007C  
                       ___latbits 0002                     __pcstackBANK0 0020                     __pcstackBANK1 00A0  
                     _datoSeriale 00D1                 __size_of_init_lcd 0057                          ?___aldiv 00A7  
               __size_of_send_cmd 0028                          ?___awdiv 0070                          ?___awmod 0070  
        __end_of_Uart_send_string 0741                       ??_UART_init 00B8                          ?_initPic 0070  
                       _countDown 007D           __end_of_print_Countdown 0337                     ??_send_string 0073  
         print_Countdown@firstStr 0057                   ___aldiv@divisor 00A7                 interrupt_function 0004  
                 ___aldiv@counter 00B0                         clear_ram0 077B                          _PIE1bits 008C  
                       _send_data 0704                     ??_UART_TxChar 00A7                          _GO_nDONE 00FA  
                       _numStrade 00E2           print_Countdown@statoSem 007B                        _ADCON0bits 001F  
                       _strToSend 00D3      __size_of_messageTransmission 0022                        ?_send_data 0070  
                    send_string@i 0074               __end_of_send_string 06E4                   UART_TxChar@dato 00A7  
                __size_of___aldiv 009D               __end_of_UART_TxChar 0764                  __size_of___awdiv 0067  
                __size_of___awmod 0059                  __size_of_initPic 000F                          __ptext10 01FA  
                        __ptext11 06E4                          __ptext12 06C3                          __ptext13 0704  
                        __ptext14 054B                          __ptext15 04E4                          _contAuto 00D0  
                        _contMoto 00CF                  ?_print_Countdown 0079                          _init_lcd 05A4  
                   __size_of_main 01B1                          _received 00D2                          _send_cmd 0679  
                        _semafori 00C1                        _INTCONbits 000B                          init_ram0 0745  
                 send_cmd@command 00A9                          intlevel1 0000                 UART_init@baudrate 00B6  
                     _send_string 06C3                       ??_send_data 0070                       _UART_TxChar 0754  
           print_Countdown@length 006B                 ?_Uart_send_string 0070                ??_Uart_send_string 00A8  
                      _OPTION_REG 0081                      ___aldiv@sign 00B1  
