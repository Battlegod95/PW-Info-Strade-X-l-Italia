

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jul 16 16:18:48 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK3,global,class=CODE,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text9,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.10
    39                           ; Generated 31/07/2019 GMT
    40                           ; 
    41                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F877A Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000D                     	;# 
    86  000E                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0015                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001B                     	;# 
   103  001C                     	;# 
   104  001D                     	;# 
   105  001E                     	;# 
   106  001F                     	;# 
   107  0081                     	;# 
   108  0085                     	;# 
   109  0086                     	;# 
   110  0087                     	;# 
   111  0088                     	;# 
   112  0089                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  010E                     	;# 
   129  010F                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010F                     	;# 
   190  018C                     	;# 
   191  018D                     	;# 
   192                           
   193                           	psect	idataCOMMON
   194  0764                     __pidataCOMMON:	
   195                           
   196                           ;initializer for _countDown
   197  0764  3405               	retlw	5
   198                           
   199                           	psect	idataBANK1
   200  075E                     __pidataBANK1:	
   201                           
   202                           ;initializer for _statoSemafori
   203  075E  3400               	retlw	0
   204  075F  3401               	retlw	1
   205  0760  3402               	retlw	2
   206                           
   207                           ;initializer for _PicId
   208  0761  34A7               	retlw	167
   209  0762  3400               	retlw	0
   210                           
   211                           ;initializer for _numStrade
   212  0763  3404               	retlw	4
   213                           
   214                           	psect	idataBANK3
   215  05DE                     __pidataBANK3:	
   216                           
   217                           ;initializer for print_Countdown@F938
   218  05DE  3453               	retlw	83
   219  05DF  3465               	retlw	101
   220  05E0  346D               	retlw	109
   221  05E1  3420               	retlw	32
   222  05E2  3430               	retlw	48
   223  05E3  343A               	retlw	58
   224  05E4  3420               	retlw	32
   225  05E5  3420               	retlw	32
   226  05E6  3420               	retlw	32
   227  05E7  3420               	retlw	32
   228  05E8  3420               	retlw	32
   229  05E9  3452               	retlw	82
   230  05EA  346F               	retlw	111
   231  05EB  3473               	retlw	115
   232  05EC  3473               	retlw	115
   233  05ED  346F               	retlw	111
   234  05EE  3400               	retlw	0
   235                           
   236                           ;initializer for print_Countdown@F936
   237  05EF  3453               	retlw	83
   238  05F0  3465               	retlw	101
   239  05F1  346D               	retlw	109
   240  05F2  3420               	retlw	32
   241  05F3  3430               	retlw	48
   242  05F4  343A               	retlw	58
   243  05F5  3420               	retlw	32
   244  05F6  3420               	retlw	32
   245  05F7  3420               	retlw	32
   246  05F8  3420               	retlw	32
   247  05F9  3447               	retlw	71
   248  05FA  3469               	retlw	105
   249  05FB  3461               	retlw	97
   250  05FC  346C               	retlw	108
   251  05FD  346C               	retlw	108
   252  05FE  346F               	retlw	111
   253  05FF  3400               	retlw	0
   254                           
   255                           ;initializer for print_Countdown@F934
   256  0600  3453               	retlw	83
   257  0601  3465               	retlw	101
   258  0602  346D               	retlw	109
   259  0603  3420               	retlw	32
   260  0604  3430               	retlw	48
   261  0605  343A               	retlw	58
   262  0606  3420               	retlw	32
   263  0607  3420               	retlw	32
   264  0608  3420               	retlw	32
   265  0609  3420               	retlw	32
   266  060A  3420               	retlw	32
   267  060B  3456               	retlw	86
   268  060C  3465               	retlw	101
   269  060D  3472               	retlw	114
   270  060E  3464               	retlw	100
   271  060F  3465               	retlw	101
   272  0610  3400               	retlw	0
   273                           
   274                           ;initializer for print_Countdown@F930
   275  0611  3454               	retlw	84
   276  0612  3465               	retlw	101
   277  0613  346D               	retlw	109
   278  0614  3470               	retlw	112
   279  0615  346F               	retlw	111
   280  0616  343A               	retlw	58
   281  0617  3420               	retlw	32
   282  0618  3420               	retlw	32
   283  0619  3420               	retlw	32
   284  061A  3420               	retlw	32
   285  061B  3420               	retlw	32
   286  061C  3420               	retlw	32
   287  061D  3420               	retlw	32
   288  061E  3420               	retlw	32
   289  061F  3420               	retlw	32
   290  0620  3420               	retlw	32
   291  0621  3400               	retlw	0
   292  0019                     _TXREG	set	25
   293  000B                     _INTCONbits	set	11
   294  0018                     _RCSTAbits	set	24
   295  0008                     _PORTD	set	8
   296  0009                     _PORTEbits	set	9
   297  001E                     _ADRESH	set	30
   298  001F                     _ADCON0bits	set	31
   299  001F                     _ADCON0	set	31
   300  0001                     _TMR0	set	1
   301  000B                     _INTCON	set	11
   302  001A                     _RCREG	set	26
   303  0006                     _PORTBbits	set	6
   304  0064                     _TXIF	set	100
   305  00FA                     _GO_nDONE	set	250
   306  0065                     _RCIF	set	101
   307  008C                     _PIE1bits	set	140
   308  0099                     _SPBRG	set	153
   309  0098                     _TXSTAbits	set	152
   310  0087                     _TRISCbits	set	135
   311  009E                     _ADRESL	set	158
   312  009F                     _ADCON1	set	159
   313  0085                     _TRISA	set	133
   314  0081                     _OPTION_REG	set	129
   315  0089                     _TRISE	set	137
   316  0086                     _TRISB	set	134
   317  0088                     _TRISD	set	136
   318                           
   319                           ; #config settings
   320  0000                     
   321                           	psect	cinit
   322  0019                     start_initialization:	
   323  0019                     __initialization:	
   324                           
   325                           ; Initialize objects allocated to BANK3
   326  0019  1783               	bsf	3,7	;select IRP bank2
   327  001A  30D4               	movlw	low (__pdataBANK3+68)
   328  001B  00FD               	movwf	btemp+-1
   329  001C  3005               	movlw	high __pidataBANK3
   330  001D  00FE               	movwf	btemp
   331  001E  30DE               	movlw	low __pidataBANK3
   332  001F  00FF               	movwf	btemp+1
   333  0020  3090               	movlw	low __pdataBANK3
   334  0021  0084               	movwf	4
   335  0022  120A  118A  2728  120A  118A  	fcall	init_ram0
   336                           
   337                           ; Initialize objects allocated to BANK1
   338  0027  1383               	bcf	3,7	;select IRP bank0
   339  0028  30E4               	movlw	low (__pdataBANK1+6)
   340  0029  00FD               	movwf	btemp+-1
   341  002A  3007               	movlw	high __pidataBANK1
   342  002B  00FE               	movwf	btemp
   343  002C  305E               	movlw	low __pidataBANK1
   344  002D  00FF               	movwf	btemp+1
   345  002E  30DE               	movlw	low __pdataBANK1
   346  002F  0084               	movwf	4
   347  0030  120A  118A  2728  120A  118A  	fcall	init_ram0
   348                           
   349                           ; Initialize objects allocated to COMMON
   350  0035  120A  118A  2764  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   351  003A  00FD               	movwf	__pdataCOMMON& (0+127)
   352                           
   353                           ; Clear objects allocated to BANK1
   354  003B  30C2               	movlw	low __pbssBANK1
   355  003C  0084               	movwf	4
   356  003D  30DE               	movlw	low (__pbssBANK1+28)
   357  003E  120A  118A  2756  120A  118A  	fcall	clear_ram0
   358                           
   359                           ; Clear objects allocated to BANK0
   360  0043  01EF               	clrf	__pbssBANK0& (0+127)
   361                           
   362                           ; Clear objects allocated to COMMON
   363  0044  01FC               	clrf	__pbssCOMMON& (0+127)
   364  0045                     end_of_initialization:	
   365                           ;End of C runtime variable initialization code
   366                           
   367  0045                     __end_of__initialization:	
   368  0045  0183               	clrf	3
   369  0046  120A  118A  2849   	ljmp	_main	;jump to C main() function
   370                           
   371                           	psect	bssCOMMON
   372  007C                     __pbssCOMMON:	
   373  007C                     _temporizzazione:	
   374  007C                     	ds	1
   375                           
   376                           	psect	dataCOMMON
   377  007D                     __pdataCOMMON:	
   378  007D                     _countDown:	
   379  007D                     	ds	1
   380                           
   381                           	psect	bssBANK0
   382  006F                     __pbssBANK0:	
   383  006F                     _oldBtn1:	
   384  006F                     	ds	1
   385                           
   386                           	psect	bssBANK1
   387  00C2                     __pbssBANK1:	
   388  00C2                     _semafori:	
   389  00C2                     	ds	4
   390  00C6                     _f:	
   391  00C6                     	ds	2
   392  00C8                     _count:	
   393  00C8                     	ds	2
   394  00CA                     _flagGiallo:	
   395  00CA                     	ds	1
   396  00CB                     _scattoSemafori:	
   397  00CB                     	ds	1
   398  00CC                     _stat3:	
   399  00CC                     	ds	1
   400  00CD                     _oldBtn3:	
   401  00CD                     	ds	1
   402  00CE                     _stat2:	
   403  00CE                     	ds	1
   404  00CF                     _oldBtn2:	
   405  00CF                     	ds	1
   406  00D0                     _stat1:	
   407  00D0                     	ds	1
   408  00D1                     _contCamion:	
   409  00D1                     	ds	1
   410  00D2                     _contMoto:	
   411  00D2                     	ds	1
   412  00D3                     _contAuto:	
   413  00D3                     	ds	1
   414  00D4                     _datoSeriale:	
   415  00D4                     	ds	1
   416  00D5                     _received:	
   417  00D5                     	ds	1
   418  00D6                     _strToSend:	
   419  00D6                     	ds	8
   420                           
   421                           	psect	dataBANK1
   422  00DE                     __pdataBANK1:	
   423  00DE                     _statoSemafori:	
   424  00DE                     	ds	3
   425  00E1                     _PicId:	
   426  00E1                     	ds	2
   427  00E3                     _numStrade:	
   428  00E3                     	ds	1
   429                           
   430                           	psect	dataBANK3
   431  0190                     __pdataBANK3:	
   432  0190                     print_Countdown@F938:	
   433  0190                     	ds	17
   434  01A1                     print_Countdown@F936:	
   435  01A1                     	ds	17
   436  01B2                     print_Countdown@F934:	
   437  01B2                     	ds	17
   438  01C3                     print_Countdown@F930:	
   439  01C3                     	ds	17
   440                           
   441                           	psect	inittext
   442  0724                     init_fetch0:	
   443                           ;	Called with low address in FSR and high address in W
   444                           
   445  0724  087E               	movf	btemp,w
   446  0725  008A               	movwf	10
   447  0726  087F               	movf	btemp+1,w
   448  0727  0082               	movwf	2
   449  0728                     init_ram0:	
   450                           ;Called with:
   451                           ;	high address of idata address in btemp 
   452                           ;	low address of idata address in btemp+1 
   453                           ;	low address of data in FSR
   454                           ;	high address + 1 of data in btemp-1
   455                           
   456  0728  120A  118A  2724  120A  118A  	fcall	init_fetch0
   457  072D  0080               	movwf	0
   458  072E  0A84               	incf	4,f
   459  072F  0804               	movf	4,w
   460  0730  067D               	xorwf	btemp+-1,w
   461  0731  1903               	btfsc	3,2
   462  0732  3400               	retlw	0
   463  0733  0AFF               	incf	btemp+1,f
   464  0734  1903               	btfsc	3,2
   465  0735  0AFE               	incf	btemp,f
   466  0736  2F28               	goto	init_ram0
   467                           
   468                           	psect	clrtext
   469  0756                     clear_ram0:	
   470                           ;	Called with FSR containing the base address, and
   471                           ;	W with the last address+1
   472                           
   473  0756  0064               	clrwdt	;clear the watchdog before getting into this loop
   474  0757                     clrloop0:	
   475  0757  0180               	clrf	0	;clear RAM location pointed to by FSR
   476  0758  0A84               	incf	4,f	;increment pointer
   477  0759  0604               	xorwf	4,w	;XOR with final address
   478  075A  1903               	btfsc	3,2	;have we reached the end yet?
   479  075B  3400               	retlw	0	;all done for this memory range, return
   480  075C  0604               	xorwf	4,w	;XOR again to restore value
   481  075D  2F57               	goto	clrloop0	;do the next byte
   482                           
   483                           	psect	cstackBANK1
   484  00A0                     __pcstackBANK1:	
   485  00A0                     ??_ISR:	
   486                           
   487                           ; 1 bytes @ 0x0
   488  00A0                     	ds	7
   489  00A7                     ??_initPic:	
   490  00A7                     ??_send_cmd:	
   491                           ; 1 bytes @ 0x7
   492                           
   493  00A7                     ??_UART_TxChar:	
   494                           ; 1 bytes @ 0x7
   495                           
   496  00A7                     ?___aldiv:	
   497                           ; 1 bytes @ 0x7
   498                           
   499  00A7                     UART_TxChar@dato:	
   500                           ; 4 bytes @ 0x7
   501                           
   502  00A7                     ___aldiv@divisor:	
   503                           ; 1 bytes @ 0x7
   504                           
   505                           
   506                           ; 4 bytes @ 0x7
   507  00A7                     	ds	1
   508  00A8                     ??_Uart_send_string:	
   509                           
   510                           ; 1 bytes @ 0x8
   511  00A8                     	ds	1
   512  00A9                     Uart_send_string@str:	
   513  00A9                     send_cmd@command:	
   514                           ; 1 bytes @ 0x9
   515                           
   516                           
   517                           ; 1 bytes @ 0x9
   518  00A9                     	ds	1
   519  00AA                     ??_init_lcd:	
   520  00AA                     Uart_send_string@i:	
   521                           ; 1 bytes @ 0xA
   522                           
   523                           
   524                           ; 1 bytes @ 0xA
   525  00AA                     	ds	1
   526  00AB                     ?_messageTransmission:	
   527  00AB                     messageTransmission@idStrada:	
   528                           ; 1 bytes @ 0xB
   529                           
   530  00AB                     ___aldiv@dividend:	
   531                           ; 1 bytes @ 0xB
   532                           
   533                           
   534                           ; 4 bytes @ 0xB
   535  00AB                     	ds	1
   536  00AC                     messageTransmission@codice:	
   537                           
   538                           ; 1 bytes @ 0xC
   539  00AC                     	ds	1
   540  00AD                     messageTransmission@valore:	
   541                           
   542                           ; 1 bytes @ 0xD
   543  00AD                     	ds	1
   544  00AE                     ??_messageTransmission:	
   545                           
   546                           ; 1 bytes @ 0xE
   547  00AE                     	ds	1
   548  00AF                     ??___aldiv:	
   549  00AF                     messageTransmission@tipoMessaggio:	
   550                           ; 1 bytes @ 0xF
   551                           
   552                           
   553                           ; 1 bytes @ 0xF
   554  00AF                     	ds	1
   555  00B0                     ___aldiv@counter:	
   556                           
   557                           ; 1 bytes @ 0x10
   558  00B0                     	ds	1
   559  00B1                     ___aldiv@sign:	
   560                           
   561                           ; 1 bytes @ 0x11
   562  00B1                     	ds	1
   563  00B2                     ___aldiv@quotient:	
   564                           
   565                           ; 4 bytes @ 0x12
   566  00B2                     	ds	4
   567  00B6                     ?_UART_init:	
   568  00B6                     UART_init@baudrate:	
   569                           ; 1 bytes @ 0x16
   570                           
   571                           
   572                           ; 2 bytes @ 0x16
   573  00B6                     	ds	2
   574  00B8                     ??_UART_init:	
   575                           
   576                           ; 1 bytes @ 0x18
   577  00B8                     	ds	4
   578  00BC                     ??_main:	
   579                           
   580                           ; 1 bytes @ 0x1C
   581  00BC                     	ds	3
   582  00BF                     main@stringa:	
   583                           
   584                           ; 1 bytes @ 0x1F
   585  00BF                     	ds	1
   586  00C0                     main@semaforoVerde:	
   587                           
   588                           ; 1 bytes @ 0x20
   589  00C0                     	ds	1
   590  00C1                     main@i:	
   591                           
   592                           ; 1 bytes @ 0x21
   593  00C1                     	ds	1
   594                           
   595                           	psect	cstackCOMMON
   596  0070                     __pcstackCOMMON:	
   597  0070                     ?_initPic:	
   598  0070                     ?_init_lcd:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_send_cmd:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_Uart_send_string:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_UART_TxChar:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_send_string:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_send_data:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ??_send_data:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_main:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_ISR:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?i1_send_cmd:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ??i1_send_cmd:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?___awdiv:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?___awmod:	
   635                           ; 2 bytes @ 0x0
   636                           
   637  0070                     ___awdiv@divisor:	
   638                           ; 2 bytes @ 0x0
   639                           
   640  0070                     ___awmod@divisor:	
   641                           ; 2 bytes @ 0x0
   642                           
   643                           
   644                           ; 2 bytes @ 0x0
   645  0070                     	ds	2
   646  0072                     send_data@data:	
   647  0072                     i1send_cmd@command:	
   648                           ; 1 bytes @ 0x2
   649                           
   650  0072                     ___awdiv@dividend:	
   651                           ; 1 bytes @ 0x2
   652                           
   653  0072                     ___awmod@dividend:	
   654                           ; 2 bytes @ 0x2
   655                           
   656                           
   657                           ; 2 bytes @ 0x2
   658  0072                     	ds	1
   659  0073                     ??_send_string:	
   660                           
   661                           ; 1 bytes @ 0x3
   662  0073                     	ds	1
   663  0074                     ??___awdiv:	
   664  0074                     ??___awmod:	
   665                           ; 1 bytes @ 0x4
   666                           
   667  0074                     send_string@i:	
   668                           ; 1 bytes @ 0x4
   669                           
   670                           
   671                           ; 2 bytes @ 0x4
   672  0074                     	ds	1
   673  0075                     ___awdiv@counter:	
   674  0075                     ___awmod@counter:	
   675                           ; 1 bytes @ 0x5
   676                           
   677                           
   678                           ; 1 bytes @ 0x5
   679  0075                     	ds	1
   680  0076                     send_string@str:	
   681  0076                     ___awdiv@sign:	
   682                           ; 1 bytes @ 0x6
   683                           
   684  0076                     ___awmod@sign:	
   685                           ; 1 bytes @ 0x6
   686                           
   687                           
   688                           ; 1 bytes @ 0x6
   689  0076                     	ds	1
   690  0077                     ___awdiv@quotient:	
   691                           
   692                           ; 2 bytes @ 0x7
   693  0077                     	ds	2
   694  0079                     ?_print_Countdown:	
   695  0079                     print_Countdown@num:	
   696                           ; 1 bytes @ 0x9
   697                           
   698                           
   699                           ; 2 bytes @ 0x9
   700  0079                     	ds	2
   701  007B                     print_Countdown@statoSem:	
   702                           
   703                           ; 1 bytes @ 0xB
   704  007B                     	ds	1
   705                           
   706                           	psect	cstackBANK0
   707  0020                     __pcstackBANK0:	
   708  0020                     ??_print_Countdown:	
   709                           
   710                           ; 1 bytes @ 0x0
   711  0020                     	ds	4
   712  0024                     print_Countdown@secondStr:	
   713                           
   714                           ; 17 bytes @ 0x4
   715  0024                     	ds	17
   716  0035                     print_Countdown@secondStr_408:	
   717                           
   718                           ; 17 bytes @ 0x15
   719  0035                     	ds	17
   720  0046                     print_Countdown@secondStr_410:	
   721                           
   722                           ; 17 bytes @ 0x26
   723  0046                     	ds	17
   724  0057                     print_Countdown@firstStr:	
   725                           
   726                           ; 17 bytes @ 0x37
   727  0057                     	ds	17
   728  0068                     print_Countdown@resultNum:	
   729                           
   730                           ; 3 bytes @ 0x48
   731  0068                     	ds	3
   732  006B                     print_Countdown@length:	
   733                           
   734                           ; 2 bytes @ 0x4B
   735  006B                     	ds	2
   736  006D                     print_Countdown@i:	
   737                           
   738                           ; 2 bytes @ 0x4D
   739  006D                     	ds	2
   740                           
   741                           	psect	maintext
   742  0049                     __pmaintext:	
   743 ;;
   744 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   745 ;;
   746 ;; *************** function _main *****************
   747 ;; Defined at:
   748 ;;		line 113 in file "main.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;  stringa         1   31[BANK1 ] unsigned char 
   753 ;;  semaforoVerd    1   32[BANK1 ] unsigned char 
   754 ;;  i               1   33[BANK1 ] unsigned char 
   755 ;; Return value:  Size  Location     Type
   756 ;;                  1    wreg      void 
   757 ;; Registers used:
   758 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   759 ;; Tracked objects:
   760 ;;		On entry : B00/0
   761 ;;		On exit  : 0/0
   762 ;;		Unchanged: 0/0
   763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   764 ;;      Params:         0       0       0       0       0
   765 ;;      Locals:         0       0       3       0       0
   766 ;;      Temps:          0       0       3       0       0
   767 ;;      Totals:         0       0       6       0       0
   768 ;;Total ram usage:        6 bytes
   769 ;; Hardware stack levels required when called:    7
   770 ;; This function calls:
   771 ;;		_UART_init
   772 ;;		_initPic
   773 ;;		_init_lcd
   774 ;;		_messageTransmission
   775 ;;		_send_cmd
   776 ;; This function is called by:
   777 ;;		Startup code after reset
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           
   782                           ;psect for function _main
   783  0049                     _main:	
   784  0049                     l1593:	
   785                           ;incstack = 0
   786                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   787                           
   788                           
   789                           ;main.c: 115:     initPic();
   790  0049  120A  118A  2747  120A  118A  	fcall	_initPic
   791                           
   792                           ;main.c: 116:     UART_init(9600);
   793  004E  3080               	movlw	128
   794  004F  1683               	bsf	3,5	;RP0=1, select bank1
   795  0050  1303               	bcf	3,6	;RP1=0, select bank1
   796  0051  00B6               	movwf	UART_init@baudrate^(0+128)
   797  0052  3025               	movlw	37
   798  0053  00B7               	movwf	(UART_init@baudrate^(0+128)+1)
   799  0054  120A  118A  2622  120A  118A  	fcall	_UART_init
   800                           
   801                           ;main.c: 117:     init_lcd();
   802  0059  120A  118A  2587  120A  118A  	fcall	_init_lcd
   803                           
   804                           ;main.c: 118:     send_cmd(0x01);
   805  005E  3001               	movlw	1
   806  005F  120A  118A  265C  120A  118A  	fcall	_send_cmd
   807  0064                     l1595:	
   808                           
   809                           ;main.c: 190:     char i;;main.c: 193:     semafori[1]=statoSemafori[2];
   810  0064  1683               	bsf	3,5	;RP0=1, select bank1
   811  0065  1303               	bcf	3,6	;RP1=0, select bank1
   812  0066  0860               	movf	(_statoSemafori^(0+128)+2),w
   813  0067  00BC               	movwf	??_main^(0+128)
   814  0068  083C               	movf	??_main^(0+128),w
   815  0069  00C3               	movwf	(_semafori^(0+128)+1)
   816  006A                     l1597:	
   817                           
   818                           ;main.c: 194:     semafori[2]=statoSemafori[2];
   819  006A  0860               	movf	(_statoSemafori^(0+128)+2),w
   820  006B  00BC               	movwf	??_main^(0+128)
   821  006C  083C               	movf	??_main^(0+128),w
   822  006D  00C4               	movwf	(_semafori^(0+128)+2)
   823  006E                     l1599:	
   824                           
   825                           ;main.c: 195:     semafori[3]=statoSemafori[2];
   826  006E  0860               	movf	(_statoSemafori^(0+128)+2),w
   827  006F  00BC               	movwf	??_main^(0+128)
   828  0070  083C               	movf	??_main^(0+128),w
   829  0071  00C5               	movwf	(_semafori^(0+128)+3)
   830  0072                     l1601:	
   831                           
   832                           ;main.c: 196:     semafori[0]=statoSemafori[0];
   833  0072  085E               	movf	_statoSemafori^(0+128),w
   834  0073  00BC               	movwf	??_main^(0+128)
   835  0074  083C               	movf	??_main^(0+128),w
   836  0075  00C2               	movwf	_semafori^(0+128)
   837  0076                     l1603:	
   838                           
   839                           ;main.c: 200:     {;main.c: 204:         if(stat1)
   840  0076  0850               	movf	_stat1^(0+128),w
   841  0077  1903               	btfsc	3,2
   842  0078  287A               	goto	u1341
   843  0079  287B               	goto	u1340
   844  007A                     u1341:	
   845  007A  2880               	goto	l1609
   846  007B                     u1340:	
   847  007B                     l1605:	
   848                           
   849                           ;main.c: 205:         {;main.c: 206:             contAuto++;
   850  007B  3001               	movlw	1
   851  007C  00BC               	movwf	??_main^(0+128)
   852  007D  083C               	movf	??_main^(0+128),w
   853  007E  07D3               	addwf	_contAuto^(0+128),f
   854  007F                     l1607:	
   855                           
   856                           ;main.c: 207:             stat1=0;
   857  007F  01D0               	clrf	_stat1^(0+128)
   858  0080                     l1609:	
   859                           
   860                           ;main.c: 210:         if(stat2)
   861  0080  084E               	movf	_stat2^(0+128),w
   862  0081  1903               	btfsc	3,2
   863  0082  2884               	goto	u1351
   864  0083  2885               	goto	u1350
   865  0084                     u1351:	
   866  0084  288A               	goto	l1615
   867  0085                     u1350:	
   868  0085                     l1611:	
   869                           
   870                           ;main.c: 211:         {;main.c: 212:             contMoto++;
   871  0085  3001               	movlw	1
   872  0086  00BC               	movwf	??_main^(0+128)
   873  0087  083C               	movf	??_main^(0+128),w
   874  0088  07D2               	addwf	_contMoto^(0+128),f
   875  0089                     l1613:	
   876                           
   877                           ;main.c: 213:             stat2=0;
   878  0089  01CE               	clrf	_stat2^(0+128)
   879  008A                     l1615:	
   880                           
   881                           ;main.c: 215:         if(stat3)
   882  008A  084C               	movf	_stat3^(0+128),w
   883  008B  1903               	btfsc	3,2
   884  008C  288E               	goto	u1361
   885  008D  288F               	goto	u1360
   886  008E                     u1361:	
   887  008E  2894               	goto	l1621
   888  008F                     u1360:	
   889  008F                     l1617:	
   890                           
   891                           ;main.c: 216:         {;main.c: 217:             contCamion++;
   892  008F  3001               	movlw	1
   893  0090  00BC               	movwf	??_main^(0+128)
   894  0091  083C               	movf	??_main^(0+128),w
   895  0092  07D1               	addwf	_contCamion^(0+128),f
   896  0093                     l1619:	
   897                           
   898                           ;main.c: 218:             stat3=0;
   899  0093  01CC               	clrf	_stat3^(0+128)
   900  0094                     l1621:	
   901                           
   902                           ;main.c: 222:         if(scattoSemafori==1)
   903  0094  034B               	decf	_scattoSemafori^(0+128),w
   904  0095  1D03               	btfss	3,2
   905  0096  2898               	goto	u1371
   906  0097  2899               	goto	u1370
   907  0098                     u1371:	
   908  0098  2909               	goto	l1665
   909  0099                     u1370:	
   910  0099                     l1623:	
   911                           
   912                           ;main.c: 223:         {;main.c: 225:             char semaforoVerde=0;
   913  0099  01C0               	clrf	main@semaforoVerde^(0+128)
   914                           
   915                           ;main.c: 226:             for(i=0;i<4;i++)
   916  009A  01C1               	clrf	main@i^(0+128)
   917  009B                     l1629:	
   918                           
   919                           ;main.c: 227:             {;main.c: 229:                 if(semaforoVerde==0)
   920  009B  0840               	movf	main@semaforoVerde^(0+128),w
   921  009C  1D03               	btfss	3,2
   922  009D  289F               	goto	u1381
   923  009E  28A0               	goto	u1380
   924  009F                     u1381:	
   925  009F  28FF               	goto	l1661
   926  00A0                     u1380:	
   927  00A0                     l1631:	
   928                           
   929                           ;main.c: 230:                 {;main.c: 231:                     if(semafori[i]==statoSe
      +                          mafori[0])
   930  00A0  0841               	movf	main@i^(0+128),w
   931  00A1  3EC2               	addlw	(low (_semafori| 0))& (0+255)
   932  00A2  0084               	movwf	4
   933  00A3  1383               	bcf	3,7	;select IRP bank1
   934  00A4  0800               	movf	0,w
   935  00A5  065E               	xorwf	_statoSemafori^(0+128),w
   936  00A6  1D03               	skipz
   937  00A7  28A9               	goto	u1391
   938  00A8  28AA               	goto	u1390
   939  00A9                     u1391:	
   940  00A9  28FF               	goto	l1661
   941  00AA                     u1390:	
   942  00AA                     l1633:	
   943                           
   944                           ;main.c: 232:                     {;main.c: 234:                          if(semafori[i]
      +                          ==statoSemafori[0])
   945  00AA  0841               	movf	main@i^(0+128),w
   946  00AB  3EC2               	addlw	(low (_semafori| 0))& (0+255)
   947  00AC  0084               	movwf	4
   948  00AD  0800               	movf	0,w
   949  00AE  065E               	xorwf	_statoSemafori^(0+128),w
   950  00AF  1D03               	skipz
   951  00B0  28B2               	goto	u1401
   952  00B1  28B3               	goto	u1400
   953  00B2                     u1401:	
   954  00B2  28C9               	goto	l1643
   955  00B3                     u1400:	
   956  00B3                     l1635:	
   957                           
   958                           ;main.c: 235:                         {;main.c: 236:                             flagGia
      +                          llo=1;
   959  00B3  01CA               	clrf	_flagGiallo^(0+128)
   960  00B4  0ACA               	incf	_flagGiallo^(0+128),f
   961                           
   962                           ;main.c: 237:                             while(flagGiallo==1)
   963  00B5  28BD               	goto	l1639
   964  00B6                     l1637:	
   965                           
   966                           ;main.c: 238:                                 semafori[i]=statoSemafori[1];
   967  00B6  085F               	movf	(_statoSemafori^(0+128)+1),w
   968  00B7  00BC               	movwf	??_main^(0+128)
   969  00B8  0841               	movf	main@i^(0+128),w
   970  00B9  3EC2               	addlw	(low (_semafori| 0))& (0+255)
   971  00BA  0084               	movwf	4
   972  00BB  083C               	movf	??_main^(0+128),w
   973  00BC  0080               	movwf	0
   974  00BD                     l1639:	
   975                           
   976                           ;main.c: 237:                             while(flagGiallo==1)
   977  00BD  034A               	decf	_flagGiallo^(0+128),w
   978  00BE  1903               	btfsc	3,2
   979  00BF  28C1               	goto	u1411
   980  00C0  28C2               	goto	u1410
   981  00C1                     u1411:	
   982  00C1  28B6               	goto	l1637
   983  00C2                     u1410:	
   984  00C2                     l1641:	
   985                           
   986                           ;main.c: 240:                             semafori[i]=statoSemafori[2];
   987  00C2  0860               	movf	(_statoSemafori^(0+128)+2),w
   988  00C3  00BC               	movwf	??_main^(0+128)
   989  00C4  0841               	movf	main@i^(0+128),w
   990  00C5  3EC2               	addlw	(low (_semafori| 0))& (0+255)
   991  00C6  0084               	movwf	4
   992  00C7  083C               	movf	??_main^(0+128),w
   993  00C8  0080               	movwf	0
   994  00C9                     l1643:	
   995                           
   996                           ;main.c: 245:                         if(i<3)
   997  00C9  3003               	movlw	3
   998  00CA  0241               	subwf	main@i^(0+128),w
   999  00CB  1803               	skipnc
  1000  00CC  28CE               	goto	u1421
  1001  00CD  28CF               	goto	u1420
  1002  00CE                     u1421:	
  1003  00CE  28E8               	goto	l1653
  1004  00CF                     u1420:	
  1005  00CF                     l1645:	
  1006                           
  1007                           ;main.c: 246:                         {;main.c: 249:                             if(sema
      +                          fori[i+1]==statoSemafori[2])
  1008  00CF  0841               	movf	main@i^(0+128),w
  1009  00D0  3EC3               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1010  00D1  0084               	movwf	4
  1011  00D2  0800               	movf	0,w
  1012  00D3  0660               	xorwf	(_statoSemafori^(0+128)+2),w
  1013  00D4  1D03               	skipz
  1014  00D5  28D7               	goto	u1431
  1015  00D6  28D8               	goto	u1430
  1016  00D7                     u1431:	
  1017  00D7  28FD               	goto	l141
  1018  00D8                     u1430:	
  1019  00D8                     l1647:	
  1020                           
  1021                           ;main.c: 250:                             {;main.c: 251:                                
      +                           flagGiallo=1;
  1022  00D8  01CA               	clrf	_flagGiallo^(0+128)
  1023  00D9  0ACA               	incf	_flagGiallo^(0+128),f
  1024                           
  1025                           ;main.c: 252:                                 while(flagGiallo==1)
  1026  00DA  28E2               	goto	l1651
  1027  00DB                     l1649:	
  1028                           
  1029                           ;main.c: 253:                                     semafori[i+1]=statoSemafori[1];
  1030  00DB  085F               	movf	(_statoSemafori^(0+128)+1),w
  1031  00DC  00BC               	movwf	??_main^(0+128)
  1032  00DD  0841               	movf	main@i^(0+128),w
  1033  00DE  3EC3               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1034  00DF  0084               	movwf	4
  1035  00E0  083C               	movf	??_main^(0+128),w
  1036  00E1  0080               	movwf	0
  1037  00E2                     l1651:	
  1038                           
  1039                           ;main.c: 252:                                 while(flagGiallo==1)
  1040  00E2  034A               	decf	_flagGiallo^(0+128),w
  1041  00E3  1903               	btfsc	3,2
  1042  00E4  28E6               	goto	u1441
  1043  00E5  28E7               	goto	u1440
  1044  00E6                     u1441:	
  1045  00E6  28DB               	goto	l1649
  1046  00E7                     u1440:	
  1047  00E7  28FD               	goto	l141
  1048  00E8                     l1653:	
  1049                           
  1050                           ;main.c: 261:                         {;main.c: 262:                             if(sema
      +                          fori[0]==statoSemafori[2])
  1051  00E8  0860               	movf	(_statoSemafori^(0+128)+2),w
  1052  00E9  0642               	xorwf	_semafori^(0+128),w
  1053  00EA  1D03               	skipz
  1054  00EB  28ED               	goto	u1451
  1055  00EC  28EE               	goto	u1450
  1056  00ED                     u1451:	
  1057  00ED  28FD               	goto	l141
  1058  00EE                     u1450:	
  1059  00EE                     l1655:	
  1060                           
  1061                           ;main.c: 263:                             {;main.c: 264:                                
      +                           flagGiallo=1;
  1062  00EE  01CA               	clrf	_flagGiallo^(0+128)
  1063  00EF  0ACA               	incf	_flagGiallo^(0+128),f
  1064                           
  1065                           ;main.c: 265:                                 while(flagGiallo==1)
  1066  00F0  28F8               	goto	l1659
  1067  00F1                     l1657:	
  1068                           
  1069                           ;main.c: 266:                                     semafori[i+1]=statoSemafori[1];
  1070  00F1  085F               	movf	(_statoSemafori^(0+128)+1),w
  1071  00F2  00BC               	movwf	??_main^(0+128)
  1072  00F3  0841               	movf	main@i^(0+128),w
  1073  00F4  3EC3               	addlw	(low ((_semafori| 0+1)))& (0+255)
  1074  00F5  0084               	movwf	4
  1075  00F6  083C               	movf	??_main^(0+128),w
  1076  00F7  0080               	movwf	0
  1077  00F8                     l1659:	
  1078                           
  1079                           ;main.c: 265:                                 while(flagGiallo==1)
  1080  00F8  034A               	decf	_flagGiallo^(0+128),w
  1081  00F9  1903               	btfsc	3,2
  1082  00FA  28FC               	goto	u1461
  1083  00FB  28FD               	goto	u1460
  1084  00FC                     u1461:	
  1085  00FC  28F1               	goto	l1657
  1086  00FD                     u1460:	
  1087  00FD                     l141:	
  1088                           ;main.c: 271:                         }
  1089                           
  1090                           
  1091                           ;main.c: 273:                         semaforoVerde=1;
  1092  00FD  01C0               	clrf	main@semaforoVerde^(0+128)
  1093  00FE  0AC0               	incf	main@semaforoVerde^(0+128),f
  1094  00FF                     l1661:	
  1095                           
  1096                           ;main.c: 277:             }
  1097  00FF  3001               	movlw	1
  1098  0100  00BC               	movwf	??_main^(0+128)
  1099  0101  083C               	movf	??_main^(0+128),w
  1100  0102  07C1               	addwf	main@i^(0+128),f
  1101  0103                     l1663:	
  1102  0103  3004               	movlw	4
  1103  0104  0241               	subwf	main@i^(0+128),w
  1104  0105  1C03               	skipc
  1105  0106  2908               	goto	u1471
  1106  0107  2909               	goto	u1470
  1107  0108                     u1471:	
  1108  0108  289B               	goto	l1629
  1109  0109                     u1470:	
  1110  0109                     l1665:	
  1111                           
  1112                           ;main.c: 306:         if(scattoSemafori==1)
  1113  0109  034B               	decf	_scattoSemafori^(0+128),w
  1114  010A  1D03               	btfss	3,2
  1115  010B  290D               	goto	u1481
  1116  010C  290E               	goto	u1480
  1117  010D                     u1481:	
  1118  010D  29BF               	goto	l1679
  1119  010E                     u1480:	
  1120  010E                     l1667:	
  1121                           
  1122                           ;main.c: 307:         {;main.c: 309:             messageTransmission(1, 1, 0, 0);
  1123  010E  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1124  010F  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1125  0110  01AC               	clrf	messageTransmission@codice^(0+128)
  1126  0111  01AD               	clrf	messageTransmission@valore^(0+128)
  1127  0112  3001               	movlw	1
  1128  0113  120A  118A  2684  120A  118A  	fcall	_messageTransmission
  1129                           
  1130                           ;main.c: 310:             messageTransmission(1, 2, 1, 0);
  1131  0118  3002               	movlw	2
  1132  0119  1683               	bsf	3,5	;RP0=1, select bank1
  1133  011A  1303               	bcf	3,6	;RP1=0, select bank1
  1134  011B  00BC               	movwf	??_main^(0+128)
  1135  011C  083C               	movf	??_main^(0+128),w
  1136  011D  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1137  011E  01AC               	clrf	messageTransmission@codice^(0+128)
  1138  011F  0AAC               	incf	messageTransmission@codice^(0+128),f
  1139  0120  01AD               	clrf	messageTransmission@valore^(0+128)
  1140  0121  3001               	movlw	1
  1141  0122  120A  118A  2684  120A  118A  	fcall	_messageTransmission
  1142                           
  1143                           ;main.c: 311:             messageTransmission(1, 4, 2, 0);
  1144  0127  3004               	movlw	4
  1145  0128  1683               	bsf	3,5	;RP0=1, select bank1
  1146  0129  1303               	bcf	3,6	;RP1=0, select bank1
  1147  012A  00BC               	movwf	??_main^(0+128)
  1148  012B  083C               	movf	??_main^(0+128),w
  1149  012C  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1150  012D  3002               	movlw	2
  1151  012E  00BD               	movwf	(??_main+1)^(0+128)
  1152  012F  083D               	movf	(??_main+1)^(0+128),w
  1153  0130  00AC               	movwf	messageTransmission@codice^(0+128)
  1154  0131  01AD               	clrf	messageTransmission@valore^(0+128)
  1155  0132  3001               	movlw	1
  1156  0133  120A  118A  2684  120A  118A  	fcall	_messageTransmission
  1157                           
  1158                           ;main.c: 313:             messageTransmission(2, 0, 3, semafori[0]);
  1159  0138  1683               	bsf	3,5	;RP0=1, select bank1
  1160  0139  1303               	bcf	3,6	;RP1=0, select bank1
  1161  013A  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1162  013B  3003               	movlw	3
  1163  013C  00BC               	movwf	??_main^(0+128)
  1164  013D  083C               	movf	??_main^(0+128),w
  1165  013E  00AC               	movwf	messageTransmission@codice^(0+128)
  1166  013F  0842               	movf	_semafori^(0+128),w
  1167  0140  00BD               	movwf	(??_main+1)^(0+128)
  1168  0141  083D               	movf	(??_main+1)^(0+128),w
  1169  0142  00AD               	movwf	messageTransmission@valore^(0+128)
  1170  0143  3002               	movlw	2
  1171  0144  120A  118A  2684  120A  118A  	fcall	_messageTransmission
  1172                           
  1173                           ;main.c: 314:             messageTransmission(2, 1, 3, semafori[1]);
  1174  0149  1683               	bsf	3,5	;RP0=1, select bank1
  1175  014A  1303               	bcf	3,6	;RP1=0, select bank1
  1176  014B  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1177  014C  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1178  014D  3003               	movlw	3
  1179  014E  00BC               	movwf	??_main^(0+128)
  1180  014F  083C               	movf	??_main^(0+128),w
  1181  0150  00AC               	movwf	messageTransmission@codice^(0+128)
  1182  0151  0843               	movf	(_semafori^(0+128)+1),w
  1183  0152  00BD               	movwf	(??_main+1)^(0+128)
  1184  0153  083D               	movf	(??_main+1)^(0+128),w
  1185  0154  00AD               	movwf	messageTransmission@valore^(0+128)
  1186  0155  3002               	movlw	2
  1187  0156  120A  118A  2684  120A  118A  	fcall	_messageTransmission
  1188                           
  1189                           ;main.c: 315:             messageTransmission(2, 2, 3, semafori[2]);
  1190  015B  3002               	movlw	2
  1191  015C  1683               	bsf	3,5	;RP0=1, select bank1
  1192  015D  1303               	bcf	3,6	;RP1=0, select bank1
  1193  015E  00BC               	movwf	??_main^(0+128)
  1194  015F  083C               	movf	??_main^(0+128),w
  1195  0160  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1196  0161  3003               	movlw	3
  1197  0162  00BD               	movwf	(??_main+1)^(0+128)
  1198  0163  083D               	movf	(??_main+1)^(0+128),w
  1199  0164  00AC               	movwf	messageTransmission@codice^(0+128)
  1200  0165  0844               	movf	(_semafori^(0+128)+2),w
  1201  0166  00BE               	movwf	(??_main+2)^(0+128)
  1202  0167  083E               	movf	(??_main+2)^(0+128),w
  1203  0168  00AD               	movwf	messageTransmission@valore^(0+128)
  1204  0169  3002               	movlw	2
  1205  016A  120A  118A  2684  120A  118A  	fcall	_messageTransmission
  1206                           
  1207                           ;main.c: 316:             messageTransmission(2, 3, 3, semafori[3]);
  1208  016F  3003               	movlw	3
  1209  0170  1683               	bsf	3,5	;RP0=1, select bank1
  1210  0171  1303               	bcf	3,6	;RP1=0, select bank1
  1211  0172  00BC               	movwf	??_main^(0+128)
  1212  0173  083C               	movf	??_main^(0+128),w
  1213  0174  00AB               	movwf	messageTransmission@idStrada^(0+128)
  1214  0175  3003               	movlw	3
  1215  0176  00BD               	movwf	(??_main+1)^(0+128)
  1216  0177  083D               	movf	(??_main+1)^(0+128),w
  1217  0178  00AC               	movwf	messageTransmission@codice^(0+128)
  1218  0179  0845               	movf	(_semafori^(0+128)+3),w
  1219  017A  00BE               	movwf	(??_main+2)^(0+128)
  1220  017B  083E               	movf	(??_main+2)^(0+128),w
  1221  017C  00AD               	movwf	messageTransmission@valore^(0+128)
  1222  017D  3002               	movlw	2
  1223  017E  120A  118A  2684  120A  118A  	fcall	_messageTransmission
  1224                           
  1225                           ;main.c: 318:             messageTransmission(2, 1, 4, contMoto);
  1226  0183  1683               	bsf	3,5	;RP0=1, select bank1
  1227  0184  1303               	bcf	3,6	;RP1=0, select bank1
  1228  0185  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1229  0186  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1230  0187  3004               	movlw	4
  1231  0188  00BC               	movwf	??_main^(0+128)
  1232  0189  083C               	movf	??_main^(0+128),w
  1233  018A  00AC               	movwf	messageTransmission@codice^(0+128)
  1234  018B  0852               	movf	_contMoto^(0+128),w
  1235  018C  00BD               	movwf	(??_main+1)^(0+128)
  1236  018D  083D               	movf	(??_main+1)^(0+128),w
  1237  018E  00AD               	movwf	messageTransmission@valore^(0+128)
  1238  018F  3002               	movlw	2
  1239  0190  120A  118A  2684  120A  118A  	fcall	_messageTransmission
  1240  0195                     l1669:	
  1241                           
  1242                           ;main.c: 319:             contMoto=0;
  1243  0195  1683               	bsf	3,5	;RP0=1, select bank1
  1244  0196  1303               	bcf	3,6	;RP1=0, select bank1
  1245  0197  01D2               	clrf	_contMoto^(0+128)
  1246  0198                     l1671:	
  1247                           
  1248                           ;main.c: 320:             messageTransmission(2, 1, 5, contAuto);
  1249  0198  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1250  0199  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1251  019A  3005               	movlw	5
  1252  019B  00BC               	movwf	??_main^(0+128)
  1253  019C  083C               	movf	??_main^(0+128),w
  1254  019D  00AC               	movwf	messageTransmission@codice^(0+128)
  1255  019E  0853               	movf	_contAuto^(0+128),w
  1256  019F  00BD               	movwf	(??_main+1)^(0+128)
  1257  01A0  083D               	movf	(??_main+1)^(0+128),w
  1258  01A1  00AD               	movwf	messageTransmission@valore^(0+128)
  1259  01A2  3002               	movlw	2
  1260  01A3  120A  118A  2684  120A  118A  	fcall	_messageTransmission
  1261                           
  1262                           ;main.c: 321:             contAuto=0;
  1263  01A8  1683               	bsf	3,5	;RP0=1, select bank1
  1264  01A9  1303               	bcf	3,6	;RP1=0, select bank1
  1265  01AA  01D3               	clrf	_contAuto^(0+128)
  1266  01AB                     l1673:	
  1267                           
  1268                           ;main.c: 322:             messageTransmission(2, 1, 6, contCamion);
  1269  01AB  01AB               	clrf	messageTransmission@idStrada^(0+128)
  1270  01AC  0AAB               	incf	messageTransmission@idStrada^(0+128),f
  1271  01AD  3006               	movlw	6
  1272  01AE  00BC               	movwf	??_main^(0+128)
  1273  01AF  083C               	movf	??_main^(0+128),w
  1274  01B0  00AC               	movwf	messageTransmission@codice^(0+128)
  1275  01B1  0851               	movf	_contCamion^(0+128),w
  1276  01B2  00BD               	movwf	(??_main+1)^(0+128)
  1277  01B3  083D               	movf	(??_main+1)^(0+128),w
  1278  01B4  00AD               	movwf	messageTransmission@valore^(0+128)
  1279  01B5  3002               	movlw	2
  1280  01B6  120A  118A  2684  120A  118A  	fcall	_messageTransmission
  1281  01BB                     l1675:	
  1282                           
  1283                           ;main.c: 323:             contCamion=0;
  1284  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  1285  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  1286  01BD  01D1               	clrf	_contCamion^(0+128)
  1287  01BE                     l1677:	
  1288                           
  1289                           ;main.c: 324:             scattoSemafori=0;
  1290  01BE  01CB               	clrf	_scattoSemafori^(0+128)
  1291  01BF                     l1679:	
  1292                           
  1293                           ;main.c: 329:         if(received)
  1294  01BF  0855               	movf	_received^(0+128),w
  1295  01C0  1903               	btfsc	3,2
  1296  01C1  29C3               	goto	u1491
  1297  01C2  29C4               	goto	u1490
  1298  01C3                     u1491:	
  1299  01C3  2876               	goto	l1603
  1300  01C4                     u1490:	
  1301  01C4                     l1681:	
  1302                           
  1303                           ;main.c: 330:         {;main.c: 331:             char stringa=datoSeriale;
  1304  01C4  0854               	movf	_datoSeriale^(0+128),w
  1305  01C5  00BC               	movwf	??_main^(0+128)
  1306  01C6  083C               	movf	??_main^(0+128),w
  1307  01C7  00BF               	movwf	main@stringa^(0+128)
  1308                           
  1309                           ;main.c: 332:             temporizzazione=stringa;
  1310  01C8  083F               	movf	main@stringa^(0+128),w
  1311  01C9  00BC               	movwf	??_main^(0+128)
  1312  01CA  083C               	movf	??_main^(0+128),w
  1313  01CB  00FC               	movwf	_temporizzazione
  1314  01CC                     l1683:	
  1315                           
  1316                           ;main.c: 336:             received=0;
  1317  01CC  01D5               	clrf	_received^(0+128)
  1318  01CD  2876               	goto	l1603
  1319  01CE  120A  118A  2816   	ljmp	start
  1320  01D1                     __end_of_main:	
  1321                           
  1322                           	psect	text1
  1323  0684                     __ptext1:	
  1324 ;; *************** function _messageTransmission *****************
  1325 ;; Defined at:
  1326 ;;		line 446 in file "main.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  tipoMessaggi    1    wreg     unsigned char 
  1329 ;;  idStrada        1   11[BANK1 ] unsigned char 
  1330 ;;  codice          1   12[BANK1 ] unsigned char 
  1331 ;;  valore          1   13[BANK1 ] unsigned char 
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;  tipoMessaggi    1   15[BANK1 ] unsigned char 
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1343 ;;      Params:         0       0       3       0       0
  1344 ;;      Locals:         0       0       1       0       0
  1345 ;;      Temps:          0       0       1       0       0
  1346 ;;      Totals:         0       0       5       0       0
  1347 ;;Total ram usage:        5 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; Hardware stack levels required when called:    6
  1350 ;; This function calls:
  1351 ;;		_Uart_send_string
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function _messageTransmission
  1359  0684                     _messageTransmission:	
  1360                           
  1361                           ;incstack = 0
  1362                           ; Regs used in _messageTransmission: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1363                           ;messageTransmission@tipoMessaggio stored from wreg
  1364  0684  1683               	bsf	3,5	;RP0=1, select bank1
  1365  0685  1303               	bcf	3,6	;RP1=0, select bank1
  1366  0686  00AF               	movwf	messageTransmission@tipoMessaggio^(0+128)
  1367  0687                     l1529:	
  1368                           
  1369                           ;main.c: 446: void messageTransmission(char tipoMessaggio, char idStrada, char codice, c
      +                          har valore);main.c: 447: {;main.c: 448:     strToSend[0]=tipoMessaggio;
  1370  0687  082F               	movf	messageTransmission@tipoMessaggio^(0+128),w
  1371  0688  00AE               	movwf	??_messageTransmission^(0+128)
  1372  0689  082E               	movf	??_messageTransmission^(0+128),w
  1373  068A  00D6               	movwf	_strToSend^(0+128)
  1374                           
  1375                           ;main.c: 449:     strToSend[1]=200;
  1376  068B  30C8               	movlw	200
  1377  068C  00AE               	movwf	??_messageTransmission^(0+128)
  1378  068D  082E               	movf	??_messageTransmission^(0+128),w
  1379  068E  00D7               	movwf	(_strToSend^(0+128)+1)
  1380                           
  1381                           ;main.c: 450:     strToSend[2]=4;
  1382  068F  3004               	movlw	4
  1383  0690  00AE               	movwf	??_messageTransmission^(0+128)
  1384  0691  082E               	movf	??_messageTransmission^(0+128),w
  1385  0692  00D8               	movwf	(_strToSend^(0+128)+2)
  1386                           
  1387                           ;main.c: 451:     strToSend[3]=idStrada;
  1388  0693  082B               	movf	messageTransmission@idStrada^(0+128),w
  1389  0694  00AE               	movwf	??_messageTransmission^(0+128)
  1390  0695  082E               	movf	??_messageTransmission^(0+128),w
  1391  0696  00D9               	movwf	(_strToSend^(0+128)+3)
  1392                           
  1393                           ;main.c: 452:     strToSend[4]=codice;
  1394  0697  082C               	movf	messageTransmission@codice^(0+128),w
  1395  0698  00AE               	movwf	??_messageTransmission^(0+128)
  1396  0699  082E               	movf	??_messageTransmission^(0+128),w
  1397  069A  00DA               	movwf	(_strToSend^(0+128)+4)
  1398                           
  1399                           ;main.c: 453:     strToSend[5]=valore;
  1400  069B  082D               	movf	messageTransmission@valore^(0+128),w
  1401  069C  00AE               	movwf	??_messageTransmission^(0+128)
  1402  069D  082E               	movf	??_messageTransmission^(0+128),w
  1403  069E  00DB               	movwf	(_strToSend^(0+128)+5)
  1404  069F                     l1531:	
  1405                           
  1406                           ;main.c: 454:     Uart_send_string(strToSend);
  1407  069F  30D6               	movlw	(low (_strToSend| 0))& (0+255)
  1408  06A0  120A  118A  2707  120A  118A  	fcall	_Uart_send_string
  1409  06A5                     l176:	
  1410  06A5  0008               	return
  1411  06A6                     __end_of_messageTransmission:	
  1412                           
  1413                           	psect	text2
  1414  0707                     __ptext2:	
  1415 ;; *************** function _Uart_send_string *****************
  1416 ;; Defined at:
  1417 ;;		line 480 in file "main.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  str             1    wreg     PTR unsigned char 
  1420 ;;		 -> strToSend(8), 
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;  str             1    9[BANK1 ] PTR unsigned char 
  1423 ;;		 -> strToSend(8), 
  1424 ;;  i               1   10[BANK1 ] unsigned char 
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : 0/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1434 ;;      Params:         0       0       0       0       0
  1435 ;;      Locals:         0       0       2       0       0
  1436 ;;      Temps:          0       0       1       0       0
  1437 ;;      Totals:         0       0       3       0       0
  1438 ;;Total ram usage:        3 bytes
  1439 ;; Hardware stack levels used:    1
  1440 ;; Hardware stack levels required when called:    5
  1441 ;; This function calls:
  1442 ;;		_UART_TxChar
  1443 ;; This function is called by:
  1444 ;;		_messageTransmission
  1445 ;; This function uses a non-reentrant model
  1446 ;;
  1447                           
  1448                           
  1449                           ;psect for function _Uart_send_string
  1450  0707                     _Uart_send_string:	
  1451                           
  1452                           ;incstack = 0
  1453                           ; Regs used in _Uart_send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1454                           ;Uart_send_string@str stored from wreg
  1455  0707  1683               	bsf	3,5	;RP0=1, select bank1
  1456  0708  1303               	bcf	3,6	;RP1=0, select bank1
  1457  0709  00A9               	movwf	Uart_send_string@str^(0+128)
  1458  070A                     l1337:	
  1459                           
  1460                           ;main.c: 480: void Uart_send_string(char *str);main.c: 481: {;main.c: 482:     char i;;m
      +                          ain.c: 483:     for(i=0;i<6;i++)
  1461  070A  01AA               	clrf	Uart_send_string@i^(0+128)
  1462  070B                     l1343:	
  1463                           
  1464                           ;main.c: 484:     {;main.c: 485:         UART_TxChar(*(str+i));
  1465  070B  082A               	movf	Uart_send_string@i^(0+128),w
  1466  070C  0729               	addwf	Uart_send_string@str^(0+128),w
  1467  070D  00A8               	movwf	??_Uart_send_string^(0+128)
  1468  070E  0828               	movf	??_Uart_send_string^(0+128),w
  1469  070F  0084               	movwf	4
  1470  0710  1383               	bcf	3,7	;select IRP bank0
  1471  0711  0800               	movf	0,w
  1472  0712  120A  118A  2737  120A  118A  	fcall	_UART_TxChar
  1473  0717                     l1345:	
  1474                           
  1475                           ;main.c: 486:     }
  1476  0717  3001               	movlw	1
  1477  0718  1683               	bsf	3,5	;RP0=1, select bank1
  1478  0719  1303               	bcf	3,6	;RP1=0, select bank1
  1479  071A  00A8               	movwf	??_Uart_send_string^(0+128)
  1480  071B  0828               	movf	??_Uart_send_string^(0+128),w
  1481  071C  07AA               	addwf	Uart_send_string@i^(0+128),f
  1482  071D                     l1347:	
  1483  071D  3006               	movlw	6
  1484  071E  022A               	subwf	Uart_send_string@i^(0+128),w
  1485  071F  1C03               	skipc
  1486  0720  2F22               	goto	u901
  1487  0721  2F23               	goto	u900
  1488  0722                     u901:	
  1489  0722  2F0B               	goto	l1343
  1490  0723                     u900:	
  1491  0723                     l190:	
  1492  0723  0008               	return
  1493  0724                     __end_of_Uart_send_string:	
  1494                           
  1495                           	psect	text3
  1496  0737                     __ptext3:	
  1497 ;; *************** function _UART_TxChar *****************
  1498 ;; Defined at:
  1499 ;;		line 651 in file "main.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  dato            1    wreg     unsigned char 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;  dato            1    7[BANK1 ] unsigned char 
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         0       0       0       0       0
  1514 ;;      Locals:         0       0       1       0       0
  1515 ;;      Temps:          0       0       0       0       0
  1516 ;;      Totals:         0       0       1       0       0
  1517 ;;Total ram usage:        1 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    4
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		_Uart_send_string
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function _UART_TxChar
  1529  0737                     _UART_TxChar:	
  1530                           
  1531                           ;incstack = 0
  1532                           ; Regs used in _UART_TxChar: [wreg]
  1533                           ;UART_TxChar@dato stored from wreg
  1534  0737  1683               	bsf	3,5	;RP0=1, select bank1
  1535  0738  1303               	bcf	3,6	;RP1=0, select bank1
  1536  0739  00A7               	movwf	UART_TxChar@dato^(0+128)
  1537  073A                     l1313:	
  1538  073A                     l248:	
  1539                           ;main.c: 651: void UART_TxChar(char dato);main.c: 652: {;main.c: 653:     while (!TXIF);
  1540                           
  1541  073A  1283               	bcf	3,5	;RP0=0, select bank0
  1542  073B  1E0C               	btfss	12,4	;volatile
  1543  073C  2F3E               	goto	u891
  1544  073D  2F3F               	goto	u890
  1545  073E                     u891:	
  1546  073E  2F3A               	goto	l248
  1547  073F                     u890:	
  1548  073F                     l250:	
  1549                           
  1550                           ;main.c: 654:     TXIF = 0;
  1551  073F  120C               	bcf	12,4	;volatile
  1552  0740                     l1315:	
  1553                           
  1554                           ;main.c: 655:     TXREG = dato;
  1555  0740  1683               	bsf	3,5	;RP0=1, select bank1
  1556  0741  1303               	bcf	3,6	;RP1=0, select bank1
  1557  0742  0827               	movf	UART_TxChar@dato^(0+128),w
  1558  0743  1283               	bcf	3,5	;RP0=0, select bank0
  1559  0744  1303               	bcf	3,6	;RP1=0, select bank0
  1560  0745  0099               	movwf	25	;volatile
  1561  0746                     l251:	
  1562  0746  0008               	return
  1563  0747                     __end_of_UART_TxChar:	
  1564                           
  1565                           	psect	text4
  1566  0587                     __ptext4:	
  1567 ;; *************** function _init_lcd *****************
  1568 ;; Defined at:
  1569 ;;		line 618 in file "main.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;		None
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;		None
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0, pclath, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1583 ;;      Params:         0       0       0       0       0
  1584 ;;      Locals:         0       0       0       0       0
  1585 ;;      Temps:          0       0       2       0       0
  1586 ;;      Totals:         0       0       2       0       0
  1587 ;;Total ram usage:        2 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    5
  1590 ;; This function calls:
  1591 ;;		_send_cmd
  1592 ;; This function is called by:
  1593 ;;		_main
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           
  1598                           ;psect for function _init_lcd
  1599  0587                     _init_lcd:	
  1600  0587                     l1505:	
  1601                           ;incstack = 0
  1602                           ; Regs used in _init_lcd: [wreg+status,2+status,0+pclath+cstack]
  1603                           
  1604                           
  1605                           ;main.c: 620:     PORTEbits.RE2 = 0;
  1606  0587  1283               	bcf	3,5	;RP0=0, select bank0
  1607  0588  1303               	bcf	3,6	;RP1=0, select bank0
  1608  0589  1109               	bcf	9,2	;volatile
  1609                           
  1610                           ;main.c: 621:     PORTEbits.RE1 = 0;
  1611  058A  1089               	bcf	9,1	;volatile
  1612  058B                     l1507:	
  1613                           
  1614                           ;main.c: 622:     _delay((unsigned long)((20)*(32000000L/4000.0)));
  1615  058B  30D0               	movlw	208
  1616  058C  1683               	bsf	3,5	;RP0=1, select bank1
  1617  058D  1303               	bcf	3,6	;RP1=0, select bank1
  1618  058E  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1619  058F  30C9               	movlw	201
  1620  0590  00AA               	movwf	??_init_lcd^(0+128)
  1621  0591                     u1737:	
  1622  0591  0BAA               	decfsz	??_init_lcd^(0+128),f
  1623  0592  2D91               	goto	u1737
  1624  0593  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1625  0594  2D91               	goto	u1737
  1626  0595                     l1509:	
  1627                           
  1628                           ;main.c: 623:     PORTEbits.RE1 = 1;
  1629  0595  1283               	bcf	3,5	;RP0=0, select bank0
  1630  0596  1303               	bcf	3,6	;RP1=0, select bank0
  1631  0597  1489               	bsf	9,1	;volatile
  1632  0598                     l1511:	
  1633                           
  1634                           ;main.c: 624:     send_cmd(0x38);
  1635  0598  3038               	movlw	56
  1636  0599  120A  118A  265C  120A  118A  	fcall	_send_cmd
  1637  059E                     l1513:	
  1638                           
  1639                           ;main.c: 625:     _delay((unsigned long)((5)*(32000000L/4000.0)));
  1640  059E  3034               	movlw	52
  1641  059F  1683               	bsf	3,5	;RP0=1, select bank1
  1642  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  1643  05A1  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1644  05A2  30F1               	movlw	241
  1645  05A3  00AA               	movwf	??_init_lcd^(0+128)
  1646  05A4                     u1747:	
  1647  05A4  0BAA               	decfsz	??_init_lcd^(0+128),f
  1648  05A5  2DA4               	goto	u1747
  1649  05A6  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1650  05A7  2DA4               	goto	u1747
  1651                           
  1652                           ;main.c: 626:     send_cmd(0x38);
  1653  05A8  3038               	movlw	56
  1654  05A9  120A  118A  265C  120A  118A  	fcall	_send_cmd
  1655  05AE                     l1515:	
  1656                           
  1657                           ;main.c: 627:     _delay((unsigned long)((1)*(32000000L/4000.0)));
  1658  05AE  300B               	movlw	11
  1659  05AF  1683               	bsf	3,5	;RP0=1, select bank1
  1660  05B0  1303               	bcf	3,6	;RP1=0, select bank1
  1661  05B1  00AB               	movwf	(??_init_lcd^(0+128)+1)
  1662  05B2  3061               	movlw	97
  1663  05B3  00AA               	movwf	??_init_lcd^(0+128)
  1664  05B4                     u1757:	
  1665  05B4  0BAA               	decfsz	??_init_lcd^(0+128),f
  1666  05B5  2DB4               	goto	u1757
  1667  05B6  0BAB               	decfsz	(??_init_lcd^(0+128)+1),f
  1668  05B7  2DB4               	goto	u1757
  1669  05B8  2DB9               	nop2
  1670  05B9                     l1517:	
  1671                           
  1672                           ;main.c: 628:     send_cmd(0x38);
  1673  05B9  3038               	movlw	56
  1674  05BA  120A  118A  265C  120A  118A  	fcall	_send_cmd
  1675  05BF                     l1519:	
  1676                           
  1677                           ;main.c: 629:     send_cmd(0x08);
  1678  05BF  3008               	movlw	8
  1679  05C0  120A  118A  265C  120A  118A  	fcall	_send_cmd
  1680  05C5                     l1521:	
  1681                           
  1682                           ;main.c: 630:     send_cmd(0x0F);
  1683  05C5  300F               	movlw	15
  1684  05C6  120A  118A  265C  120A  118A  	fcall	_send_cmd
  1685  05CB                     l1523:	
  1686                           
  1687                           ;main.c: 631:     send_cmd(0x01);
  1688  05CB  3001               	movlw	1
  1689  05CC  120A  118A  265C  120A  118A  	fcall	_send_cmd
  1690  05D1                     l1525:	
  1691                           
  1692                           ;main.c: 632:     send_cmd(0x0C);
  1693  05D1  300C               	movlw	12
  1694  05D2  120A  118A  265C  120A  118A  	fcall	_send_cmd
  1695  05D7                     l1527:	
  1696                           
  1697                           ;main.c: 633:     send_cmd(0x80);
  1698  05D7  3080               	movlw	128
  1699  05D8  120A  118A  265C  120A  118A  	fcall	_send_cmd
  1700  05DD                     l242:	
  1701  05DD  0008               	return
  1702  05DE                     __end_of_init_lcd:	
  1703                           
  1704                           	psect	text5
  1705  065C                     __ptext5:	
  1706 ;; *************** function _send_cmd *****************
  1707 ;; Defined at:
  1708 ;;		line 606 in file "main.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  command         1    wreg     unsigned char 
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  command         1    9[BANK1 ] unsigned char 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  1    wreg      void 
  1715 ;; Registers used:
  1716 ;;		wreg
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1722 ;;      Params:         0       0       0       0       0
  1723 ;;      Locals:         0       0       1       0       0
  1724 ;;      Temps:          0       0       2       0       0
  1725 ;;      Totals:         0       0       3       0       0
  1726 ;;Total ram usage:        3 bytes
  1727 ;; Hardware stack levels used:    1
  1728 ;; Hardware stack levels required when called:    4
  1729 ;; This function calls:
  1730 ;;		Nothing
  1731 ;; This function is called by:
  1732 ;;		_main
  1733 ;;		_init_lcd
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           
  1737                           
  1738                           ;psect for function _send_cmd
  1739  065C                     _send_cmd:	
  1740                           
  1741                           ;incstack = 0
  1742                           ; Regs used in _send_cmd: [wreg]
  1743                           ;send_cmd@command stored from wreg
  1744  065C  1683               	bsf	3,5	;RP0=1, select bank1
  1745  065D  1303               	bcf	3,6	;RP1=0, select bank1
  1746  065E  00A9               	movwf	send_cmd@command^(0+128)
  1747  065F                     l1327:	
  1748                           
  1749                           ;main.c: 606: void send_cmd(char command);main.c: 607: {;main.c: 608:     PORTEbits.RE1 
      +                          = 1;
  1750  065F  1283               	bcf	3,5	;RP0=0, select bank0
  1751  0660  1303               	bcf	3,6	;RP1=0, select bank0
  1752  0661  1489               	bsf	9,1	;volatile
  1753  0662                     l1329:	
  1754                           
  1755                           ;main.c: 609:     PORTD = command;
  1756  0662  1683               	bsf	3,5	;RP0=1, select bank1
  1757  0663  1303               	bcf	3,6	;RP1=0, select bank1
  1758  0664  0829               	movf	send_cmd@command^(0+128),w
  1759  0665  1283               	bcf	3,5	;RP0=0, select bank0
  1760  0666  1303               	bcf	3,6	;RP1=0, select bank0
  1761  0667  0088               	movwf	8	;volatile
  1762  0668                     l1331:	
  1763                           
  1764                           ;main.c: 610:     PORTEbits.RE2 = 0;
  1765  0668  1109               	bcf	9,2	;volatile
  1766                           
  1767                           ;main.c: 611:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  1768  0669  3020               	movlw	32
  1769  066A  1683               	bsf	3,5	;RP0=1, select bank1
  1770  066B  1303               	bcf	3,6	;RP1=0, select bank1
  1771  066C  00A8               	movwf	(??_send_cmd^(0+128)+1)
  1772  066D  3029               	movlw	41
  1773  066E  00A7               	movwf	??_send_cmd^(0+128)
  1774  066F                     u1767:	
  1775  066F  0BA7               	decfsz	??_send_cmd^(0+128),f
  1776  0670  2E6F               	goto	u1767
  1777  0671  0BA8               	decfsz	(??_send_cmd^(0+128)+1),f
  1778  0672  2E6F               	goto	u1767
  1779  0673                     l1333:	
  1780                           
  1781                           ;main.c: 612:     PORTEbits.RE1 = 0;
  1782  0673  1283               	bcf	3,5	;RP0=0, select bank0
  1783  0674  1303               	bcf	3,6	;RP1=0, select bank0
  1784  0675  1089               	bcf	9,1	;volatile
  1785                           
  1786                           ;main.c: 613:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  1787  0676  3020               	movlw	32
  1788  0677  1683               	bsf	3,5	;RP0=1, select bank1
  1789  0678  1303               	bcf	3,6	;RP1=0, select bank1
  1790  0679  00A8               	movwf	(??_send_cmd^(0+128)+1)
  1791  067A  3029               	movlw	41
  1792  067B  00A7               	movwf	??_send_cmd^(0+128)
  1793  067C                     u1777:	
  1794  067C  0BA7               	decfsz	??_send_cmd^(0+128),f
  1795  067D  2E7C               	goto	u1777
  1796  067E  0BA8               	decfsz	(??_send_cmd^(0+128)+1),f
  1797  067F  2E7C               	goto	u1777
  1798  0680                     l1335:	
  1799                           
  1800                           ;main.c: 614:     PORTEbits.RE1 = 1;
  1801  0680  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0681  1303               	bcf	3,6	;RP1=0, select bank0
  1803  0682  1489               	bsf	9,1	;volatile
  1804  0683                     l239:	
  1805  0683  0008               	return
  1806  0684                     __end_of_send_cmd:	
  1807                           
  1808                           	psect	text6
  1809  0747                     __ptext6:	
  1810 ;; *************** function _initPic *****************
  1811 ;; Defined at:
  1812 ;;		line 492 in file "main.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, status,2
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1826 ;;      Params:         0       0       0       0       0
  1827 ;;      Locals:         0       0       0       0       0
  1828 ;;      Temps:          0       0       0       0       0
  1829 ;;      Totals:         0       0       0       0       0
  1830 ;;Total ram usage:        0 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    4
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           
  1841                           ;psect for function _initPic
  1842  0747                     _initPic:	
  1843  0747                     l1489:	
  1844                           ;incstack = 0
  1845                           ; Regs used in _initPic: [wreg+status,2]
  1846                           
  1847                           
  1848                           ;main.c: 494:     TRISD = 0x00;
  1849  0747  1683               	bsf	3,5	;RP0=1, select bank1
  1850  0748  1303               	bcf	3,6	;RP1=0, select bank1
  1851  0749  0188               	clrf	8	;volatile
  1852  074A                     l1491:	
  1853                           
  1854                           ;main.c: 495:     TRISB = 0xFF;
  1855  074A  30FF               	movlw	255
  1856  074B  0086               	movwf	6	;volatile
  1857  074C                     l1493:	
  1858                           
  1859                           ;main.c: 496:     TRISE = 0x00;
  1860  074C  0189               	clrf	9	;volatile
  1861                           
  1862                           ;main.c: 498:     INTCON = 0xA0;
  1863  074D  30A0               	movlw	160
  1864  074E  008B               	movwf	11	;volatile
  1865                           
  1866                           ;main.c: 499:     OPTION_REG = 0x07;
  1867  074F  3007               	movlw	7
  1868  0750  0081               	movwf	1	;volatile
  1869                           
  1870                           ;main.c: 500:     TMR0 = 6;
  1871  0751  3006               	movlw	6
  1872  0752  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0753  1303               	bcf	3,6	;RP1=0, select bank0
  1874  0754  0081               	movwf	1	;volatile
  1875  0755                     l193:	
  1876  0755  0008               	return
  1877  0756                     __end_of_initPic:	
  1878                           
  1879                           	psect	text7
  1880  0622                     __ptext7:	
  1881 ;; *************** function _UART_init *****************
  1882 ;; Defined at:
  1883 ;;		line 638 in file "main.c"
  1884 ;; Parameters:    Size  Location     Type
  1885 ;;  baudrate        2   22[BANK1 ] int 
  1886 ;; Auto vars:     Size  Location     Type
  1887 ;;		None
  1888 ;; Return value:  Size  Location     Type
  1889 ;;                  1    wreg      void 
  1890 ;; Registers used:
  1891 ;;		wreg, status,2, status,0, pclath, cstack
  1892 ;; Tracked objects:
  1893 ;;		On entry : 0/0
  1894 ;;		On exit  : 0/0
  1895 ;;		Unchanged: 0/0
  1896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1897 ;;      Params:         0       0       2       0       0
  1898 ;;      Locals:         0       0       0       0       0
  1899 ;;      Temps:          0       0       4       0       0
  1900 ;;      Totals:         0       0       6       0       0
  1901 ;;Total ram usage:        6 bytes
  1902 ;; Hardware stack levels used:    1
  1903 ;; Hardware stack levels required when called:    5
  1904 ;; This function calls:
  1905 ;;		___aldiv
  1906 ;; This function is called by:
  1907 ;;		_main
  1908 ;; This function uses a non-reentrant model
  1909 ;;
  1910                           
  1911                           
  1912                           ;psect for function _UART_init
  1913  0622                     _UART_init:	
  1914  0622                     l1495:	
  1915                           ;incstack = 0
  1916                           ; Regs used in _UART_init: [wreg+status,2+status,0+pclath+cstack]
  1917                           
  1918                           
  1919                           ;main.c: 638: void UART_init(int baudrate);main.c: 639: {;main.c: 640:     TRISCbits.TRI
      +                          SC6 = 0;
  1920  0622  1683               	bsf	3,5	;RP0=1, select bank1
  1921  0623  1303               	bcf	3,6	;RP1=0, select bank1
  1922  0624  1307               	bcf	7,6	;volatile
  1923                           
  1924                           ;main.c: 641:     TXSTAbits.TXEN = 1;
  1925  0625  1698               	bsf	24,5	;volatile
  1926                           
  1927                           ;main.c: 642:     RCSTAbits.SPEN = 1;
  1928  0626  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0627  1303               	bcf	3,6	;RP1=0, select bank0
  1930  0628  1798               	bsf	24,7	;volatile
  1931                           
  1932                           ;main.c: 643:     RCSTAbits.CREN = 1;
  1933  0629  1618               	bsf	24,4	;volatile
  1934  062A                     l1497:	
  1935                           
  1936                           ;main.c: 644:     SPBRG = (32000000L/(long)(64UL*baudrate))-1;
  1937  062A  1683               	bsf	3,5	;RP0=1, select bank1
  1938  062B  1303               	bcf	3,6	;RP1=0, select bank1
  1939  062C  0836               	movf	UART_init@baudrate^(0+128),w
  1940  062D  00B8               	movwf	??_UART_init^(0+128)
  1941  062E  0837               	movf	(UART_init@baudrate+1)^(0+128),w
  1942  062F  00B9               	movwf	(??_UART_init^(0+128)+1)
  1943  0630  3000               	movlw	0
  1944  0631  1BB9               	btfsc	(??_UART_init^(0+128)+1),7
  1945  0632  30FF               	movlw	255
  1946  0633  00BA               	movwf	(??_UART_init^(0+128)+2)
  1947  0634  00BB               	movwf	(??_UART_init^(0+128)+3)
  1948  0635  3006               	movlw	6
  1949  0636                     u1215:	
  1950  0636  1003               	clrc
  1951  0637  0DB8               	rlf	??_UART_init^(0+128),f
  1952  0638  0DB9               	rlf	(??_UART_init^(0+128)+1),f
  1953  0639  0DBA               	rlf	(??_UART_init^(0+128)+2),f
  1954  063A  0DBB               	rlf	(??_UART_init^(0+128)+3),f
  1955  063B                     u1210:	
  1956  063B  3EFF               	addlw	-1
  1957  063C  1D03               	skipz
  1958  063D  2E36               	goto	u1215
  1959  063E  083B               	movf	(??_UART_init+3)^(0+128),w
  1960  063F  00AA               	movwf	(___aldiv@divisor+3)^(0+128)
  1961  0640  083A               	movf	(??_UART_init+2)^(0+128),w
  1962  0641  00A9               	movwf	(___aldiv@divisor+2)^(0+128)
  1963  0642  0839               	movf	(??_UART_init+1)^(0+128),w
  1964  0643  00A8               	movwf	(___aldiv@divisor+1)^(0+128)
  1965  0644  0838               	movf	??_UART_init^(0+128),w
  1966  0645  00A7               	movwf	___aldiv@divisor^(0+128)
  1967  0646  3001               	movlw	1
  1968  0647  00AE               	movwf	(___aldiv@dividend+3)^(0+128)
  1969  0648  30E8               	movlw	232
  1970  0649  00AD               	movwf	(___aldiv@dividend+2)^(0+128)
  1971  064A  3048               	movlw	72
  1972  064B  00AC               	movwf	(___aldiv@dividend+1)^(0+128)
  1973  064C  3000               	movlw	0
  1974  064D  00AB               	movwf	___aldiv@dividend^(0+128)
  1975  064E  120A  118A  242A  120A  118A  	fcall	___aldiv
  1976  0653  1683               	bsf	3,5	;RP0=1, select bank1
  1977  0654  1303               	bcf	3,6	;RP1=0, select bank1
  1978  0655  0827               	movf	?___aldiv^(0+128),w
  1979  0656  3EFF               	addlw	255
  1980  0657  0099               	movwf	25	;volatile
  1981  0658                     l1499:	
  1982                           
  1983                           ;main.c: 645:     INTCONbits.GIE = 1;
  1984  0658  178B               	bsf	11,7	;volatile
  1985  0659                     l1501:	
  1986                           
  1987                           ;main.c: 646:     INTCONbits.PEIE = 1;
  1988  0659  170B               	bsf	11,6	;volatile
  1989  065A                     l1503:	
  1990                           
  1991                           ;main.c: 647:     PIE1bits.RCIE = 1;
  1992  065A  168C               	bsf	12,5	;volatile
  1993  065B                     l245:	
  1994  065B  0008               	return
  1995  065C                     __end_of_UART_init:	
  1996                           
  1997                           	psect	text8
  1998  042A                     __ptext8:	
  1999 ;; *************** function ___aldiv *****************
  2000 ;; Defined at:
  2001 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\aldiv.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;  divisor         4    7[BANK1 ] long 
  2004 ;;  dividend        4   11[BANK1 ] long 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  quotient        4   18[BANK1 ] long 
  2007 ;;  sign            1   17[BANK1 ] unsigned char 
  2008 ;;  counter         1   16[BANK1 ] unsigned char 
  2009 ;; Return value:  Size  Location     Type
  2010 ;;                  4    7[BANK1 ] long 
  2011 ;; Registers used:
  2012 ;;		wreg, status,2, status,0
  2013 ;; Tracked objects:
  2014 ;;		On entry : 0/0
  2015 ;;		On exit  : 0/0
  2016 ;;		Unchanged: 0/0
  2017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2018 ;;      Params:         0       0       8       0       0
  2019 ;;      Locals:         0       0       6       0       0
  2020 ;;      Temps:          0       0       1       0       0
  2021 ;;      Totals:         0       0      15       0       0
  2022 ;;Total ram usage:       15 bytes
  2023 ;; Hardware stack levels used:    1
  2024 ;; Hardware stack levels required when called:    4
  2025 ;; This function calls:
  2026 ;;		Nothing
  2027 ;; This function is called by:
  2028 ;;		_UART_init
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           
  2033                           ;psect for function ___aldiv
  2034  042A                     ___aldiv:	
  2035  042A                     l1357:	
  2036                           ;incstack = 0
  2037                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2038                           
  2039  042A  1683               	bsf	3,5	;RP0=1, select bank1
  2040  042B  1303               	bcf	3,6	;RP1=0, select bank1
  2041  042C  01B1               	clrf	___aldiv@sign^(0+128)
  2042  042D                     l1359:	
  2043  042D  1FAA               	btfss	(___aldiv@divisor+3)^(0+128),7
  2044  042E  2C30               	goto	u921
  2045  042F  2C31               	goto	u920
  2046  0430                     u921:	
  2047  0430  2C3E               	goto	l402
  2048  0431                     u920:	
  2049  0431                     l1361:	
  2050  0431  09A7               	comf	___aldiv@divisor^(0+128),f
  2051  0432  09A8               	comf	(___aldiv@divisor+1)^(0+128),f
  2052  0433  09A9               	comf	(___aldiv@divisor+2)^(0+128),f
  2053  0434  09AA               	comf	(___aldiv@divisor+3)^(0+128),f
  2054  0435  0AA7               	incf	___aldiv@divisor^(0+128),f
  2055  0436  1903               	skipnz
  2056  0437  0AA8               	incf	(___aldiv@divisor+1)^(0+128),f
  2057  0438  1903               	skipnz
  2058  0439  0AA9               	incf	(___aldiv@divisor+2)^(0+128),f
  2059  043A  1903               	skipnz
  2060  043B  0AAA               	incf	(___aldiv@divisor+3)^(0+128),f
  2061  043C  01B1               	clrf	___aldiv@sign^(0+128)
  2062  043D  0AB1               	incf	___aldiv@sign^(0+128),f
  2063  043E                     l402:	
  2064  043E  1FAE               	btfss	(___aldiv@dividend+3)^(0+128),7
  2065  043F  2C41               	goto	u931
  2066  0440  2C42               	goto	u930
  2067  0441                     u931:	
  2068  0441  2C51               	goto	l1367
  2069  0442                     u930:	
  2070  0442                     l1363:	
  2071  0442  09AB               	comf	___aldiv@dividend^(0+128),f
  2072  0443  09AC               	comf	(___aldiv@dividend+1)^(0+128),f
  2073  0444  09AD               	comf	(___aldiv@dividend+2)^(0+128),f
  2074  0445  09AE               	comf	(___aldiv@dividend+3)^(0+128),f
  2075  0446  0AAB               	incf	___aldiv@dividend^(0+128),f
  2076  0447  1903               	skipnz
  2077  0448  0AAC               	incf	(___aldiv@dividend+1)^(0+128),f
  2078  0449  1903               	skipnz
  2079  044A  0AAD               	incf	(___aldiv@dividend+2)^(0+128),f
  2080  044B  1903               	skipnz
  2081  044C  0AAE               	incf	(___aldiv@dividend+3)^(0+128),f
  2082  044D                     l1365:	
  2083  044D  3001               	movlw	1
  2084  044E  00AF               	movwf	??___aldiv^(0+128)
  2085  044F  082F               	movf	??___aldiv^(0+128),w
  2086  0450  06B1               	xorwf	___aldiv@sign^(0+128),f
  2087  0451                     l1367:	
  2088  0451  3000               	movlw	0
  2089  0452  00B5               	movwf	(___aldiv@quotient+3)^(0+128)
  2090  0453  3000               	movlw	0
  2091  0454  00B4               	movwf	(___aldiv@quotient+2)^(0+128)
  2092  0455  3000               	movlw	0
  2093  0456  00B3               	movwf	(___aldiv@quotient+1)^(0+128)
  2094  0457  3000               	movlw	0
  2095  0458  00B2               	movwf	___aldiv@quotient^(0+128)
  2096  0459                     l1369:	
  2097  0459  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2098  045A  0429               	iorwf	(___aldiv@divisor+2)^(0+128),w
  2099  045B  0428               	iorwf	(___aldiv@divisor+1)^(0+128),w
  2100  045C  0427               	iorwf	___aldiv@divisor^(0+128),w
  2101  045D  1903               	skipnz
  2102  045E  2C60               	goto	u941
  2103  045F  2C61               	goto	u940
  2104  0460                     u941:	
  2105  0460  2CAE               	goto	l1389
  2106  0461                     u940:	
  2107  0461                     l1371:	
  2108  0461  01B0               	clrf	___aldiv@counter^(0+128)
  2109  0462  0AB0               	incf	___aldiv@counter^(0+128),f
  2110  0463  2C71               	goto	l1375
  2111  0464                     l1373:	
  2112  0464  3001               	movlw	1
  2113  0465  00AF               	movwf	??___aldiv^(0+128)
  2114  0466                     u955:	
  2115  0466  1003               	clrc
  2116  0467  0DA7               	rlf	___aldiv@divisor^(0+128),f
  2117  0468  0DA8               	rlf	(___aldiv@divisor+1)^(0+128),f
  2118  0469  0DA9               	rlf	(___aldiv@divisor+2)^(0+128),f
  2119  046A  0DAA               	rlf	(___aldiv@divisor+3)^(0+128),f
  2120  046B  0BAF               	decfsz	??___aldiv^(0+128),f
  2121  046C  2C66               	goto	u955
  2122  046D  3001               	movlw	1
  2123  046E  00AF               	movwf	??___aldiv^(0+128)
  2124  046F  082F               	movf	??___aldiv^(0+128),w
  2125  0470  07B0               	addwf	___aldiv@counter^(0+128),f
  2126  0471                     l1375:	
  2127  0471  1FAA               	btfss	(___aldiv@divisor+3)^(0+128),7
  2128  0472  2C74               	goto	u961
  2129  0473  2C75               	goto	u960
  2130  0474                     u961:	
  2131  0474  2C64               	goto	l1373
  2132  0475                     u960:	
  2133  0475                     l1377:	
  2134  0475  3001               	movlw	1
  2135  0476  00AF               	movwf	??___aldiv^(0+128)
  2136  0477                     u975:	
  2137  0477  1003               	clrc
  2138  0478  0DB2               	rlf	___aldiv@quotient^(0+128),f
  2139  0479  0DB3               	rlf	(___aldiv@quotient+1)^(0+128),f
  2140  047A  0DB4               	rlf	(___aldiv@quotient+2)^(0+128),f
  2141  047B  0DB5               	rlf	(___aldiv@quotient+3)^(0+128),f
  2142  047C  0BAF               	decfsz	??___aldiv^(0+128),f
  2143  047D  2C77               	goto	u975
  2144  047E                     l1379:	
  2145  047E  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2146  047F  022E               	subwf	(___aldiv@dividend+3)^(0+128),w
  2147  0480  1D03               	skipz
  2148  0481  2C8C               	goto	u985
  2149  0482  0829               	movf	(___aldiv@divisor+2)^(0+128),w
  2150  0483  022D               	subwf	(___aldiv@dividend+2)^(0+128),w
  2151  0484  1D03               	skipz
  2152  0485  2C8C               	goto	u985
  2153  0486  0828               	movf	(___aldiv@divisor+1)^(0+128),w
  2154  0487  022C               	subwf	(___aldiv@dividend+1)^(0+128),w
  2155  0488  1D03               	skipz
  2156  0489  2C8C               	goto	u985
  2157  048A  0827               	movf	___aldiv@divisor^(0+128),w
  2158  048B  022B               	subwf	___aldiv@dividend^(0+128),w
  2159  048C                     u985:	
  2160  048C  1C03               	skipc
  2161  048D  2C8F               	goto	u981
  2162  048E  2C90               	goto	u980
  2163  048F                     u981:	
  2164  048F  2C9F               	goto	l1385
  2165  0490                     u980:	
  2166  0490                     l1381:	
  2167  0490  0827               	movf	___aldiv@divisor^(0+128),w
  2168  0491  02AB               	subwf	___aldiv@dividend^(0+128),f
  2169  0492  0828               	movf	(___aldiv@divisor+1)^(0+128),w
  2170  0493  1C03               	skipc
  2171  0494  0F28               	incfsz	(___aldiv@divisor+1)^(0+128),w
  2172  0495  02AC               	subwf	(___aldiv@dividend+1)^(0+128),f
  2173  0496  0829               	movf	(___aldiv@divisor+2)^(0+128),w
  2174  0497  1C03               	skipc
  2175  0498  0F29               	incfsz	(___aldiv@divisor+2)^(0+128),w
  2176  0499  02AD               	subwf	(___aldiv@dividend+2)^(0+128),f
  2177  049A  082A               	movf	(___aldiv@divisor+3)^(0+128),w
  2178  049B  1C03               	skipc
  2179  049C  0F2A               	incfsz	(___aldiv@divisor+3)^(0+128),w
  2180  049D  02AE               	subwf	(___aldiv@dividend+3)^(0+128),f
  2181  049E                     l1383:	
  2182  049E  1432               	bsf	___aldiv@quotient^(0+128),0
  2183  049F                     l1385:	
  2184  049F  3001               	movlw	1
  2185  04A0                     u995:	
  2186  04A0  1003               	clrc
  2187  04A1  0CAA               	rrf	(___aldiv@divisor+3)^(0+128),f
  2188  04A2  0CA9               	rrf	(___aldiv@divisor+2)^(0+128),f
  2189  04A3  0CA8               	rrf	(___aldiv@divisor+1)^(0+128),f
  2190  04A4  0CA7               	rrf	___aldiv@divisor^(0+128),f
  2191  04A5  3EFF               	addlw	-1
  2192  04A6  1D03               	skipz
  2193  04A7  2CA0               	goto	u995
  2194  04A8                     l1387:	
  2195  04A8  3001               	movlw	1
  2196  04A9  02B0               	subwf	___aldiv@counter^(0+128),f
  2197  04AA  1D03               	btfss	3,2
  2198  04AB  2CAD               	goto	u1001
  2199  04AC  2CAE               	goto	u1000
  2200  04AD                     u1001:	
  2201  04AD  2C75               	goto	l1377
  2202  04AE                     u1000:	
  2203  04AE                     l1389:	
  2204  04AE  0831               	movf	___aldiv@sign^(0+128),w
  2205  04AF  1903               	btfsc	3,2
  2206  04B0  2CB2               	goto	u1011
  2207  04B1  2CB3               	goto	u1010
  2208  04B2                     u1011:	
  2209  04B2  2CBE               	goto	l1393
  2210  04B3                     u1010:	
  2211  04B3                     l1391:	
  2212  04B3  09B2               	comf	___aldiv@quotient^(0+128),f
  2213  04B4  09B3               	comf	(___aldiv@quotient+1)^(0+128),f
  2214  04B5  09B4               	comf	(___aldiv@quotient+2)^(0+128),f
  2215  04B6  09B5               	comf	(___aldiv@quotient+3)^(0+128),f
  2216  04B7  0AB2               	incf	___aldiv@quotient^(0+128),f
  2217  04B8  1903               	skipnz
  2218  04B9  0AB3               	incf	(___aldiv@quotient+1)^(0+128),f
  2219  04BA  1903               	skipnz
  2220  04BB  0AB4               	incf	(___aldiv@quotient+2)^(0+128),f
  2221  04BC  1903               	skipnz
  2222  04BD  0AB5               	incf	(___aldiv@quotient+3)^(0+128),f
  2223  04BE                     l1393:	
  2224  04BE  0835               	movf	(___aldiv@quotient+3)^(0+128),w
  2225  04BF  00AA               	movwf	(?___aldiv+3)^(0+128)
  2226  04C0  0834               	movf	(___aldiv@quotient+2)^(0+128),w
  2227  04C1  00A9               	movwf	(?___aldiv+2)^(0+128)
  2228  04C2  0833               	movf	(___aldiv@quotient+1)^(0+128),w
  2229  04C3  00A8               	movwf	(?___aldiv+1)^(0+128)
  2230  04C4  0832               	movf	___aldiv@quotient^(0+128),w
  2231  04C5  00A7               	movwf	?___aldiv^(0+128)
  2232  04C6                     l412:	
  2233  04C6  0008               	return
  2234  04C7                     __end_of___aldiv:	
  2235                           
  2236                           	psect	text9
  2237  030E                     __ptext9:	
  2238 ;; *************** function _ISR *****************
  2239 ;; Defined at:
  2240 ;;		line 346 in file "main.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;		None
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;		None
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2254 ;;      Params:         0       0       0       0       0
  2255 ;;      Locals:         0       0       0       0       0
  2256 ;;      Temps:          0       0       7       0       0
  2257 ;;      Totals:         0       0       7       0       0
  2258 ;;Total ram usage:        7 bytes
  2259 ;; Hardware stack levels used:    1
  2260 ;; Hardware stack levels required when called:    3
  2261 ;; This function calls:
  2262 ;;		_print_Countdown
  2263 ;; This function is called by:
  2264 ;;		Interrupt level 1
  2265 ;; This function uses a non-reentrant model
  2266 ;;
  2267                           
  2268                           
  2269                           ;psect for function _ISR
  2270  030E                     _ISR:	
  2271  030E                     i1l1685:	
  2272                           
  2273                           ;main.c: 350:     if (!(PORTBbits.RB3)&& (!oldBtn1))
  2274  030E  1283               	bcf	3,5	;RP0=0, select bank0
  2275  030F  1303               	bcf	3,6	;RP1=0, select bank0
  2276  0310  1986               	btfsc	6,3	;volatile
  2277  0311  2B13               	goto	u150_21
  2278  0312  2B14               	goto	u150_20
  2279  0313                     u150_21:	
  2280  0313  2B25               	goto	i1l155
  2281  0314                     u150_20:	
  2282  0314                     i1l1687:	
  2283  0314  086F               	movf	_oldBtn1,w
  2284  0315  1D03               	btfss	3,2
  2285  0316  2B18               	goto	u151_21
  2286  0317  2B19               	goto	u151_20
  2287  0318                     u151_21:	
  2288  0318  2B25               	goto	i1l155
  2289  0319                     u151_20:	
  2290  0319                     i1l1689:	
  2291                           
  2292                           ;main.c: 351:     {;main.c: 352:         stat1=!stat1;
  2293  0319  1683               	bsf	3,5	;RP0=1, select bank1
  2294  031A  1303               	bcf	3,6	;RP1=0, select bank1
  2295  031B  0850               	movf	_stat1^(0+128),w
  2296  031C  1903               	btfsc	3,2
  2297  031D  2B1F               	goto	u152_21
  2298  031E  2B21               	goto	u152_20
  2299  031F                     u152_21:	
  2300  031F  3001               	movlw	1
  2301  0320  2B22               	goto	u153_20
  2302  0321                     u152_20:	
  2303  0321  3000               	movlw	0
  2304  0322                     u153_20:	
  2305  0322  00A0               	movwf	??_ISR^(0+128)
  2306  0323  0820               	movf	??_ISR^(0+128),w
  2307  0324  00D0               	movwf	_stat1^(0+128)
  2308  0325                     i1l155:	
  2309                           ;main.c: 354:     }
  2310                           
  2311                           
  2312                           ;main.c: 355:     oldBtn1 = !PORTBbits.RB3;
  2313  0325  1003               	clrc
  2314  0326  1283               	bcf	3,5	;RP0=0, select bank0
  2315  0327  1D86               	btfss	6,3	;volatile
  2316  0328  1403               	setc
  2317  0329  3000               	movlw	0
  2318  032A  1803               	btfsc	3,0
  2319  032B  3001               	movlw	1
  2320  032C  00EF               	movwf	_oldBtn1
  2321  032D                     i1l1691:	
  2322                           
  2323                           ;main.c: 357:     if (!(PORTBbits.RB4)&& (!oldBtn2))
  2324  032D  1A06               	btfsc	6,4	;volatile
  2325  032E  2B30               	goto	u154_21
  2326  032F  2B31               	goto	u154_20
  2327  0330                     u154_21:	
  2328  0330  2B42               	goto	i1l156
  2329  0331                     u154_20:	
  2330  0331                     i1l1693:	
  2331  0331  1683               	bsf	3,5	;RP0=1, select bank1
  2332  0332  1303               	bcf	3,6	;RP1=0, select bank1
  2333  0333  084F               	movf	_oldBtn2^(0+128),w
  2334  0334  1D03               	btfss	3,2
  2335  0335  2B37               	goto	u155_21
  2336  0336  2B38               	goto	u155_20
  2337  0337                     u155_21:	
  2338  0337  2B42               	goto	i1l156
  2339  0338                     u155_20:	
  2340  0338                     i1l1695:	
  2341                           
  2342                           ;main.c: 358:     {;main.c: 359:         stat2=!stat2;
  2343  0338  084E               	movf	_stat2^(0+128),w
  2344  0339  1903               	btfsc	3,2
  2345  033A  2B3C               	goto	u156_21
  2346  033B  2B3E               	goto	u156_20
  2347  033C                     u156_21:	
  2348  033C  3001               	movlw	1
  2349  033D  2B3F               	goto	u157_20
  2350  033E                     u156_20:	
  2351  033E  3000               	movlw	0
  2352  033F                     u157_20:	
  2353  033F  00A0               	movwf	??_ISR^(0+128)
  2354  0340  0820               	movf	??_ISR^(0+128),w
  2355  0341  00CE               	movwf	_stat2^(0+128)
  2356  0342                     i1l156:	
  2357                           ;main.c: 361:     }
  2358                           
  2359                           
  2360                           ;main.c: 362:     oldBtn2 = !PORTBbits.RB4;
  2361  0342  1003               	clrc
  2362  0343  1283               	bcf	3,5	;RP0=0, select bank0
  2363  0344  1E06               	btfss	6,4	;volatile
  2364  0345  1403               	setc
  2365  0346  3000               	movlw	0
  2366  0347  1803               	btfsc	3,0
  2367  0348  3001               	movlw	1
  2368  0349  1683               	bsf	3,5	;RP0=1, select bank1
  2369  034A  1303               	bcf	3,6	;RP1=0, select bank1
  2370  034B  00CF               	movwf	_oldBtn2^(0+128)
  2371  034C                     i1l1697:	
  2372                           
  2373                           ;main.c: 364:     if (!(PORTBbits.RB5)&& (!oldBtn3))
  2374  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2375  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2376  034E  1A86               	btfsc	6,5	;volatile
  2377  034F  2B51               	goto	u158_21
  2378  0350  2B52               	goto	u158_20
  2379  0351                     u158_21:	
  2380  0351  2B63               	goto	i1l157
  2381  0352                     u158_20:	
  2382  0352                     i1l1699:	
  2383  0352  1683               	bsf	3,5	;RP0=1, select bank1
  2384  0353  1303               	bcf	3,6	;RP1=0, select bank1
  2385  0354  084D               	movf	_oldBtn3^(0+128),w
  2386  0355  1D03               	btfss	3,2
  2387  0356  2B58               	goto	u159_21
  2388  0357  2B59               	goto	u159_20
  2389  0358                     u159_21:	
  2390  0358  2B63               	goto	i1l157
  2391  0359                     u159_20:	
  2392  0359                     i1l1701:	
  2393                           
  2394                           ;main.c: 365:     {;main.c: 366:         stat3=!stat3;
  2395  0359  084C               	movf	_stat3^(0+128),w
  2396  035A  1903               	btfsc	3,2
  2397  035B  2B5D               	goto	u160_21
  2398  035C  2B5F               	goto	u160_20
  2399  035D                     u160_21:	
  2400  035D  3001               	movlw	1
  2401  035E  2B60               	goto	u161_20
  2402  035F                     u160_20:	
  2403  035F  3000               	movlw	0
  2404  0360                     u161_20:	
  2405  0360  00A0               	movwf	??_ISR^(0+128)
  2406  0361  0820               	movf	??_ISR^(0+128),w
  2407  0362  00CC               	movwf	_stat3^(0+128)
  2408  0363                     i1l157:	
  2409                           ;main.c: 368:     }
  2410                           
  2411                           
  2412                           ;main.c: 369:     oldBtn3 = !PORTBbits.RB5;
  2413  0363  1003               	clrc
  2414  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2415  0365  1E86               	btfss	6,5	;volatile
  2416  0366  1403               	setc
  2417  0367  3000               	movlw	0
  2418  0368  1803               	btfsc	3,0
  2419  0369  3001               	movlw	1
  2420  036A  1683               	bsf	3,5	;RP0=1, select bank1
  2421  036B  1303               	bcf	3,6	;RP1=0, select bank1
  2422  036C  00CD               	movwf	_oldBtn3^(0+128)
  2423  036D                     i1l1703:	
  2424                           
  2425                           ;main.c: 373:    if(RCIF)
  2426  036D  1283               	bcf	3,5	;RP0=0, select bank0
  2427  036E  1303               	bcf	3,6	;RP1=0, select bank0
  2428  036F  1E8C               	btfss	12,5	;volatile
  2429  0370  2B72               	goto	u162_21
  2430  0371  2B73               	goto	u162_20
  2431  0372                     u162_21:	
  2432  0372  2B80               	goto	i1l1711
  2433  0373                     u162_20:	
  2434  0373                     i1l159:	
  2435  0373  1E8C               	btfss	12,5	;volatile
  2436  0374  2B76               	goto	u163_21
  2437  0375  2B77               	goto	u163_20
  2438  0376                     u163_21:	
  2439  0376  2B73               	goto	i1l159
  2440  0377                     u163_20:	
  2441  0377                     i1l161:	
  2442                           
  2443                           ;main.c: 376:         RCIF = 0;
  2444  0377  128C               	bcf	12,5	;volatile
  2445  0378                     i1l1707:	
  2446                           
  2447                           ;main.c: 377:         datoSeriale = RCREG;
  2448  0378  081A               	movf	26,w	;volatile
  2449  0379  1683               	bsf	3,5	;RP0=1, select bank1
  2450  037A  1303               	bcf	3,6	;RP1=0, select bank1
  2451  037B  00A0               	movwf	??_ISR^(0+128)
  2452  037C  0820               	movf	??_ISR^(0+128),w
  2453  037D  00D4               	movwf	_datoSeriale^(0+128)
  2454  037E                     i1l1709:	
  2455                           
  2456                           ;main.c: 378:         received = 1;
  2457  037E  01D5               	clrf	_received^(0+128)
  2458  037F  0AD5               	incf	_received^(0+128),f
  2459  0380                     i1l1711:	
  2460                           
  2461                           ;main.c: 381:    if (INTCON&0x04)
  2462  0380  1D0B               	btfss	11,2	;volatile
  2463  0381  2B83               	goto	u164_21
  2464  0382  2B84               	goto	u164_20
  2465  0383                     u164_21:	
  2466  0383  2C19               	goto	i1l173
  2467  0384                     u164_20:	
  2468  0384                     i1l1713:	
  2469                           
  2470                           ;main.c: 382:     {;main.c: 383:         INTCON &= ~0x04;
  2471  0384  30FB               	movlw	251
  2472  0385  1683               	bsf	3,5	;RP0=1, select bank1
  2473  0386  1303               	bcf	3,6	;RP1=0, select bank1
  2474  0387  00A0               	movwf	??_ISR^(0+128)
  2475  0388  0820               	movf	??_ISR^(0+128),w
  2476  0389  058B               	andwf	11,f	;volatile
  2477  038A                     i1l1715:	
  2478                           
  2479                           ;main.c: 384:         TMR0 = 6;
  2480  038A  3006               	movlw	6
  2481  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2482  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2483  038D  0081               	movwf	1	;volatile
  2484  038E                     i1l1717:	
  2485                           
  2486                           ;main.c: 385:         count++;
  2487  038E  3001               	movlw	1
  2488  038F  1683               	bsf	3,5	;RP0=1, select bank1
  2489  0390  1303               	bcf	3,6	;RP1=0, select bank1
  2490  0391  07C8               	addwf	_count^(0+128),f
  2491  0392  1803               	skipnc
  2492  0393  0AC9               	incf	(_count+1)^(0+128),f
  2493  0394  3000               	movlw	0
  2494  0395  07C9               	addwf	(_count+1)^(0+128),f
  2495                           
  2496                           ;main.c: 386:         if (count == 125)
  2497  0396  307D               	movlw	125
  2498  0397  0648               	xorwf	_count^(0+128),w
  2499  0398  0449               	iorwf	(_count+1)^(0+128),w
  2500  0399  1D03               	btfss	3,2
  2501  039A  2B9C               	goto	u165_21
  2502  039B  2B9D               	goto	u165_20
  2503  039C                     u165_21:	
  2504  039C  2C19               	goto	i1l173
  2505  039D                     u165_20:	
  2506  039D                     i1l1719:	
  2507                           
  2508                           ;main.c: 387:         {;main.c: 389:             if(semafori[0]==statoSemafori[0])
  2509  039D  0842               	movf	_semafori^(0+128),w
  2510  039E  065E               	xorwf	_statoSemafori^(0+128),w
  2511  039F  1D03               	skipz
  2512  03A0  2BA2               	goto	u166_21
  2513  03A1  2BA3               	goto	u166_20
  2514  03A2                     u166_21:	
  2515  03A2  2BB0               	goto	i1l1723
  2516  03A3                     u166_20:	
  2517  03A3                     i1l1721:	
  2518                           
  2519                           ;main.c: 390:                 print_Countdown(countDown, 0);
  2520  03A3  087D               	movf	_countDown,w
  2521  03A4  00A0               	movwf	??_ISR^(0+128)
  2522  03A5  01A1               	clrf	(??_ISR^(0+128)+1)
  2523  03A6  0820               	movf	??_ISR^(0+128),w
  2524  03A7  00F9               	movwf	print_Countdown@num
  2525  03A8  0821               	movf	(??_ISR+1)^(0+128),w
  2526  03A9  00FA               	movwf	print_Countdown@num+1
  2527  03AA  01FB               	clrf	print_Countdown@statoSem
  2528  03AB  120A  118A  21D1  120A  118A  	fcall	_print_Countdown
  2529  03B0                     i1l1723:	
  2530                           
  2531                           ;main.c: 391:             if(semafori[0]==statoSemafori[1])
  2532  03B0  1683               	bsf	3,5	;RP0=1, select bank1
  2533  03B1  1303               	bcf	3,6	;RP1=0, select bank1
  2534  03B2  085F               	movf	(_statoSemafori^(0+128)+1),w
  2535  03B3  0642               	xorwf	_semafori^(0+128),w
  2536  03B4  1D03               	skipz
  2537  03B5  2BB7               	goto	u167_21
  2538  03B6  2BB8               	goto	u167_20
  2539  03B7                     u167_21:	
  2540  03B7  2BC6               	goto	i1l1727
  2541  03B8                     u167_20:	
  2542  03B8                     i1l1725:	
  2543                           
  2544                           ;main.c: 392:                 print_Countdown(countDown, 1);
  2545  03B8  087D               	movf	_countDown,w
  2546  03B9  00A0               	movwf	??_ISR^(0+128)
  2547  03BA  01A1               	clrf	(??_ISR^(0+128)+1)
  2548  03BB  0820               	movf	??_ISR^(0+128),w
  2549  03BC  00F9               	movwf	print_Countdown@num
  2550  03BD  0821               	movf	(??_ISR+1)^(0+128),w
  2551  03BE  00FA               	movwf	print_Countdown@num+1
  2552  03BF  01FB               	clrf	print_Countdown@statoSem
  2553  03C0  0AFB               	incf	print_Countdown@statoSem,f
  2554  03C1  120A  118A  21D1  120A  118A  	fcall	_print_Countdown
  2555  03C6                     i1l1727:	
  2556                           
  2557                           ;main.c: 393:             if(semafori[0]==statoSemafori[2])
  2558  03C6  1683               	bsf	3,5	;RP0=1, select bank1
  2559  03C7  1303               	bcf	3,6	;RP1=0, select bank1
  2560  03C8  0860               	movf	(_statoSemafori^(0+128)+2),w
  2561  03C9  0642               	xorwf	_semafori^(0+128),w
  2562  03CA  1D03               	skipz
  2563  03CB  2BCD               	goto	u168_21
  2564  03CC  2BCE               	goto	u168_20
  2565  03CD                     u168_21:	
  2566  03CD  2BDE               	goto	i1l1731
  2567  03CE                     u168_20:	
  2568  03CE                     i1l1729:	
  2569                           
  2570                           ;main.c: 394:                 print_Countdown(countDown, 2);
  2571  03CE  087D               	movf	_countDown,w
  2572  03CF  00A0               	movwf	??_ISR^(0+128)
  2573  03D0  01A1               	clrf	(??_ISR^(0+128)+1)
  2574  03D1  0820               	movf	??_ISR^(0+128),w
  2575  03D2  00F9               	movwf	print_Countdown@num
  2576  03D3  0821               	movf	(??_ISR+1)^(0+128),w
  2577  03D4  00FA               	movwf	print_Countdown@num+1
  2578  03D5  3002               	movlw	2
  2579  03D6  00A2               	movwf	(??_ISR+2)^(0+128)
  2580  03D7  0822               	movf	(??_ISR+2)^(0+128),w
  2581  03D8  00FB               	movwf	print_Countdown@statoSem
  2582  03D9  120A  118A  21D1  120A  118A  	fcall	_print_Countdown
  2583  03DE                     i1l1731:	
  2584                           
  2585                           ;main.c: 396:             if(flagGiallo==1)
  2586  03DE  1683               	bsf	3,5	;RP0=1, select bank1
  2587  03DF  1303               	bcf	3,6	;RP1=0, select bank1
  2588  03E0  034A               	decf	_flagGiallo^(0+128),w
  2589  03E1  1D03               	btfss	3,2
  2590  03E2  2BE4               	goto	u169_21
  2591  03E3  2BE5               	goto	u169_20
  2592  03E4                     u169_21:	
  2593  03E4  2BFE               	goto	i1l1739
  2594  03E5                     u169_20:	
  2595  03E5                     i1l1733:	
  2596                           
  2597                           ;main.c: 397:             {;main.c: 398:                 f++;
  2598  03E5  3001               	movlw	1
  2599  03E6  07C6               	addwf	_f^(0+128),f
  2600  03E7  1803               	skipnc
  2601  03E8  0AC7               	incf	(_f+1)^(0+128),f
  2602  03E9  3000               	movlw	0
  2603  03EA  07C7               	addwf	(_f+1)^(0+128),f
  2604  03EB                     i1l1735:	
  2605                           
  2606                           ;main.c: 399:                 if(f>=3)
  2607  03EB  0847               	movf	(_f+1)^(0+128),w
  2608  03EC  3A80               	xorlw	128
  2609  03ED  00FF               	movwf	btemp+1
  2610  03EE  3080               	movlw	128
  2611  03EF  027F               	subwf	btemp+1,w
  2612  03F0  1D03               	skipz
  2613  03F1  2BF4               	goto	u170_25
  2614  03F2  3003               	movlw	3
  2615  03F3  0246               	subwf	_f^(0+128),w
  2616  03F4                     u170_25:	
  2617  03F4  1C03               	skipc
  2618  03F5  2BF7               	goto	u170_21
  2619  03F6  2BF8               	goto	u170_20
  2620  03F7                     u170_21:	
  2621  03F7  2C15               	goto	i1l1749
  2622  03F8                     u170_20:	
  2623  03F8                     i1l1737:	
  2624                           
  2625                           ;main.c: 400:                 {;main.c: 401:                     flagGiallo=0;
  2626  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2627  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2628  03FA  01CA               	clrf	_flagGiallo^(0+128)
  2629                           
  2630                           ;main.c: 402:                     f=0;
  2631  03FB  01C6               	clrf	_f^(0+128)
  2632  03FC  01C7               	clrf	(_f+1)^(0+128)
  2633  03FD  2C15               	goto	i1l1749
  2634  03FE                     i1l1739:	
  2635                           
  2636                           ;main.c: 406:             {;main.c: 407:                 countDown--;
  2637  03FE  3001               	movlw	1
  2638  03FF  02FD               	subwf	_countDown,f
  2639                           
  2640                           ;main.c: 408:                 if(countDown==0)
  2641  0400  087D               	movf	_countDown,w
  2642  0401  1D03               	btfss	3,2
  2643  0402  2C04               	goto	u171_21
  2644  0403  2C05               	goto	u171_20
  2645  0404                     u171_21:	
  2646  0404  2C15               	goto	i1l1749
  2647  0405                     u171_20:	
  2648  0405                     i1l1741:	
  2649                           
  2650                           ;main.c: 409:                 {;main.c: 410:                     scattoSemafori=1;
  2651  0405  01CB               	clrf	_scattoSemafori^(0+128)
  2652  0406  0ACB               	incf	_scattoSemafori^(0+128),f
  2653  0407                     i1l1743:	
  2654                           
  2655                           ;main.c: 411:                     if(temporizzazione!=0)
  2656  0407  087C               	movf	_temporizzazione,w
  2657  0408  1903               	btfsc	3,2
  2658  0409  2C0B               	goto	u172_21
  2659  040A  2C0C               	goto	u172_20
  2660  040B                     u172_21:	
  2661  040B  2C11               	goto	i1l1747
  2662  040C                     u172_20:	
  2663  040C                     i1l1745:	
  2664                           
  2665                           ;main.c: 412:                         countDown=temporizzazione;
  2666  040C  087C               	movf	_temporizzazione,w
  2667  040D  00A0               	movwf	??_ISR^(0+128)
  2668  040E  0820               	movf	??_ISR^(0+128),w
  2669  040F  00FD               	movwf	_countDown
  2670  0410  2C15               	goto	i1l1749
  2671  0411                     i1l1747:	
  2672                           
  2673                           ;main.c: 414:                         countDown=5;
  2674  0411  3005               	movlw	5
  2675  0412  00A0               	movwf	??_ISR^(0+128)
  2676  0413  0820               	movf	??_ISR^(0+128),w
  2677  0414  00FD               	movwf	_countDown
  2678  0415                     i1l1749:	
  2679                           
  2680                           ;main.c: 423:             count = 0;
  2681  0415  1683               	bsf	3,5	;RP0=1, select bank1
  2682  0416  1303               	bcf	3,6	;RP1=0, select bank1
  2683  0417  01C8               	clrf	_count^(0+128)
  2684  0418  01C9               	clrf	(_count+1)^(0+128)
  2685  0419                     i1l173:	
  2686  0419  1683               	bsf	3,5	;RP0=1, select bank1
  2687  041A  1303               	bcf	3,6	;RP1=0, select bank1
  2688  041B  0826               	movf	(??_ISR+6)^(0+128),w
  2689  041C  1283               	bcf	3,5	;RP0=0, select bank0
  2690  041D  1303               	bcf	3,6	;RP1=0, select bank0
  2691  041E  00FF               	movwf	btemp+1
  2692  041F  1683               	bsf	3,5	;RP0=1, select bank1
  2693  0420  1303               	bcf	3,6	;RP1=0, select bank1
  2694  0421  0825               	movf	(??_ISR+5)^(0+128),w
  2695  0422  008A               	movwf	10
  2696  0423  0824               	movf	(??_ISR+4)^(0+128),w
  2697  0424  0084               	movwf	4
  2698  0425  0E23               	swapf	(??_ISR+3)^(0+128),w
  2699  0426  0083               	movwf	3
  2700  0427  0EFE               	swapf	btemp,f
  2701  0428  0E7E               	swapf	btemp,w
  2702  0429  0009               	retfie
  2703  042A                     __end_of_ISR:	
  2704                           
  2705                           	psect	intentry
  2706  0004                     __pintentry:	
  2707                           ;incstack = 0
  2708                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2709                           
  2710  0004                     interrupt_function:	
  2711  007E                     saved_w	set	btemp
  2712  0004  00FE               	movwf	btemp
  2713  0005  0E03               	swapf	3,w
  2714  0006  1683               	bsf	3,5	;RP0=1, select bank1
  2715  0007  1303               	bcf	3,6	;RP1=0, select bank1
  2716  0008  00A3               	movwf	(??_ISR+3)^(0+128)
  2717  0009  0804               	movf	4,w
  2718  000A  00A4               	movwf	(??_ISR+4)^(0+128)
  2719  000B  080A               	movf	10,w
  2720  000C  00A5               	movwf	(??_ISR+5)^(0+128)
  2721  000D  1283               	bcf	3,5	;RP0=0, select bank0
  2722  000E  1303               	bcf	3,6	;RP1=0, select bank0
  2723  000F  087F               	movf	btemp+1,w
  2724  0010  1683               	bsf	3,5	;RP0=1, select bank1
  2725  0011  1303               	bcf	3,6	;RP1=0, select bank1
  2726  0012  00A6               	movwf	(??_ISR+6)^(0+128)
  2727  0013  120A  118A  2B0E   	ljmp	_ISR
  2728                           
  2729                           	psect	text10
  2730  01D1                     __ptext10:	
  2731 ;; *************** function _print_Countdown *****************
  2732 ;; Defined at:
  2733 ;;		line 525 in file "main.c"
  2734 ;; Parameters:    Size  Location     Type
  2735 ;;  num             2    9[COMMON] int 
  2736 ;;  statoSem        1   11[COMMON] unsigned char 
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;  secondStr      17   38[BANK0 ] unsigned char [17]
  2739 ;;  secondStr      17   21[BANK0 ] unsigned char [17]
  2740 ;;  secondStr      17    4[BANK0 ] unsigned char [17]
  2741 ;;  firstStr       17   55[BANK0 ] unsigned char [17]
  2742 ;;  resultNum       3   72[BANK0 ] unsigned char [3]
  2743 ;;  i               2   77[BANK0 ] int 
  2744 ;;  length          2   75[BANK0 ] int 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2754 ;;      Params:         3       0       0       0       0
  2755 ;;      Locals:         0      75       0       0       0
  2756 ;;      Temps:          0       4       0       0       0
  2757 ;;      Totals:         3      79       0       0       0
  2758 ;;Total ram usage:       82 bytes
  2759 ;; Hardware stack levels used:    1
  2760 ;; Hardware stack levels required when called:    2
  2761 ;; This function calls:
  2762 ;;		___awdiv
  2763 ;;		___awmod
  2764 ;;		_send_string
  2765 ;;		i1_send_cmd
  2766 ;; This function is called by:
  2767 ;;		_ISR
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           
  2772                           ;psect for function _print_Countdown
  2773  01D1                     _print_Countdown:	
  2774  01D1                     i1l1533:	
  2775                           ;incstack = 0
  2776                           ; Regs used in _print_Countdown: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2777                           
  2778                           
  2779                           ;main.c: 525: void print_Countdown(int num, char statoSem);main.c: 526: {;main.c: 527:  
      +                             char resultNum[3], firstStr[17] = "Tempo:          ";
  2780  01D1  3057               	movlw	print_Countdown@firstStr& (0+255)
  2781  01D2  0084               	movwf	4
  2782  01D3  30C3               	movlw	low print_Countdown@F930
  2783  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  2784  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  2785  01D6  00A0               	movwf	??_print_Countdown
  2786  01D7  0804               	movf	4,w
  2787  01D8  00A1               	movwf	??_print_Countdown+1
  2788  01D9  3011               	movlw	17
  2789  01DA  00A2               	movwf	??_print_Countdown+2
  2790  01DB                     u122_20:	
  2791  01DB  0820               	movf	??_print_Countdown,w
  2792  01DC  0084               	movwf	4
  2793  01DD  1783               	bsf	3,7	;select IRP bank3
  2794  01DE  0800               	movf	0,w
  2795  01DF  00A3               	movwf	??_print_Countdown+3
  2796  01E0  0AA0               	incf	??_print_Countdown,f
  2797  01E1  0821               	movf	??_print_Countdown+1,w
  2798  01E2  0084               	movwf	4
  2799  01E3  1383               	bcf	3,7	;select IRP bank0
  2800  01E4  0823               	movf	??_print_Countdown+3,w
  2801  01E5  0080               	movwf	0
  2802  01E6  0AA1               	incf	??_print_Countdown+1,f
  2803  01E7  0BA2               	decfsz	??_print_Countdown+2,f
  2804  01E8  29DB               	goto	u122_20
  2805  01E9                     i1l1535:	
  2806                           
  2807                           ;main.c: 528:     int length = 2, i = 0;
  2808  01E9  3002               	movlw	2
  2809  01EA  00EB               	movwf	print_Countdown@length
  2810  01EB  3000               	movlw	0
  2811  01EC  00EC               	movwf	print_Countdown@length+1
  2812  01ED                     i1l1537:	
  2813  01ED  01ED               	clrf	print_Countdown@i
  2814  01EE  01EE               	clrf	print_Countdown@i+1
  2815  01EF                     i1l1539:	
  2816                           
  2817                           ;main.c: 530:     if(num < 10)
  2818  01EF  087A               	movf	print_Countdown@num+1,w
  2819  01F0  3A80               	xorlw	128
  2820  01F1  00FF               	movwf	btemp+1
  2821  01F2  3080               	movlw	128
  2822  01F3  027F               	subwf	btemp+1,w
  2823  01F4  1D03               	skipz
  2824  01F5  29F8               	goto	u123_25
  2825  01F6  300A               	movlw	10
  2826  01F7  0279               	subwf	print_Countdown@num,w
  2827  01F8                     u123_25:	
  2828  01F8  1803               	skipnc
  2829  01F9  29FB               	goto	u123_21
  2830  01FA  29FC               	goto	u123_20
  2831  01FB                     u123_21:	
  2832  01FB  2A03               	goto	i1l1543
  2833  01FC                     u123_20:	
  2834  01FC                     i1l1541:	
  2835                           
  2836                           ;main.c: 531:         length = 1;
  2837  01FC  3001               	movlw	1
  2838  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  2839  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  2840  01FF  00EB               	movwf	print_Countdown@length
  2841  0200  3000               	movlw	0
  2842  0201  00EC               	movwf	print_Countdown@length+1
  2843  0202  2A10               	goto	i1l1547
  2844  0203                     i1l1543:	
  2845  0203  3064               	movlw	100
  2846  0204  0679               	xorwf	print_Countdown@num,w
  2847  0205  047A               	iorwf	print_Countdown@num+1,w
  2848  0206  1D03               	btfss	3,2
  2849  0207  2A09               	goto	u124_21
  2850  0208  2A0A               	goto	u124_20
  2851  0209                     u124_21:	
  2852  0209  2A10               	goto	i1l1547
  2853  020A                     u124_20:	
  2854  020A                     i1l1545:	
  2855                           
  2856                           ;main.c: 533:         length = 3;
  2857  020A  3003               	movlw	3
  2858  020B  1283               	bcf	3,5	;RP0=0, select bank0
  2859  020C  1303               	bcf	3,6	;RP1=0, select bank0
  2860  020D  00EB               	movwf	print_Countdown@length
  2861  020E  3000               	movlw	0
  2862  020F  00EC               	movwf	print_Countdown@length+1
  2863  0210                     i1l1547:	
  2864                           
  2865                           ;main.c: 535:     if(num != 0)
  2866  0210  0879               	movf	print_Countdown@num,w
  2867  0211  047A               	iorwf	print_Countdown@num+1,w
  2868  0212  1903               	btfsc	3,2
  2869  0213  2A15               	goto	u125_21
  2870  0214  2A16               	goto	u125_20
  2871  0215                     u125_21:	
  2872  0215  2A4F               	goto	i1l1559
  2873  0216                     u125_20:	
  2874  0216  2A48               	goto	i1l1557
  2875  0217                     i1l1551:	
  2876                           
  2877                           ;main.c: 538:         {;main.c: 539:             resultNum[i] = num%10 + '0';
  2878  0217  300A               	movlw	10
  2879  0218  00F0               	movwf	___awmod@divisor
  2880  0219  3000               	movlw	0
  2881  021A  00F1               	movwf	___awmod@divisor+1
  2882  021B  087A               	movf	print_Countdown@num+1,w
  2883  021C  00F3               	movwf	___awmod@dividend+1
  2884  021D  0879               	movf	print_Countdown@num,w
  2885  021E  00F2               	movwf	___awmod@dividend
  2886  021F  120A  118A  252E  120A  118A  	fcall	___awmod
  2887  0224  0870               	movf	?___awmod,w
  2888  0225  3E30               	addlw	48
  2889  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2890  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2891  0228  00A0               	movwf	??_print_Countdown
  2892  0229  086D               	movf	print_Countdown@i,w
  2893  022A  3E68               	addlw	(low (print_Countdown@resultNum| 0))& (0+255)
  2894  022B  0084               	movwf	4
  2895  022C  0820               	movf	??_print_Countdown,w
  2896  022D  1383               	bcf	3,7	;select IRP bank0
  2897  022E  0080               	movwf	0
  2898  022F                     i1l1553:	
  2899                           
  2900                           ;main.c: 540:             num /= 10;
  2901  022F  300A               	movlw	10
  2902  0230  00F0               	movwf	___awdiv@divisor
  2903  0231  3000               	movlw	0
  2904  0232  00F1               	movwf	___awdiv@divisor+1
  2905  0233  087A               	movf	print_Countdown@num+1,w
  2906  0234  00F3               	movwf	___awdiv@dividend+1
  2907  0235  0879               	movf	print_Countdown@num,w
  2908  0236  00F2               	movwf	___awdiv@dividend
  2909  0237  120A  118A  24C7  120A  118A  	fcall	___awdiv
  2910  023C  0871               	movf	?___awdiv+1,w
  2911  023D  00FA               	movwf	print_Countdown@num+1
  2912  023E  0870               	movf	?___awdiv,w
  2913  023F  00F9               	movwf	print_Countdown@num
  2914  0240                     i1l1555:	
  2915                           
  2916                           ;main.c: 541:             i++;
  2917  0240  3001               	movlw	1
  2918  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2919  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2920  0243  07ED               	addwf	print_Countdown@i,f
  2921  0244  1803               	skipnc
  2922  0245  0AEE               	incf	print_Countdown@i+1,f
  2923  0246  3000               	movlw	0
  2924  0247  07EE               	addwf	print_Countdown@i+1,f
  2925  0248                     i1l1557:	
  2926                           
  2927                           ;main.c: 537:         while(num)
  2928  0248  0879               	movf	print_Countdown@num,w
  2929  0249  047A               	iorwf	print_Countdown@num+1,w
  2930  024A  1D03               	btfss	3,2
  2931  024B  2A4D               	goto	u126_21
  2932  024C  2A4E               	goto	u126_20
  2933  024D                     u126_21:	
  2934  024D  2A17               	goto	i1l1551
  2935  024E                     u126_20:	
  2936  024E  2A55               	goto	i1l1561
  2937  024F                     i1l1559:	
  2938                           
  2939                           ;main.c: 545:     {;main.c: 546:         resultNum[0] = '0';
  2940  024F  3030               	movlw	48
  2941  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2942  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2943  0252  00A0               	movwf	??_print_Countdown
  2944  0253  0820               	movf	??_print_Countdown,w
  2945  0254  00E8               	movwf	print_Countdown@resultNum
  2946  0255                     i1l1561:	
  2947                           
  2948                           ;main.c: 549:     for(i=0; i<length; i++)
  2949  0255  1283               	bcf	3,5	;RP0=0, select bank0
  2950  0256  1303               	bcf	3,6	;RP1=0, select bank0
  2951  0257  01ED               	clrf	print_Countdown@i
  2952  0258  01EE               	clrf	print_Countdown@i+1
  2953  0259  2A6E               	goto	i1l1567
  2954  025A                     i1l1563:	
  2955                           
  2956                           ;main.c: 550:     {;main.c: 551:         firstStr[13-i] = resultNum[i];
  2957  025A  1283               	bcf	3,5	;RP0=0, select bank0
  2958  025B  1303               	bcf	3,6	;RP1=0, select bank0
  2959  025C  086D               	movf	print_Countdown@i,w
  2960  025D  3E68               	addlw	(low (print_Countdown@resultNum| 0))& (0+255)
  2961  025E  0084               	movwf	4
  2962  025F  1383               	bcf	3,7	;select IRP bank0
  2963  0260  0800               	movf	0,w
  2964  0261  00A0               	movwf	??_print_Countdown
  2965  0262  086D               	movf	print_Countdown@i,w
  2966  0263  3C0D               	sublw	13
  2967  0264  3E57               	addlw	(low (print_Countdown@firstStr| 0))& (0+255)
  2968  0265  0084               	movwf	4
  2969  0266  0820               	movf	??_print_Countdown,w
  2970  0267  0080               	movwf	0
  2971  0268                     i1l1565:	
  2972                           
  2973                           ;main.c: 552:     }
  2974  0268  3001               	movlw	1
  2975  0269  07ED               	addwf	print_Countdown@i,f
  2976  026A  1803               	skipnc
  2977  026B  0AEE               	incf	print_Countdown@i+1,f
  2978  026C  3000               	movlw	0
  2979  026D  07EE               	addwf	print_Countdown@i+1,f
  2980  026E                     i1l1567:	
  2981  026E  086E               	movf	print_Countdown@i+1,w
  2982  026F  3A80               	xorlw	128
  2983  0270  00A0               	movwf	??_print_Countdown
  2984  0271  086C               	movf	print_Countdown@length+1,w
  2985  0272  3A80               	xorlw	128
  2986  0273  0220               	subwf	??_print_Countdown,w
  2987  0274  1D03               	skipz
  2988  0275  2A78               	goto	u127_25
  2989  0276  086B               	movf	print_Countdown@length,w
  2990  0277  026D               	subwf	print_Countdown@i,w
  2991  0278                     u127_25:	
  2992  0278  1C03               	skipc
  2993  0279  2A7B               	goto	u127_21
  2994  027A  2A7C               	goto	u127_20
  2995  027B                     u127_21:	
  2996  027B  2A5A               	goto	i1l1563
  2997  027C                     u127_20:	
  2998  027C                     i1l1569:	
  2999                           
  3000                           ;main.c: 554:     send_cmd(0x01);
  3001  027C  3001               	movlw	1
  3002  027D  120A  118A  26C7  120A  118A  	fcall	i1_send_cmd
  3003                           
  3004                           ;main.c: 555:     send_cmd(0xC0);
  3005  0282  30C0               	movlw	192
  3006  0283  120A  118A  26C7  120A  118A  	fcall	i1_send_cmd
  3007  0288                     i1l1571:	
  3008                           
  3009                           ;main.c: 556:     if(statoSem==0)
  3010  0288  087B               	movf	print_Countdown@statoSem,w
  3011  0289  1D03               	btfss	3,2
  3012  028A  2A8C               	goto	u128_21
  3013  028B  2A8D               	goto	u128_20
  3014  028C                     u128_21:	
  3015  028C  2AAB               	goto	i1l1577
  3016  028D                     u128_20:	
  3017  028D                     i1l1573:	
  3018                           
  3019                           ;main.c: 557:     {;main.c: 558:        char secondStr[17] = "Sem 0:     Verde";
  3020  028D  3024               	movlw	print_Countdown@secondStr& (0+255)
  3021  028E  0084               	movwf	4
  3022  028F  30B2               	movlw	low print_Countdown@F934
  3023  0290  1283               	bcf	3,5	;RP0=0, select bank0
  3024  0291  1303               	bcf	3,6	;RP1=0, select bank0
  3025  0292  00A0               	movwf	??_print_Countdown
  3026  0293  0804               	movf	4,w
  3027  0294  00A1               	movwf	??_print_Countdown+1
  3028  0295  3011               	movlw	17
  3029  0296  00A2               	movwf	??_print_Countdown+2
  3030  0297                     u129_20:	
  3031  0297  0820               	movf	??_print_Countdown,w
  3032  0298  0084               	movwf	4
  3033  0299  1783               	bsf	3,7	;select IRP bank3
  3034  029A  0800               	movf	0,w
  3035  029B  00A3               	movwf	??_print_Countdown+3
  3036  029C  0AA0               	incf	??_print_Countdown,f
  3037  029D  0821               	movf	??_print_Countdown+1,w
  3038  029E  0084               	movwf	4
  3039  029F  1383               	bcf	3,7	;select IRP bank0
  3040  02A0  0823               	movf	??_print_Countdown+3,w
  3041  02A1  0080               	movwf	0
  3042  02A2  0AA1               	incf	??_print_Countdown+1,f
  3043  02A3  0BA2               	decfsz	??_print_Countdown+2,f
  3044  02A4  2A97               	goto	u129_20
  3045  02A5                     i1l1575:	
  3046                           
  3047                           ;main.c: 559:        send_string(secondStr);
  3048  02A5  3024               	movlw	(low (print_Countdown@secondStr| 0))& (0+255)
  3049  02A6  120A  118A  26A6  120A  118A  	fcall	_send_string
  3050  02AB                     i1l1577:	
  3051                           
  3052                           ;main.c: 561:     if(statoSem==1)
  3053  02AB  037B               	decf	print_Countdown@statoSem,w
  3054  02AC  1D03               	btfss	3,2
  3055  02AD  2AAF               	goto	u130_21
  3056  02AE  2AB0               	goto	u130_20
  3057  02AF                     u130_21:	
  3058  02AF  2ACE               	goto	i1l1583
  3059  02B0                     u130_20:	
  3060  02B0                     i1l1579:	
  3061                           
  3062                           ;main.c: 562:     {;main.c: 563:        char secondStr[17] = "Sem 0:    Giallo";
  3063  02B0  3035               	movlw	print_Countdown@secondStr_408& (0+255)
  3064  02B1  0084               	movwf	4
  3065  02B2  30A1               	movlw	low print_Countdown@F936
  3066  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  3067  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  3068  02B5  00A0               	movwf	??_print_Countdown
  3069  02B6  0804               	movf	4,w
  3070  02B7  00A1               	movwf	??_print_Countdown+1
  3071  02B8  3011               	movlw	17
  3072  02B9  00A2               	movwf	??_print_Countdown+2
  3073  02BA                     u131_20:	
  3074  02BA  0820               	movf	??_print_Countdown,w
  3075  02BB  0084               	movwf	4
  3076  02BC  1783               	bsf	3,7	;select IRP bank3
  3077  02BD  0800               	movf	0,w
  3078  02BE  00A3               	movwf	??_print_Countdown+3
  3079  02BF  0AA0               	incf	??_print_Countdown,f
  3080  02C0  0821               	movf	??_print_Countdown+1,w
  3081  02C1  0084               	movwf	4
  3082  02C2  1383               	bcf	3,7	;select IRP bank0
  3083  02C3  0823               	movf	??_print_Countdown+3,w
  3084  02C4  0080               	movwf	0
  3085  02C5  0AA1               	incf	??_print_Countdown+1,f
  3086  02C6  0BA2               	decfsz	??_print_Countdown+2,f
  3087  02C7  2ABA               	goto	u131_20
  3088  02C8                     i1l1581:	
  3089                           
  3090                           ;main.c: 564:        send_string(secondStr);
  3091  02C8  3035               	movlw	(low (print_Countdown@secondStr_408| 0))& (0+255)
  3092  02C9  120A  118A  26A6  120A  118A  	fcall	_send_string
  3093  02CE                     i1l1583:	
  3094                           
  3095                           ;main.c: 566:     if(statoSem==2)
  3096  02CE  3002               	movlw	2
  3097  02CF  067B               	xorwf	print_Countdown@statoSem,w
  3098  02D0  1D03               	btfss	3,2
  3099  02D1  2AD3               	goto	u132_21
  3100  02D2  2AD4               	goto	u132_20
  3101  02D3                     u132_21:	
  3102  02D3  2AF2               	goto	i1l1589
  3103  02D4                     u132_20:	
  3104  02D4                     i1l1585:	
  3105                           
  3106                           ;main.c: 567:     {;main.c: 568:        char secondStr[17] = "Sem 0:     Rosso";
  3107  02D4  3046               	movlw	print_Countdown@secondStr_410& (0+255)
  3108  02D5  0084               	movwf	4
  3109  02D6  3090               	movlw	low print_Countdown@F938
  3110  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  3111  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  3112  02D9  00A0               	movwf	??_print_Countdown
  3113  02DA  0804               	movf	4,w
  3114  02DB  00A1               	movwf	??_print_Countdown+1
  3115  02DC  3011               	movlw	17
  3116  02DD  00A2               	movwf	??_print_Countdown+2
  3117  02DE                     u133_20:	
  3118  02DE  0820               	movf	??_print_Countdown,w
  3119  02DF  0084               	movwf	4
  3120  02E0  1783               	bsf	3,7	;select IRP bank3
  3121  02E1  0800               	movf	0,w
  3122  02E2  00A3               	movwf	??_print_Countdown+3
  3123  02E3  0AA0               	incf	??_print_Countdown,f
  3124  02E4  0821               	movf	??_print_Countdown+1,w
  3125  02E5  0084               	movwf	4
  3126  02E6  1383               	bcf	3,7	;select IRP bank0
  3127  02E7  0823               	movf	??_print_Countdown+3,w
  3128  02E8  0080               	movwf	0
  3129  02E9  0AA1               	incf	??_print_Countdown+1,f
  3130  02EA  0BA2               	decfsz	??_print_Countdown+2,f
  3131  02EB  2ADE               	goto	u133_20
  3132  02EC                     i1l1587:	
  3133                           
  3134                           ;main.c: 569:        send_string(secondStr);
  3135  02EC  3046               	movlw	(low (print_Countdown@secondStr_410| 0))& (0+255)
  3136  02ED  120A  118A  26A6  120A  118A  	fcall	_send_string
  3137  02F2                     i1l1589:	
  3138                           
  3139                           ;main.c: 573:     _delay((unsigned long)((100)*(32000000L/4000.0)));
  3140  02F2  3005               	movlw	5
  3141  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  3142  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  3143  02F5  00A2               	movwf	??_print_Countdown+2
  3144  02F6  300F               	movlw	15
  3145  02F7  00A1               	movwf	??_print_Countdown+1
  3146  02F8  30F0               	movlw	240
  3147  02F9  00A0               	movwf	??_print_Countdown
  3148  02FA                     u178_27:	
  3149  02FA  0BA0               	decfsz	??_print_Countdown,f
  3150  02FB  2AFA               	goto	u178_27
  3151  02FC  0BA1               	decfsz	??_print_Countdown+1,f
  3152  02FD  2AFA               	goto	u178_27
  3153  02FE  0BA2               	decfsz	??_print_Countdown+2,f
  3154  02FF  2AFA               	goto	u178_27
  3155  0300  0000               	nop
  3156                           
  3157                           ;main.c: 575:     send_cmd(0x80);
  3158  0301  3080               	movlw	128
  3159  0302  120A  118A  26C7  120A  118A  	fcall	i1_send_cmd
  3160  0307                     i1l1591:	
  3161                           
  3162                           ;main.c: 576:     send_string(firstStr);
  3163  0307  3057               	movlw	(low (print_Countdown@firstStr| 0))& (0+255)
  3164  0308  120A  118A  26A6  120A  118A  	fcall	_send_string
  3165  030D                     i1l227:	
  3166  030D  0008               	return
  3167  030E                     __end_of_print_Countdown:	
  3168                           
  3169                           	psect	text11
  3170  06C7                     __ptext11:	
  3171 ;; *************** function i1_send_cmd *****************
  3172 ;; Defined at:
  3173 ;;		line 606 in file "main.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;  command         1    wreg     unsigned char 
  3176 ;; Auto vars:     Size  Location     Type
  3177 ;;  command         1    2[COMMON] unsigned char 
  3178 ;; Return value:  Size  Location     Type
  3179 ;;                  1    wreg      void 
  3180 ;; Registers used:
  3181 ;;		wreg
  3182 ;; Tracked objects:
  3183 ;;		On entry : 0/0
  3184 ;;		On exit  : 0/0
  3185 ;;		Unchanged: 0/0
  3186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3187 ;;      Params:         0       0       0       0       0
  3188 ;;      Locals:         1       0       0       0       0
  3189 ;;      Temps:          2       0       0       0       0
  3190 ;;      Totals:         3       0       0       0       0
  3191 ;;Total ram usage:        3 bytes
  3192 ;; Hardware stack levels used:    1
  3193 ;; This function calls:
  3194 ;;		Nothing
  3195 ;; This function is called by:
  3196 ;;		_print_Countdown
  3197 ;; This function uses a non-reentrant model
  3198 ;;
  3199                           
  3200                           
  3201                           ;psect for function i1_send_cmd
  3202  06C7                     i1_send_cmd:	
  3203                           
  3204                           ;incstack = 0
  3205                           ; Regs used in i1_send_cmd: [wreg]
  3206                           ;i1send_cmd@command stored from wreg
  3207  06C7  00F2               	movwf	i1send_cmd@command
  3208  06C8                     i1l1479:	
  3209                           
  3210                           ;main.c: 606: void send_cmd(char command);main.c: 607: {;main.c: 608:     PORTEbits.RE1 
      +                          = 1;
  3211  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  3212  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  3213  06CA  1489               	bsf	9,1	;volatile
  3214  06CB                     i1l1481:	
  3215                           
  3216                           ;main.c: 609:     PORTD = command;
  3217  06CB  0872               	movf	i1send_cmd@command,w
  3218  06CC  0088               	movwf	8	;volatile
  3219  06CD                     i1l1483:	
  3220                           
  3221                           ;main.c: 610:     PORTEbits.RE2 = 0;
  3222  06CD  1109               	bcf	9,2	;volatile
  3223                           
  3224                           ;main.c: 611:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3225  06CE  3020               	movlw	32
  3226  06CF  00F1               	movwf	??i1_send_cmd+1
  3227  06D0  3029               	movlw	41
  3228  06D1  00F0               	movwf	??i1_send_cmd
  3229  06D2                     u179_27:	
  3230  06D2  0BF0               	decfsz	??i1_send_cmd,f
  3231  06D3  2ED2               	goto	u179_27
  3232  06D4  0BF1               	decfsz	??i1_send_cmd+1,f
  3233  06D5  2ED2               	goto	u179_27
  3234  06D6  2ED7               	nop2
  3235  06D7                     i1l1485:	
  3236                           
  3237                           ;main.c: 612:     PORTEbits.RE1 = 0;
  3238  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  3239  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  3240  06D9  1089               	bcf	9,1	;volatile
  3241                           
  3242                           ;main.c: 613:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3243  06DA  3020               	movlw	32
  3244  06DB  00F1               	movwf	??i1_send_cmd+1
  3245  06DC  3029               	movlw	41
  3246  06DD  00F0               	movwf	??i1_send_cmd
  3247  06DE                     u180_27:	
  3248  06DE  0BF0               	decfsz	??i1_send_cmd,f
  3249  06DF  2EDE               	goto	u180_27
  3250  06E0  0BF1               	decfsz	??i1_send_cmd+1,f
  3251  06E1  2EDE               	goto	u180_27
  3252  06E2  2EE3               	nop2
  3253  06E3                     i1l1487:	
  3254                           
  3255                           ;main.c: 614:     PORTEbits.RE1 = 1;
  3256  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  3257  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  3258  06E5  1489               	bsf	9,1	;volatile
  3259  06E6                     i1l239:	
  3260  06E6  0008               	return
  3261  06E7                     __end_ofi1_send_cmd:	
  3262                           
  3263                           	psect	text12
  3264  06A6                     __ptext12:	
  3265 ;; *************** function _send_string *****************
  3266 ;; Defined at:
  3267 ;;		line 583 in file "main.c"
  3268 ;; Parameters:    Size  Location     Type
  3269 ;;  str             1    wreg     PTR unsigned char 
  3270 ;;		 -> print_Countdown@secondStr_410(17), print_Countdown@secondStr_408(17), print_Countdown@secondStr(17), print_Count
      +down@firstStr(17), 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  str             1    6[COMMON] PTR unsigned char 
  3273 ;;		 -> print_Countdown@secondStr_410(17), print_Countdown@secondStr_408(17), print_Countdown@secondStr(17), print_Count
      +down@firstStr(17), 
  3274 ;;  i               2    4[COMMON] int 
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3284 ;;      Params:         0       0       0       0       0
  3285 ;;      Locals:         3       0       0       0       0
  3286 ;;      Temps:          1       0       0       0       0
  3287 ;;      Totals:         4       0       0       0       0
  3288 ;;Total ram usage:        4 bytes
  3289 ;; Hardware stack levels used:    1
  3290 ;; Hardware stack levels required when called:    1
  3291 ;; This function calls:
  3292 ;;		_send_data
  3293 ;; This function is called by:
  3294 ;;		_print_Countdown
  3295 ;; This function uses a non-reentrant model
  3296 ;;
  3297                           
  3298                           
  3299                           ;psect for function _send_string
  3300  06A6                     _send_string:	
  3301                           
  3302                           ;incstack = 0
  3303                           ; Regs used in _send_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3304                           ;send_string@str stored from wreg
  3305  06A6  00F6               	movwf	send_string@str
  3306  06A7                     i1l1349:	
  3307                           
  3308                           ;main.c: 583: void send_string(char *str);main.c: 584: {;main.c: 585:     int i = 0;
  3309  06A7  01F4               	clrf	send_string@i
  3310  06A8  01F5               	clrf	send_string@i+1
  3311                           
  3312                           ;main.c: 586:     while(str[i] != '\0')
  3313  06A9  2EBB               	goto	i1l1355
  3314  06AA                     i1l1351:	
  3315                           
  3316                           ;main.c: 587:     {;main.c: 588:         send_data(str[i]);
  3317  06AA  0874               	movf	send_string@i,w
  3318  06AB  0776               	addwf	send_string@str,w
  3319  06AC  00F3               	movwf	??_send_string
  3320  06AD  0873               	movf	??_send_string,w
  3321  06AE  0084               	movwf	4
  3322  06AF  0800               	movf	0,w
  3323  06B0  120A  118A  26E7  120A  118A  	fcall	_send_data
  3324  06B5                     i1l1353:	
  3325                           
  3326                           ;main.c: 589:         i++;
  3327  06B5  3001               	movlw	1
  3328  06B6  07F4               	addwf	send_string@i,f
  3329  06B7  1803               	skipnc
  3330  06B8  0AF5               	incf	send_string@i+1,f
  3331  06B9  3000               	movlw	0
  3332  06BA  07F5               	addwf	send_string@i+1,f
  3333  06BB                     i1l1355:	
  3334                           
  3335                           ;main.c: 586:     while(str[i] != '\0')
  3336  06BB  0874               	movf	send_string@i,w
  3337  06BC  0776               	addwf	send_string@str,w
  3338  06BD  00F3               	movwf	??_send_string
  3339  06BE  0873               	movf	??_send_string,w
  3340  06BF  0084               	movwf	4
  3341  06C0  1383               	bcf	3,7	;select IRP bank0
  3342  06C1  0800               	movf	0,w
  3343  06C2  1D03               	btfss	3,2
  3344  06C3  2EC5               	goto	u91_21
  3345  06C4  2EC6               	goto	u91_20
  3346  06C5                     u91_21:	
  3347  06C5  2EAA               	goto	i1l1351
  3348  06C6                     u91_20:	
  3349  06C6                     i1l233:	
  3350  06C6  0008               	return
  3351  06C7                     __end_of_send_string:	
  3352                           
  3353                           	psect	text13
  3354  06E7                     __ptext13:	
  3355 ;; *************** function _send_data *****************
  3356 ;; Defined at:
  3357 ;;		line 594 in file "main.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;  data            1    wreg     unsigned char 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;  data            1    2[COMMON] unsigned char 
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		wreg
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3371 ;;      Params:         0       0       0       0       0
  3372 ;;      Locals:         1       0       0       0       0
  3373 ;;      Temps:          2       0       0       0       0
  3374 ;;      Totals:         3       0       0       0       0
  3375 ;;Total ram usage:        3 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; This function calls:
  3378 ;;		Nothing
  3379 ;; This function is called by:
  3380 ;;		_send_string
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           
  3385                           ;psect for function _send_data
  3386  06E7                     _send_data:	
  3387                           
  3388                           ;incstack = 0
  3389                           ; Regs used in _send_data: [wreg]
  3390                           ;send_data@data stored from wreg
  3391  06E7  00F2               	movwf	send_data@data
  3392  06E8                     i1l1317:	
  3393                           
  3394                           ;main.c: 594: void send_data(char data);main.c: 595: {;main.c: 596:     PORTEbits.RE1 = 
      +                          1;
  3395  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  3396  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  3397  06EA  1489               	bsf	9,1	;volatile
  3398  06EB                     i1l1319:	
  3399                           
  3400                           ;main.c: 597:     PORTD = data;
  3401  06EB  0872               	movf	send_data@data,w
  3402  06EC  0088               	movwf	8	;volatile
  3403  06ED                     i1l1321:	
  3404                           
  3405                           ;main.c: 598:     PORTEbits.RE2 = 1;
  3406  06ED  1509               	bsf	9,2	;volatile
  3407                           
  3408                           ;main.c: 599:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3409  06EE  3020               	movlw	32
  3410  06EF  00F1               	movwf	??_send_data+1
  3411  06F0  3029               	movlw	41
  3412  06F1  00F0               	movwf	??_send_data
  3413  06F2                     u181_27:	
  3414  06F2  0BF0               	decfsz	??_send_data,f
  3415  06F3  2EF2               	goto	u181_27
  3416  06F4  0BF1               	decfsz	??_send_data+1,f
  3417  06F5  2EF2               	goto	u181_27
  3418  06F6  2EF7               	nop2
  3419  06F7                     i1l1323:	
  3420                           
  3421                           ;main.c: 600:     PORTEbits.RE1 = 0;
  3422  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  3423  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  3424  06F9  1089               	bcf	9,1	;volatile
  3425                           
  3426                           ;main.c: 601:     _delay((unsigned long)((3)*(32000000L/4000.0)));
  3427  06FA  3020               	movlw	32
  3428  06FB  00F1               	movwf	??_send_data+1
  3429  06FC  3029               	movlw	41
  3430  06FD  00F0               	movwf	??_send_data
  3431  06FE                     u182_27:	
  3432  06FE  0BF0               	decfsz	??_send_data,f
  3433  06FF  2EFE               	goto	u182_27
  3434  0700  0BF1               	decfsz	??_send_data+1,f
  3435  0701  2EFE               	goto	u182_27
  3436  0702  2F03               	nop2
  3437  0703                     i1l1325:	
  3438                           
  3439                           ;main.c: 602:     PORTEbits.RE1 = 1;
  3440  0703  1283               	bcf	3,5	;RP0=0, select bank0
  3441  0704  1303               	bcf	3,6	;RP1=0, select bank0
  3442  0705  1489               	bsf	9,1	;volatile
  3443  0706                     i1l236:	
  3444  0706  0008               	return
  3445  0707                     __end_of_send_data:	
  3446                           
  3447                           	psect	text14
  3448  052E                     __ptext14:	
  3449 ;; *************** function ___awmod *****************
  3450 ;; Defined at:
  3451 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  divisor         2    0[COMMON] int 
  3454 ;;  dividend        2    2[COMMON] int 
  3455 ;; Auto vars:     Size  Location     Type
  3456 ;;  sign            1    6[COMMON] unsigned char 
  3457 ;;  counter         1    5[COMMON] unsigned char 
  3458 ;; Return value:  Size  Location     Type
  3459 ;;                  2    0[COMMON] int 
  3460 ;; Registers used:
  3461 ;;		wreg, status,2, status,0
  3462 ;; Tracked objects:
  3463 ;;		On entry : 0/0
  3464 ;;		On exit  : 0/0
  3465 ;;		Unchanged: 0/0
  3466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3467 ;;      Params:         4       0       0       0       0
  3468 ;;      Locals:         2       0       0       0       0
  3469 ;;      Temps:          1       0       0       0       0
  3470 ;;      Totals:         7       0       0       0       0
  3471 ;;Total ram usage:        7 bytes
  3472 ;; Hardware stack levels used:    1
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		_print_Countdown
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           
  3481                           ;psect for function ___awmod
  3482  052E                     ___awmod:	
  3483  052E                     i1l1441:	
  3484                           ;incstack = 0
  3485                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3486                           
  3487  052E  01F6               	clrf	___awmod@sign
  3488  052F                     i1l1443:	
  3489  052F  1FF3               	btfss	___awmod@dividend+1,7
  3490  0530  2D32               	goto	u112_21
  3491  0531  2D33               	goto	u112_20
  3492  0532                     u112_21:	
  3493  0532  2D3A               	goto	i1l1449
  3494  0533                     u112_20:	
  3495  0533                     i1l1445:	
  3496  0533  09F2               	comf	___awmod@dividend,f
  3497  0534  09F3               	comf	___awmod@dividend+1,f
  3498  0535  0AF2               	incf	___awmod@dividend,f
  3499  0536  1903               	skipnz
  3500  0537  0AF3               	incf	___awmod@dividend+1,f
  3501  0538                     i1l1447:	
  3502  0538  01F6               	clrf	___awmod@sign
  3503  0539  0AF6               	incf	___awmod@sign,f
  3504  053A                     i1l1449:	
  3505  053A  1FF1               	btfss	___awmod@divisor+1,7
  3506  053B  2D3D               	goto	u113_21
  3507  053C  2D3E               	goto	u113_20
  3508  053D                     u113_21:	
  3509  053D  2D43               	goto	i1l1453
  3510  053E                     u113_20:	
  3511  053E                     i1l1451:	
  3512  053E  09F0               	comf	___awmod@divisor,f
  3513  053F  09F1               	comf	___awmod@divisor+1,f
  3514  0540  0AF0               	incf	___awmod@divisor,f
  3515  0541  1903               	skipnz
  3516  0542  0AF1               	incf	___awmod@divisor+1,f
  3517  0543                     i1l1453:	
  3518  0543  0870               	movf	___awmod@divisor,w
  3519  0544  0471               	iorwf	___awmod@divisor+1,w
  3520  0545  1903               	btfsc	3,2
  3521  0546  2D48               	goto	u114_21
  3522  0547  2D49               	goto	u114_20
  3523  0548                     u114_21:	
  3524  0548  2D78               	goto	i1l1471
  3525  0549                     u114_20:	
  3526  0549                     i1l1455:	
  3527  0549  01F5               	clrf	___awmod@counter
  3528  054A  0AF5               	incf	___awmod@counter,f
  3529  054B  2D57               	goto	i1l1461
  3530  054C                     i1l1457:	
  3531  054C  3001               	movlw	1
  3532  054D                     u115_25:	
  3533  054D  1003               	clrc
  3534  054E  0DF0               	rlf	___awmod@divisor,f
  3535  054F  0DF1               	rlf	___awmod@divisor+1,f
  3536  0550  3EFF               	addlw	-1
  3537  0551  1D03               	skipz
  3538  0552  2D4D               	goto	u115_25
  3539  0553                     i1l1459:	
  3540  0553  3001               	movlw	1
  3541  0554  00F4               	movwf	??___awmod
  3542  0555  0874               	movf	??___awmod,w
  3543  0556  07F5               	addwf	___awmod@counter,f
  3544  0557                     i1l1461:	
  3545  0557  1FF1               	btfss	___awmod@divisor+1,7
  3546  0558  2D5A               	goto	u116_21
  3547  0559  2D5B               	goto	u116_20
  3548  055A                     u116_21:	
  3549  055A  2D4C               	goto	i1l1457
  3550  055B                     u116_20:	
  3551  055B                     i1l1463:	
  3552  055B  0871               	movf	___awmod@divisor+1,w
  3553  055C  0273               	subwf	___awmod@dividend+1,w
  3554  055D  1D03               	skipz
  3555  055E  2D61               	goto	u117_25
  3556  055F  0870               	movf	___awmod@divisor,w
  3557  0560  0272               	subwf	___awmod@dividend,w
  3558  0561                     u117_25:	
  3559  0561  1C03               	skipc
  3560  0562  2D64               	goto	u117_21
  3561  0563  2D65               	goto	u117_20
  3562  0564                     u117_21:	
  3563  0564  2D6B               	goto	i1l1467
  3564  0565                     u117_20:	
  3565  0565                     i1l1465:	
  3566  0565  0870               	movf	___awmod@divisor,w
  3567  0566  02F2               	subwf	___awmod@dividend,f
  3568  0567  0871               	movf	___awmod@divisor+1,w
  3569  0568  1C03               	skipc
  3570  0569  03F3               	decf	___awmod@dividend+1,f
  3571  056A  02F3               	subwf	___awmod@dividend+1,f
  3572  056B                     i1l1467:	
  3573  056B  3001               	movlw	1
  3574  056C                     u118_25:	
  3575  056C  1003               	clrc
  3576  056D  0CF1               	rrf	___awmod@divisor+1,f
  3577  056E  0CF0               	rrf	___awmod@divisor,f
  3578  056F  3EFF               	addlw	-1
  3579  0570  1D03               	skipz
  3580  0571  2D6C               	goto	u118_25
  3581  0572                     i1l1469:	
  3582  0572  3001               	movlw	1
  3583  0573  02F5               	subwf	___awmod@counter,f
  3584  0574  1D03               	btfss	3,2
  3585  0575  2D77               	goto	u119_21
  3586  0576  2D78               	goto	u119_20
  3587  0577                     u119_21:	
  3588  0577  2D5B               	goto	i1l1463
  3589  0578                     u119_20:	
  3590  0578                     i1l1471:	
  3591  0578  0876               	movf	___awmod@sign,w
  3592  0579  1903               	btfsc	3,2
  3593  057A  2D7C               	goto	u120_21
  3594  057B  2D7D               	goto	u120_20
  3595  057C                     u120_21:	
  3596  057C  2D82               	goto	i1l1475
  3597  057D                     u120_20:	
  3598  057D                     i1l1473:	
  3599  057D  09F2               	comf	___awmod@dividend,f
  3600  057E  09F3               	comf	___awmod@dividend+1,f
  3601  057F  0AF2               	incf	___awmod@dividend,f
  3602  0580  1903               	skipnz
  3603  0581  0AF3               	incf	___awmod@dividend+1,f
  3604  0582                     i1l1475:	
  3605  0582  0873               	movf	___awmod@dividend+1,w
  3606  0583  00F1               	movwf	?___awmod+1
  3607  0584  0872               	movf	___awmod@dividend,w
  3608  0585  00F0               	movwf	?___awmod
  3609  0586                     i1l503:	
  3610  0586  0008               	return
  3611  0587                     __end_of___awmod:	
  3612                           
  3613                           	psect	text15
  3614  04C7                     __ptext15:	
  3615 ;; *************** function ___awdiv *****************
  3616 ;; Defined at:
  3617 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  divisor         2    0[COMMON] int 
  3620 ;;  dividend        2    2[COMMON] int 
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;  quotient        2    7[COMMON] int 
  3623 ;;  sign            1    6[COMMON] unsigned char 
  3624 ;;  counter         1    5[COMMON] unsigned char 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  2    0[COMMON] int 
  3627 ;; Registers used:
  3628 ;;		wreg, status,2, status,0
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3634 ;;      Params:         4       0       0       0       0
  3635 ;;      Locals:         4       0       0       0       0
  3636 ;;      Temps:          1       0       0       0       0
  3637 ;;      Totals:         9       0       0       0       0
  3638 ;;Total ram usage:        9 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_print_Countdown
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           
  3648                           ;psect for function ___awdiv
  3649  04C7                     ___awdiv:	
  3650  04C7                     i1l1397:	
  3651                           ;incstack = 0
  3652                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3653                           
  3654  04C7  01F6               	clrf	___awdiv@sign
  3655  04C8                     i1l1399:	
  3656  04C8  1FF1               	btfss	___awdiv@divisor+1,7
  3657  04C9  2CCB               	goto	u102_21
  3658  04CA  2CCC               	goto	u102_20
  3659  04CB                     u102_21:	
  3660  04CB  2CD3               	goto	i1l1405
  3661  04CC                     u102_20:	
  3662  04CC                     i1l1401:	
  3663  04CC  09F0               	comf	___awdiv@divisor,f
  3664  04CD  09F1               	comf	___awdiv@divisor+1,f
  3665  04CE  0AF0               	incf	___awdiv@divisor,f
  3666  04CF  1903               	skipnz
  3667  04D0  0AF1               	incf	___awdiv@divisor+1,f
  3668  04D1                     i1l1403:	
  3669  04D1  01F6               	clrf	___awdiv@sign
  3670  04D2  0AF6               	incf	___awdiv@sign,f
  3671  04D3                     i1l1405:	
  3672  04D3  1FF3               	btfss	___awdiv@dividend+1,7
  3673  04D4  2CD6               	goto	u103_21
  3674  04D5  2CD7               	goto	u103_20
  3675  04D6                     u103_21:	
  3676  04D6  2CE0               	goto	i1l1411
  3677  04D7                     u103_20:	
  3678  04D7                     i1l1407:	
  3679  04D7  09F2               	comf	___awdiv@dividend,f
  3680  04D8  09F3               	comf	___awdiv@dividend+1,f
  3681  04D9  0AF2               	incf	___awdiv@dividend,f
  3682  04DA  1903               	skipnz
  3683  04DB  0AF3               	incf	___awdiv@dividend+1,f
  3684  04DC                     i1l1409:	
  3685  04DC  3001               	movlw	1
  3686  04DD  00F4               	movwf	??___awdiv
  3687  04DE  0874               	movf	??___awdiv,w
  3688  04DF  06F6               	xorwf	___awdiv@sign,f
  3689  04E0                     i1l1411:	
  3690  04E0  01F7               	clrf	___awdiv@quotient
  3691  04E1  01F8               	clrf	___awdiv@quotient+1
  3692  04E2                     i1l1413:	
  3693  04E2  0870               	movf	___awdiv@divisor,w
  3694  04E3  0471               	iorwf	___awdiv@divisor+1,w
  3695  04E4  1903               	btfsc	3,2
  3696  04E5  2CE7               	goto	u104_21
  3697  04E6  2CE8               	goto	u104_20
  3698  04E7                     u104_21:	
  3699  04E7  2D1F               	goto	i1l1433
  3700  04E8                     u104_20:	
  3701  04E8                     i1l1415:	
  3702  04E8  01F5               	clrf	___awdiv@counter
  3703  04E9  0AF5               	incf	___awdiv@counter,f
  3704  04EA  2CF6               	goto	i1l1421
  3705  04EB                     i1l1417:	
  3706  04EB  3001               	movlw	1
  3707  04EC                     u105_25:	
  3708  04EC  1003               	clrc
  3709  04ED  0DF0               	rlf	___awdiv@divisor,f
  3710  04EE  0DF1               	rlf	___awdiv@divisor+1,f
  3711  04EF  3EFF               	addlw	-1
  3712  04F0  1D03               	skipz
  3713  04F1  2CEC               	goto	u105_25
  3714  04F2                     i1l1419:	
  3715  04F2  3001               	movlw	1
  3716  04F3  00F4               	movwf	??___awdiv
  3717  04F4  0874               	movf	??___awdiv,w
  3718  04F5  07F5               	addwf	___awdiv@counter,f
  3719  04F6                     i1l1421:	
  3720  04F6  1FF1               	btfss	___awdiv@divisor+1,7
  3721  04F7  2CF9               	goto	u106_21
  3722  04F8  2CFA               	goto	u106_20
  3723  04F9                     u106_21:	
  3724  04F9  2CEB               	goto	i1l1417
  3725  04FA                     u106_20:	
  3726  04FA                     i1l1423:	
  3727  04FA  3001               	movlw	1
  3728  04FB                     u107_25:	
  3729  04FB  1003               	clrc
  3730  04FC  0DF7               	rlf	___awdiv@quotient,f
  3731  04FD  0DF8               	rlf	___awdiv@quotient+1,f
  3732  04FE  3EFF               	addlw	-1
  3733  04FF  1D03               	skipz
  3734  0500  2CFB               	goto	u107_25
  3735  0501  0871               	movf	___awdiv@divisor+1,w
  3736  0502  0273               	subwf	___awdiv@dividend+1,w
  3737  0503  1D03               	skipz
  3738  0504  2D07               	goto	u108_25
  3739  0505  0870               	movf	___awdiv@divisor,w
  3740  0506  0272               	subwf	___awdiv@dividend,w
  3741  0507                     u108_25:	
  3742  0507  1C03               	skipc
  3743  0508  2D0A               	goto	u108_21
  3744  0509  2D0B               	goto	u108_20
  3745  050A                     u108_21:	
  3746  050A  2D12               	goto	i1l1429
  3747  050B                     u108_20:	
  3748  050B                     i1l1425:	
  3749  050B  0870               	movf	___awdiv@divisor,w
  3750  050C  02F2               	subwf	___awdiv@dividend,f
  3751  050D  0871               	movf	___awdiv@divisor+1,w
  3752  050E  1C03               	skipc
  3753  050F  03F3               	decf	___awdiv@dividend+1,f
  3754  0510  02F3               	subwf	___awdiv@dividend+1,f
  3755  0511                     i1l1427:	
  3756  0511  1477               	bsf	___awdiv@quotient,0
  3757  0512                     i1l1429:	
  3758  0512  3001               	movlw	1
  3759  0513                     u109_25:	
  3760  0513  1003               	clrc
  3761  0514  0CF1               	rrf	___awdiv@divisor+1,f
  3762  0515  0CF0               	rrf	___awdiv@divisor,f
  3763  0516  3EFF               	addlw	-1
  3764  0517  1D03               	skipz
  3765  0518  2D13               	goto	u109_25
  3766  0519                     i1l1431:	
  3767  0519  3001               	movlw	1
  3768  051A  02F5               	subwf	___awdiv@counter,f
  3769  051B  1D03               	btfss	3,2
  3770  051C  2D1E               	goto	u110_21
  3771  051D  2D1F               	goto	u110_20
  3772  051E                     u110_21:	
  3773  051E  2CFA               	goto	i1l1423
  3774  051F                     u110_20:	
  3775  051F                     i1l1433:	
  3776  051F  0876               	movf	___awdiv@sign,w
  3777  0520  1903               	btfsc	3,2
  3778  0521  2D23               	goto	u111_21
  3779  0522  2D24               	goto	u111_20
  3780  0523                     u111_21:	
  3781  0523  2D29               	goto	i1l1437
  3782  0524                     u111_20:	
  3783  0524                     i1l1435:	
  3784  0524  09F7               	comf	___awdiv@quotient,f
  3785  0525  09F8               	comf	___awdiv@quotient+1,f
  3786  0526  0AF7               	incf	___awdiv@quotient,f
  3787  0527  1903               	skipnz
  3788  0528  0AF8               	incf	___awdiv@quotient+1,f
  3789  0529                     i1l1437:	
  3790  0529  0878               	movf	___awdiv@quotient+1,w
  3791  052A  00F1               	movwf	?___awdiv+1
  3792  052B  0877               	movf	___awdiv@quotient,w
  3793  052C  00F0               	movwf	?___awdiv
  3794  052D                     i1l490:	
  3795  052D  0008               	return
  3796  052E                     __end_of___awdiv:	
  3797  007E                     btemp	set	126	;btemp
  3798  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        75
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     79      80
    BANK1            80     34      68
    BANK3            96      0      68
    BANK2            96      0       0

Pointer List with Targets:

    send_string@str	PTR unsigned char  size(1) Largest target is 17
		 -> print_Countdown@secondStr_410(BANK0[17]), print_Countdown@secondStr_408(BANK0[17]), print_Countdown@secondStr(BANK0[17]), print_Countdown@firstStr(BANK0[17]), 

    Uart_send_string@str	PTR unsigned char  size(1) Largest target is 8
		 -> strToSend(BANK1[8]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_print_Countdown
    _print_Countdown->___awdiv
    _send_string->_send_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _ISR->_print_Countdown

Critical Paths under _main in BANK1

    _main->_UART_init
    _messageTransmission->_Uart_send_string
    _Uart_send_string->_UART_TxChar
    _init_lcd->_send_cmd
    _UART_init->___aldiv

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0    3376
                                             28 BANK1      6     6      0
                          _UART_init
                            _initPic
                           _init_lcd
                _messageTransmission
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _messageTransmission                                  5     2      3    2513
                                             11 BANK1      5     2      3
                   _Uart_send_string
 ---------------------------------------------------------------------------------
 (2) _Uart_send_string                                     3     3      0     145
                                              8 BANK1      3     3      0
                        _UART_TxChar
 ---------------------------------------------------------------------------------
 (3) _UART_TxChar                                          1     1      0      22
                                              7 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_lcd                                             2     2      0      22
                                             10 BANK1      2     2      0
                           _send_cmd
 ---------------------------------------------------------------------------------
 (1) _send_cmd                                             3     3      0      22
                                              7 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initPic                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_init                                            6     4      2     550
                                             22 BANK1      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     452
                                              7 BANK1     15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  7     7      0    2110
                                              0 BANK1      7     7      0
                    _print_Countdown
 ---------------------------------------------------------------------------------
 (5) _print_Countdown                                     82    79      3    2110
                                              9 COMMON     3     0      3
                                              0 BANK0     79    79      0
                            ___awdiv
                            ___awmod
                        _send_string
                         i1_send_cmd
 ---------------------------------------------------------------------------------
 (6) i1_send_cmd                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) _send_string                                          4     4      0     244
                                              3 COMMON     4     4      0
                          _send_data
 ---------------------------------------------------------------------------------
 (7) _send_data                                            3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UART_init
     ___aldiv
   _initPic
   _init_lcd
     _send_cmd
   _messageTransmission
     _Uart_send_string
       _UART_TxChar
   _send_cmd

 _ISR (ROOT)
   _print_Countdown
     ___awdiv
     ___awmod
     _send_string
       _send_data
     i1_send_cmd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      44       9       70.8%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     22      44       7       85.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      E6      12        0.0%
ABS                  0      0      E6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jul 16 16:18:48 2020

                               _f 00C6                                 pc 0002                       __CFG_CP$OFF 0000  
                    ___awdiv@sign 0076                                fsr 0004      print_Countdown@secondStr_410 0046  
    print_Countdown@secondStr_408 0035               _messageTransmission 0684                       __CFG_LVP$ON 0000  
                             l141 00FD                               l402 043E                               l242 05DD  
                             l250 073F                               l251 0746                               l412 04C6  
                             l245 065B                               l190 0723                               l239 0683  
                             l248 073A                               l176 06A5                               l193 0755  
                    __CFG_CPD$OFF 0000                               _ISR 030E                               u900 0723  
                             u901 0722                               u920 0431                               u921 0430  
                             u930 0442                               u931 0441                               u940 0461  
                             u941 0460                               u960 0475                               u961 0474  
                             u890 073F                               u955 0466                               u891 073E  
                             u980 0490                               u981 048F                               u975 0477  
                             u985 048C                               u995 04A0                               fsr0 0004  
                             indf 0000                      ___awmod@sign 0076                      __CFG_FOSC$HS 0000  
       messageTransmission@codice 00AC                              ?_ISR 0070         messageTransmission@valore 00AD  
                            l1313 073A                              l1331 0668                              l1315 0740  
                            l1501 0659                              l1333 0673                              l1503 065A  
                            l1335 0680                              l1327 065F                              l1511 0598  
                            l1343 070B                              l1361 0431                              l1329 0662  
                            l1521 05C5                              l1513 059E                              l1505 0587  
                            l1345 0717                              l1337 070A                              l1601 0072  
                            l1371 0461                              l1363 0442                              l1523 05CB  
                            l1515 05AE                              l1507 058B                              l1347 071D  
                            l1531 069F                              l1611 0085                              l1603 0076  
                            l1381 0490                              l1373 0464                              l1365 044D  
                            l1357 042A                              l1525 05D1                              l1517 05B9  
                            l1509 0595                              l1621 0094                              l1613 0089  
                            l1605 007B                              l1391 04B3                              l1383 049E  
                            l1375 0471                              l1367 0451                              l1359 042D  
                            l1527 05D7                              l1519 05BF                              l1631 00A0  
                            l1623 0099                              l1615 008A                              l1607 007F  
                            l1393 04BE                              l1385 049F                              l1377 0475  
                            l1369 0459                              l1529 0687                              l1641 00C2  
                            l1633 00AA                              l1617 008F                              l1609 0080  
                            l1387 04A8                              l1379 047E                              l1491 074A  
                            l1651 00E2                              l1635 00B3                              l1643 00C9  
                            l1619 0093                              l1389 04AE                              l1493 074C  
                            l1645 00CF                              l1653 00E8                              l1637 00B6  
                            l1661 00FF                              l1629 009B                              l1495 0622  
                            l1671 0198                              l1663 0103                              l1655 00EE  
                            l1647 00D8                              l1639 00BD                              l1497 062A  
                            l1489 0747                              l1681 01C4                              l1673 01AB  
                            l1657 00F1                              l1649 00DB                              l1665 0109  
                            l1593 0049                              l1499 0658                              l1683 01CC  
                            l1675 01BB                              l1667 010E                              l1659 00F8  
                            l1595 0064                              l1677 01BE                              l1669 0195  
                            l1597 006A                              l1679 01BF                              l1599 006E  
                            u1000 04AE                              u1001 04AD                              u1010 04B3  
                            u1011 04B2                              u1210 063B                              u1215 0636  
                            u1400 00B3                              u1401 00B2                              u1410 00C2  
                            u1411 00C1                              u1420 00CF                              u1340 007B  
                            u1421 00CE                              u1341 007A                              u1430 00D8  
                            u1350 0085                              u1431 00D7                              u1351 0084  
                            u1440 00E7                              u1360 008F                              u1441 00E6  
                            u1361 008E                              u1450 00EE                              u1370 0099  
                            u1451 00ED                              u1371 0098                              u1460 00FD  
                            u1380 00A0                              u1461 00FC                              u1381 009F  
                            u1470 0109                              u1390 00AA                              u1471 0108  
                            u1391 00A9                              u1480 010E                              u1481 010D  
                            u1490 01C4                              u1491 01C3                              u1737 0591  
                            u1747 05A4                              u1757 05B4                              u1767 066F  
                            u1777 067C                              _RCIF 0065                              _TMR0 0001  
                            _TXIF 0064              ?_messageTransmission 00AB                      __CFG_WRT$OFF 0000  
                            _main 0049                        i1_send_cmd 06C7                              btemp 007E  
                   __CFG_BOREN$ON 0000                              start 0016                       main@stringa 00BF  
                   _statoSemafori 00DE                             ??_ISR 00A0                   __end_of___aldiv 04C7  
                           ?_main 0070                   __end_of___awdiv 052E                     __CFG_WDTE$OFF 0000  
                 __end_of___awmod 0587                   ___awdiv@divisor 0070                             i1l233 06C6  
                           i1l161 0377                             i1l227 030D                             i1l155 0325  
               Uart_send_string@i 00AA                             i1l236 0706                             i1l156 0342  
                           i1l173 0419                             i1l157 0363                             i1l503 0586  
                           i1l239 06E6                             i1l159 0373                             i1l490 052D  
                 ___awdiv@counter 0075                             _RCREG 001A                             _SPBRG 0099  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISD 0088                             _TRISE 0089                             u91_20 06C6  
                           u91_21 06C5                             _TXREG 0019                             _PicId 00E1  
                   __CFG_PWRTE$ON 0000                    _scattoSemafori 00CB                __size_of_UART_init 003A  
                 __end_of_initPic 0756                             _count 00C8                             _stat1 00D0  
                           _stat2 00CE                             _stat3 00CC                             main@i 00C1  
           ??_messageTransmission 00AE                             pclath 000A                print_Countdown@num 0079  
                           status 0003                             wtemp0 007E                   __initialization 0019  
                    __end_of_main 01D1                            ??_main 00BC                            _ADCON0 001F  
                          _ADCON1 009F                            _ADRESH 001E                            _ADRESL 009E  
                ___awdiv@dividend 0072                            u110_20 051F                            u102_20 04CC  
                          u110_21 051E                            u102_21 04CB                            u111_20 0524  
                          u103_20 04D7                            u111_21 0523                            u103_21 04D6  
                          i1l1401 04CC                            i1l1321 06ED                            i1l1411 04E0  
                          i1l1403 04D1                            i1l1323 06F7                            i1l1421 04F6  
                          i1l1413 04E2                            i1l1405 04D3                            i1l1325 0703  
                          i1l1317 06E8                            i1l1431 0519                            i1l1423 04FA  
                          i1l1415 04E8                            i1l1407 04D7                            i1l1319 06EB  
                          i1l1351 06AA                            u104_20 04E8                            u120_20 057D  
                          u112_20 0533                            i1l1425 050B                            i1l1417 04EB  
                          i1l1433 051F                            u104_21 04E7                            i1l1409 04DC  
                          u120_21 057C                            u112_21 0532                            i1l1441 052E  
                          i1l1353 06B5                            i1l1435 0524                            i1l1427 0511  
                          i1l1419 04F2                            i1l1451 053E                            i1l1443 052F  
                          i1l1355 06BB                            i1l1437 0529                            i1l1429 0512  
                          i1l1461 0557                            i1l1453 0543                            i1l1445 0533  
                          i1l1349 06A7                            i1l1541 01FC                            i1l1533 01D1  
                          i1l1701 0359                            i1l1463 055B                            i1l1455 0549  
                          i1l1471 0578                            i1l1447 0538                            i1l1551 0217  
                          i1l1543 0203                            i1l1535 01E9                            i1l1711 0380  
                          i1l1703 036D                            u113_20 053E                            i1l1473 057D  
                          i1l1465 0565                            i1l1457 054C                            u113_21 053D  
                          i1l1449 053A                            i1l1481 06CB                            i1l1561 0255  
                          i1l1553 022F                            i1l1545 020A                            i1l1537 01ED  
                          i1l1721 03A3                            i1l1713 0384                            i1l1475 0582  
                          i1l1467 056B                            i1l1459 0553                            i1l1483 06CD  
                          i1l1571 0288                            i1l1563 025A                            i1l1555 0240  
                          i1l1547 0210                            i1l1539 01EF                            i1l1731 03DE  
                          i1l1723 03B0                            i1l1715 038A                            i1l1707 0378  
                          u105_25 04EC                            i1l1397 04C7                            i1l1469 0572  
                          i1l1485 06D7                            i1l1581 02C8                            i1l1573 028D  
                          i1l1565 0268                            i1l1557 0248                            i1l1741 0405  
                          i1l1733 03E5                            i1l1725 03B8                            i1l1717 038E  
                          i1l1709 037E                            i1l1399 04C8                            i1l1487 06E3  
                          i1l1479 06C8                            i1l1591 0307                            i1l1583 02CE  
                          i1l1575 02A5                            i1l1567 026E                            i1l1559 024F  
                          i1l1743 0407                            i1l1735 03EB                            i1l1727 03C6  
                          i1l1719 039D                            u106_20 04FA                            u114_20 0549  
                          u130_20 02B0                            u122_20 01DB                            u106_21 04F9  
                          u114_21 0548                            i1l1585 02D4                            u130_21 02AF  
                          i1l1577 02AB                            i1l1569 027C                            i1l1745 040C  
                          i1l1737 03F8                            i1l1729 03CE                            i1l1587 02EC  
                          i1l1579 02B0                            i1l1747 0411                            i1l1739 03FE  
                          i1l1691 032D                            i1l1589 02F2                            i1l1749 0415  
                          i1l1693 0331                            i1l1685 030E                            i1l1695 0338  
                          i1l1687 0314                            u131_20 02BA                            u123_20 01FC  
                          u123_21 01FB                            i1l1697 034C                            i1l1689 0319  
                          i1l1699 0352                            u107_25 04FB                            u115_25 054D  
                          u123_25 01F8                            u108_20 050B                            u116_20 055B  
                          u132_20 02D4                            u124_20 020A                            u108_21 050A  
                          u116_21 055A                            u132_21 02D3                            u124_21 0209  
                          u108_25 0507                            u117_20 0565                            u133_20 02DE  
                          u125_20 0216                            u117_21 0564                            u125_21 0215  
                          u109_25 0513                            u117_25 0561                            u126_20 024E  
                          u150_20 0314                            u126_21 024D                            u150_21 0313  
                          u118_25 056C                            u119_20 0578                            u127_20 027C  
                          u151_20 0319                            u119_21 0577                            u127_21 027B  
                          u151_21 0318                            u127_25 0278                            u128_20 028D  
                          u160_20 035F                            u152_20 0321                            u128_21 028C  
                          u160_21 035D                            u152_21 031F                            u129_20 0297  
                          u161_20 0360                            u153_20 0322                            _INTCON 000B  
                          u170_20 03F8                            u162_20 0373                            u154_20 0331  
                          u170_21 03F7                            u162_21 0372                            u154_21 0330  
                          u170_25 03F4                            u171_20 0405                            u163_20 0377  
                          u155_20 0338                            u171_21 0404                            u163_21 0376  
                          u155_21 0337                            u172_20 040C                            u164_20 0384  
                          u156_20 033E                            u172_21 040B                            u164_21 0383  
                          u156_21 033C                            u180_27 06DE                            u165_20 039D  
                          u157_20 033F                            u165_21 039C                            u181_27 06F2  
                          u166_20 03A3                            u158_20 0352                            u166_21 03A2  
                          u158_21 0351                            u182_27 06FE                            u167_20 03B8  
                          u159_20 0359                      ?_send_string 0070                            u167_21 03B7  
                          u159_21 0358                            u168_20 03CE                            u168_21 03CD  
                          u169_20 03E5                            u169_21 03E4                            u178_27 02FA  
                          u179_27 06D2                       ?i1_send_cmd 0070                    send_string@str 0076  
                    ?_UART_TxChar 0070          __size_of_print_Countdown 013D                         ??___aldiv 00AF  
               __end_of_UART_init 065C                         ??___awdiv 0074                         ??___awmod 0074  
                __end_of_init_lcd 05DE                  ___awdiv@quotient 0077                   ___awmod@divisor 0070  
                 ___awmod@counter 0075               print_Countdown@F930 01C3               print_Countdown@F934 01B2  
             print_Countdown@F936 01A1               print_Countdown@F938 0190                  __end_of_send_cmd 0684  
                       ??_initPic 00A7                      __pdataCOMMON 007D                            saved_w 007E  
       __size_of_Uart_send_string 001D  messageTransmission@tipoMessaggio 00AF           __end_of__initialization 0045  
                  __pcstackCOMMON 0070                      __pidataBANK1 075E                      __pidataBANK3 05DE  
             __size_ofi1_send_cmd 0020                        __pbssBANK0 006F                        __pbssBANK1 00C2  
     messageTransmission@idStrada 00AB                        __pmaintext 0049                        _flagGiallo 00CA  
                      __pintentry 0004                __size_of_send_data 0020                 ??_print_Countdown 0020  
                      _contCamion 00D1               Uart_send_string@str 00A9                 main@semaforoVerde 00C0  
                       ?_init_lcd 0070              __size_of_send_string 0021                         ?_send_cmd 0070  
            __size_of_UART_TxChar 0010                           ___aldiv 042A                           ___awdiv 04C7  
                         ___awmod 052E                           __ptext1 0684                           __ptext2 0707  
                         __ptext3 0737                           __ptext4 0587                           __ptext5 065C  
                         __ptext6 0747                           __ptext7 0622                           __ptext8 042A  
                         __ptext9 030E                      __size_of_ISR 011C                           _oldBtn1 006F  
                         _oldBtn2 00CF                           _oldBtn3 00CD                           _initPic 0747  
                ___awmod@dividend 0072                  ___aldiv@dividend 00AB       __end_of_messageTransmission 06A6  
                         clrloop0 0757                  _Uart_send_string 0707              end_of_initialization 0045  
               __end_of_send_data 0707                        ??_init_lcd 00AA                      ??i1_send_cmd 0070  
        print_Countdown@secondStr 0024                        ??_send_cmd 00A7                         _RCSTAbits 0018  
                ___aldiv@quotient 00B2          print_Countdown@resultNum 0068                     send_data@data 0072  
                       _PORTBbits 0006                         _UART_init 0622                         _PORTEbits 0009  
              __end_ofi1_send_cmd 06E7                         _TRISCbits 0087                 i1send_cmd@command 0072  
                 _temporizzazione 007C                         _TXSTAbits 0098                  print_Countdown@i 006D  
                   __pidataCOMMON 0764                        ?_UART_init 00B6               start_initialization 0019  
                     __end_of_ISR 042A                   _print_Countdown 01D1                        init_fetch0 0724  
                     __pdataBANK1 00DE                       __pdataBANK3 0190                       __pbssCOMMON 007C  
                       ___latbits 0002                     __pcstackBANK0 0020                     __pcstackBANK1 00A0  
                     _datoSeriale 00D4                 __size_of_init_lcd 0057                          ?___aldiv 00A7  
               __size_of_send_cmd 0028                          ?___awdiv 0070                          ?___awmod 0070  
        __end_of_Uart_send_string 0724                       ??_UART_init 00B8                          ?_initPic 0070  
                       _countDown 007D           __end_of_print_Countdown 030E                     ??_send_string 0073  
         print_Countdown@firstStr 0057                   ___aldiv@divisor 00A7                 interrupt_function 0004  
                 ___aldiv@counter 00B0                         clear_ram0 0756                          _PIE1bits 008C  
                       _send_data 06E7                     ??_UART_TxChar 00A7                          _GO_nDONE 00FA  
                       _numStrade 00E3           print_Countdown@statoSem 007B                        _ADCON0bits 001F  
                       _strToSend 00D6      __size_of_messageTransmission 0022                        ?_send_data 0070  
                    send_string@i 0074               __end_of_send_string 06C7                   UART_TxChar@dato 00A7  
                __size_of___aldiv 009D               __end_of_UART_TxChar 0747                  __size_of___awdiv 0067  
                __size_of___awmod 0059                  __size_of_initPic 000F                          __ptext10 01D1  
                        __ptext11 06C7                          __ptext12 06A6                          __ptext13 06E7  
                        __ptext14 052E                          __ptext15 04C7                          _contAuto 00D3  
                        _contMoto 00D2                  ?_print_Countdown 0079                          _init_lcd 0587  
                   __size_of_main 0188                          _received 00D5                          _send_cmd 065C  
                        _semafori 00C2                        _INTCONbits 000B                          init_ram0 0728  
                 send_cmd@command 00A9                          intlevel1 0000                 UART_init@baudrate 00B6  
                     _send_string 06A6                       ??_send_data 0070                       _UART_TxChar 0737  
           print_Countdown@length 006B                 ?_Uart_send_string 0070                ??_Uart_send_string 00A8  
                      _OPTION_REG 0081                      ___aldiv@sign 00B1  
